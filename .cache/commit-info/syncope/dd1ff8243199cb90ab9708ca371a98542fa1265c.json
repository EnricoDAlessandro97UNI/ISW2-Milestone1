{"sha":"dd1ff8243199cb90ab9708ca371a98542fa1265c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRkMWZmODI0MzE5OWNiOTBhYjk3MDhjYTM3MWE5ODU0MmZhMTI2NWM=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2019-11-04T15:37:53Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2019-11-04T15:38:07Z"},"message":"[SYNCOPE-957] Added new section in Admin Console for the Multiaccount feature","tree":{"sha":"0df6f9521c549a0f40d9f499a4c09404e1448cd9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0df6f9521c549a0f40d9f499a4c09404e1448cd9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dd1ff8243199cb90ab9708ca371a98542fa1265c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd1ff8243199cb90ab9708ca371a98542fa1265c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd1ff8243199cb90ab9708ca371a98542fa1265c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd1ff8243199cb90ab9708ca371a98542fa1265c/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"ee8ef35a22bcbcc916c19b9f7efa18a58c264ea9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ee8ef35a22bcbcc916c19b9f7efa18a58c264ea9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ee8ef35a22bcbcc916c19b9f7efa18a58c264ea9"}],"stats":{"total":2749,"additions":2329,"deletions":420},"files":[{"sha":"11df282f665bb84162c75883a633bc3af42e034c","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.syncope.client.console.panels.LinkedAccountModalPanel;\n import org.apache.syncope.client.console.status.AnyStatusModal;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.Action;\n@@ -106,6 +107,26 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n         manageResources.setRealms(realm, modelObject.getDynRealms());\n         actions.add(manageResources);\n \n+        Action<UserTO> manageAccounts = new Action<>(new ActionLink<UserTO>() {\n+\n+            private static final long serialVersionUID = 8011039414597736111L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                modal.setFooterVisible(false);\n+                target.add(modal.setContent(new LinkedAccountModalPanel(modal, modelObject, pageRef)));\n+\n+                modal.header(new Model<>(header));\n+\n+                modal.show(true);\n+            }\n+        }, ActionLink.ActionType.MANAGE_ACCOUNTS);\n+        manageAccounts.setEntitlements(\n+                String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.USER_UPDATE));\n+        manageAccounts.setOnConfirm(false);\n+        manageAccounts.setRealms(realm, modelObject.getDynRealms());\n+        actions.add(manageAccounts);\n+\n         return actions;\n     }\n "},{"sha":"33462a3108e6470b1172ab81f260c712897bb7b4","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -53,6 +53,7 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.types.MatchType;\n+import org.apache.syncope.common.rest.api.beans.ConnObjectTOQuery;\n import org.apache.syncope.common.rest.api.beans.ReconQuery;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n@@ -152,7 +153,8 @@ protected Component getValueComponent(final String key, final ConnObjectTO bean)\n                 if (StringUtils.equals(key, STATUS)) {\n                     ReconStatus status = ReconciliationRestClient.status(\n                             new ReconQuery.Builder(anyType, resource.getKey()).\n-                            connObjectKeyValue(bean.getAttr(ConnIdSpecialName.UID).get().getValues().get(0)).build());\n+                                    connObjectKeyValue(bean.getAttr(ConnIdSpecialName.UID).get().getValues().get(0)).\n+                                    build());\n \n                     return status.getOnSyncope() == null\n                             ? StatusUtils.getLabel(\"field\", \"notfound icon\", \"Not found\", Constants.NOT_FOUND_ICON)\n@@ -283,12 +285,13 @@ private List<ConnObjectTO> reloadItems(\n             final String cookie,\n             final String fiql) {\n \n-        Pair<String, List<ConnObjectTO>> items = ResourceRestClient.listConnObjects(resource,\n+        Pair<String, List<ConnObjectTO>> items = new ResourceRestClient().searchConnObjects(resource,\n                 anyType,\n-                SIZE,\n-                cookie,\n-                new SortParam<>(ConnIdSpecialName.UID, true),\n-                fiql);\n+                new ConnObjectTOQuery.Builder().\n+                        size(SIZE).\n+                        pagedResultsCookie(cookie).\n+                        fiql(fiql),\n+                new SortParam<>(ConnIdSpecialName.UID, true));\n \n         nextPageCookie = items.getLeft();\n         return items.getRight();"},{"sha":"a9680e3c1f69998b25c6e6549fe1ec850cce9232","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.java","status":"added","additions":232,"deletions":0,"changes":232,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,232 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.any.LinkedAccountWizardBuilder;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.request.LinkedAccountUR;\n+import org.apache.syncope.common.lib.request.UserUR;\n+import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.common.lib.types.PatchOperation;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class LinkedAccountModalPanel extends AbstractModalPanel<Serializable> {\n+\n+    private static final long serialVersionUID = -4603032036433309900L;\n+\n+    private final LinkedAccountWizardBuilder wizard;\n+\n+    private final WizardMgtPanel<LinkedAccountTO> list;\n+\n+    private final AjaxLink<LinkedAccountTO> addAjaxLink;\n+\n+    protected ActionLinksTogglePanel<LinkedAccountTO> actionTogglePanel;\n+\n+    private UserRestClient userRestClient = new UserRestClient();\n+\n+    private final List<LinkedAccountTO> linkedAccountTOs;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public LinkedAccountModalPanel(\n+            final BaseModal<?> modal,\n+            final UserTO userTO,\n+            final PageReference pageRef) {\n+\n+        super((BaseModal<Serializable>) modal, pageRef);\n+\n+        UserTO readUserTO = userRestClient.read(userTO.getKey());\n+\n+        setOutputMarkupId(true);\n+\n+        actionTogglePanel = new ActionLinksTogglePanel<>(\"toggle\", pageRef);\n+        add(actionTogglePanel);\n+\n+        wizard = new LinkedAccountWizardBuilder(readUserTO.getKey(), pageRef);\n+\n+        final ListViewPanel.Builder<LinkedAccountTO> builder = new ListViewPanel.Builder<LinkedAccountTO>(\n+                LinkedAccountTO.class, pageRef) {\n+\n+            private static final long serialVersionUID = -5322423525438435153L;\n+\n+            @Override\n+            protected LinkedAccountTO getActualItem(\n+                    final LinkedAccountTO item, final List<LinkedAccountTO> list) {\n+\n+                return item == null\n+                        ? null\n+                        : list.stream().filter(\n+                                in -> ((item.getKey() == null && in.getKey() == null)\n+                                || (in.getKey() != null && in.getKey().\n+                                equals(item.getKey())))).findAny().orElse(null);\n+            }\n+\n+            @Override\n+            protected void customActionCallback(final AjaxRequestTarget target) {\n+                // change modal footer visibility\n+                send(LinkedAccountModalPanel.this, Broadcast.BUBBLE, new BaseModal.ChangeFooterVisibilityEvent(target));\n+            }\n+\n+            @Override\n+            protected void customActionOnCancelCallback(final AjaxRequestTarget target) {\n+                // change modal footer visibility\n+                send(LinkedAccountModalPanel.this, Broadcast.BUBBLE, new BaseModal.ChangeFooterVisibilityEvent(target));\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n+                checkAddButton();\n+\n+                linkedAccountTOs.clear();\n+                linkedAccountTOs.addAll(userRestClient.read(userTO.getKey()).getLinkedAccounts());\n+                sortLinkedAccounts();\n+\n+                ListViewPanel.class.cast(list).refreshList(linkedAccountTOs);\n+\n+                // change modal footer visibility\n+                send(LinkedAccountModalPanel.this, Broadcast.BUBBLE, new BaseModal.ChangeFooterVisibilityEvent(target));\n+            }\n+\n+            @Override\n+            protected ActionLinksTogglePanel<LinkedAccountTO> getTogglePanel() {\n+                return actionTogglePanel;\n+            }\n+        };\n+\n+        linkedAccountTOs = new ArrayList<>(readUserTO.getLinkedAccounts());\n+        sortLinkedAccounts();\n+\n+        builder.setItems(linkedAccountTOs);\n+        builder.includes(\"connObjectKeyValue\", \"resource\", \"suspended\");\n+        builder.setReuseItem(false);\n+        builder.withChecks(ListViewPanel.CheckAvailability.NONE);\n+\n+        builder.addAction(new ActionLink<LinkedAccountTO>() {\n+\n+            private static final long serialVersionUID = 2555747430358755813L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n+                try {\n+                    send(LinkedAccountModalPanel.this, Broadcast.DEPTH,\n+                            new AjaxWizard.NewItemActionEvent<>(linkedAccountTO, 1, target).setResourceModel(\n+                                    new StringResourceModel(\"inner.edit.linkedAccount\",\n+                                            LinkedAccountModalPanel.this,\n+                                            Model.of(linkedAccountTO))));\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While contacting linked account\", e);\n+                    SyncopeConsoleSession.get().error(\n+                            StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                }\n+\n+                send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n+                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+            }\n+        }, ActionLink.ActionType.EDIT, IdRepoEntitlement.USER_READ).\n+                addAction(new ActionLink<LinkedAccountTO>() {\n+\n+                    private static final long serialVersionUID = 2555747430358755813L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n+                        try {\n+                            LinkedAccountUR linkedAccountPatch = new LinkedAccountUR.Builder().\n+                                    operation(PatchOperation.DELETE).\n+                                    linkedAccountTO(linkedAccountTO).build();\n+                            linkedAccountPatch.setLinkedAccountTO(linkedAccountTO);\n+                            UserUR patch = new UserUR();\n+                            patch.setKey(readUserTO.getKey());\n+                            patch.getLinkedAccounts().add(linkedAccountPatch);\n+                            userRestClient.update(userRestClient.read(userTO.getKey()).getETagValue(), patch);\n+                            linkedAccountTOs.remove(linkedAccountTO);\n+\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                        } catch (Exception e) {\n+                            LOG.error(\"While removing linked account {}\", linkedAccountTO.getKey(), e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n+                        }\n+\n+                        checkAddButton();\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                        send(LinkedAccountModalPanel.this, Broadcast.DEPTH, new ListViewPanel.ListViewReload<>(target));\n+                    }\n+                }, ActionLink.ActionType.DELETE, IdRepoEntitlement.USER_UPDATE, true);\n+\n+        builder.addNewItemPanelBuilder(wizard);\n+\n+        list = builder.build(\"linkedAccountsList\");\n+        list.setOutputMarkupId(true);\n+        list.setReadOnly(!SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_UPDATE));\n+\n+        addAjaxLink = new AjaxLink<LinkedAccountTO>(\"add\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n+                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+\n+                // this opens the wizard (set above) in CREATE mode\n+                send(list, Broadcast.DEPTH, new AjaxWizard.NewItemActionEvent<>(new LinkedAccountTO(), target).\n+                        setResourceModel(new StringResourceModel(\"inner.create.linkedAccount\",\n+                                LinkedAccountModalPanel.this)));\n+            }\n+        };\n+        list.addOrReplaceInnerObject(addAjaxLink);\n+        add(list);\n+    }\n+\n+    private void sortLinkedAccounts() {\n+        Collections.sort(linkedAccountTOs,\n+                (o1, o2) -> AnyTypeRestClient.KEY_COMPARATOR.compare(\n+                        o1.getConnObjectKeyValue(), o2.getConnObjectKeyValue()));\n+    }\n+\n+    private void checkAddButton() {\n+        addAjaxLink.setVisible(SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_UPDATE));\n+    }\n+\n+}"},{"sha":"92f79f3793f05559aed7954c888d63efa3fadc18","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -55,26 +55,21 @@ public static ConnObjectTO readConnObject(final String resource, final String an\n         return getService(ResourceService.class).readConnObject(resource, anyTypeKey, anyKey);\n     }\n \n-    public static Pair<String, List<ConnObjectTO>> listConnObjects(\n+    public Pair<String, List<ConnObjectTO>> searchConnObjects(\n             final String resource,\n             final String anyTypeKey,\n-            final int size,\n-            final String pagedResultCookie,\n-            final SortParam<String> sort,\n-            final String fiql) {\n-\n-        ConnObjectTOQuery.Builder builder = new ConnObjectTOQuery.Builder().\n-                pagedResultsCookie(pagedResultCookie).\n-                size(size).\n-                orderBy(toOrderBy(sort)).\n-                fiql(fiql);\n+            final ConnObjectTOQuery.Builder queryBuilder,\n+            final SortParam<String> sortParam) {\n \n         final List<ConnObjectTO> result = new ArrayList<>();\n         String nextPageResultCookie = null;\n \n         PagedConnObjectTOResult list;\n         try {\n-            list = getService(ResourceService.class).searchConnObjects(resource, anyTypeKey, builder.build());\n+            if (sortParam != null) {\n+                queryBuilder.orderBy(toOrderBy(sortParam));\n+            }\n+            list = getService(ResourceService.class).searchConnObjects(resource, anyTypeKey, queryBuilder.build());\n             result.addAll(list.getResult());\n             nextPageResultCookie = list.getPagedResultsCookie();\n         } catch (Exception e) {"},{"sha":"4ae7049f102e43b79c1cc8bbca25a0a45024fbf1","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel.java","status":"added","additions":125,"deletions":0,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,125 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggle;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggleConfig;\n+import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.syncope.client.console.commons.LinkedAccountPlainAttrProperty;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.form.CheckBox;\n+import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class LinkedAccountCredentialsPanel extends WizardStep {\n+\n+    private static final long serialVersionUID = 5116461957402341603L;\n+\n+    public LinkedAccountCredentialsPanel(final LinkedAccountTO linkedAccountTO) {\n+        super();\n+        setOutputMarkupId(true);\n+\n+        AjaxTextFieldPanel usernameField = new AjaxTextFieldPanel(\n+                \"username\",\n+                \"username\",\n+                new PropertyModel<>(linkedAccountTO, \"username\"),\n+                false);\n+        usernameField.setOutputMarkupId(true);\n+        FieldPanel.class.cast(usernameField).setReadOnly(true);\n+        LinkedAccountPlainAttrProperty property = new LinkedAccountPlainAttrProperty();\n+        property.setOverridable(false);\n+        property.setSchema(\"username\");\n+        property.getValues().add(linkedAccountTO.getUsername());\n+        usernameField.showExternAction(checkboxToggle(property, usernameField));\n+        add(usernameField);\n+\n+        AjaxPasswordFieldPanel passwordField = new AjaxPasswordFieldPanel(\n+                \"password\",\n+                \"password\",\n+                new PropertyModel<>(linkedAccountTO, \"password\"));\n+        passwordField.setOutputMarkupId(true);\n+        passwordField.setRequired(true);\n+        passwordField.setMarkupId(\"password\");\n+        FieldPanel.class.cast(passwordField).setReadOnly(true);\n+        property = new LinkedAccountPlainAttrProperty();\n+        property.setOverridable(false);\n+        property.setSchema(\"password\");\n+        property.getValues().add(linkedAccountTO.getPassword());\n+        passwordField.showExternAction(checkboxToggle(property, passwordField));\n+        ((PasswordTextField) passwordField.getField()).setResetPassword(true);\n+        add(passwordField);\n+    }\n+\n+    private FormComponent<?> checkboxToggle(\n+            final LinkedAccountPlainAttrProperty property, final FieldPanel<?> panel) {\n+\n+        final BootstrapToggleConfig config = new BootstrapToggleConfig().\n+                withOnStyle(BootstrapToggleConfig.Style.success).\n+                withOffStyle(BootstrapToggleConfig.Style.danger).\n+                withSize(BootstrapToggleConfig.Size.mini);\n+\n+        return new BootstrapToggle(\"externalAction\", new PropertyModel<Boolean>(property, \"overridable\"), config) {\n+\n+            private static final long serialVersionUID = -875219845189261873L;\n+\n+            @Override\n+            protected CheckBox newCheckBox(final String id, final IModel<Boolean> model) {\n+                final CheckBox checkBox = super.newCheckBox(id, model);\n+                checkBox.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                    private static final long serialVersionUID = -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        panel.setReadOnly(!model.getObject());\n+                        target.add(panel);\n+                    }\n+                });\n+                return checkBox;\n+            }\n+\n+            @Override\n+            protected IModel<String> getOnLabel() {\n+                return Model.of(\"Override\");\n+            }\n+\n+            @Override\n+            protected IModel<String> getOffLabel() {\n+                return Model.of(\"Override?\");\n+            }\n+\n+            @Override\n+            protected void onComponentTag(final ComponentTag tag) {\n+                super.onComponentTag(tag);\n+                tag.append(\"class\", \"overridable\", \" \");\n+            }\n+        };\n+    }\n+\n+}"},{"sha":"cccf7b8ffa4c797c3b5d54cb4e5ec2f24dd79498","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel.java","status":"added","additions":188,"deletions":0,"changes":188,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,188 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.rest.api.beans.ConnObjectTOQuery;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n+import org.apache.wicket.ajax.attributes.ThrottlingSettings;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.util.time.Duration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LinkedAccountDetailsPanel extends WizardStep {\n+\n+    private static final long serialVersionUID = 1221037007528732347L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(LinkedAccountDetailsPanel.class);\n+\n+    private static final int SEARCH_SIZE = 20;\n+\n+    private final ResourceRestClient resourceRestClient = new ResourceRestClient();\n+\n+    private ArrayList<String> connObjectKeyFieldValues;\n+\n+    public LinkedAccountDetailsPanel(final LinkedAccountTO linkedAccountTO) {\n+        super();\n+        setOutputMarkupId(true);\n+\n+        AjaxDropDownChoicePanel<String> dropdownResourceField = new AjaxDropDownChoicePanel<>(\n+                \"resource\",\n+                \"resource\",\n+                new PropertyModel<>(linkedAccountTO, \"resource\"),\n+                false);\n+        dropdownResourceField.setChoices(resourceRestClient.list().stream().\n+                filter(resource -> resource.getProvision(AnyTypeKind.USER.name()).isPresent()\n+                && resource.getProvision(AnyTypeKind.USER.name()).get().getMapping() != null\n+                && !resource.getProvision(AnyTypeKind.USER.name()).get().getMapping().getItems().isEmpty()).\n+                map(resource -> resource.getKey()).\n+                collect(Collectors.toList()));\n+        dropdownResourceField.setOutputMarkupId(true);\n+        dropdownResourceField.addRequiredLabel();\n+        dropdownResourceField.setNullValid(false);\n+        dropdownResourceField.setRequired(true);\n+        add(dropdownResourceField);\n+\n+        final String connObjectKeyFieldId = \"connObjectKeyValue\";\n+        AjaxTextFieldPanel connObjectKeyField = new AjaxTextFieldPanel(\n+                \"connObjectKeyValue\",\n+                \"connObjectKeyValue\",\n+                new PropertyModel<>(linkedAccountTO, \"connObjectKeyValue\"),\n+                false);\n+        connObjectKeyField.setOutputMarkupId(true);\n+        connObjectKeyField.addRequiredLabel();\n+        connObjectKeyField.setChoices(Collections.<String>emptyList());\n+        connObjectKeyField.setEnabled(false);\n+        add(connObjectKeyField);\n+\n+        dropdownResourceField.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                boolean enabled = dropdownResourceField.getModelObject() != null\n+                        && !dropdownResourceField.getModelObject().isEmpty();\n+                connObjectKeyField.setEnabled(enabled);\n+                if (enabled) {\n+                    setConnObjectFieldChoices(connObjectKeyField, dropdownResourceField.getModelObject(), null);\n+                }\n+                target.add(connObjectKeyField);\n+            }\n+        });\n+\n+        connObjectKeyField.getField().setMarkupId(connObjectKeyFieldId);\n+        connObjectKeyField.getField().add(new AjaxEventBehavior(Constants.ON_KEYDOWN) {\n+\n+            private static final long serialVersionUID = 3533589614190959822L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                String searchTerm = connObjectKeyField.getField().getInput();\n+                if (StringUtils.isNotBlank(searchTerm) && searchTerm.length() > 1) {\n+                    setConnObjectFieldChoices(connObjectKeyField, dropdownResourceField.getModelObject(), searchTerm);\n+\n+                    // If elements are found, send an \"arrow down\" key event to open input autocomplete dropdown\n+                    target.appendJavaScript(connObjectKeyFieldValues.isEmpty()\n+                            ? \"$('#\" + connObjectKeyFieldId + \"-autocomplete-container').hide();\"\n+                            : \"var simulatedEvent = new KeyboardEvent('keydown', {keyCode: 40, which: 40}); \"\n+                            + \"document.getElementById('\" + connObjectKeyFieldId + \"').dispatchEvent(simulatedEvent);\");\n+                }\n+            }\n+\n+            @Override\n+            protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n+                super.updateAjaxAttributes(attributes);\n+\n+                AjaxCallListener listener = new AjaxCallListener() {\n+\n+                    private static final long serialVersionUID = 2208168001920794667L;\n+\n+                    @Override\n+                    public CharSequence getPrecondition(final Component component) {\n+                        // Eevaluates weather an ajax call will be executed or not.\n+                        // If the key code is \"arrow down\" or \"arrow up\" do NOT trigger the event callback\n+                        return \"var keycode = Wicket.Event.keyCode(attrs.event); \"\n+                                + \"if ((keycode == 40) || (keycode == 38)) {return false;} return true;\";\n+                    }\n+                };\n+                attributes.getAjaxCallListeners().add(listener);\n+                attributes.setThrottlingSettings(new ThrottlingSettings(\"id\", Duration.seconds(1.2), true));\n+            }\n+        });\n+    }\n+\n+    private void setConnObjectFieldChoices(\n+            final AjaxTextFieldPanel ajaxTextFieldPanel,\n+            final String resource,\n+            final String searchTerm) {\n+\n+        Set<String> choices = new HashSet<>();\n+        String resourceRemoteKey = ConnIdSpecialName.NAME;\n+        try {\n+            resourceRemoteKey = resourceRestClient.read(resource).getProvision(AnyTypeKind.USER.name()).get().\n+                    getMapping().getConnObjectKeyItem().getExtAttrName();\n+        } catch (Exception ex) {\n+            LOG.error(\"While reading mapping for resource {}\", resource, ex);\n+        }\n+\n+        ConnObjectTOQuery.Builder builder = new ConnObjectTOQuery.Builder().size(SEARCH_SIZE);\n+        if (StringUtils.isNotBlank(searchTerm)) {\n+            builder.fiql(SyncopeClient.getConnObjectTOFiqlSearchConditionBuilder().\n+                    is(resourceRemoteKey).equalTo(searchTerm + \"*\").query()).build();\n+        }\n+        Pair<String, List<ConnObjectTO>> items = resourceRestClient.searchConnObjects(resource,\n+                AnyTypeKind.USER.name(),\n+                builder,\n+                new SortParam<>(resourceRemoteKey, true));\n+\n+        choices.addAll(items.getRight().stream().map(item -> {\n+            return item.getAttr(ConnIdSpecialName.UID).get().getValues().get(0);\n+        }).collect(Collectors.toSet()));\n+\n+        connObjectKeyFieldValues = new ArrayList<>(choices);\n+        Collections.sort(connObjectKeyFieldValues);\n+        ajaxTextFieldPanel.setChoices(connObjectKeyFieldValues);\n+    }\n+\n+}"},{"sha":"cac1afb4a56c18fb53377405b757588deab8cfb6","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountPlainAttrsPanel.java","status":"added","additions":255,"deletions":0,"changes":255,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,255 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import org.apache.syncope.client.ui.commons.wizards.any.EntityWrapper;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggle;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggleConfig;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.client.console.commons.LinkedAccountPlainAttrProperty;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.CheckBox;\n+import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class LinkedAccountPlainAttrsPanel extends AbstractAttrsWizardStep<PlainSchemaTO> {\n+\n+    private static final long serialVersionUID = -6664931684253730934L;\n+\n+    private final LinkedAccountTO linkedAccountTO;\n+\n+    private final UserTO userTO;\n+\n+    private final Set<Attr> fixedAttrs = new HashSet<>();\n+\n+    private final List<LinkedAccountPlainAttrProperty> accountPlainAttrProperties = new ArrayList<>();\n+\n+    public <T extends AnyTO> LinkedAccountPlainAttrsPanel(\n+            final EntityWrapper<LinkedAccountTO> modelObject,\n+            final UserTO userTO) throws IllegalArgumentException {\n+\n+        super(userTO,\n+                AjaxWizard.Mode.EDIT,\n+                new AnyTypeRestClient().read(userTO.getType()).getClasses(),\n+                FormLayoutInfoUtils.fetch(Arrays.asList(userTO.getType())).getLeft().getWhichPlainAttrs(),\n+                modelObject);\n+\n+        this.linkedAccountTO = modelObject.getInnerObject();\n+        this.fixedAttrs.addAll(this.linkedAccountTO.getPlainAttrs());\n+        this.userTO = userTO;\n+\n+        add(new Accordion(\"plainSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                new ResourceModel(\"attributes.accordion\", \"Plain Attributes\")) {\n+\n+            private static final long serialVersionUID = -7078941093668723016L;\n+\n+            @Override\n+            public WebMarkupContainer getPanel(final String panelId) {\n+                return new PlainSchemasOwn(panelId, schemas, attrs);\n+            }\n+        }), Model.of(0)).setOutputMarkupId(true));\n+    }\n+\n+    @Override\n+    protected FormComponent<?> checkboxToggle(\n+            final Attr attrTO,\n+            final AbstractFieldPanel<?> panel,\n+            final boolean isMultivalue) {\n+\n+        LinkedAccountPlainAttrProperty property = accountPlainAttrProperties.stream().filter(\n+                existingProperty -> {\n+                    return existingProperty.getSchema().equals(attrTO.getSchema());\n+                }).findFirst().orElseGet(() -> {\n+                    LinkedAccountPlainAttrProperty newProperty = new LinkedAccountPlainAttrProperty();\n+                    newProperty.setOverridable(linkedAccountTO.getPlainAttr(attrTO.getSchema()).isPresent());\n+                    newProperty.setSchema(attrTO.getSchema());\n+                    newProperty.getValues().addAll(attrTO.getValues());\n+                    accountPlainAttrProperties.add(newProperty);\n+                    return newProperty;\n+                });\n+\n+        final BootstrapToggleConfig config = new BootstrapToggleConfig().\n+                withOnStyle(BootstrapToggleConfig.Style.success).\n+                withOffStyle(BootstrapToggleConfig.Style.danger).\n+                withSize(BootstrapToggleConfig.Size.mini);\n+\n+        return new BootstrapToggle(\"externalAction\", new PropertyModel<Boolean>(property, \"overridable\"), config) {\n+\n+            private static final long serialVersionUID = -875219845189261873L;\n+\n+            @Override\n+            protected CheckBox newCheckBox(final String id, final IModel<Boolean> model) {\n+                final CheckBox checkBox = super.newCheckBox(id, model);\n+                checkBox.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                    private static final long serialVersionUID = -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        if (isMultivalue) {\n+                            MultiFieldPanel.class.cast(panel).setFormReadOnly(!model.getObject());\n+                        } else {\n+                            FieldPanel.class.cast(panel).setReadOnly(!model.getObject());\n+                        }\n+\n+                        updateAccountPlainSchemas(property, model.getObject());\n+                        target.add(panel);\n+                    }\n+                });\n+                return checkBox;\n+            }\n+\n+            @Override\n+            protected IModel<String> getOnLabel() {\n+                return Model.of(\"Override\");\n+            }\n+\n+            @Override\n+            protected IModel<String> getOffLabel() {\n+                return Model.of(\"Override?\");\n+            }\n+\n+            @Override\n+            protected void onComponentTag(final ComponentTag tag) {\n+                super.onComponentTag(tag);\n+                tag.append(\"class\", \"overridable\", \" \");\n+            }\n+        };\n+    }\n+\n+    private void updateAccountPlainSchemas(final LinkedAccountPlainAttrProperty property, final Boolean modelObject) {\n+        Set<Attr> withoutCurrentSChema = new HashSet<>(linkedAccountTO.getPlainAttrs().stream().\n+                filter(attr -> !attr.getSchema().equals(property.getSchema())).\n+                collect(Collectors.toSet()));\n+        linkedAccountTO.getPlainAttrs().clear();\n+        linkedAccountTO.getPlainAttrs().addAll(withoutCurrentSChema);\n+        if (modelObject) {\n+            linkedAccountTO.getPlainAttrs().add(\n+                    fixedAttrs.stream().filter(attrTO -> attrTO.getSchema().equals(property.getSchema())).findFirst().\n+                            orElseGet(() -> new Attr.Builder(property.getSchema()).\n+                            values(property.getValues()).build()));\n+        }\n+    }\n+\n+    @Override\n+    protected SchemaType getSchemaType() {\n+        return SchemaType.PLAIN;\n+    }\n+\n+    @Override\n+    protected void setAttrs() {\n+        List<Attr> attrs = new ArrayList<>();\n+        setFixedAttr(schemas.values());\n+        Map<String, Attr> attrMap = EntityTOUtils.buildAttrMap(fixedAttrs);\n+\n+        attrs.addAll(schemas.values().stream().map(schema -> {\n+            Attr attrTO = new Attr();\n+            attrTO.setSchema(schema.getKey());\n+            if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n+                attrTO.getValues().add(\"\");\n+            } else {\n+                attrTO = attrMap.get(schema.getKey());\n+            }\n+            return attrTO;\n+        }).collect(Collectors.toList()));\n+\n+        fixedAttrs.clear();\n+        fixedAttrs.addAll(attrs);\n+    }\n+\n+    @Override\n+    protected List<Attr> getAttrsFromTO() {\n+        return fixedAttrs.stream().sorted(attrComparator).collect(Collectors.toList());\n+    }\n+\n+    private void setFixedAttr(final Collection<PlainSchemaTO> values) {\n+        values.forEach(schema -> {\n+            if (linkedAccountTO.getPlainAttr(schema.getKey()).isPresent()) {\n+                fixedAttrs.add(linkedAccountTO.getPlainAttr(schema.getKey()).get());\n+            } else if (userTO.getPlainAttr(schema.getKey()).isPresent()) {\n+                fixedAttrs.add(userTO.getPlainAttr(schema.getKey()).get());\n+            }\n+        });\n+    }\n+\n+    private class PlainSchemasOwn extends PlainSchemas<List<Attr>> {\n+\n+        private static final long serialVersionUID = -4730563859116024676L;\n+\n+        PlainSchemasOwn(\n+                final String id,\n+                final Map<String, PlainSchemaTO> schemas,\n+                final IModel<List<Attr>> attrTOs) {\n+\n+            super(id, schemas, attrTOs);\n+\n+            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @Override\n+                protected void populateItem(final ListItem<Attr> item) {\n+                    Attr attrTO = item.getModelObject();\n+                    final boolean isMultivalue = schemas.get(attrTO.getSchema()).isMultivalue();\n+\n+                    AbstractFieldPanel<?> panel = setPanel(\n+                            schemas,\n+                            item,\n+                            !linkedAccountTO.getPlainAttr(attrTO.getSchema()).isPresent());\n+\n+                    panel.showExternAction(checkboxToggle(attrTO, panel, isMultivalue));\n+                }\n+            });\n+        }\n+    }\n+\n+}"},{"sha":"c33351abf392943e75c49cd2ca9c6983509a9133","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.rest.ApplicationRestClient;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class LinkedAccountPrivilegesPanel extends WizardStep {\n+\n+    private static final long serialVersionUID = 3388483585148725922L;\n+\n+    private final ApplicationRestClient applicationRestClient = new ApplicationRestClient();\n+\n+    public LinkedAccountPrivilegesPanel(final LinkedAccountTO linkedAccountTO) {\n+        super();\n+        setOutputMarkupId(true);\n+\n+        final LoadableDetachableModel<List<String>> availablePrivilges = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return applicationRestClient.list().stream().\n+                        flatMap(app -> app.getPrivileges().stream()).\n+                        map(privilege -> privilege.getKey()).\n+                        distinct().\n+                        sorted().\n+                        collect(Collectors.toList());\n+            }\n+        };\n+        AjaxPalettePanel<String> privilegesPanel = new AjaxPalettePanel.Builder<String>().\n+                setAllowOrder(true).\n+                setAllowMoveAll(true).\n+                build(\"privileges\",\n+                        new PropertyModel<>(linkedAccountTO, \"privileges\"),\n+                        new ListModel<>(availablePrivilges.getObject()));\n+        privilegesPanel.hideLabel();\n+        privilegesPanel.setOutputMarkupId(true);\n+        add(privilegesPanel);\n+    }\n+\n+}"},{"sha":"371ab096ce234be9916886df3f71e4a485b30f8b","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountWizardBuilder.java","status":"added","additions":131,"deletions":0,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import org.apache.syncope.client.ui.commons.wizards.any.EntityWrapper;\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.ModalEvent;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.request.LinkedAccountUR;\n+import org.apache.syncope.common.lib.request.UserUR;\n+import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+\n+/**\n+ * Accounts wizard builder.\n+ */\n+public class LinkedAccountWizardBuilder extends BaseAjaxWizardBuilder<LinkedAccountTO> {\n+\n+    private static final long serialVersionUID = -9142332740863374891L;\n+\n+    private final UserRestClient userRestClient = new UserRestClient();\n+\n+    private UserTO userTO;\n+\n+    private final String userKey;\n+\n+    public LinkedAccountWizardBuilder(final String userKey, final PageReference pageRef) {\n+        super(new LinkedAccountTO(), pageRef);\n+        this.userKey = userKey;\n+        this.userTO = userRestClient.read(userKey);\n+    }\n+\n+    @Override\n+    public AjaxWizard<LinkedAccountTO> build(final String id, final AjaxWizard.Mode mode) {\n+        this.userTO = userRestClient.read(userKey);\n+        return super.build(id, mode);\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final LinkedAccountTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new LinkedAccountDetailsPanel(modelObject));\n+        wizardModel.add(new LinkedAccountCredentialsPanel(modelObject));\n+        wizardModel.add(new LinkedAccountPlainAttrsPanel(new EntityWrapper<>(modelObject), userTO));\n+        wizardModel.add(new LinkedAccountPrivilegesPanel(modelObject));\n+        return wizardModel;\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final LinkedAccountTO modelObject) {\n+        fixPlainAttrs(modelObject);\n+\n+        LinkedAccountUR linkedAccountPatch = new LinkedAccountUR.Builder().linkedAccountTO(modelObject).build();\n+        linkedAccountPatch.setLinkedAccountTO(modelObject);\n+        UserUR patch = new UserUR();\n+        patch.setKey(userTO.getKey());\n+        patch.getLinkedAccounts().add(linkedAccountPatch);\n+        userRestClient.update(userTO.getETagValue(), patch);\n+\n+        return modelObject;\n+    }\n+\n+    private void fixPlainAttrs(final LinkedAccountTO linkedAccountTO) {\n+        Set<Attr> validAttrs = new HashSet<>(linkedAccountTO.getPlainAttrs().stream().\n+                filter(attr -> !attr.getValues().isEmpty()).\n+                collect(Collectors.toSet()));\n+        linkedAccountTO.getPlainAttrs().clear();\n+        linkedAccountTO.getPlainAttrs().addAll(validAttrs);\n+    }\n+\n+    @Override\n+    protected Serializable getCreateCustomPayloadEvent(final Serializable afterObject, final AjaxRequestTarget target) {\n+        LinkedAccountTO linkedAccountTO = LinkedAccountTO.class.cast(afterObject);\n+        return new CreateEvent(\n+                linkedAccountTO.getConnObjectKeyValue(),\n+                userTO,\n+                target);\n+    }\n+\n+    private static class CreateEvent extends ModalEvent {\n+\n+        private static final long serialVersionUID = 6416834092156281986L;\n+\n+        private final String key;\n+\n+        private final UserTO userTO;\n+\n+        CreateEvent(\n+                final String key,\n+                final UserTO userTO,\n+                final AjaxRequestTarget target) {\n+\n+            super(target);\n+            this.key = key;\n+            this.userTO = userTO;\n+        }\n+\n+        public String getKey() {\n+            return key;\n+        }\n+\n+        public UserTO getUserTO() {\n+            return userTO;\n+        }\n+    }\n+\n+}"},{"sha":"97c6734dd9ec87ec2709bbc3cd1c16919c8462e6","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceConnCapabilitiesPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnCapabilitiesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnCapabilitiesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnCapabilitiesPanel.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -23,7 +23,7 @@\n     </div>\n \n     <div class=\"form-group\">\n-      <span wicket:id=\"capabilities\">[capabilitiesOverride]</span>\n+      <span wicket:id=\"capabilities\">[capabilities]</span>\n     </div>\n   </wicket:panel>\n </html>"},{"sha":"4f3a090fbe05da5ebd54b0dee62fb1f5ec7a75aa","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/Constants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConstants.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -57,6 +57,8 @@ public final class Constants {\n \n     public static final String ON_CHANGE = \"change\";\n \n+    public static final String ON_KEYDOWN = \"keydown\";\n+\n     public static final String ON_BLUR = \"blur\";\n \n     public static final String PNG_EXT = \".png\";"},{"sha":"30dfe7f90889cf5957b52eddbd0c511593d96be1","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -122,4 +122,6 @@ protected String externalActionIcon() {\n     public String getName() {\n         return this.name;\n     }\n+\n+    public abstract AbstractFieldPanel<T> setReadOnly(boolean readOnly);\n }"},{"sha":"3079bf647cb3775e4b83066f9700e9a60ecbd42f","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AbstractMultiPanel.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -205,4 +205,9 @@ public AbstractFieldPanel<List<INNER>> setReadOnly(final boolean readOnly) {\n         container.setEnabled(!readOnly);\n         return this;\n     }\n+\n+    public AbstractFieldPanel<List<INNER>> setFormReadOnly(final boolean readOnly) {\n+        form.setEnabled(!readOnly);\n+        return this;\n+    }\n }"},{"sha":"818dd7799d557d2a552d9d7da2bf8c54c606ad0b","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -197,6 +197,12 @@ public void reload(final AjaxRequestTarget target) {\n         target.add(palette);\n     }\n \n+    @Override\n+    public AbstractFieldPanel<List<T>> setReadOnly(final boolean readOnly) {\n+        palette.setEnabled(!readOnly);\n+        return this;\n+    }\n+\n     public static class Builder<T extends Serializable> implements Serializable {\n \n         private static final long serialVersionUID = 991248996001040352L;"},{"sha":"acb92a321b1bb3b7a7b7d04f59a259a4887cd693","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxSpinnerFieldPanel.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -48,6 +48,8 @@\n \n     private final Options options;\n \n+    private SpinnerBehavior behavior;\n+\n     private AjaxSpinnerFieldPanel(\n             final String id,\n             final String name,\n@@ -64,7 +66,7 @@ private AjaxSpinnerFieldPanel(\n \n             @Override\n             public JQueryUIBehavior newWidgetBehavior(final String selector) {\n-                SpinnerBehavior behavior = new SpinnerBehavior(selector, new SpinnerAdapter());\n+                behavior = new SpinnerBehavior(selector, new SpinnerAdapter());\n                 behavior.setOptions(options);\n                 return behavior;\n             }\n@@ -229,6 +231,17 @@ public AjaxSpinnerFieldPanel<T> clone() {\n         return panel;\n     }\n \n+    @Override\n+    public FieldPanel<T> setReadOnly(final boolean readOnly) {\n+        super.setReadOnly(readOnly);\n+        AjaxSpinner.class.cast(field).setEnabled(!readOnly);\n+        options.set(\"disabled\", readOnly);\n+        if (behavior != null) {\n+            behavior.setOptions(options);\n+        }\n+        return this;\n+    }\n+\n     public static class Builder<T extends Number> {\n \n         private final Options options = new Options();"},{"sha":"9a720106dcefd461cf5d5d38b3dbe1bfdbbdabf8","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -88,7 +88,7 @@ public AjaxWizard<T> build(final String id, final AjaxWizard.Mode mode) {\n         // get the specified item if available\n         final T modelObject = newModelObject();\n \n-        return new AjaxWizard<T>(id, modelObject, buildModelSteps(modelObject, new WizardModel()), mode, this.pageRef) {\n+        return new AjaxWizard<T>(id, modelObject, buildModelSteps(modelObject, new WizardModel()), mode, pageRef) {\n \n             private static final long serialVersionUID = 7770507663760640735L;\n \n@@ -170,7 +170,7 @@ protected abstract Future<Pair<Serializable, Serializable>> execute(\n      * @return payload to be sent.\n      */\n     protected static Serializable getEditCustomPayloadEvent(final Serializable afterObject,\n-                                                            final AjaxRequestTarget target) {\n+            final AjaxRequestTarget target) {\n         return null;\n     }\n }"},{"sha":"676404984458dcd57cb3820dd8860dfc5b026159","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/EntityWrapper.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FEntityWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FEntityWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FEntityWrapper.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.wizards.any;\n+\n+import org.apache.syncope.common.lib.to.EntityTO;\n+\n+public class EntityWrapper<T extends EntityTO> {\n+\n+    protected final T entityTO;\n+\n+    public EntityWrapper(final T entityTO) {\n+        this.entityTO = entityTO;\n+    }\n+\n+    public T getInnerObject() {\n+        return entityTO;\n+    }\n+\n+}"},{"sha":"3f0468a929ffde4b3d7775a6760ff46370c811e2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/LinkedAccountPlainAttrProperty.java","status":"added","additions":100,"deletions":0,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FLinkedAccountPlainAttrProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FLinkedAccountPlainAttrProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FLinkedAccountPlainAttrProperty.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.ObjectUtils;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+\n+@XmlRootElement\n+@XmlType\n+public class LinkedAccountPlainAttrProperty implements Serializable, Comparable<LinkedAccountPlainAttrProperty> {\n+\n+    private static final long serialVersionUID = -5309050337675968950L;\n+\n+    private String schema;\n+\n+    private final List<String> values = new ArrayList<>();\n+\n+    private boolean overridable;\n+\n+    public String getSchema() {\n+        return schema;\n+    }\n+\n+    public void setSchema(final String schema) {\n+        this.schema = schema;\n+    }\n+\n+    @XmlElementWrapper(name = \"values\")\n+    @XmlElement(name = \"value\")\n+    @JsonProperty(\"values\")\n+    public List<String> getValues() {\n+        return values;\n+    }\n+\n+    public boolean isOverridable() {\n+        return overridable;\n+    }\n+\n+    public void setOverridable(final boolean overridable) {\n+        this.overridable = overridable;\n+    }\n+\n+    @Override\n+    public int compareTo(final LinkedAccountPlainAttrProperty connConfProperty) {\n+        return ObjectUtils.compare(this.getSchema(), connConfProperty.getSchema());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(schema).\n+                append(values).\n+                append(overridable).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final LinkedAccountPlainAttrProperty other = (LinkedAccountPlainAttrProperty) obj;\n+        return new EqualsBuilder().\n+                append(schema, other.schema).\n+                append(values, other.values).\n+                append(overridable, other.overridable).\n+                build();\n+    }\n+}"},{"sha":"fbcd14b2c933e4420552249650ca06b991cd57e0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -227,6 +227,15 @@ protected void populateItem(final ListItem<String> item) {\n         };\n     }\n \n+    /**\n+     * Use this to refresh the ListView with updated items (e.g. from callback methods)\n+     *\n+     * @param elements\n+     */\n+    public void refreshList(final List<T> elements) {\n+        beans.setList(elements);\n+    }\n+\n     public void setCheckAvailability(final CheckAvailability check) {\n         // used to perform selectable enabling check condition\n         this.check.setObject(check);\n@@ -384,8 +393,8 @@ protected Component getValueComponent(final String key, final T bean) {\n             LOG.debug(\"Field value {}\", value);\n \n             return Optional.ofNullable(value)\n-                .map(o -> new Label(\"field\", new ResourceModel(o.toString(), o.toString())))\n-                .orElseGet(() -> new Label(\"field\", StringUtils.EMPTY));\n+                    .map(o -> new Label(\"field\", new ResourceModel(o.toString(), o.toString())))\n+                    .orElseGet(() -> new Label(\"field\", StringUtils.EMPTY));\n         }\n \n         protected T getActualItem(final T item, final List<T> list) {"},{"sha":"5416be768507f8168b9f366d62bb892983c647f1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -97,6 +97,7 @@ public enum ActionType {\n         MANAGE_RESOURCES(\"update\"),\n         MANAGE_USERS(\"update\"),\n         MANAGE_GROUPS(\"update\"),\n+        MANAGE_ACCOUNTS(\"update\"),\n         PROPAGATION_TASKS(\"read\"),\n         NOTIFICATION_TASKS(\"read\"),\n         ZOOM_IN(\"zoomin\"),"},{"sha":"3d2a0c269be4289f4651183e67ec81b3fb4f69d5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -305,4 +305,11 @@ protected void sendError(final String message) {\n     protected Integer getMaxUploadFileSizeMB() {\n         return SyncopeWebApplication.get().getMaxUploadFileSizeMB();\n     }\n+\n+    @Override\n+    public FieldPanel<String> setReadOnly(final boolean readOnly) {\n+        super.setReadOnly(readOnly);\n+        fileUpload.setEnabled(!readOnly);\n+        return this;\n+    }\n }"},{"sha":"c4638c305a05f24fe5745802698f61f236eaeadd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":15,"deletions":125,"changes":140,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -18,84 +18,49 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Comparator;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.cxf.common.util.StringUtils;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.SchemaTO;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.core.util.lang.PropertyResolver;\n-import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n-import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public abstract class AbstractAttrs<S extends SchemaTO> extends WizardStep implements ICondition {\n+public abstract class AbstractAttrs<S extends SchemaTO> extends AbstractAttrsWizardStep<S> {\n \n     private static final long serialVersionUID = -5387344116983102292L;\n \n-    protected final Comparator<Attr> attrComparator = new AttrComparator();\n-\n-    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n-\n     private final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    protected final AnyTO anyTO;\n-\n-    private final List<String> whichAttrs;\n-\n-    protected final Map<String, S> schemas = new LinkedHashMap<>();\n-\n-    protected final Map<String, Map<String, S>> membershipSchemas = new LinkedHashMap<>();\n-\n-    protected final IModel<List<Attr>> attrs;\n-\n     protected final IModel<List<MembershipTO>> membershipTOs;\n \n-    private final List<String> anyTypeClasses;\n+    protected final Map<String, Map<String, S>> membershipSchemas = new LinkedHashMap<>();\n \n     public AbstractAttrs(\n             final AnyWrapper<?> modelObject,\n             final List<String> anyTypeClasses,\n             final List<String> whichAttrs) {\n-        super();\n-        this.anyTypeClasses = anyTypeClasses;\n-        this.attrs = new ListModel<>(List.of());\n-        this.membershipTOs = new ListModel<>(Collections.<MembershipTO>emptyList());\n \n-        this.setOutputMarkupId(true);\n+        super(modelObject.getInnerObject(), AjaxWizard.Mode.CREATE, anyTypeClasses, whichAttrs, null);\n \n-        this.anyTO = modelObject.getInnerObject();\n-        this.whichAttrs = whichAttrs;\n-    }\n+        this.membershipTOs = new ListModel<>(Collections.<MembershipTO>emptyList());\n \n-    private List<Attr> loadAttrs() {\n-        List<String> classes = new ArrayList<>(anyTypeClasses);\n-        classes.addAll(AnyTypeClassRestClient.list(anyTO.getAuxClasses()).stream().\n-                map(EntityTO::getKey).collect(Collectors.toList()));\n-        setSchemas(classes);\n-        setAttrs();\n-        return AbstractAttrs.this.getAttrsFromTO();\n+        this.setOutputMarkupId(true);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -126,12 +91,6 @@ private List<MembershipTO> loadMembershipAttrs() {\n         return memberships;\n     }\n \n-    protected boolean reoderSchemas() {\n-        return !whichAttrs.isEmpty();\n-    }\n-\n-    protected abstract SchemaType getSchemaType();\n-\n     private void setSchemas(final String membership, final List<String> anyTypeClasses) {\n         final Map<String, S> mscs;\n \n@@ -144,28 +103,18 @@ private void setSchemas(final String membership, final List<String> anyTypeClass\n         setSchemas(anyTypeClasses, mscs);\n     }\n \n-    private void setSchemas(final List<String> anyTypeClasses) {\n-        setSchemas(anyTypeClasses, schemas);\n-    }\n-\n-    private void setSchemas(final List<String> anyTypeClasses, final Map<String, S> scs) {\n-        final List<S> allSchemas;\n-        if (anyTypeClasses.isEmpty()) {\n-            allSchemas = new ArrayList<>();\n-        } else {\n-            allSchemas = SchemaRestClient.getSchemas(getSchemaType(), null, anyTypeClasses.toArray(new String[] {}));\n+    protected List<String> getMembershipAuxClasses(final MembershipTO membershipTO, final String anyType) {\n+        try {\n+            final GroupTO groupTO = groupRestClient.read(membershipTO.getGroupKey());\n+            return groupTO.getTypeExtension(anyType).get().getAuxClasses();\n+        } catch (Exception e) {\n+            return List.of();\n         }\n+    }\n \n-        scs.clear();\n-\n-        if (reoderSchemas()) {\n-            // 1. remove attributes not selected for display\n-            allSchemas.removeAll(allSchemas.stream().\n-                    filter(schemaTO -> !whichAttrs.contains(schemaTO.getKey())).collect(Collectors.toSet()));\n-        }\n+    protected abstract void setAttrs(MembershipTO membershipTO);\n \n-        allSchemas.forEach(schemaTO -> scs.put(schemaTO.getKey(), schemaTO));\n-    }\n+    protected abstract List<Attr> getAttrsFromTO(MembershipTO membershipTO);\n \n     @Override\n     public void renderHead(final IHeaderResponse response) {\n@@ -178,70 +127,11 @@ public void renderHead(final IHeaderResponse response) {\n         }\n     }\n \n-    protected abstract void setAttrs();\n-\n-    protected abstract void setAttrs(MembershipTO membershipTO);\n-\n-    protected abstract List<Attr> getAttrsFromTO();\n-\n-    protected abstract List<Attr> getAttrsFromTO(MembershipTO membershipTO);\n-\n-    protected List<String> getMembershipAuxClasses(final MembershipTO membershipTO, final String anyType) {\n-        try {\n-            final GroupTO groupTO = groupRestClient.read(membershipTO.getGroupKey());\n-            return groupTO.getTypeExtension(anyType).get().getAuxClasses();\n-        } catch (Exception e) {\n-            return List.of();\n-        }\n-    }\n-\n     @Override\n     public boolean evaluate() {\n         this.attrs.setObject(loadAttrs());\n         this.membershipTOs.setObject(loadMembershipAttrs());\n         return !attrs.getObject().isEmpty() || !membershipTOs.getObject().isEmpty();\n     }\n \n-    public PageReference getPageReference() {\n-        // SYNCOPE-1213\n-        // default implementation does not require to pass page reference, override this method of want otherwise\n-        return null;\n-    }\n-\n-    private class AttrComparator implements Comparator<Attr>, Serializable {\n-\n-        private static final long serialVersionUID = -5105030477767941060L;\n-\n-        @Override\n-        public int compare(final Attr left, final Attr right) {\n-            if (left == null || StringUtils.isEmpty(left.getSchema())) {\n-                return -1;\n-            }\n-            if (right == null || StringUtils.isEmpty(right.getSchema())) {\n-                return 1;\n-            } else if (AbstractAttrs.this.reoderSchemas()) {\n-                int leftIndex = AbstractAttrs.this.whichAttrs.indexOf(left.getSchema());\n-                int rightIndex = AbstractAttrs.this.whichAttrs.indexOf(right.getSchema());\n-\n-                if (leftIndex > rightIndex) {\n-                    return 1;\n-                } else if (leftIndex < rightIndex) {\n-                    return -1;\n-                } else {\n-                    return 0;\n-                }\n-            } else {\n-                return left.getSchema().compareTo(right.getSchema());\n-            }\n-        }\n-    }\n-\n-    public static class Schemas extends Panel {\n-\n-        private static final long serialVersionUID = -2447602429647965090L;\n-\n-        public Schemas(final String id) {\n-            super(id);\n-        }\n-    }\n }"},{"sha":"047628ebbddf1c8c4ffa5e2ded44ab0dcaf7df24","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrsWizardStep.java","status":"added","additions":453,"deletions":0,"changes":453,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,453 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.ListUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.time.FastDateFormat;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.SchemaUtils;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDateFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDateTimeFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.EncryptedFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.EntityWrapper;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.SchemaTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n+import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public abstract class AbstractAttrsWizardStep<S extends SchemaTO> extends WizardStep implements ICondition {\n+\n+    private static final long serialVersionUID = 8931397230194043674L;\n+\n+    protected final Comparator<Attr> attrComparator = new AttrComparator();\n+\n+    protected final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n+\n+    protected final AnyTO anyTO;\n+\n+    protected AnyTO previousObject;\n+\n+    private final List<String> whichAttrs;\n+\n+    protected final Map<String, S> schemas = new LinkedHashMap<>();\n+\n+    protected final IModel<List<Attr>> attrs;\n+\n+    private final List<String> anyTypeClasses;\n+\n+    protected String fileKey = \"\";\n+\n+    protected final AjaxWizard.Mode mode;\n+\n+    public AbstractAttrsWizardStep(\n+            final AnyTO anyTO,\n+            final AjaxWizard.Mode mode,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichAttrs,\n+            final EntityWrapper<?> modelObject) {\n+\n+        super();\n+        this.anyTypeClasses = anyTypeClasses;\n+        this.attrs = new ListModel<>(Collections.<Attr>emptyList());\n+\n+        this.setOutputMarkupId(true);\n+\n+        this.mode = mode;\n+        this.anyTO = anyTO;\n+        this.whichAttrs = whichAttrs;\n+    }\n+\n+    protected List<Attr> loadAttrs() {\n+        List<String> classes = new ArrayList<>(anyTypeClasses);\n+        classes.addAll(AnyTypeClassRestClient.list(anyTO.getAuxClasses()).stream().\n+                map(EntityTO::getKey).collect(Collectors.toList()));\n+        setSchemas(classes);\n+        setAttrs();\n+        return AbstractAttrsWizardStep.this.getAttrsFromTO();\n+    }\n+\n+    protected boolean reoderSchemas() {\n+        return !whichAttrs.isEmpty();\n+    }\n+\n+    protected abstract SchemaType getSchemaType();\n+\n+    protected void setSchemas(final List<String> anyTypeClasses) {\n+        setSchemas(anyTypeClasses, schemas);\n+    }\n+\n+    protected void setSchemas(final List<String> anyTypeClasses, final Map<String, S> scs) {\n+        final List<S> allSchemas;\n+        if (anyTypeClasses.isEmpty()) {\n+            allSchemas = new ArrayList<>();\n+        } else {\n+            allSchemas = SchemaRestClient.getSchemas(getSchemaType(), null, anyTypeClasses.toArray(new String[] {}));\n+        }\n+\n+        scs.clear();\n+\n+        if (reoderSchemas()) {\n+            // 1. remove attributes not selected for display\n+            allSchemas.removeAll(allSchemas.stream().\n+                    filter(schemaTO -> !whichAttrs.contains(schemaTO.getKey())).collect(Collectors.toSet()));\n+        }\n+\n+        allSchemas.forEach(schemaTO -> scs.put(schemaTO.getKey(), schemaTO));\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        if (CollectionUtils.isEmpty(attrs.getObject())) {\n+            response.render(OnDomReadyHeaderItem.forScript(\n+                    String.format(\"$('#emptyPlaceholder').append(\\\"%s\\\"); $('#attributes').hide();\",\n+                            getString(\"attribute.empty.list\"))));\n+        }\n+    }\n+\n+    protected abstract void setAttrs();\n+\n+    protected abstract List<Attr> getAttrsFromTO();\n+\n+    @Override\n+    public boolean evaluate() {\n+        this.attrs.setObject(loadAttrs());\n+        return !attrs.getObject().isEmpty();\n+    }\n+\n+    public PageReference getPageReference() {\n+        // SYNCOPE-1213\n+        // default implementation does not require to pass page reference, override this method of want otherwise\n+        return null;\n+    }\n+\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    protected FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n+        final boolean required;\n+        final boolean readOnly;\n+        final AttrSchemaType type;\n+        final boolean jexlHelp;\n+\n+        if (mode == AjaxWizard.Mode.TEMPLATE) {\n+            required = false;\n+            readOnly = false;\n+            type = AttrSchemaType.String;\n+            jexlHelp = true;\n+        } else {\n+            required = schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n+            readOnly = schemaTO.isReadonly();\n+            type = schemaTO.getType();\n+            jexlHelp = false;\n+\n+        }\n+\n+        FieldPanel panel;\n+        switch (type) {\n+            case Boolean:\n+                panel = new AjaxCheckBoxPanel(\n+                        \"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        new Model<>(),\n+                        true);\n+                panel.setRequired(required);\n+                break;\n+\n+            case Date:\n+                String datePattern = schemaTO.getConversionPattern() == null\n+                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n+                        : schemaTO.getConversionPattern();\n+\n+                if (datePattern.contains(\"H\")) {\n+                    panel = new AjaxDateTimeFieldPanel(\n+                            \"panel\",\n+                            schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                            new Model<>(),\n+                            FastDateFormat.getInstance(datePattern));\n+                } else {\n+                    panel = new AjaxDateFieldPanel(\n+                            \"panel\",\n+                            schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                            new Model<>(),\n+                            FastDateFormat.getInstance(datePattern));\n+                }\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+\n+                break;\n+\n+            case Enum:\n+                panel = new AjaxDropDownChoicePanel<>(\"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n+                ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));\n+\n+                if (org.apache.commons.lang3.StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {\n+                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n+\n+                        private static final long serialVersionUID = -3724971416312135885L;\n+\n+                        private final Map<String, String> valueMap = SchemaUtils.getEnumeratedKeyValues(schemaTO);\n+\n+                        @Override\n+                        public String getDisplayValue(final String value) {\n+                            return valueMap.get(value) == null ? value : valueMap.get(value);\n+                        }\n+\n+                        @Override\n+                        public String getIdValue(final String value, final int i) {\n+                            return value;\n+                        }\n+\n+                        @Override\n+                        public String getObject(\n+                                final String id, final IModel<? extends List<? extends String>> choices) {\n+                            return id;\n+                        }\n+                    });\n+                }\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Long:\n+                panel = new AjaxSpinnerFieldPanel.Builder<Long>().enableOnChange().build(\n+                        \"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        Long.class,\n+                        new Model<>());\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Double:\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>().enableOnChange().step(0.1).build(\n+                        \"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        Double.class,\n+                        new Model<>());\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Binary:\n+                final PageReference pageRef = getPageReference();\n+                panel = new BinaryFieldPanel(\n+                        \"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        new Model<>(),\n+                        schemaTO.getMimeType(),\n+                        fileKey) {\n+\n+                    private static final long serialVersionUID = -3268213909514986831L;\n+\n+                    @Override\n+                    protected PageReference getPageReference() {\n+                        return pageRef;\n+                    }\n+\n+                };\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Encrypted:\n+                panel = new EncryptedFieldPanel(\"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            default:\n+                panel = new AjaxTextFieldPanel(\"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n+\n+                if (jexlHelp) {\n+                    AjaxTextFieldPanel.class.cast(panel).enableJexlHelp();\n+                }\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+        }\n+\n+        panel.setReadOnly(readOnly);\n+\n+        return panel;\n+    }\n+\n+    protected FormComponent<?> checkboxToggle(\n+            final Attr attr,\n+            final AbstractFieldPanel<?> panel,\n+            final boolean isMultivalue) {\n+\n+        // do nothing\n+        return null;\n+    }\n+\n+    private class AttrComparator implements Comparator<Attr>, Serializable {\n+\n+        private static final long serialVersionUID = -5105030477767941060L;\n+\n+        @Override\n+        public int compare(final Attr left, final Attr right) {\n+            if (left == null || StringUtils.isEmpty(left.getSchema())) {\n+                return -1;\n+            }\n+            if (right == null || StringUtils.isEmpty(right.getSchema())) {\n+                return 1;\n+            } else if (AbstractAttrsWizardStep.this.reoderSchemas()) {\n+                int leftIndex = AbstractAttrsWizardStep.this.whichAttrs.indexOf(left.getSchema());\n+                int rightIndex = AbstractAttrsWizardStep.this.whichAttrs.indexOf(right.getSchema());\n+\n+                if (leftIndex > rightIndex) {\n+                    return 1;\n+                } else if (leftIndex < rightIndex) {\n+                    return -1;\n+                } else {\n+                    return 0;\n+                }\n+            } else {\n+                return left.getSchema().compareTo(right.getSchema());\n+            }\n+        }\n+    }\n+\n+    public static class Schemas extends Panel {\n+\n+        private static final long serialVersionUID = -2447602429647965090L;\n+\n+        public Schemas(final String id) {\n+            super(id);\n+        }\n+    }\n+\n+    protected abstract class PlainSchemas<T> extends Schemas {\n+\n+        private static final long serialVersionUID = 8315035592714180404L;\n+\n+        public PlainSchemas(\n+                final String id,\n+                final Map<String, PlainSchemaTO> schemas,\n+                final IModel<T> attrs) {\n+\n+            super(id);\n+        }\n+\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        protected AbstractFieldPanel<?> setPanel(\n+                final Map<String, PlainSchemaTO> schemas,\n+                final ListItem<Attr> item,\n+                final boolean setReadOnly) {\n+\n+            Attr attr = item.getModelObject();\n+            final boolean isMultivalue = mode != AjaxWizard.Mode.TEMPLATE\n+                    && schemas.get(attr.getSchema()).isMultivalue();\n+\n+            AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attr.getSchema()));\n+            if (isMultivalue) {\n+                // SYNCOPE-1476 set form as multipart to properly manage membership attributes\n+                panel = new MultiFieldPanel.Builder<>(\n+                        new PropertyModel<>(attr, \"values\")).build(\n+                        \"panel\",\n+                        attr.getSchema(),\n+                        FieldPanel.class.cast(panel)).setFormAsMultipart(true);\n+                // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n+                MultiFieldPanel.class.cast(panel).setReadOnly(schemas.get(attr.getSchema()).isReadonly());\n+                MultiFieldPanel.class.cast(panel).setFormReadOnly(setReadOnly);\n+            } else {\n+                FieldPanel.class.cast(panel).setNewModel(attr.getValues()).setReadOnly(setReadOnly);\n+            }\n+            item.add(panel);\n+\n+            setExternalAction(attr, panel);\n+\n+            return panel;\n+        }\n+\n+        protected void setExternalAction(final Attr attr, final AbstractFieldPanel<?> panel) {\n+            Optional<Attr> prevAttr = previousObject == null\n+                    ? Optional.empty()\n+                    : previousObject.getPlainAttr(attr.getSchema());\n+            if (previousObject != null\n+                    && ((prevAttr.isEmpty() && attr.getValues().stream().anyMatch(StringUtils::isNotBlank))\n+                    || (prevAttr.isPresent() && !ListUtils.isEqualList(\n+                    prevAttr.get().getValues().stream().\n+                            filter(StringUtils::isNotBlank).collect(Collectors.toList()),\n+                    attr.getValues().stream().\n+                            filter(StringUtils::isNotBlank).collect(Collectors.toList()))))) {\n+\n+                List<String> oldValues = prevAttr.isPresent()\n+                        ? prevAttr.get().getValues()\n+                        : List.of();\n+                panel.showExternAction(new LabelInfo(\"externalAction\", oldValues));\n+            }\n+        }\n+    }\n+\n+}"},{"sha":"cd35090bd3a084ea08d6533a5d6d5ce026f64b18","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":19,"deletions":261,"changes":280,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -25,50 +25,31 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n-import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.time.FastDateFormat;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDateFieldPanel;\n-import org.apache.syncope.client.ui.commons.SchemaUtils;\n-import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.EncryptedFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.EntityTOUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.model.util.ListModel;\n@@ -79,12 +60,6 @@ public class PlainAttrs extends AbstractAttrs<PlainSchemaTO> {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    protected final AjaxWizard.Mode mode;\n-\n-    protected final AnyTO previousObject;\n-\n-    protected String fileKey = \"\";\n-\n     public <T extends AnyTO> PlainAttrs(\n             final AnyWrapper<T> modelObject,\n             final Form<?> form,\n@@ -93,7 +68,6 @@ public <T extends AnyTO> PlainAttrs(\n             final List<String> whichPlainAttrs) throws IllegalArgumentException {\n \n         super(modelObject, anyTypeClasses, whichPlainAttrs);\n-        this.mode = mode;\n \n         if (modelObject.getInnerObject() instanceof UserTO) {\n             fileKey = UserTO.class.cast(modelObject.getInnerObject()).getUsername();\n@@ -214,181 +188,40 @@ protected void setAttrs(final MembershipTO membershipTO) {\n         attrs.addAll(membershipSchemas.get(membershipTO.getGroupKey()).values().stream().\n                 map(schema -> {\n                     Attr attrTO = new Attr();\n-            attrTO.setSchema(schema.getKey());\n-            if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n-                attrTO.getValues().add(StringUtils.EMPTY);\n-            } else {\n-                attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n-            }\n+                    attrTO.setSchema(schema.getKey());\n+                    if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n+                        attrTO.getValues().add(StringUtils.EMPTY);\n+                    } else {\n+                        attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+                    }\n                     return attrTO;\n                 }).collect(Collectors.toList()));\n \n         membershipTO.getPlainAttrs().clear();\n         membershipTO.getPlainAttrs().addAll(attrs);\n     }\n \n-    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n-    protected FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n-        final boolean required;\n-        final boolean readOnly;\n-        final AttrSchemaType type;\n-        final boolean jexlHelp;\n-\n-        if (mode == AjaxWizard.Mode.TEMPLATE) {\n-            required = false;\n-            readOnly = false;\n-            type = AttrSchemaType.String;\n-            jexlHelp = true;\n-        } else {\n-            required = schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n-            readOnly = schemaTO.isReadonly();\n-            type = schemaTO.getType();\n-            jexlHelp = false;\n-\n-        }\n-\n-        FieldPanel panel;\n-        switch (type) {\n-            case Boolean:\n-                panel = new AjaxCheckBoxPanel(\n-                        \"panel\",\n-                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n-                        new Model<>(),\n-                        true);\n-                panel.setRequired(required);\n-                break;\n-\n-            case Date:\n-                String datePattern = schemaTO.getConversionPattern() == null\n-                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n-                        : schemaTO.getConversionPattern();\n-\n-                if (datePattern.contains(\"H\")) {\n-                    panel = new AjaxDateTimeFieldPanel(\n-                            \"panel\",\n-                            schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n-                            new Model<>(),\n-                            FastDateFormat.getInstance(datePattern));\n-                } else {\n-                    panel = new AjaxDateFieldPanel(\n-                            \"panel\",\n-                            schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n-                            new Model<>(),\n-                            FastDateFormat.getInstance(datePattern));\n-                }\n-\n-                if (required) {\n-                    panel.addRequiredLabel();\n-                }\n-\n-                break;\n-\n-            case Enum:\n-                panel = new AjaxDropDownChoicePanel<>(\"panel\",\n-                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n-                ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));\n-\n-                if (StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {\n-                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n-\n-                        private static final long serialVersionUID = -3724971416312135885L;\n-\n-                        private final Map<String, String> valueMap = SchemaUtils.getEnumeratedKeyValues(schemaTO);\n-\n-                        @Override\n-                        public String getDisplayValue(final String value) {\n-                            return valueMap.get(value) == null ? value : valueMap.get(value);\n-                        }\n-\n-                        @Override\n-                        public String getIdValue(final String value, final int i) {\n-                            return value;\n-                        }\n-\n-                        @Override\n-                        public String getObject(\n-                                final String id, final IModel<? extends List<? extends String>> choices) {\n-                            return id;\n-                        }\n-                    });\n-                }\n-\n-                if (required) {\n-                    panel.addRequiredLabel();\n-                }\n-                break;\n-\n-            case Long:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Long>().enableOnChange().build(\n-                        \"panel\",\n-                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n-                        Long.class,\n-                        new Model<>());\n-\n-                if (required) {\n-                    panel.addRequiredLabel();\n-                }\n-                break;\n-\n-            case Double:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Double>().enableOnChange().step(0.1).build(\n-                        \"panel\",\n-                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n-                        Double.class,\n-                        new Model<>());\n-\n-                if (required) {\n-                    panel.addRequiredLabel();\n-                }\n-                break;\n-\n-            case Binary:\n-                final PageReference pageRef = getPageReference();\n-                panel = new BinaryFieldPanel(\n-                        \"panel\",\n-                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n-                        new Model<>(),\n-                        schemaTO.getMimeType(),\n-                        fileKey) {\n-\n-                    private static final long serialVersionUID = -3268213909514986831L;\n-\n-                    @Override\n-                    protected PageReference getPageReference() {\n-                        return pageRef;\n-                    }\n+    protected class PlainSchemasOwn extends PlainSchemas<List<Attr>> {\n \n-                };\n-                if (required) {\n-                    panel.addRequiredLabel();\n-                }\n-                break;\n+        private static final long serialVersionUID = -4730563859116024676L;\n \n-            case Encrypted:\n-                panel = new EncryptedFieldPanel(\"panel\",\n-                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n+        public PlainSchemasOwn(\n+                final String id,\n+                final Map<String, PlainSchemaTO> schemas,\n+                final IModel<List<Attr>> attrTOs) {\n \n-                if (required) {\n-                    panel.addRequiredLabel();\n-                }\n-                break;\n+            super(id, schemas, attrTOs);\n \n-            default:\n-                panel = new AjaxTextFieldPanel(\"panel\",\n-                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n+            add(new ListView<Attr>(\"schemas\", attrTOs) {\n \n-                if (jexlHelp) {\n-                    AjaxTextFieldPanel.class.cast(panel).enableJexlHelp();\n-                }\n+                private static final long serialVersionUID = 9101744072914090143L;\n \n-                if (required) {\n-                    panel.addRequiredLabel();\n+                @Override\n+                protected void populateItem(final ListItem<Attr> item) {\n+                    setPanel(schemas, item, false);\n                 }\n+            });\n         }\n-\n-        panel.setReadOnly(readOnly);\n-\n-        return panel;\n     }\n \n     protected class PlainSchemasMemberships extends PlainSchemas<Attributable> {\n@@ -442,79 +275,4 @@ public List<String> getObject() {\n         }\n     }\n \n-    protected class PlainSchemasOwn extends PlainSchemas<List<Attr>> {\n-\n-        private static final long serialVersionUID = -4730563859116024676L;\n-\n-        public PlainSchemasOwn(\n-                final String id,\n-                final Map<String, PlainSchemaTO> schemas,\n-                final IModel<List<Attr>> attrTOs) {\n-\n-            super(id, schemas, attrTOs);\n-\n-            add(new ListView<Attr>(\"schemas\", attrTOs) {\n-\n-                private static final long serialVersionUID = 9101744072914090143L;\n-\n-                @Override\n-                @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-                protected void populateItem(final ListItem<Attr> item) {\n-                    Attr attrTO = item.getModelObject();\n-\n-                    AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n-                    if (mode == AjaxWizard.Mode.TEMPLATE\n-                            || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n-\n-                        FieldPanel.class.cast(panel).setNewModel(attrTO.getValues());\n-                    } else {\n-                        // SYNCOPE-1476 set form as multipart to properly manage membership attributes\n-                        panel = new MultiFieldPanel.Builder<>(\n-                                new PropertyModel<>(attrTO, \"values\")).build(\n-                                \"panel\",\n-                                attrTO.getSchema(),\n-                                FieldPanel.class.cast(panel)).setFormAsMultipart(true);\n-                        // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n-                        ((MultiFieldPanel) panel).setReadOnly(schemas.get(attrTO.getSchema()).isReadonly());\n-                    }\n-                    item.add(panel);\n-\n-                    setExternalAction(attrTO, panel);\n-                }\n-            });\n-        }\n-    }\n-\n-    protected abstract class PlainSchemas<T> extends Schemas {\n-\n-        private static final long serialVersionUID = 8315035592714180404L;\n-\n-        public PlainSchemas(\n-                final String id,\n-                final Map<String, PlainSchemaTO> schemas,\n-                final IModel<T> attrTOs) {\n-\n-            super(id);\n-        }\n-\n-        protected void setExternalAction(final Attr attrTO, final AbstractFieldPanel<?> panel) {\n-            Optional<Attr> prevAttr = previousObject == null\n-                    ? Optional.empty()\n-                    : previousObject.getPlainAttr(attrTO.getSchema());\n-            if (previousObject != null\n-                    && ((prevAttr.isEmpty() && attrTO.getValues().stream().anyMatch(StringUtils::isNotBlank))\n-                    || (prevAttr.isPresent() && !ListUtils.isEqualList(\n-                    prevAttr.get().getValues().stream().\n-                            filter(StringUtils::isNotBlank).collect(Collectors.toList()),\n-                    attrTO.getValues().stream().\n-                            filter(StringUtils::isNotBlank).collect(Collectors.toList()))))) {\n-\n-                List<String> oldValues = prevAttr.isPresent()\n-                        ? prevAttr.get().getValues()\n-                        : List.of();\n-                panel.showExternAction(new LabelInfo(\"externalAction\", oldValues));\n-            }\n-        }\n-    }\n-\n }"},{"sha":"66dce02cd076b1e994e627df881d0cd91fafb9b1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/TypeExtensionWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -112,7 +112,7 @@ public Details(final TypeExtensionTO typeExtensionTO) {\n                     map(EntityTO::getKey).collect(Collectors.toList());\n             AjaxPalettePanel<String> auxClassesPalette = new AjaxPalettePanel.Builder<String>().build(\n                     \"auxClasses.palette\",\n-                    new PropertyModel<List<String>>(typeExtensionTO, \"auxClasses\"),\n+                    new PropertyModel<>(typeExtensionTO, \"auxClasses\"),\n                     new ListModel<>(anyTypeClasses));\n             add(auxClassesPalette.hideLabel().setOutputMarkupId(true));\n         }"},{"sha":"dd5288cd5e72369212f225cc58c70308335c5e99","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"linkedAccountsList\">[linkedAccountsList]</span>\n+    <div wicket:id=\"toggle\"/>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"5f28a07fd5155c4cac31fccc91eba36365b8ab9c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Resource\n+suspended=Suspended\n+connObjectKeyValue=External key\n+inner.edit.linkedAccount=Edit account\n+inner.create.linkedAccount=Create account"},{"sha":"ce0bcf8584dd703c7f196c86a51eece56e7642ee","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LinkedAccountModalPanel_it.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_it.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Risorsa\n+suspended=Sospeso\n+connObjectKeyValue=Chiave esterna\n+inner.edit.linkedAccount=Modifica account\n+inner.create.linkedAccount=Crea account"},{"sha":"b825afbf29e9ab4aebe57d05539835006b294cd5","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LinkedAccountModalPanel_ja.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_ja.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=\\u8cc7\\u6e90\n+suspended=\\u4e00\\u6642\\u505c\\u6b62\n+connObjectKeyValue=\\u5916\\u90e8\\u30ad\\u30fc\n+inner.edit.linkedAccount=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u306e\\u7de8\\u96c6\n+inner.create.linkedAccount=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u3092\\u4f5c\\u6210\\u3059\\u308b"},{"sha":"62a2310b6063054cbbb9f324d2e402fc8c6385f1","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LinkedAccountModalPanel_pt_BR.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_pt_BR.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Recurso\n+suspended=Suspenso\n+connObjectKeyValue=Chave externa\n+inner.edit.linkedAccount=Editar conta\n+inner.create.linkedAccount=Criar Conta"},{"sha":"8a337d3fbaa7c9c23dc19cddc3bd01dcb48baa32","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LinkedAccountModalPanel_ru.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel_ru.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=\\u0420\\u0435\\u0441\\u0443\\u0440\\u0441\n+suspended=\\u043f\\u043e\\u0434\\u0432\\u0435\\u0448\\u0435\\u043d\\u043d\\u044b\\u0439\n+connObjectKeyValue=\\u0412\\u043d\\u0435\\u0448\\u043d\\u0438\\u0439 \\u043a\\u043b\\u044e\\u0447\n+inner.edit.linkedAccount=\\u0420\\u0435\\u0434\\u0430\\u043a\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0430\\u043a\\u043a\\u0430\\u0443\\u043d\\u0442\n+inner.create.linkedAccount=\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044f"},{"sha":"6acf5db0ce512212be2deb5a21a09ac0de00f777","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/UserDirectoryPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -17,3 +17,4 @@\n any.edit=Edit ${anyTO.type} ${anyTO.username}\n any.propagation.tasks=Propagation tasks for ${type} ${username}\n any.notification.tasks=Notification tasks for ${type} ${username}\n+linkedAccounts.title=Manage user accounts"},{"sha":"38fa14dfd5900c1c20aefec4b41f97db1ea92a08","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/UserDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -17,3 +17,4 @@\n any.edit=Modifica ${anyTO.type} ${anyTO.username}\n any.propagation.tasks=Task di propagazione per ${type} ${username}\n any.notification.tasks=Task di notifica per ${type} ${username}\n+linkedAccounts.title=Gestisci account utente"},{"sha":"91073688bd30bfe25405f75e647b4857ffc0c374","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/UserDirectoryPanel_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_ja.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -17,3 +17,4 @@\n any.edit=${anyTO.type} ${anyTO.username} \\u3092\\u7de8\\u96c6\n any.propagation.tasks=${type} ${username} \\u306e\\u4f1d\\u64ad\\u30bf\\u30b9\\u30af\n any.notification.tasks=${type} ${username} \\u306e\\u901a\\u77e5\\u30bf\\u30b9\\u30af\n+linkedAccounts.title=\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u3092\\u7ba1\\u7406\\u3059\\u308b"},{"sha":"865e74da7a10804551a2101c485958faaeb80b2a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/UserDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_pt_BR.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -17,3 +17,4 @@\n any.edit=Alterar ${anyTO.type} ${anyTO.username}\n any.propagation.tasks=Propagation tasks for ${type} ${username}\n any.notification.tasks=Notification tasks for ${type} ${username}\n+linkedAccounts.title=Gerenciar contas de usu\\u00e1rio"},{"sha":"53e0e864007593ebf5a7b647830bbf5b9d68fffd","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/UserDirectoryPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_ru.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -18,3 +18,4 @@\n any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${anyTO.type} ${anyTO.username}\n any.propagation.tasks=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439 \\u0434\\u043b\\u044f ${type} ${username}\n any.notification.tasks=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043a\\u0438 \\u0443\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0439 \\u0434\\u043b\\u044f ${type} ${username}\n+linkedAccounts.title=\\u0423\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0443\\u0447\\u0435\\u0442\\u043d\\u044b\\u043c\\u0438 \\u0437\\u0430\\u043f\\u0438\\u0441\\u044f\\u043c\\u0438 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439"},{"sha":"6831a2b1c881d7d5643f81c905a30fb91c30f2f7","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -233,3 +233,7 @@ zoom_in.alt=zoom-in icon\n zoom_out.class=fa fa-search-minus\n zoom_out.title=zoom-out\n zoom_out.alt=zoom-out icon\n+\n+manage_accounts.class=fa fa-users\n+manage_accounts.title=manage accounts\n+manage_accounts.alt=manage accounts icon"},{"sha":"2e13f6ecdfd67fa5094f16f45fabfdf320b602c8","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_it.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -231,3 +231,7 @@ reconciliation_push.alt=reconciliation push icon\n reconciliation_pull.class=fa-chevron-circle-left\n reconciliation_pull.title=pull\n reconciliation_pull.alt=reconciliation pull icon\n+\n+manage_accounts.class=fa fa-users\n+manage_accounts.title=gestisci account\n+manage_accounts.alt=manage accounts icon"},{"sha":"33d593cfea05b743b7e3727567186eb62087fba6","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_ja.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -231,3 +231,7 @@ reconciliation_push.alt=\\u7167\\u5408\\u30d7\\u30c3\\u30b7\\u30e5 icon\n reconciliation_pull.class=fa-chevron-circle-left\n reconciliation_pull.title=\\u30d7\\u30eb\n reconciliation_pull.alt=\\u7167\\u5408\\u30d7\\u30eb icon\n+\n+manage_accounts.class=fa fa-users\n+manage_accounts.title=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u3092\\u7ba1\\u7406\\u3059\\u308b\n+manage_accounts.alt=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u7ba1\\u7406\\u30a2\\u30a4\\u30b3\\u30f3"},{"sha":"7a61862fce177fbd94e384cf81c76836af6c3f9c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_pt_BR.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -231,3 +231,7 @@ reconciliation_push.alt=reconciliation push icon\n reconciliation_pull.class=fa-chevron-circle-left\n reconciliation_pull.title=pull\n reconciliation_pull.alt=reconciliation pull icon\n+\n+manage_accounts.class=fa fa-users\n+manage_accounts.title=manage accounts\n+manage_accounts.alt=manage accounts icon"},{"sha":"d825127de68096e5c43981080fb996fccc0a200f","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_ru.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -231,3 +231,7 @@ reconciliation_push.alt=reconciliation push icon\n reconciliation_pull.class=fa-chevron-circle-left\n reconciliation_pull.title=pull\n reconciliation_pull.alt=reconciliation pull icon\n+\n+manage_accounts.class=fa fa-users\n+manage_accounts.title=manage accounts\n+manage_accounts.alt=manage accounts icon"},{"sha":"2c135292504186caca130365403d91e1fa75e2f9","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AbstractAttrs.html","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -17,10 +17,7 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <div id=\"emptyPlaceholder\"/>\n-    <div id=\"attributes\">\n-      <wicket:child/>\n-    </div>\n-  </wicket:panel>\n+  <wicket:extend>\n+    <wicket:child/>\n+  </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"f62795ad8b4d70b17a4ded172f1314b8ed16d7b6","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AbstractAttrsWizardStep$Schemas.html","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep%24Schemas.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep%24Schemas.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep%24Schemas.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,29 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"schemas\">\n+      <div class=\"form-group\">\n+        <span wicket:id=\"panel\">\n+          [panel for dynamic input type markup]\n+        </span>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"d0d803fdb05b2ecab225a58d27f902d6402d43e3","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AbstractAttrsWizardStep.html","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,26 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div id=\"emptyPlaceholder\"/>\n+    <div id=\"attributes\">\n+      <wicket:child/>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"ed2f1809ab74abac2712bbb559f52167ba4ae8ec","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel.html","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,37 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <div class=\"box\">\n+        <div class=\"box-header with-border\">\n+          <h3 class=\"box-title\"><wicket:message key=\"title\"/></h3>\n+        </div>\n+        <div class=\"box-body\">\n+          <div id=\"group-forum\">\n+            <span wicket:id=\"username\">[username]</span>\n+          </div>\n+          <div id=\"group-forum\">\n+            <span wicket:id=\"password\">[password]</span>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"387b986dfa5f6cfe322ffe1e95272a5070cdd48a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+username=Username\n+password=Password\n+title=Credentials"},{"sha":"c98ccb07465565caaa1f1a18d7bce8d45b469af5","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_it.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+username=Username\n+password=Password\n+title=Credenziali"},{"sha":"6a73f2af7a263c14354f2779aa1a79eb305725c8","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel_ja.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_ja.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+username=\\u30e6\\u30fc\\u30b6\\u30fc\\u540d\n+password=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\n+title=\\u8cc7\\u683c\\u60c5\\u5831"},{"sha":"cbef6826f612162c1d4ccd66513b4391a5ad6010","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_pt_BR.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+username=Username\n+password=Password\n+title=Credenciais"},{"sha":"219c1041d1ec8b93acb6d94e5020d34079580328","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel_ru.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel_ru.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+username=\\u0438\\u043c\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f\n+password=\\u043f\\u0430\\u0440\\u043e\\u043b\\u044c\n+title=\\u043f\\u043e\\u043b\\u043d\\u043e\\u043c\\u043e\\u0447\\u0438\\u044f"},{"sha":"f2087abb152ba59ad657fdb614d8efad46c2645d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel.html","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,37 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <div class=\"box\">\n+        <div class=\"box-header with-border\">\n+          <h3 class=\"box-title\"><wicket:message key=\"title\"/></h3>\n+        </div>\n+        <div class=\"box-body\">\n+          <div id=\"group-forum\">\n+            <span wicket:id=\"resource\">[resource]</span>\n+          </div>\n+          <div id=\"group-forum\">\n+            <span wicket:id=\"connObjectKeyValue\">[connObjectKeyValue]</span>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"c820770a436331c998e8f2390fc2163a2509ff6e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Resource\n+connObjectKeyValue=Value of the key of the object as on the external resource\n+title=Details"},{"sha":"b098dafcba1c92928e78a4c2e2da4c6505945387","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_it.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Risorsa\n+connObjectKeyValue=Valore della chiave dell'oggetto come com'\\u00e8 sulla risorsa esterna\n+title=Dettagli"},{"sha":"03d0baaa908eaee7f8ecae8ab5e0e66eee0dc3e6","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel_ja.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_ja.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=\\u8cc7\\u6e90\n+connObjectKeyValue=\\u5916\\u90e8\\u30ea\\u30bd\\u30fc\\u30b9\\u4e0a\\u306e\\u30aa\\u30d6\\u30b8\\u30a7\\u30af\\u30c8\\u306e\\u30ad\\u30fc\\u306e\\u5024\n+title=\\u8a73\\u7d30"},{"sha":"9d1da5493f6db00bd9799bcd8da76ba88253abf1","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_pt_BR.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Recurso\n+connObjectKeyValue=Valor da chave do objeto como no recurso externo\n+title=Detalhes"},{"sha":"bbaba527d40f13ad87c0c70216c6fb4af293c2df","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel_ru.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel_ru.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=\\u0420\\u0435\\u0441\\u0443\\u0440\\u0441\n+connObjectKeyValue=\\u0417\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u043a\\u043b\\u044e\\u0447\\u0430 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u0430 \\u043a\\u0430\\u043a \\u043d\\u0430 \\u0432\\u043d\\u0435\\u0448\\u043d\\u0435\\u043c \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u0435\n+title=\\u043f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u043e\\u0441\\u0442\\u0438"},{"sha":"53103099cd728cc5302a48f23edcb78927a44f33","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountPlainAttrsPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div wicket:id=\"plainSchemas\"/>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"7a9b812611ad094d33bebf48855d8a40fc8921cb","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel.html","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.html?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,34 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <div class=\"box\">\n+        <div class=\"box-header with-border\">\n+          <h3 class=\"box-title\"><wicket:message key=\"title\"/></h3>\n+        </div>\n+        <div class=\"box-body\">\n+          <div id=\"group-forum\">\n+            <span wicket:id=\"privileges\">[privileges]</span>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"5887b8157c16c4640b97518d4c40233327e07654","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Privileges"},{"sha":"8b9d8d50a8c13db58fa1af5f6a79c61321043b23","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_it.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Privilegi"},{"sha":"c83d230c6b083f2ccc3027da430ad815d51fedef","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel_ja.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_ja.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=\\u7279\\u5178"},{"sha":"2ef9db4c9781b716d33cb1740465c33ed8e3a374","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_pt_BR.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Privil\\u00e9gios"},{"sha":"4d83a4c78c0288ec01fb70c0b43d10f48f5cbed4","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel_ru.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel_ru.properties?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=\\u043f\\u0440\\u0438\\u0432\\u0438\\u043b\\u0435\\u0433\\u0438\\u0438"},{"sha":"b29dce1035d99d936c953e96e0bc814076bfd063","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -837,15 +837,15 @@ public void issueSYNCOPE1030() {\n \n         UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n-                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:8:\"\n+                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:9:\"\n                 + \"action:action\"), Constants.ON_CLICK);\n \n         UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n         UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n         component = UTILITY_UI.findComponentByProp(\"username\",\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n-                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n+                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n         assertNull(component);\n \n         // delete default policy"},{"sha":"daa617e78b6c7c72eab28abe2ecd9549f88db033","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1ff8243199cb90ab9708ca371a98542fa1265c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1ff8243199cb90ab9708ca371a98542fa1265c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=dd1ff8243199cb90ab9708ca371a98542fa1265c","patch":"@@ -582,7 +582,7 @@ public void checkDeleteUsrLink() {\n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:8:action:action\", IndicatingOnConfirmAjaxLink.class);\n+                + \"actions:actions:actionRepeater:9:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }\n \n     @Test"}]}