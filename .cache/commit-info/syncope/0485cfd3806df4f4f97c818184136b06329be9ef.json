{"sha":"0485cfd3806df4f4f97c818184136b06329be9ef","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA0ODVjZmQzODA2ZGY0ZjRmOTdjODE4MTg0MTM2YjA2MzI5YmU5ZWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-22T13:41:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-22T13:41:01Z"},"message":"Checking core full working also via application/xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1544534 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d5b49a04c4044a947fad52a669b9d5a27385bc0d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d5b49a04c4044a947fad52a669b9d5a27385bc0d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0485cfd3806df4f4f97c818184136b06329be9ef","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0485cfd3806df4f4f97c818184136b06329be9ef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0485cfd3806df4f4f97c818184136b06329be9ef","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0485cfd3806df4f4f97c818184136b06329be9ef/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f2d57e45506b184c57fa9b9562b43bb8e69c72c2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f2d57e45506b184c57fa9b9562b43bb8e69c72c2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f2d57e45506b184c57fa9b9562b43bb8e69c72c2"}],"stats":{"total":50,"additions":19,"deletions":31},"files":[{"sha":"c4ae5776a8e379f1375f8dd0c1f5cd7c05f3864b","filename":"common/src/main/java/org/apache/syncope/common/mod/StatusMod.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0485cfd3806df4f4f97c818184136b06329be9ef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FStatusMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0485cfd3806df4f4f97c818184136b06329be9ef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FStatusMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FStatusMod.java?ref=0485cfd3806df4f4f97c818184136b06329be9ef","patch":"@@ -18,8 +18,11 @@\n  */\n package org.apache.syncope.common.mod;\n \n+import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n@@ -95,6 +98,9 @@ public void setOnSyncope(final boolean onSyncope) {\n         this.onSyncope = onSyncope;\n     }\n \n+    @XmlElementWrapper(name = \"resources\")\n+    @XmlElement(name = \"resource\")\n+    @JsonProperty(\"resources\")\n     public List<String> getResourceNames() {\n         return resourceNames;\n     }"},{"sha":"e0088265bb3dbe61e86ed3c342784d6e4d47ad97","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractAttributableTO.java","status":"modified","additions":8,"deletions":20,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0485cfd3806df4f4f97c818184136b06329be9ef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0485cfd3806df4f4f97c818184136b06329be9ef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java?ref=0485cfd3806df4f4f97c818184136b06329be9ef","patch":"@@ -65,34 +65,22 @@ public void setId(final long id) {\n \r\n     @JsonIgnore\r\n     public Map<String, AttributeTO> getDerAttrMap() {\r\n-        Map<String, AttributeTO> result;\r\n-\r\n-        if (derAttrs == null) {\r\n-            result = Collections.emptyMap();\r\n-        } else {\r\n-            result = new HashMap<String, AttributeTO>(derAttrs.size());\r\n-            for (AttributeTO attributeTO : derAttrs) {\r\n-                result.put(attributeTO.getSchema(), attributeTO);\r\n-            }\r\n-            result = Collections.unmodifiableMap(result);\r\n+        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(derAttrs.size());\r\n+        for (AttributeTO attributeTO : derAttrs) {\r\n+            result.put(attributeTO.getSchema(), attributeTO);\r\n         }\r\n+        result = Collections.unmodifiableMap(result);\r\n \r\n         return result;\r\n     }\r\n \r\n     @JsonIgnore\r\n     public Map<String, AttributeTO> getVirAttrMap() {\r\n-        Map<String, AttributeTO> result;\r\n-\r\n-        if (derAttrs == null) {\r\n-            result = Collections.emptyMap();\r\n-        } else {\r\n-            result = new HashMap<String, AttributeTO>(virAttrs.size());\r\n-            for (AttributeTO attributeTO : virAttrs) {\r\n-                result.put(attributeTO.getSchema(), attributeTO);\r\n-            }\r\n-            result = Collections.unmodifiableMap(result);\r\n+        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(virAttrs.size());\r\n+        for (AttributeTO attributeTO : virAttrs) {\r\n+            result.put(attributeTO.getSchema(), attributeTO);\r\n         }\r\n+        result = Collections.unmodifiableMap(result);\r\n \r\n         return result;\r\n     }\r"},{"sha":"44c98dacff8029363a3595fc89438e50dbf78b60","filename":"common/src/main/java/org/apache/syncope/common/to/AttributeTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0485cfd3806df4f4f97c818184136b06329be9ef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0485cfd3806df4f4f97c818184136b06329be9ef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java?ref=0485cfd3806df4f4f97c818184136b06329be9ef","patch":"@@ -43,7 +43,7 @@ public class AttributeTO extends AbstractBaseBean {\n     /**\r\n      * Set of (string) values of this attribute.\r\n      */\r\n-    private List<String> values;\r\n+    private final List<String> values;\r\n \r\n     /**\r\n      * Whether this attribute is read-only or not.\r"},{"sha":"4c9ff148dab0f6a2e6a16fa18800d80394536e72","filename":"common/src/main/java/org/apache/syncope/common/to/ConnObjectTO.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0485cfd3806df4f4f97c818184136b06329be9ef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0485cfd3806df4f4f97c818184136b06329be9ef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java?ref=0485cfd3806df4f4f97c818184136b06329be9ef","patch":"@@ -47,17 +47,11 @@ public List<AttributeTO> getAttrs() {\n \r\n     @JsonIgnore\r\n     public Map<String, AttributeTO> getAttrMap() {\r\n-        Map<String, AttributeTO> result;\r\n-\r\n-        if (attrs == null) {\r\n-            result = Collections.<String, AttributeTO>emptyMap();\r\n-        } else {\r\n-            result = new HashMap<String, AttributeTO>(attrs.size());\r\n-            for (AttributeTO attributeTO : attrs) {\r\n-                result.put(attributeTO.getSchema(), attributeTO);\r\n-            }\r\n-            result = Collections.<String, AttributeTO>unmodifiableMap(result);\r\n+        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(attrs.size());\r\n+        for (AttributeTO attributeTO : attrs) {\r\n+            result.put(attributeTO.getSchema(), attributeTO);\r\n         }\r\n+        result = Collections.<String, AttributeTO>unmodifiableMap(result);\r\n \r\n         return result;\r\n     }\r"}]}