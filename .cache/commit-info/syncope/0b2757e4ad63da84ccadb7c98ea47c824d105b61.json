{"sha":"0b2757e4ad63da84ccadb7c98ea47c824d105b61","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBiMjc1N2U0YWQ2M2RhODRjY2FkYjdjOThlYTQ3YzgyNGQxMDViNjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-28T12:12:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-28T12:12:26Z"},"message":"Small CLI cleanup","tree":{"sha":"40f287b9bf38187517183eee2b0e024d659164a4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/40f287b9bf38187517183eee2b0e024d659164a4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0b2757e4ad63da84ccadb7c98ea47c824d105b61","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b2757e4ad63da84ccadb7c98ea47c824d105b61","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0b2757e4ad63da84ccadb7c98ea47c824d105b61","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b2757e4ad63da84ccadb7c98ea47c824d105b61/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9f1a674403871ae36b6c90ecf2531fac68e2f4ca","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9f1a674403871ae36b6c90ecf2531fac68e2f4ca","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9f1a674403871ae36b6c90ecf2531fac68e2f4ca"}],"stats":{"total":194,"additions":73,"deletions":121},"files":[{"sha":"2d6b398e3fc7bb241c2713a8165292c1223789a6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/CommandClassScanner.java","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -18,13 +18,30 @@\n  */\n package org.apache.syncope.client.cli;\n \n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n import org.springframework.core.type.filter.AnnotationTypeFilter;\n+import org.springframework.util.ClassUtils;\n \n-public class CommandClassScanner extends ComponentClassScanner<AbstractCommand> {\n+public class CommandClassScanner extends ClassPathScanningCandidateComponentProvider {\n \n     public CommandClassScanner() {\n-        super();\n+        super(false);\n         addIncludeFilter(new AnnotationTypeFilter(Command.class));\n     }\n+\n+    public final List<Class<? extends AbstractCommand>> getComponentClasses() throws IllegalArgumentException {\n+        final String basePackage = \"org.apache.syncope.client.cli.commands\";\n+        List<Class<? extends AbstractCommand>> classes = new ArrayList<>();\n+        for (final BeanDefinition candidate : findCandidateComponents(basePackage)) {\n+            @SuppressWarnings(\"unchecked\")\n+            final Class<? extends AbstractCommand> cls = (Class<? extends AbstractCommand>) ClassUtils.resolveClassName(\n+                    candidate.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n+            classes.add(cls);\n+        }\n+        return classes;\n+    }\n }"},{"sha":"3081304a83d558eacbfd93327269eceb46cc55a9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/ComponentClassScanner.java","status":"removed","additions":0,"deletions":44,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9f1a674403871ae36b6c90ecf2531fac68e2f4ca/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FComponentClassScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9f1a674403871ae36b6c90ecf2531fac68e2f4ca/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FComponentClassScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FComponentClassScanner.java?ref=9f1a674403871ae36b6c90ecf2531fac68e2f4ca","patch":"@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.springframework.beans.factory.config.BeanDefinition;\n-import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n-import org.springframework.util.ClassUtils;\n-\n-public abstract class ComponentClassScanner<T> extends ClassPathScanningCandidateComponentProvider {\n-\n-    public ComponentClassScanner() {\n-        super(false);\n-    }\n-\n-    public final List<Class<? extends T>> getComponentClasses() throws IllegalArgumentException {\n-        final String basePackage = \"org.apache.syncope.client.cli.commands\";\n-        List<Class<? extends T>> classes = new ArrayList<>();\n-        for (final BeanDefinition candidate : findCandidateComponents(basePackage)) {\n-            @SuppressWarnings(\"unchecked\")\n-            final Class<? extends T> cls = (Class<? extends T>) ClassUtils.resolveClassName(\n-                    candidate.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n-            classes.add(cls);\n-        }\n-        return classes;\n-    }\n-}"},{"sha":"6721aa5a601c4f1e525c3ad7852abbf93e03f310","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/Input.java","status":"modified","additions":3,"deletions":23,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n import org.apache.syncope.client.cli.util.CommandUtils;\n \n@@ -96,12 +97,12 @@ public int parameterNumber() {\n         return parameters.length;\n     }\n \n-    public PairParameter toPairParameter(final String parameter) throws IllegalArgumentException {\n+    public Pair<String, String> toPairParameter(final String parameter) throws IllegalArgumentException {\n         if (!parameter.contains(\"=\")) {\n             throw new IllegalArgumentException(\"Parameter syntax error!\");\n         }\n         final String[] pairParameterArray = parameter.split(\"=\");\n-        return new PairParameter(pairParameterArray[0], pairParameterArray[1]);\n+        return Pair.of(pairParameterArray[0], pairParameterArray[1]);\n     }\n \n     public String printCommandFields() {\n@@ -111,25 +112,4 @@ public String printCommandFields() {\n         }\n         return commandBuilder.toString();\n     }\n-\n-    public class PairParameter {\n-\n-        private final String key;\n-\n-        private final String value;\n-\n-        public PairParameter(final String key, final String value) {\n-            this.key = key;\n-            this.value = value;\n-        }\n-\n-        public String getKey() {\n-            return key;\n-        }\n-\n-        public String getValue() {\n-            return value;\n-        }\n-\n-    }\n }"},{"sha":"7d9d541d7a87e30cf62576413a5904a31c2bb4fa","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/AbstractCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FAbstractCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FAbstractCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FAbstractCommand.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -22,7 +22,7 @@\n \n public abstract class AbstractCommand {\n \n-    public abstract void execute(final Input input);\n+    public abstract void execute(Input input);\n \n     public abstract String getHelpMessage();\n }"},{"sha":"4ddd050e51a34d6107a3ca8a7d37896bdcdc7dbd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationUpdate.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -20,6 +20,7 @@\n \n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -30,8 +31,8 @@ public class ConfigurationUpdate extends AbstractConfigurationCommand {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ConfigurationUpdate.class);\n \n-    private static final String UPDATE_HELP_MESSAGE\n-            = \"configuration --update {CONF-NAME}={CONF-VALUE} {CONF-NAME}={CONF-VALUE} [...]\";\n+    private static final String UPDATE_HELP_MESSAGE =\n+            \"configuration --update {CONF-NAME}={CONF-VALUE} {CONF-NAME}={CONF-VALUE} [...]\";\n \n     private final Input input;\n \n@@ -41,25 +42,23 @@ public ConfigurationUpdate(final Input input) {\n \n     public void update() {\n         if (input.parameterNumber() >= 1) {\n-            Input.PairParameter pairParameter = null;\n-            AttrTO attrTO;\n-            final LinkedList<AttrTO> attrList = new LinkedList<>();\n+            LinkedList<AttrTO> attrList = new LinkedList<>();\n             boolean failed = false;\n-            for (final String parameter : input.getParameters()) {\n+            for (String parameter : input.getParameters()) {\n+                Pair<String, String> pairParameter = input.toPairParameter(parameter);\n                 try {\n-                    pairParameter = input.toPairParameter(parameter);\n-                    attrTO = configurationSyncopeOperations.get(pairParameter.getKey());\n+                    AttrTO attrTO = configurationSyncopeOperations.get(pairParameter.getKey());\n                     attrTO.getValues().clear();\n                     attrTO.getValues().add(pairParameter.getValue());\n                     configurationSyncopeOperations.set(attrTO);\n                     attrList.add(attrTO);\n-                } catch (final IllegalArgumentException ex) {\n+                } catch (IllegalArgumentException ex) {\n                     LOG.error(\"Error updating configuration\", ex);\n                     configurationResultManager.genericError(ex.getMessage());\n                     configurationResultManager.genericError(UPDATE_HELP_MESSAGE);\n                     failed = true;\n                     break;\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n+                } catch (SyncopeClientException | WebServiceException ex) {\n                     LOG.error(\"Error updating configuration\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", pairParameter.getKey());"},{"sha":"401a928b0e7bce8131efc1c19c16f3304487bf63","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCreate.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -20,6 +20,7 @@\n \n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.util.CommandUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -32,8 +33,8 @@ public class LoggerCreate extends AbstractLoggerCommand {\n \n     private static final Logger LOG = LoggerFactory.getLogger(LoggerCreate.class);\n \n-    private static final String CREATE_HELP_MESSAGE\n-            = \"logger --create {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\";\n+    private static final String CREATE_HELP_MESSAGE =\n+            \"logger --create {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\";\n \n     private final Input input;\n \n@@ -43,19 +44,17 @@ public LoggerCreate(final Input input) {\n \n     public void create() {\n         if (input.parameterNumber() >= 1) {\n-            Input.PairParameter pairParameter;\n-            LoggerTO loggerTO;\n             final LinkedList<LoggerTO> loggerTOs = new LinkedList<>();\n             boolean failed = false;\n-            for (final String parameter : input.getParameters()) {\n-                loggerTO = new LoggerTO();\n+            for (String parameter : input.getParameters()) {\n+                LoggerTO loggerTO = new LoggerTO();\n+                Pair<String, String> pairParameter = input.toPairParameter(parameter);\n                 try {\n-                    pairParameter = input.toPairParameter(parameter);\n                     loggerTO.setKey(pairParameter.getKey());\n                     loggerTO.setLevel(LoggerLevel.valueOf(pairParameter.getValue()));\n                     loggerSyncopeOperations.update(loggerTO);\n                     loggerTOs.add(loggerTO);\n-                } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n+                } catch (WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n                     LOG.error(\"Error creating logger\", ex);\n                     loggerResultManager.typeNotValidError(\n                             \"logger level\", input.firstParameter(), CommandUtils.fromEnumToArray(LoggerLevel.class));"},{"sha":"64bbde193c46b930606efed523bf7e4dd56f75e0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdate.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -20,6 +20,7 @@\n \n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.util.CommandUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -32,8 +33,8 @@ public class LoggerUpdate extends AbstractLoggerCommand {\n \n     private static final Logger LOG = LoggerFactory.getLogger(LoggerUpdate.class);\n \n-    private static final String UPDATE_HELP_MESSAGE\n-            = \"logger --update {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\";\n+    private static final String UPDATE_HELP_MESSAGE =\n+            \"logger --update {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\";\n \n     private final Input input;\n \n@@ -43,18 +44,16 @@ public LoggerUpdate(final Input input) {\n \n     public void update() {\n         if (input.parameterNumber() >= 1) {\n-            Input.PairParameter pairParameter;\n-            LoggerTO loggerTO;\n             final LinkedList<LoggerTO> loggerTOs = new LinkedList<>();\n             boolean failed = false;\n-            for (final String parameter : input.getParameters()) {\n+            for (String parameter : input.getParameters()) {\n+                Pair<String, String> pairParameter = input.toPairParameter(parameter);\n                 try {\n-                    pairParameter = input.toPairParameter(parameter);\n-                    loggerTO = loggerSyncopeOperations.read(pairParameter.getKey());\n+                    LoggerTO loggerTO = loggerSyncopeOperations.read(pairParameter.getKey());\n                     loggerTO.setLevel(LoggerLevel.valueOf(pairParameter.getValue()));\n                     loggerSyncopeOperations.update(loggerTO);\n                     loggerTOs.add(loggerTO);\n-                } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n+                } catch (WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n                     LOG.error(\"Error updating logger\", ex);\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n                         loggerResultManager.typeNotValidError("},{"sha":"30d09530a5749f6892fd0367ce209b6329a8d06b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDeleteAll.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -73,7 +73,7 @@ public void delete() {\n                         }\n                         userResultManager.genericMessage(\"Deleted users: \" + deletedUsers);\n                         if (!users.isEmpty()) {\n-                            userResultManager.printUndeletedUsers(users);\n+                            userResultManager.printFailedUsers(users);\n                         }\n                     } else {\n                         userResultManager.genericError(\"Authentication error\");"},{"sha":"38e47827cc5cc03f1ddf604d668ca2ddd95db0d9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDeleteByAttribute.java","status":"modified","additions":14,"deletions":13,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -21,6 +21,7 @@\n import java.util.HashMap;\n import java.util.Map;\n import javax.xml.ws.WebServiceException;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -41,38 +42,38 @@ public UserDeleteByAttribute(final Input input) {\n \n     public void delete() {\n         if (input.parameterNumber() == 2) {\n-            final String realm = input.firstParameter();\n-            final Input.PairParameter pairParameter = input.toPairParameter(input.secondParameter());\n+            String realm = input.firstParameter();\n+            Pair<String, String> pairParameter = input.toPairParameter(input.secondParameter());\n             try {\n                 if (!realmSyncopeOperations.exists(realm)) {\n                     userResultManager.notFoundError(\"Realm\", realm);\n                     return;\n                 }\n-                final Map<String, BulkActionResult.Status> results = userSyncopeOperations.deleteByAttribute(\n+                Map<String, BulkActionResult.Status> results = userSyncopeOperations.deleteByAttribute(\n                         realm, pairParameter.getKey(), pairParameter.getValue());\n-                final Map<String, String> users = new HashMap<>();\n+                Map<String, String> failedUsers = new HashMap<>();\n                 int deletedUsers = 0;\n                 for (final Map.Entry<String, BulkActionResult.Status> entrySet : results.entrySet()) {\n-                    final String userId = entrySet.getKey();\n-                    final BulkActionResult.Status status = entrySet.getValue();\n-                    if (!BulkActionResult.Status.SUCCESS.equals(status)) {\n-                        users.put(userId, status.name());\n-                    } else {\n+                    String userId = entrySet.getKey();\n+                    BulkActionResult.Status status = entrySet.getValue();\n+                    if (BulkActionResult.Status.SUCCESS == status) {\n                         deletedUsers++;\n+                    } else {\n+                        failedUsers.put(userId, status.name());\n                     }\n                 }\n                 userResultManager.genericMessage(\"Deleted users: \" + deletedUsers);\n-                if (!users.isEmpty()) {\n-                    userResultManager.printUndeletedUsers(users);\n+                if (!failedUsers.isEmpty()) {\n+                    userResultManager.printFailedUsers(failedUsers);\n                 }\n-            } catch (final WebServiceException | SyncopeClientException ex) {\n+            } catch (WebServiceException | SyncopeClientException ex) {\n                 LOG.error(\"Error searching user\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     userResultManager.notFoundError(\"User with \" + pairParameter.getKey(), pairParameter.getValue());\n                 } else {\n                     userResultManager.genericError(ex.getMessage());\n                 }\n-            } catch (final IllegalArgumentException ex) {\n+            } catch (IllegalArgumentException ex) {\n                 LOG.error(\"Error searching user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n                 userResultManager.genericError(SEARCH_HELP_MESSAGE);"},{"sha":"50ccd74f8f68d9667f95b71319399f54fa54d02a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserResultManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -101,7 +101,7 @@ private void printRelationships(final List<RelationshipTO> relationshipTOs) {\n         }\n     }\n \n-    public void printUndeletedUsers(final Map<String, String> users) {\n+    public void printFailedUsers(final Map<String, String> users) {\n         final Table.TableBuilder tableBuilder =\n                 new Table.TableBuilder(\"Users not deleted\").header(\"user id\").header(\"cause\");\n         for (final Map.Entry<String, String> entrySet : users.entrySet()) {"},{"sha":"4181f838c89a8abf3429c3c795ae0aeb9ca27590","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByAttribute.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b2757e4ad63da84ccadb7c98ea47c824d105b61/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java?ref=0b2757e4ad63da84ccadb7c98ea47c824d105b61","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import javax.xml.ws.WebServiceException;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -40,30 +41,30 @@ public UserSearchByAttribute(final Input input) {\n \n     public void search() {\n         if (input.parameterNumber() == 2) {\n-            final String realm = input.firstParameter();\n-            final Input.PairParameter pairParameter = input.toPairParameter(input.secondParameter());\n+            String realm = input.firstParameter();\n+            Pair<String, String> pairParameter = input.toPairParameter(input.secondParameter());\n             try {\n-                List<UserTO> userTOs;\n                 if (!realmSyncopeOperations.exists(realm)) {\n-                    userResultManager.genericMessage(\"Operation performed on root realm because \" + realm\n-                            + \" does not exists\");\n+                    userResultManager.genericMessage(\n+                            \"Operation performed on root realm because \" + realm + \" does not exists\");\n                 }\n-                userTOs = userSyncopeOperations.searchByAttribute(\n-                        realm, pairParameter.getKey(), pairParameter.getValue());\n-                if (userTOs == null || userTOs.isEmpty()) {\n+                List<UserTO> userTOs =\n+                        userSyncopeOperations.searchByAttribute(\n+                                realm, pairParameter.getKey(), pairParameter.getValue());\n+                if (userTOs.isEmpty()) {\n                     userResultManager.genericMessage(\"No users found with attribute \"\n                             + pairParameter.getKey() + \" and value \" + pairParameter.getValue());\n                 } else {\n                     userResultManager.printUsers(userTOs);\n                 }\n-            } catch (final WebServiceException | SyncopeClientException ex) {\n+            } catch (WebServiceException | SyncopeClientException ex) {\n                 LOG.error(\"Error searching user\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     userResultManager.notFoundError(\"User with \" + pairParameter.getKey(), pairParameter.getValue());\n                 } else {\n                     userResultManager.genericError(ex.getMessage());\n                 }\n-            } catch (final IllegalArgumentException ex) {\n+            } catch (IllegalArgumentException ex) {\n                 LOG.error(\"Error searching user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n                 userResultManager.genericError(SEARCH_HELP_MESSAGE);"}]}