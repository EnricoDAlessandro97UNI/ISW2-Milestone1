{"sha":"87e75438173ff19b8589af7347bcf0a8b560710b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg3ZTc1NDM4MTczZmYxOWI4NTg5YWY3MzQ3YmNmMGE4YjU2MDcxMGI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-07T13:39:01Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-07T13:39:01Z"},"message":"[SYNCOPE-691] change prepareAttribute method to fix the issue","tree":{"sha":"fb0deedddc5d48ae7bde56e3e8b542cde9698038","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fb0deedddc5d48ae7bde56e3e8b542cde9698038"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/87e75438173ff19b8589af7347bcf0a8b560710b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/87e75438173ff19b8589af7347bcf0a8b560710b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/87e75438173ff19b8589af7347bcf0a8b560710b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/87e75438173ff19b8589af7347bcf0a8b560710b/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8dd58bc1554a0e5233ca67359c9aa5bd2916f777","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8dd58bc1554a0e5233ca67359c9aa5bd2916f777","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8dd58bc1554a0e5233ca67359c9aa5bd2916f777"}],"stats":{"total":130,"additions":121,"deletions":9},"files":[{"sha":"0c7aec439a7047e92dca4959d0e0a890da534c36","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractDerSchema.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerSchema.java?ref=87e75438173ff19b8589af7347bcf0a8b560710b","patch":"@@ -54,6 +54,7 @@ public void setExpression(final String expression) {\n         this.expression = expression;\n     }\n \n+    @Override\n     public AttributeSchemaType getType() {\n         return AttributeSchemaType.String;\n     }\n@@ -62,6 +63,7 @@ public String getMandatoryCondition() {\n         return Boolean.FALSE.toString().toLowerCase();\n     }\n \n+    @Override\n     public boolean isMultivalue() {\n         return Boolean.TRUE;\n     }\n@@ -70,6 +72,7 @@ public boolean isUniqueConstraint() {\n         return Boolean.FALSE;\n     }\n \n+    @Override\n     public boolean isReadonly() {\n         return Boolean.FALSE;\n     }"},{"sha":"d6f95e50f602191cd4ac7cb5c8c08c90ba247378","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractNormalSchema.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractNormalSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractNormalSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractNormalSchema.java?ref=87e75438173ff19b8589af7347bcf0a8b560710b","patch":"@@ -115,6 +115,7 @@ public void setName(final String name) {\n         this.name = name;\n     }\n \n+    @Override\n     public AttributeSchemaType getType() {\n         return type;\n     }\n@@ -131,6 +132,7 @@ public void setMandatoryCondition(final String mandatoryCondition) {\n         this.mandatoryCondition = mandatoryCondition;\n     }\n \n+    @Override\n     public boolean isMultivalue() {\n         return isBooleanAsInteger(multivalue);\n     }\n@@ -147,6 +149,7 @@ public void setUniqueConstraint(final boolean uniquevalue) {\n         this.uniqueConstraint = getBooleanAsInteger(uniquevalue);\n     }\n \n+    @Override\n     public boolean isReadonly() {\n         return isBooleanAsInteger(readonly);\n     }"},{"sha":"410a503513459259f0163caf47114ec8248cf7b0","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractSchema.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java?ref=87e75438173ff19b8589af7347bcf0a8b560710b","patch":"@@ -18,11 +18,19 @@\n  */\n package org.apache.syncope.core.persistence.beans;\n \n+import org.apache.syncope.common.types.AttributeSchemaType;\n+\n public abstract class AbstractSchema extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 2251957673265528044L;\n \n     public abstract String getName();\n \n     public abstract void setName(String name);\n+\n+    public abstract AttributeSchemaType getType();\n+\n+    public abstract boolean isMultivalue();\n+\n+    public abstract boolean isReadonly();\n }"},{"sha":"ec0312e49e027c8623fa597786c1bb876d0d451b","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractVirSchema.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java?ref=87e75438173ff19b8589af7347bcf0a8b560710b","patch":"@@ -55,6 +55,7 @@ public void setName(final String name) {\n         this.name = name;\n     }\n \n+    @Override\n     public AttributeSchemaType getType() {\n         return AttributeSchemaType.String;\n     }\n@@ -63,6 +64,7 @@ public String getMandatoryCondition() {\n         return Boolean.FALSE.toString().toLowerCase();\n     }\n \n+    @Override\n     public boolean isMultivalue() {\n         return Boolean.TRUE;\n     }\n@@ -71,6 +73,7 @@ public boolean isUniqueConstraint() {\n         return Boolean.FALSE;\n     }\n \n+    @Override\n     public boolean isReadonly() {\n         return isBooleanAsInteger(readonly);\n     }"},{"sha":"a504dc2f13adbc0404d696c3913d4c76b73b7577","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=87e75438173ff19b8589af7347bcf0a8b560710b","patch":"@@ -43,10 +43,9 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n-import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractSchema;\n import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n-import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n@@ -209,8 +208,8 @@ public static <T extends AbstractSubject> Map.Entry<String, Set<Attribute>> prep\n             }\n         }\n \n-        final Attribute accountIdExtAttr =\n-                AttributeUtil.find(attrUtil.getAccountIdItem(resource).getExtAttrName(), attributes);\n+        final Attribute accountIdExtAttr = AttributeUtil.find(attrUtil.getAccountIdItem(resource).getExtAttrName(),\n+                attributes);\n         if (accountIdExtAttr != null) {\n             attributes.remove(accountIdExtAttr);\n             attributes.add(AttributeBuilder.build(attrUtil.getAccountIdItem(resource).getExtAttrName(), accountId));\n@@ -287,7 +286,7 @@ private static <T extends AbstractAttributable> Map.Entry<String, Attribute> pre\n                 resource, mapItem, attributables, vAttrsToBeRemoved, vAttrsToBeUpdated, membVAttrsToBeRemoved,\n                 membVAttrsToBeUpdated);\n \n-        AbstractNormalSchema schema = null;\n+        AbstractSchema schema = null;\n         boolean readOnlyVirSchema = false;\n         AttributeSchemaType schemaType;\n         final Map.Entry<String, Attribute> result;\n@@ -306,9 +305,9 @@ private static <T extends AbstractAttributable> Map.Entry<String, Attribute> pre\n             case RoleVirtualSchema:\n             case MembershipVirtualSchema:\n                 VirSchemaDAO virSchemaDAO = context.getBean(VirSchemaDAO.class);\n-                AbstractVirSchema virSchema = virSchemaDAO.find(mapItem.getIntAttrName(),\n+                schema = virSchemaDAO.find(mapItem.getIntAttrName(),\n                         MappingUtil.getIntMappingTypeClass(mapItem.getIntMappingType()));\n-                readOnlyVirSchema = (virSchema != null && virSchema.isReadonly());\n+                readOnlyVirSchema = (schema != null && schema.isReadonly());\n                 schemaType = AttributeSchemaType.String;\n                 break;\n "},{"sha":"e06599824abf34e928e90ae77540d173340e7781","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":98,"deletions":2,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87e75438173ff19b8589af7347bcf0a8b560710b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=87e75438173ff19b8589af7347bcf0a8b560710b","patch":"@@ -23,7 +23,9 @@\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -100,8 +102,8 @@ public void issueSYNCOPE260() {\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_WS2, SubjectType.USER, userTO.getId());\n+        ConnObjectTO connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, SubjectType.USER, userTO.\n+                getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n@@ -869,4 +871,98 @@ public void issueSYNCOPE501() {\n         resourceService.update(RESOURCE_NAME_DBVIRATTR, resourceDBVirAttr);\n         // -------------------------------------------\n     }\n+\n+    @Test\n+    public void issueSYNCOPE691() {\n+        final String res = RESOURCE_NAME_LDAP + \"691\";\n+\n+        ResourceTO ldap = resourceService.read(RESOURCE_NAME_LDAP);\n+        ldap.setName(res);\n+\n+        try {\n+            List<MappingItemTO> toBeRemoved = new ArrayList<MappingItemTO>();\n+\n+            // change mapping of resource-csv\n+            for (MappingItemTO item : ldap.getUmapping().getItems()) {\n+                if (\"mail\".equals(item.getExtAttrName())) {\n+                    toBeRemoved.add(item);\n+                }\n+            }\n+\n+            ldap.getUmapping().getItems().removeAll(toBeRemoved);\n+\n+            final MappingItemTO mail = new MappingItemTO();\n+            // unset internal attribute mail and set virtual attribute virtualdata as mapped to external email\n+            mail.setIntMappingType(IntMappingType.UserVirtualSchema);\n+            mail.setIntAttrName(\"virtualdata\");\n+            mail.setPurpose(MappingPurpose.BOTH);\n+            mail.setExtAttrName(\"mail\");\n+\n+            ldap.getUmapping().getItems().add(mail);\n+\n+            resourceService.create(ldap);\n+\n+            ldap = resourceService.read(res);\n+            assertNotNull(ldap.getUmapping());\n+\n+            boolean found = false;\n+            for (MappingItemTO item : ldap.getUmapping().getItems()) {\n+                if (\"mail\".equals(item.getExtAttrName()) && \"virtualdata\".equals(item.getIntAttrName())) {\n+                    found = true;\n+                }\n+            }\n+\n+            assertTrue(found);\n+\n+            // create a new user\n+            UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope691@syncope.apache.org\");\n+            userTO.getResources().clear();\n+            userTO.getMemberships().clear();\n+            userTO.getDerAttrs().clear();\n+            userTO.getVirAttrs().clear();\n+\n+            final AttributeTO emailTO = new AttributeTO();\n+            emailTO.setSchema(\"virtualdata\");\n+            emailTO.getValues().add(\"test@issue691.dom1.org\");\n+            emailTO.getValues().add(\"test@issue691.dom2.org\");\n+\n+            userTO.getVirAttrs().add(emailTO);\n+            // assign resource-csv to user\n+            userTO.getResources().add(res);\n+            // save user\n+            UserTO created = createUser(userTO);\n+            // make std controls about user\n+            assertNotNull(created);\n+            assertTrue(res.equals(created.getResources().iterator().next()));\n+\n+            assertEquals(2, created.getVirAttrs().iterator().next().getValues().size(), 0);\n+            assertTrue(created.getVirAttrs().iterator().next().getValues().contains(\"test@issue691.dom1.org\"));\n+            assertTrue(created.getVirAttrs().iterator().next().getValues().contains(\"test@issue691.dom2.org\"));\n+\n+            // update user\n+            UserMod userMod = new UserMod();\n+            userMod.setId(created.getId());\n+            //modify virtual attribute\n+            userMod.getVirAttrsToRemove().add(\"virtualdata\");\n+\n+            final AttributeMod emailMod = new AttributeMod();\n+            emailMod.setSchema(\"virtualdata\");\n+            emailMod.getValuesToBeAdded().add(\"test@issue691.dom3.org\");\n+            emailMod.getValuesToBeAdded().add(\"test@issue691.dom4.org\");\n+\n+            userMod.getVirAttrsToUpdate().add(emailMod);\n+\n+            final UserTO updated = updateUser(userMod);\n+            assertNotNull(updated);\n+            assertEquals(2, updated.getVirAttrs().iterator().next().getValues().size(), 0);\n+            assertTrue(updated.getVirAttrs().iterator().next().getValues().contains(\"test@issue691.dom3.org\"));\n+            assertTrue(updated.getVirAttrs().iterator().next().getValues().contains(\"test@issue691.dom4.org\"));\n+        } finally {\n+            try {\n+                resourceService.delete(res);\n+            } catch (Exception ignore) {\n+                // ignore\n+            }\n+        }\n+    }\n }"}]}