{"sha":"9bdaae3f65419b064500f5ab2e3163aff327e8a7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjliZGFhZTNmNjU0MTliMDY0NTAwZjVhYjJlMzE2M2FmZjMyN2U4YTc=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-02-05T17:16:50Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-02-05T17:16:50Z"},"message":"[SYNCOPE-743] provides topology and tasks integration tests","tree":{"sha":"75e9f0dea67fe9cfe3a4f12500848d74dcd05dee","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/75e9f0dea67fe9cfe3a4f12500848d74dcd05dee"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9bdaae3f65419b064500f5ab2e3163aff327e8a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9bdaae3f65419b064500f5ab2e3163aff327e8a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9bdaae3f65419b064500f5ab2e3163aff327e8a7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9bdaae3f65419b064500f5ab2e3163aff327e8a7/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"520f7f874b2a87b66201640ada135f363a1f1883","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/520f7f874b2a87b66201640ada135f363a1f1883","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/520f7f874b2a87b66201640ada135f363a1f1883"}],"stats":{"total":169,"additions":115,"deletions":54},"files":[{"sha":"809d403a5f1fcdbb0b52fb24d47e582dcc52675f","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bdaae3f65419b064500f5ab2e3163aff327e8a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bdaae3f65419b064500f5ab2e3163aff327e8a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=9bdaae3f65419b064500f5ab2e3163aff327e8a7","patch":"@@ -197,60 +197,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     new DateFormatROModel(new PropertyModel<String>(taskTO, \"nextExec\")));\n             nextExec.setEnabled(false);\n             add(nextExec);\n-\n-//\n-//            final AjaxButton submit = new IndicatingAjaxButton(APPLY, new ResourceModel(APPLY)) {\n-//\n-//                private static final long serialVersionUID = -958724007591692537L;\n-//\n-//                @Override\n-//                protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-//                    SchedTaskTO taskTO = (SchedTaskTO) form.getModelObject();\n-//                    taskTO.setCronExpression(StringUtils.hasText(taskTO.getCronExpression())\n-//                            ? crontab.getCronExpression()\n-//                            : null);\n-//\n-//                    try {\n-//                        submitAction(taskTO);\n-//\n-//                        ((BasePage) pageRef.getPage()).setModalResult(true);\n-//\n-//                        window.close(target);\n-//                    } catch (SyncopeClientException e) {\n-//                        LOG.error(\"While creating or updating task\", e);\n-//                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-//                        feedbackPanel.refresh(target);\n-//                    }\n-//                }\n-//\n-//                @Override\n-//                protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-//                    feedbackPanel.refresh(target);\n-//                }\n-//            };\n-//\n-//            final AjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n-//\n-//                private static final long serialVersionUID = -958724007591692537L;\n-//\n-//                @Override\n-//                protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-//                    window.close(target);\n-//                }\n-//            };\n-//\n-//            cancel.setDefaultFormProcessing(false);\n-//\n-//            if (taskTO.getId() > 0) {\n-//                MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getEntitlement(TASKS,\n-//                        \"update\"));\n-//            } else {\n-//                MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getEntitlement(TASKS,\n-//                        \"create\"));\n-//            }\n-//\n-//            form.add(submit);\n-//            form.add(cancel);\n         }\n     }\n "},{"sha":"1d8334e060b823752407235e1b66d9208278c78c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"added","additions":115,"deletions":0,"changes":115,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bdaae3f65419b064500f5ab2e3163aff327e8a7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bdaae3f65419b064500f5ab2e3163aff327e8a7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=9bdaae3f65419b064500f5ab2e3163aff327e8a7","patch":"@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TopologyITCase extends AbstractConsoleITCase {\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+    }\n+\n+    @Test\n+    public void showTopology() {\n+        wicketTester.clickLink(\"topologyLI:topology\");\n+        wicketTester.assertComponent(\"syncope\", WebMarkupContainer.class);\n+        wicketTester.assertComponent(\"resources:1\", WebMarkupContainer.class);\n+        wicketTester.assertComponent(\"resources:2:resources:0\", WebMarkupContainer.class);\n+    }\n+\n+    @Test\n+    public void showTopologyToggleMenu() {\n+        wicketTester.clickLink(\"topologyLI:topology\");\n+        wicketTester.executeAjaxEvent(\"resources:2:resources:0:res\", Constants.ON_CLICK);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:delete\", AjaxLink.class);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:edit\", AjaxLink.class);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:propagation\", AjaxLink.class);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:synchronization\", AjaxLink.class);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:push\", AjaxLink.class);\n+        wicketTester.executeAjaxEvent(\"syncope\", Constants.ON_CLICK);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:tasks\", AjaxLink.class);\n+        wicketTester.executeAjaxEvent(\"conns:0:conns:4:conn\", Constants.ON_CLICK);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:create\", AjaxLink.class);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:delete\", AjaxLink.class);\n+        wicketTester.assertComponent(\"toggle:togglePanelContainer:container:actions:edit\", AjaxLink.class);\n+    }\n+\n+    @Test\n+    public void executeSyncTask() {\n+        wicketTester.clickLink(\"topologyLI:topology\");\n+        wicketTester.executeAjaxEvent(\"resources:2:resources:0:res\", Constants.ON_CLICK);\n+        wicketTester.clickLink(\"toggle:togglePanelContainer:container:actions:synchronization\");\n+        wicketTester.clickLink(\"toggle:outherObjectsRepeater:1:outher:form:content:tasks:firstLevelContainer:\"\n+                + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n+                + \"body:rows:1:cells:10:cell:panelExecute:executeLink\");\n+        wicketTester.clickLink(\"toggle:outherObjectsRepeater:1:outher:form:content:tasks:firstLevelContainer:first:\"\n+                + \"container:content:startAt:togglePanelContainer:startAtForm:startAt\");\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+    }\n+\n+    @Test\n+    public void editPushTask() {\n+        wicketTester.clickLink(\"topologyLI:topology\");\n+        wicketTester.executeAjaxEvent(\"resources:5:resources:0:res\", Constants.ON_CLICK);\n+        wicketTester.clickLink(\"toggle:togglePanelContainer:container:actions:push\");\n+        wicketTester.clickLink(\"toggle:outherObjectsRepeater:1:outher:form:content:tasks:firstLevelContainer:\"\n+                + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n+                + \"body:rows:1:cells:9:cell:panelEdit:editLink\");\n+\n+        final FormTester formTester = wicketTester.newFormTester(\"toggle:outherObjectsRepeater:1:outher:form:content:\"\n+                + \"tasks:firstLevelContainer:first:container:content:wizard:form\");\n+\n+        formTester.setValue(\"view:description:textField\", \"test\");\n+        formTester.submit(\"buttons:finish\");\n+\n+        wicketTester.assertLabel(\"toggle:outherObjectsRepeater:1:outher:form:content:tasks:firstLevelContainer:first:\"\n+                + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:body:rows:\"\n+                + \"2:cells:4:cell\", \"test\");\n+    }\n+\n+    @Test\n+    public void createSchedTask() {\n+        wicketTester.clickLink(\"topologyLI:topology\");\n+        wicketTester.executeAjaxEvent(\"syncope\", Constants.ON_CLICK);\n+        wicketTester.clickLink(\"toggle:togglePanelContainer:container:actions:tasks\");\n+        wicketTester.clickLink(\"toggle:outherObjectsRepeater:1:outher:form:content:tasks:firstLevelContainer:first:\"\n+                + \"container:content:add\");\n+\n+        final FormTester formTester = wicketTester.newFormTester(\n+                \"toggle:outherObjectsRepeater:1:outher:form:content:tasks:firstLevelContainer:first:\"\n+                + \"container:content:wizard:form\");\n+        formTester.setValue(\"view:name:textField\", \"test\");\n+        formTester.select(\"view:jobDelegateClassName:dropDownChoiceField\", 0);\n+        \n+        formTester.submit(\"buttons:next\");\n+\n+        wicketTester.assertComponent(\"toggle:outherObjectsRepeater:1:outher:form:content:tasks:firstLevelContainer:\"\n+                + \"first:container:content:wizard:form:view:schedule:seconds:textField\", TextField.class);\n+\n+        formTester.submit(\"buttons:finish\");\n+    }\n+}"}]}