{"sha":"936d5422bc6df7a4bb647c4ca91002163c9c50a2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkzNmQ1NDIyYmM2ZGY3YTRiYjY0N2M0Y2E5MTAwMjE2M2M5YzUwYTI=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-03T10:27:43Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-03T10:27:43Z"},"message":"[SYNCOPE-752] Add console test for security questions","tree":{"sha":"1562d2143fab35eb79b0bcf1f4d48ca9a5ec18fc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1562d2143fab35eb79b0bcf1f4d48ca9a5ec18fc"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/936d5422bc6df7a4bb647c4ca91002163c9c50a2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/936d5422bc6df7a4bb647c4ca91002163c9c50a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/936d5422bc6df7a4bb647c4ca91002163c9c50a2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/936d5422bc6df7a4bb647c4ca91002163c9c50a2/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"d53dce1df81054f2228834b759d57b158af0a9e6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d53dce1df81054f2228834b759d57b158af0a9e6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d53dce1df81054f2228834b759d57b158af0a9e6"}],"stats":{"total":133,"additions":128,"deletions":5},"files":[{"sha":"27ad92071f520b8e4c741d507c1bc4942de46946","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/936d5422bc6df7a4bb647c4ca91002163c9c50a2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/936d5422bc6df7a4bb647c4ca91002163c9c50a2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=936d5422bc6df7a4bb647c4ca91002163c9c50a2","patch":"@@ -35,10 +35,10 @@\n import org.apache.wicket.util.visit.IVisitor;\n import org.junit.Before;\n \n-public abstract class AbstractConsoleITCase extends AbstractITCase {\n+public abstract class AbstractConsoleITCase<T> extends AbstractITCase {\n \n     protected static final String KEY = \"key\";\n-    \n+\n     protected static final String SCHEMA = \"schema\";\n \n     protected WicketTester wicketTester;\n@@ -78,7 +78,7 @@ protected void doLogin(final String user, final String passwd) {\n         formTester.submit(\"submit\");\n     }\n \n-    protected Component findComponentByProp(final String property, final String searchPath, final String key) {\n+    protected Component findComponentByProp(final String property, final String searchPath, final T key) {\n         Component component = wicketTester.getComponentFromLastRenderedPage(searchPath);\n \n         Component result = component.getPage().\n@@ -89,7 +89,8 @@ public void component(final OddEvenItem<?> object, final IVisit<Component> visit\n \n                         try {\n                             if (PropertyResolver.getPropertyGetter(\n-                                    property, object.getModelObject()).invoke(object.getModelObject()).equals(key)) {\n+                                    property,\n+                                    object.getModelObject()).invoke(object.getModelObject()).equals(key)) {\n                                 visit.stop(object);\n                             }\n                         } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {"},{"sha":"241c54cb8a59ffdc6bc39c7d5f1459e8e97b82cc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractTypesITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/936d5422bc6df7a4bb647c4ca91002163c9c50a2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/936d5422bc6df7a4bb647c4ca91002163c9c50a2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java?ref=936d5422bc6df7a4bb647c4ca91002163c9c50a2","patch":"@@ -24,7 +24,7 @@\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n \n-public abstract class AbstractTypesITCase extends AbstractConsoleITCase {\n+public abstract class AbstractTypesITCase extends AbstractConsoleITCase<String> {\n \n     protected static final String PLAIN_DATATABLE_PATH = \"body:content:tabbedPanel:panel:\"\n             + \"accordionPanel:tabs:0:body:content:container:content:searchContainer:resultTable\";"},{"sha":"c6abea2aacc0e0e5ea9f11ade2ac0871a1557fdd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/936d5422bc6df7a4bb647c4ca91002163c9c50a2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/936d5422bc6df7a4bb647c4ca91002163c9c50a2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=936d5422bc6df7a4bb647c4ca91002163c9c50a2","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import static org.apache.syncope.fit.console.AbstractConsoleITCase.KEY;\n+import static org.junit.Assert.assertNull;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.pages.SecurityQuestions;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Before;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class SecurityQuestionsITCase extends AbstractConsoleITCase<Long> {\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n+        wicketTester.assertRenderedPage(SecurityQuestions.class);\n+    }\n+\n+    @Test\n+    public void read() {\n+        wicketTester.assertLabel(\n+                \"body:content:securityQuestionPanel:container:content:searchContainer:resultTable:\"\n+                + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:2:cell\",\n+                \"What&#039;s your mother&#039;s maiden name?\");\n+\n+        wicketTester.assertComponent(\n+                \"body:content:securityQuestionPanel:container:content:\"\n+                + \"searchContainer:resultTable:tablePanel:\"\n+                + \"groupForm:checkgroup:dataTable:body:rows:\"\n+                + \"1:cells:3:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n+    }\n+\n+    @Test\n+    public void create() {\n+        wicketTester.clickLink(\"body:content:securityQuestionPanel:container:content:add\");\n+\n+        wicketTester.assertComponent(\n+                \"body:content:securityQuestionPanel:modal\", Modal.class);\n+\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:securityQuestionPanel\"\n+                + \":modal:form\");\n+        formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n+                \"What's your favorite team?\");\n+\n+        wicketTester.clickLink(\"body:content:securityQuestionPanel:modal:dialog:footer:inputs:0:submit\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+    }\n+\n+    @Test\n+    public void update() {\n+        Component result = findComponentByProp(KEY, \"body:content:securityQuestionPanel:container:content:\"\n+                + \"searchContainer:resultTable\", 100L);\n+\n+        wicketTester.assertLabel(\n+                result.getPageRelativePath() + \":cells:1:cell\", \"100\");\n+\n+        wicketTester.clickLink(\n+                result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n+\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:securityQuestionPanel\"\n+                + \":modal:form\");\n+        formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n+                \"What's your favorite car?\");\n+\n+        wicketTester.clickLink(\"body:content:securityQuestionPanel:modal:dialog:footer:inputs:0:submit\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+    }\n+\n+    @Test\n+    public void delete() {\n+        Component result = findComponentByProp(KEY, \"body:content:securityQuestionPanel:container:content:\"\n+                + \"searchContainer:resultTable:\", 100L);\n+\n+        wicketTester.assertLabel(\n+                result.getPageRelativePath() + \":cells:1:cell\", \"100\");\n+\n+        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n+        wicketTester.clickLink(\n+                wicketTester.getComponentFromLastRenderedPage(\n+                        result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n+\n+        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        assertNull(findComponentByProp(KEY,\n+                \"body:content:securityQuestionPanel:container:content:\"\n+                + \"searchContainer:resultTable:\"\n+                + \"tablePanel:groupForm:checkgroup:dataTable\", 100L));\n+    }\n+}"}]}