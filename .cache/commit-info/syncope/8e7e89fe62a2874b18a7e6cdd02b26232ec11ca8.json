{"sha":"8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhlN2U4OWZlNjJhMjg3NGIxOGE3ZTZjZGQwMmIyNjIzMmVjMTFjYTg=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-06-27T11:24:22Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-06-27T11:24:22Z"},"message":"SYNCOPE-397 fixed on the branch 1.1.X. Thank you Andrea for your contribution\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1497304 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ed534c226287d2d0afe28c38c67896456c563781","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ed534c226287d2d0afe28c38c67896456c563781"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"dfcb2632e95583dc35cb99f4cac19a363bff4b82","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dfcb2632e95583dc35cb99f4cac19a363bff4b82","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dfcb2632e95583dc35cb99f4cac19a363bff4b82"}],"stats":{"total":141,"additions":121,"deletions":20},"files":[{"sha":"77471f32fbb09b783264817c8659ad3a71643fcf","filename":"console/src/test/java/org/apache/syncope/console/UserTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8","patch":"@@ -95,7 +95,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[@id='propagation']/span\\\");\", \"30000\");\n \n-        selenium.click(\"//div[6]/form/div/div[2]/div/div/div/div/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]/a\");\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n     }"},{"sha":"82386581751d6b9c338bc1f2876f6c2d372e1ff4","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/LDAPMembershipPropagationActions.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java?ref=8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.core.util.JexlUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n+import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -96,7 +97,17 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n                 LOG.debug(\"Role accountLinks to propagate for membership: {}\", roleAccountLinks);\n \n                 Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n-                attributes.add(AttributeBuilder.build(getGroupMembershipAttrName(), roleAccountLinks));\n+\n+                Set<String> groups = new HashSet<String>(roleAccountLinks);\n+                Attribute ldapGroups = AttributeUtil.find(\"ldapGroups\", attributes);\n+\n+                if (ldapGroups != null) {\n+                    for (Object obj : ldapGroups.getValue()) {\n+                        groups.add(obj.toString());\n+                    }\n+                }\n+\n+                attributes.add(AttributeBuilder.build(getGroupMembershipAttrName(), groups));\n                 task.setAttributes(attributes);\n             }\n         } else {"},{"sha":"1b3bce7eefaf99ff62d3db2fa15cf2a0ebd9abfa","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":15,"deletions":4,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8","patch":"@@ -348,8 +348,15 @@ public UserTO update(@RequestBody final UserMod userMod) {\n             updated.setPropByRes(pwdPropByRes);\n \n             if (!pwdPropByRes.isEmpty()) {\n-                tasks.addAll(propagationManager.getUserUpdateTaskIds(updated, changedPwd,\n-                        userMod.getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated()));\n+                Set<String> toBeExcluded = new HashSet<String>(user.getResourceNames());\n+                toBeExcluded.addAll(userMod.getResourcesToBeAdded());\n+                toBeExcluded.removeAll(pwdResourceNames);\n+                tasks.addAll(propagationManager.getUserUpdateTaskIds(\n+                        updated,\n+                        changedPwd,\n+                        userMod.getVirtualAttributesToBeRemoved(), \n+                        userMod.getVirtualAttributesToBeUpdated(), \n+                        toBeExcluded));\n             }\n \n             final PropagationByResource nonPwdPropByRes = new PropagationByResource();\n@@ -359,8 +366,12 @@ public UserTO update(@RequestBody final UserMod userMod) {\n             updated.setPropByRes(nonPwdPropByRes);\n \n             if (!nonPwdPropByRes.isEmpty()) {\n-                tasks.addAll(propagationManager.getUserUpdateTaskIds(updated, null,\n-                        userMod.getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated()));\n+                tasks.addAll(propagationManager.getUserUpdateTaskIds(\n+                        updated, \n+                        null,\n+                        userMod.getVirtualAttributesToBeRemoved(), \n+                        userMod.getVirtualAttributesToBeUpdated(), \n+                        pwdResourceNames));\n             }\n \n             updated.setPropByRes(origPropByRes);"},{"sha":"0bc4f9153169b00b5031c0b2f0041dfb36dc55f7","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":93,"deletions":14,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=8e7e89fe62a2874b18a7e6cdd02b26232ec11ca8","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.core.rest;\n \n import static org.apache.syncope.core.rest.AbstractTest.ADMIN_PWD;\n+import static org.apache.syncope.core.rest.AbstractTest.attributeMod;\n+import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n import static org.apache.syncope.core.rest.AbstractTest.getUUIDString;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n@@ -50,6 +52,7 @@\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.MappingItemTO;\n+import org.apache.syncope.common.to.MappingTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.PasswordPolicyTO;\n import org.apache.syncope.common.to.PolicyTO;\n@@ -63,6 +66,8 @@\n import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.CipherAlgorithm;\n+import org.apache.syncope.common.types.IntMappingType;\n+import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n@@ -92,6 +97,8 @@ public class UserTestITCase extends AbstractTest {\n \n     private static final String RESOURCE_NAME_TESTDB = \"resource-testdb\";\n \n+    private static final String RESOURCE_NAME_CSV = \"resource-csv\";\n+\n     private ConnObjectTO readConnectorObject(final String resourceName, final Long userId) {\n         return resourceService.getConnectorObject(resourceName, AttributableType.USER, userId);\n     }\n@@ -288,7 +295,7 @@ public void testEnforceMandatoryCondition() {\n \n     @Test\n     public void testEnforceMandatoryConditionOnDerived() {\n-        ResourceTO resourceTO = resourceService.read(\"resource-csv\");\n+        ResourceTO resourceTO = resourceService.read(RESOURCE_NAME_CSV);\n         assertNotNull(resourceTO);\n         resourceTO.setName(\"resource-csv-enforcing\");\n         resourceTO.setEnforceMandatoryCondition(true);\n@@ -1327,7 +1334,7 @@ public void issue281() {\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n-        userTO.addResource(\"resource-csv\");\n+        userTO.addResource(RESOURCE_NAME_CSV);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -1341,7 +1348,7 @@ public void issue281() {\n         final String resource = propagations.get(0).getResource();\n \n         assertNotNull(status);\n-        assertEquals(\"resource-csv\", resource);\n+        assertEquals(RESOURCE_NAME_CSV, resource);\n         assertFalse(status.isSuccessful());\n     }\n \n@@ -1373,13 +1380,13 @@ public void roleAttrPropagation() {\n \n         userTO.addMembership(membershipTO);\n \n-        userTO.addResource(\"resource-csv\");\n+        userTO.addResource(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n-        ConnObjectTO connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"ROLE\").getValues().get(0));\n     }\n@@ -1400,13 +1407,13 @@ public void membershipAttrPropagation() {\n         membershipTO.addDerivedAttribute(attributeTO(\"mderToBePropagated\", null));\n         userTO.addMembership(membershipTO);\n \n-        userTO.addResource(\"resource-csv\");\n+        userTO.addResource(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n-        ConnObjectTO connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"MEMBERSHIP\").getValues().get(0));\n     }\n@@ -1462,14 +1469,14 @@ public void issueSYNCOPE108() {\n \n         userTO.addMembership(memb13);\n \n-        userTO.addResource(\"resource-csv\");\n+        userTO.addResource(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n         assertEquals(2, actual.getMemberships().size());\n         assertEquals(1, actual.getResources().size());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n \n         // -----------------------------------\n@@ -1484,7 +1491,7 @@ public void issueSYNCOPE108() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1501,7 +1508,7 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getMemberships().size());\n         assertFalse(actual.getResources().isEmpty());\n \n-        connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1519,7 +1526,7 @@ public void issueSYNCOPE108() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            readConnectorObject(\"resource-csv\", actual.getId());\n+            readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n             fail(\"Read should not succeeed\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n@@ -2033,12 +2040,12 @@ public void mappingPurpose() {\n         userTO.addDerivedAttribute(csvuserid);\n \n         userTO.getResources().clear();\n-        userTO.addResource(\"resource-csv\");\n+        userTO.addResource(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n \n-        final ConnObjectTO connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n+        final ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNull(connObjectTO.getAttributeMap().get(\"email\"));\n     }\n \n@@ -2226,6 +2233,78 @@ public void issueSYNCOPE383() {\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n     }\n \n+    @Test\n+    public void issueSYNCOPE397() {\n+        ResourceTO csv = resourceService.read(RESOURCE_NAME_CSV);\n+        // change mapping of resource-csv\n+        MappingTO mappingTO = csv.getUmapping();\n+\n+        for (MappingItemTO item : csv.getUmapping().getItems()) {\n+            if (\"email\".equals(item.getIntAttrName())) {\n+                // unset internal attribute mail and set virtual attribute virtualdata as mapped to external email\n+                item.setIntMappingType(IntMappingType.UserVirtualSchema);\n+                item.setIntAttrName(\"virtualdata\");\n+                item.setPurpose(MappingPurpose.BOTH);\n+                item.setExtAttrName(\"email\");\n+            }\n+        }\n+\n+        resourceService.update(csv.getName(), csv);\n+        csv = resourceService.read(RESOURCE_NAME_CSV);\n+        assertNotNull(csv.getUmapping());\n+\n+        boolean found = false;\n+        for (MappingItemTO item : csv.getUmapping().getItems()) {\n+            if (\"email\".equals(item.getExtAttrName()) && \"virtualdata\".equals(item.getIntAttrName())) {\n+                found = true;\n+            }\n+        }\n+\n+        assertTrue(found);\n+\n+        // create a new user\n+        UserTO userTO = getUniqueSampleTO(\"syncope397@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+\n+        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+        userTO.addDerivedAttribute(attributeTO(\"cn\", null));\n+        userTO.addVirtualAttribute(attributeTO(\"virtualdata\", \"test@testone.org\"));\n+        // assign resource-csv to user\n+        userTO.addResource(RESOURCE_NAME_CSV);\n+        // save user\n+        UserTO created = createUser(userTO);\n+        // make std controls about user\n+        assertNotNull(created);\n+        assertTrue(RESOURCE_NAME_CSV.equals(created.getResources().iterator().next()));\n+        // update user\n+        UserTO toBeUpdated = userService.read(created.getId());\n+        UserMod userMod = new UserMod();\n+        userMod.setId(toBeUpdated.getId());\n+        userMod.setPassword(\"password2\");\n+        // assign new resource to user\n+        userMod.addResourceToBeAdded(\"ws-target-resource-2\");\n+        //modify virtual attribute\n+        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n+        userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n+        // check Syncope change password\n+\n+        PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n+        //change pwd on Syncope\n+        pwdPropRequest.addResource(\"ws-target-resource-2\");\n+        //change pwd on Syncope\n+        pwdPropRequest.setOnSyncope(true);\n+        userMod.setPwdPropRequest(pwdPropRequest);\n+        toBeUpdated = userService.update(userMod.getId(), userMod);\n+        assertNotNull(toBeUpdated);\n+        assertEquals(\"test@testoneone.com\", toBeUpdated.getVirtualAttributes().get(0).getValues().get(0));\n+        // check if propagates correctly with assertEquals on size of tasks list\n+\n+        assertEquals(2, toBeUpdated.getPropagationStatusTOs().size());\n+    }\n+\n     private boolean getBooleanAttribute(ConnObjectTO connObjectTO, String attrName) {\n         return Boolean.parseBoolean(getStringAttribute(connObjectTO, attrName));\n     }"}]}