{"sha":"d9ff2d429a0aadc6a7757199f1a8a33446038667","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ5ZmYyZDQyOWEwYWFkYzZhNzc1NzE5OWYxYThhMzM0NDYwMzg2Njc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-08-14T16:04:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-08-14T16:04:50Z"},"message":"Some Java 8 usage improvements","tree":{"sha":"e3b587689b3f47bffd0b894be11f6651a46eeca1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e3b587689b3f47bffd0b894be11f6651a46eeca1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d9ff2d429a0aadc6a7757199f1a8a33446038667","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d9ff2d429a0aadc6a7757199f1a8a33446038667","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d9ff2d429a0aadc6a7757199f1a8a33446038667","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d9ff2d429a0aadc6a7757199f1a8a33446038667/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"669864f4e332dbfbb9d8e14599ffff66f585c2dc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/669864f4e332dbfbb9d8e14599ffff66f585c2dc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/669864f4e332dbfbb9d8e14599ffff66f585c2dc"}],"stats":{"total":65,"additions":31,"deletions":34},"files":[{"sha":"4d6a4c29073fa964faf47355f50916f87dd8fd45","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -312,12 +312,12 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n         }\n \n         // 2. build connObjectKeyItem\n-        Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(init.getRight());\n-        if (!connObjectKeyItem.isPresent()) {\n-            throw new NotFoundException(\n-                    \"ConnObjectKey mapping for \" + init.getMiddle() + \" \" + anyKey + \" on resource '\" + key + \"'\");\n-        }\n-        Optional<String> connObjectKeyValue = mappingManager.getConnObjectKeyValue(any, init.getRight());\n+        MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(init.getRight()).\n+                orElseThrow(() -> new NotFoundException(\n+                \"ConnObjectKey mapping for \" + init.getMiddle() + \" \" + anyKey + \" on resource '\" + key + \"'\"));\n+        String connObjectKeyValue = mappingManager.getConnObjectKeyValue(any, init.getRight()).\n+                orElseThrow(() -> new NotFoundException(\n+                \"ConnObjectKey value for \" + init.getMiddle() + \" \" + anyKey + \" on resource '\" + key + \"'\"));\n \n         // 3. determine attributes to query\n         Set<MappingItem> linkinMappingItems = virSchemaDAO.findByProvision(init.getRight()).stream().\n@@ -330,12 +330,12 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n         Connector connector = connFactory.getConnector(init.getLeft());\n         ConnectorObject connectorObject = connector.getObject(\n                 init.getRight().getObjectClass(),\n-                AttributeBuilder.build(connObjectKeyItem.get().getExtAttrName(), connObjectKeyValue.get()),\n+                AttributeBuilder.build(connObjectKeyItem.getExtAttrName(), connObjectKeyValue),\n                 init.getRight().isIgnoreCaseMatch(),\n                 MappingUtils.buildOperationOptions(mapItems));\n         if (connectorObject == null) {\n             throw new NotFoundException(\n-                    \"Object \" + connObjectKeyValue.get() + \" with class \" + init.getRight().getObjectClass()\n+                    \"Object \" + connObjectKeyValue + \" with class \" + init.getRight().getObjectClass()\n                     + \" not found on resource \" + key);\n         }\n "},{"sha":"4fc8fec61bbbafd980ab4beecb52d5f7dcd1c385","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -207,7 +207,7 @@ public Pair<String, Set<Attribute>> prepareAttrs(\n             }\n         }\n \n-        Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n+        Optional<? extends MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n         if (connObjectKeyItem.isPresent()) {\n             Attribute connObjectKeyExtAttr = AttributeUtil.find(connObjectKeyItem.get().getExtAttrName(), attributes);\n             if (connObjectKeyExtAttr != null) {\n@@ -656,7 +656,7 @@ public List<PlainAttrValue> getIntValues(\n     }\n \n     private String getGroupOwnerValue(final Provision provision, final Any<?> any) {\n-        Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n+        Optional<? extends MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n \n         Pair<String, Attribute> preparedAttr = null;\n         if (connObjectKeyItem.isPresent()) {"},{"sha":"d951a4cabf628075ef1206b570de0015069ff755","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandlerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -99,7 +99,7 @@ private Map<VirSchema, List<String>> getValues(final Any<?> any, final Set<VirSc\n         toRead.forEach((provision, schemasToRead) -> {\n             LOG.debug(\"About to read from {}: {}\", provision, schemasToRead);\n \n-            Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n+            Optional<? extends MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n             String connObjectKeyValue = connObjectKeyItem.isPresent()\n                     ? mappingManager.getConnObjectKeyValue(any, provision).orElse(null)\n                     : null;"},{"sha":"28f44afe1ba1f68834c3ae00cf34826358465c8e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":12,"deletions":15,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -181,7 +181,7 @@ private void fillAttr(\n                 ? values\n                 : (values.isEmpty()\n                 ? Collections.<String>emptyList()\n-                : Collections.singletonList(values.iterator().next()));\n+                : Collections.singletonList(values.get(0)));\n \n         valuesProvided.forEach(value -> {\n             if (StringUtils.isBlank(value)) {\n@@ -313,7 +313,7 @@ protected void processAttrPatch(\n                 List<String> valuesToBeAdded = patch.getAttrTO().getValues();\n                 if (!valuesToBeAdded.isEmpty()\n                         && (!schema.isUniqueConstraint() || attr.getUniqueValue() == null\n-                        || !valuesToBeAdded.iterator().next().equals(attr.getUniqueValue().getValueAsString()))) {\n+                        || !valuesToBeAdded.get(0).equals(attr.getUniqueValue().getValueAsString()))) {\n \n                     fillAttr(valuesToBeAdded, anyUtils, schema, attr, invalidValues);\n                 }\n@@ -633,21 +633,18 @@ protected MembershipTO getMembershipTO(\n     protected Map<String, String> getConnObjectKeys(final Any<?> any, final AnyUtils anyUtils) {\n         Map<String, String> connObjectKeys = new HashMap<>();\n \n-        Iterable<? extends ExternalResource> iterable = anyUtils.getAllResources(any);\n-        anyUtils.getAllResources(any).forEach(resource -> {\n-            Optional<? extends Provision> provision = resource.getProvision(any.getType());\n-            if (provision.isPresent() && provision.get().getMapping() != null) {\n-                Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision.get());\n-                if (!connObjectKeyItem.isPresent()) {\n-                    throw new NotFoundException(\n+        anyUtils.getAllResources(any).\n+                forEach(resource -> resource.getProvision(any.getType()).\n+                filter(provision -> provision.getMapping() != null).\n+                ifPresent(provision -> {\n+                    MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision).\n+                            orElseThrow(() -> new NotFoundException(\n                             \"ConnObjectKey mapping for \" + any.getType().getKey() + \" \" + any.getKey()\n-                            + \" on resource '\" + resource.getKey() + \"'\");\n-                }\n+                            + \" on resource '\" + resource.getKey() + \"'\"));\n \n-                mappingManager.getConnObjectKeyValue(any, provision.get()).\n-                        ifPresent(connObjectKey -> connObjectKeys.put(resource.getKey(), connObjectKey));\n-            }\n-        });\n+                    mappingManager.getConnObjectKeyValue(any, provision).\n+                            ifPresent(value -> connObjectKeys.put(resource.getKey(), value));\n+                }));\n \n         return connObjectKeys;\n     }"},{"sha":"91d440e2e9da6163de3344e7d137d26ba7255fb6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReconciliationReportlet.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -286,7 +286,7 @@ private void doExtract(final ContentHandler handler, final List<? extends Any<?>\n             AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n             anyUtils.getAllResources(any).forEach(resource -> {\n                 Provision provision = resource.getProvision(any.getType()).orElse(null);\n-                Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n+                Optional<? extends MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n                 final String connObjectKeyValue = connObjectKeyItem.isPresent()\n                         ? mappingManager.getConnObjectKeyValue(any, provision).get()\n                         : StringUtils.EMPTY;"},{"sha":"184fc280ae0ba34274bb6398b101468e54866b18","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -616,7 +616,7 @@ protected ConnectorObject getRemoteObject(\n                 map(schema -> schema.asLinkingMappingItem()).collect(Collectors.toSet());\n \n         ConnectorObject obj = null;\n-        Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n+        Optional<? extends MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n         if (connObjectKeyItem.isPresent()) {\n             try {\n                 obj = connector.getObject("},{"sha":"2344c69614fef46ecfb49c99e7bf72c76a9d48be","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -174,7 +174,7 @@ private List<String> findByConnObjectKey(\n \n         String connObjectKey = null;\n \n-        Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n+        Optional<? extends MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n         if (connObjectKeyItem.isPresent()) {\n             Attribute connObjectKeyAttr = connObj.getAttributeByName(connObjectKeyItem.get().getExtAttrName());\n             if (connObjectKeyAttr != null) {"},{"sha":"65a34b7cfa15e0c7b1352ea632585b0b8b5cbc33","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushUtils.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -108,7 +108,7 @@ public List<ConnectorObject> findByConnObjectKey(\n             final Any<?> any,\n             final Provision provision) {\n \n-        Optional<MappingItem> connObjectKey = MappingUtils.getConnObjectKeyItem(provision);\n+        Optional<? extends MappingItem> connObjectKey = MappingUtils.getConnObjectKeyItem(provision);\n         Optional<String> connObjectKeyValue = mappingManager.getConnObjectKeyValue(any, provision);\n \n         ConnectorObject obj = null;"},{"sha":"5d0c9d261fddfa70cbf8672b639f5da212d687bc","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/MappingUtils.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9ff2d429a0aadc6a7757199f1a8a33446038667/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java?ref=d9ff2d429a0aadc6a7757199f1a8a33446038667","patch":"@@ -55,15 +55,15 @@ public final class MappingUtils {\n \n     private static final Logger LOG = LoggerFactory.getLogger(MappingUtils.class);\n \n-    public static Optional<MappingItem> getConnObjectKeyItem(final Provision provision) {\n+    public static Optional<? extends MappingItem> getConnObjectKeyItem(final Provision provision) {\n         Mapping mapping = null;\n         if (provision != null) {\n             mapping = provision.getMapping();\n         }\n \n-        return Optional.ofNullable(mapping == null\n-                ? null\n-                : mapping.getConnObjectKeyItem().get());\n+        return mapping == null\n+                ? Optional.empty()\n+                : mapping.getConnObjectKeyItem();\n     }\n \n     public static List<? extends Item> getPropagationItems(final List<? extends Item> items) {"}]}