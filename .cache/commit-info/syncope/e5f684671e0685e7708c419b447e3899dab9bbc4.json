{"sha":"e5f684671e0685e7708c419b447e3899dab9bbc4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU1ZjY4NDY3MWUwNjg1ZTc3MDhjNDE5YjQ0N2UzODk5ZGFiOWJiYzQ=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-09-04T15:43:10Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-09-04T15:43:10Z"},"message":"[SYNCOPE-546] improved model-typing in date time field panel, solved date deletion problem\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1622502 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"35641f3212d4f222483964f658549bd075362a75","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/35641f3212d4f222483964f658549bd075362a75"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e5f684671e0685e7708c419b447e3899dab9bbc4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5f684671e0685e7708c419b447e3899dab9bbc4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e5f684671e0685e7708c419b447e3899dab9bbc4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5f684671e0685e7708c419b447e3899dab9bbc4/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"b3bbcb3c9b25d1fce285366e621fd9865874230b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b3bbcb3c9b25d1fce285366e621fd9865874230b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b3bbcb3c9b25d1fce285366e621fd9865874230b"}],"stats":{"total":65,"additions":30,"deletions":35},"files":[{"sha":"f8b899632904b271d3aab791127707d81fc2b718","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=e5f684671e0685e7708c419b447e3899dab9bbc4","patch":"@@ -34,7 +34,7 @@ public class AjaxCheckBoxPanel extends FieldPanel<Boolean> {\n \n     public AjaxCheckBoxPanel(final String id, final String name, final IModel<Boolean> model) {\n \n-        super(id, name, model);\n+        super(id, model);\n \n         field = new CheckBox(\"checkboxField\", model);\n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));"},{"sha":"c1512941813d12998ba87c6fd37d8b056814718d","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=e5f684671e0685e7708c419b447e3899dab9bbc4","patch":"@@ -39,7 +39,7 @@ public AjaxDropDownChoicePanel(final String id, final String name, final IModel<\n     }\n \n     public AjaxDropDownChoicePanel(final String id, final String name, final IModel<T> model, boolean enableOnBlur) {\n-        super(id, name, model);\n+        super(id, model);\n \n         field = new DropDownChoice<T>(\n                 \"dropDownChoiceField\", model, Collections.<T>emptyList(), new ChoiceRenderer<T>());"},{"sha":"a34c2d1132865bdb4284f1b775cdeef66462aad3","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxNumberFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java?ref=e5f684671e0685e7708c419b447e3899dab9bbc4","patch":"@@ -31,7 +31,7 @@ public class AjaxNumberFieldPanel extends FieldPanel<Number> {\n \n     public AjaxNumberFieldPanel(final String id, final String name, final IModel<Number> model, final Class reference) {\n \n-        super(id, name, model);\n+        super(id, model);\n \n         field = new TextField<Number>(\"numberField\", model, reference);\n "},{"sha":"b70fa28f91aba77efd8804a16c2a3e6b5de00a28","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=e5f684671e0685e7708c419b447e3899dab9bbc4","patch":"@@ -31,7 +31,7 @@ public class AjaxPasswordFieldPanel extends FieldPanel<String> {\n \n     public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model) {\n \n-        super(id, name, model);\n+        super(id, model);\n \n         field = new PasswordTextField(\"passwordField\", model);\n "},{"sha":"efcad4cb3d3e931c7cf97e26cd5e832748ef48fa","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=e5f684671e0685e7708c419b447e3899dab9bbc4","patch":"@@ -41,7 +41,7 @@ public class AjaxTextFieldPanel extends FieldPanel<String> {\n \n     public AjaxTextFieldPanel(final String id, final String name, final IModel<String> model) {\n \n-        super(id, name, model);\n+        super(id, model);\n \n         final AutoCompleteSettings settings = new AutoCompleteSettings();\n         settings.setShowCompleteListOnFocusGain(true);"},{"sha":"aa8b4ad802b89adfe1aa3e9002377397f253d7bc","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/DateFieldPanel.java","status":"modified","additions":18,"deletions":14,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=e5f684671e0685e7708c419b447e3899dab9bbc4","patch":"@@ -35,15 +35,18 @@ public class DateFieldPanel extends FieldPanel<Date> implements Cloneable {\n \n     private static final long serialVersionUID = -428975732068281726L;\n \n+    protected final String name;\n+\n     protected final String datePattern;\n \n     protected DateFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n-        super(id, name, model);\n+        super(id, model);\n+        this.name = name;\n         this.datePattern = datePattern;\n     }\n \n     @Override\n-    public FieldPanel setNewModel(final ListItem item) {\n+    public FieldPanel<Date> setNewModel(final ListItem item) {\n         final SimpleDateFormat formatter;\n \n         if (datePattern != null) {\n@@ -52,12 +55,12 @@ public FieldPanel setNewModel(final ListItem item) {\n             formatter = new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault());\n         }\n \n-        IModel<Date> model = new Model() {\n+        IModel<Date> model = new Model<Date>() {\n \n             private static final long serialVersionUID = 6799404673615637845L;\n \n             @Override\n-            public Serializable getObject() {\n+            public Date getObject() {\n                 Date date = null;\n \n                 final Object obj = item.getModelObject();\n@@ -83,9 +86,10 @@ public Serializable getObject() {\n             }\n \n             @Override\n-            public void setObject(final Serializable object) {\n-                if (object instanceof Date) {\n-                    item.setModelObject(formatter.format((Date) object));\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final Date object) {\n+                if (object != null) {\n+                    item.setModelObject(formatter.format(object));\n                 } else {\n                     item.setModelObject(null);\n                 }\n@@ -97,7 +101,7 @@ public void setObject(final Serializable object) {\n     }\n \n     @Override\n-    public FieldPanel setNewModel(final List<Serializable> list) {\n+    public FieldPanel<Date> setNewModel(final List<Serializable> list) {\n         final SimpleDateFormat formatter;\n \n         if (datePattern != null) {\n@@ -106,12 +110,12 @@ public FieldPanel setNewModel(final List<Serializable> list) {\n             formatter = new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault());\n         }\n \n-        setNewModel(new Model() {\n+        setNewModel(new Model<Date>() {\n \n             private static final long serialVersionUID = 527651414610325237L;\n \n             @Override\n-            public Serializable getObject() {\n+            public Date getObject() {\n                 Date date = null;\n \n                 if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n@@ -127,10 +131,10 @@ public Serializable getObject() {\n             }\n \n             @Override\n-            public void setObject(final Serializable object) {\n-                if (object != null && object instanceof Date) {\n-                    list.clear();\n-                    list.add((String) formatter.format((Date) object));\n+            public void setObject(final Date object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(formatter.format(object));\n                 }\n             }\n         });"},{"sha":"0dcf36cfa1b138c59d83a90e5197b700fa899a05","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/DateTextFieldPanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java?ref=e5f684671e0685e7708c419b447e3899dab9bbc4","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.wicket.markup.html.form;\n \n-\n import java.util.Date;\n import org.apache.syncope.console.commons.Constants;\n \n@@ -53,7 +52,7 @@ protected void onUpdate(AjaxRequestTarget art) {\n \n         field.add(getDatePicker());\n \n-        add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n     }\n \n     /**\n@@ -77,7 +76,7 @@ protected boolean enableMonthYearSelection() {\n \n     @Override\n     public FieldPanel clone() {\n-        final FieldPanel panel = new DateTextFieldPanel(id, name, new Model(), datePattern);\n+        final FieldPanel panel = new DateTextFieldPanel(getId(), name, new Model<Date>(), datePattern);\n         panel.setRequired(isRequired());\n         panel.setReadOnly(isReadOnly());\n         panel.setTitle(title);"},{"sha":"523d629971665c28b4a56d12dd2d629b19769b72","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":5,"deletions":13,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5f684671e0685e7708c419b447e3899dab9bbc4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=e5f684671e0685e7708c419b447e3899dab9bbc4","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.FormComponent;\n@@ -36,17 +37,14 @@\n \n     final protected String id;\n \n-    final protected String name;\n-\n     protected String title = null;\n \n     protected boolean isRequiredLabelAdded = false;\n \n-    public FieldPanel(final String id, final String name, final IModel<T> model) {\n+    public FieldPanel(final String id, final IModel<T> model) {\n         super(id, model);\n \n         this.id = id;\n-        this.name = name;\n \n         final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n         add(fragment);\n@@ -162,16 +160,10 @@ public void setObject(final Serializable object) {\n     }\n \n     @Override\n+    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n     public FieldPanel clone() {\n-        final FieldPanel panel;\n-        try {\n-            panel = this.getClass().getConstructor(new Class[]{String.class, String.class, IModel.class})\n-                    .newInstance(id, name, new Model(null));\n-        } catch (Exception e) {\n-            LOG.error(\"Error cloning field panel\", e);\n-            return null;\n-        }\n-\n+        final FieldPanel panel = SerializationUtils.clone(this);\n+        panel.setModelObject(null);\n         panel.setRequired(isRequired());\n         panel.setReadOnly(isReadOnly());\n         panel.setTitle(title);"}]}