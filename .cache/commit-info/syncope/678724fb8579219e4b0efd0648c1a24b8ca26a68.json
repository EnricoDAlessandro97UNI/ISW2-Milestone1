{"sha":"678724fb8579219e4b0efd0648c1a24b8ca26a68","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY3ODcyNGZiODU3OTIxOWU0YjBlZmQwNjQ4YzFhMjRiOGNhMjZhNjg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2020-06-11T08:32:21Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-06-11T08:43:11Z"},"message":"Upgrading Flowable and disabling Shell Service Tasks (#194)","tree":{"sha":"f5950755d57b390eb2ac49ce6114bc2e2cb5305b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f5950755d57b390eb2ac49ce6114bc2e2cb5305b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/678724fb8579219e4b0efd0648c1a24b8ca26a68","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/678724fb8579219e4b0efd0648c1a24b8ca26a68","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/678724fb8579219e4b0efd0648c1a24b8ca26a68","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/678724fb8579219e4b0efd0648c1a24b8ca26a68/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0da7a8371371a2beef832c70d1b784c2d02a430e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0da7a8371371a2beef832c70d1b784c2d02a430e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0da7a8371371a2beef832c70d1b784c2d02a430e"}],"stats":{"total":105,"additions":95,"deletions":10},"files":[{"sha":"64003bc186498d8fef2f982a8869490fd454b2a8","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/WorkflowFlowableContext.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678724fb8579219e4b0efd0648c1a24b8ca26a68/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2FWorkflowFlowableContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678724fb8579219e4b0efd0648c1a24b8ca26a68/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2FWorkflowFlowableContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2FWorkflowFlowableContext.java?ref=678724fb8579219e4b0efd0648c1a24b8ca26a68","patch":"@@ -24,6 +24,7 @@\n import org.apache.syncope.core.flowable.impl.FlowableUserRequestHandler;\n import org.apache.syncope.core.flowable.impl.FlowableWorkflowUtils;\n import org.apache.syncope.core.flowable.support.DomainProcessEngineConfiguration;\n+import org.apache.syncope.core.flowable.support.ShellServiceTaskDisablingBpmnParseHandler;\n import org.apache.syncope.core.flowable.support.SyncopeEntitiesVariableType;\n import org.apache.syncope.core.flowable.support.SyncopeFormHandlerHelper;\n import org.apache.syncope.core.flowable.support.SyncopeIdmIdentityService;\n@@ -32,7 +33,7 @@\n import org.flowable.common.engine.impl.AbstractEngineConfiguration;\n import org.flowable.common.engine.impl.cfg.IdGenerator;\n import org.flowable.common.engine.impl.history.HistoryLevel;\n-import org.flowable.engine.impl.db.DbIdGenerator;\n+import org.flowable.common.engine.impl.persistence.StrongUuidGenerator;\n import org.flowable.idm.spring.SpringIdmEngineConfiguration;\n import org.flowable.idm.spring.configurator.SpringIdmEngineConfigurator;\n import org.springframework.beans.factory.annotation.Value;\n@@ -106,18 +107,10 @@ public SyncopeEntitiesVariableType syncopeEntitiesVariableType() {\n         return new SyncopeEntitiesVariableType();\n     }\n \n-    /**\n-     * This is called to generate unique identifiers for database entities used by Flowable.\n-     *\n-     * Consider to switch to {@link org.flowable.common.engine.impl.persistence.StrongUuidGenerator} in\n-     * high-demanding production environments.\n-     *\n-     * @return {@link IdGenerator} used by Flowable\n-     */\n     @ConditionalOnMissingBean\n     @Bean\n     public IdGenerator idGenerator() {\n-        return new DbIdGenerator();\n+        return new StrongUuidGenerator();\n     }\n \n     @ConditionalOnMissingBean\n@@ -133,6 +126,7 @@ public DomainProcessEngineConfiguration processEngineConfiguration() {\n         conf.setCustomPreVariableTypes(List.of(syncopeEntitiesVariableType()));\n         conf.setFormHandlerHelper(syncopeFormHandlerHelper());\n         conf.setIdGenerator(idGenerator());\n+        conf.setPreBpmnParseHandlers(List.of(new ShellServiceTaskDisablingBpmnParseHandler()));\n         return conf;\n     }\n "},{"sha":"deacc9d8d9f2d19b9b7796440c0357487ecda7b7","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/support/ShellServiceTaskDisablingBpmnParseHandler.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678724fb8579219e4b0efd0648c1a24b8ca26a68/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FShellServiceTaskDisablingBpmnParseHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678724fb8579219e4b0efd0648c1a24b8ca26a68/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FShellServiceTaskDisablingBpmnParseHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FShellServiceTaskDisablingBpmnParseHandler.java?ref=678724fb8579219e4b0efd0648c1a24b8ca26a68","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.flowable.support;\n+\n+import org.flowable.bpmn.model.BaseElement;\n+import org.flowable.bpmn.model.ServiceTask;\n+import org.flowable.engine.impl.bpmn.parser.BpmnParse;\n+import org.flowable.engine.impl.bpmn.parser.handler.AbstractBpmnParseHandler;\n+\n+public class ShellServiceTaskDisablingBpmnParseHandler extends AbstractBpmnParseHandler<ServiceTask> {\n+\n+    @Override\n+    protected Class<? extends BaseElement> getHandledType() {\n+        return ServiceTask.class;\n+    }\n+\n+    @Override\n+    protected void executeParse(final BpmnParse bpmnParse, final ServiceTask element) {\n+        if (ServiceTask.SHELL_TASK.equals(element.getType())) {\n+            throw new IllegalArgumentException(\"Shell Service Tasks are not allowed\");\n+        }\n+    }\n+}"},{"sha":"b37515610f87b067472437c767ac27e5cac0232e","filename":"fit/core-reference/src/main/resources/invalidRequest.bpmn20.xml","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678724fb8579219e4b0efd0648c1a24b8ca26a68/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FinvalidRequest.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678724fb8579219e4b0efd0648c1a24b8ca26a68/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FinvalidRequest.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FinvalidRequest.bpmn20.xml?ref=678724fb8579219e4b0efd0648c1a24b8ca26a68","patch":"@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\n+             xmlns:activiti=\"http://activiti.org/bpmn\" targetNamespace=\"Examples\">\n+  <process id=\"invalid\" name=\"invalid\" isExecutable=\"true\">\n+    <startEvent id=\"theStart\" />\n+    <sequenceFlow sourceRef=\"theStart\" targetRef=\"shellEcho\" />\n+    <serviceTask id=\"shellEcho\" activiti:type=\"shell\">\n+      <extensionElements>\n+        <activiti:field name=\"command\" stringValue=\"cmd\" />\n+        <activiti:field name=\"arg1\" stringValue=\"/c calc.exe\" />\n+        <activiti:field name=\"outputVariable\" stringValue=\"resultVar\"/>\n+      </extensionElements>\n+    </serviceTask>\n+    <sequenceFlow sourceRef=\"shellEcho\" targetRef=\"theTask\" />\n+    <userTask id=\"theTask\" name=\"keep-alive task\" />\n+    <sequenceFlow sourceRef=\"theTask\" targetRef=\"theEnd\" />\n+    <endEvent id=\"theEnd\" />\n+  </process>\n+</definitions>"},{"sha":"ae9db455e1ab5f4d40f3006320462cf7a8b6ecf4","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserRequestITCase.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678724fb8579219e4b0efd0648c1a24b8ca26a68/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserRequestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678724fb8579219e4b0efd0648c1a24b8ca26a68/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserRequestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserRequestITCase.java?ref=678724fb8579219e4b0efd0648c1a24b8ca26a68","patch":"@@ -22,6 +22,7 @@\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n import static org.junit.jupiter.api.Assumptions.assumeFalse;\n import static org.junit.jupiter.api.Assumptions.assumeTrue;\n \n@@ -32,12 +33,14 @@\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.rest.api.beans.UserRequestFormQuery;\n import org.apache.syncope.common.rest.api.beans.UserRequestQuery;\n import org.apache.syncope.common.rest.api.service.UserRequestService;\n@@ -293,4 +296,16 @@ public void addVariablesToUserRequestAtStart() {\n         assertTrue(client.getService(UserRequestService.class).\n                 list(new UserRequestQuery.Builder().user(user.getKey()).build()).getResult().isEmpty());\n     }\n+\n+    @Test\n+    public void invalid() throws IOException {\n+        WebClient.client(bpmnProcessService).type(MediaType.APPLICATION_XML_TYPE);\n+        try {\n+            bpmnProcessService.set(\"invalid\",\n+                    IOUtils.toString(UserRequestITCase.class.getResourceAsStream(\"/invalidRequest.bpmn20.xml\")));\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.Workflow, e.getType());\n+        }\n+    }\n }"}]}