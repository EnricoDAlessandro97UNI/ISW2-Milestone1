{"sha":"7f37c029191d267a5a90bf9239e8166e74252e91","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdmMzdjMDI5MTkxZDI2N2E1YTkwYmY5MjM5ZTgxNjZlNzQyNTJlOTE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-07-22T11:18:39Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-07-22T11:18:39Z"},"message":"[SYNCOPE-286] Removing Spring MVC from admin console\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1505658 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bd46c79b878c49ad9af29c79f878a4fa592edc01","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bd46c79b878c49ad9af29c79f878a4fa592edc01"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7f37c029191d267a5a90bf9239e8166e74252e91","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7f37c029191d267a5a90bf9239e8166e74252e91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7f37c029191d267a5a90bf9239e8166e74252e91","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7f37c029191d267a5a90bf9239e8166e74252e91/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"93384cbf497dceaf888bdc108f61eb1887bf7cbb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93384cbf497dceaf888bdc108f61eb1887bf7cbb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/93384cbf497dceaf888bdc108f61eb1887bf7cbb"}],"stats":{"total":423,"additions":160,"deletions":263},"files":[{"sha":"2bc4e3ae401ac3d4f4e61316bf0699f77e70a7d9","filename":"client/src/main/java/org/apache/syncope/client/rest/RestClientExceptionMapper.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.client.rest.utils;\r\n+package org.apache.syncope.client.rest;\r\n \r\n import java.security.AccessControlException;\r\n import java.util.ArrayList;\r","previous_filename":"client/src/main/java/org/apache/syncope/client/rest/utils/RestClientExceptionMapper.java"},{"sha":"89c75c3e6369bf6b435493be0b1b40752e3dc471","filename":"client/src/main/java/org/apache/syncope/client/rest/RestClientFactoryBean.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.rest;\n+\n+import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+\n+public class RestClientFactoryBean extends JAXRSClientFactoryBean {\n+\n+    private String contentType;\n+\n+    public RestClientFactoryBean() {\n+        super();\n+    }\n+\n+    public void setContentType(final String contentType) {\n+        this.contentType = contentType;\n+    }\n+\n+    public String getContentType() {\n+        return contentType;\n+    }\n+\n+    public <T> T createServiceInstance(final Class<T> serviceClass, final String username, final String password) {\n+        setUsername(username);\n+        setPassword(password);\n+        setServiceClass(serviceClass);\n+        final T serviceInstance = create(serviceClass);\n+        WebClient.client(serviceInstance).type(getContentType()).accept(getContentType());\n+        return serviceInstance;\n+    }\n+}"},{"sha":"47b980c9720a94424839b5d07aa6cacc74130866","filename":"common/pom.xml","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/common%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/common%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fpom.xml?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -52,23 +52,15 @@ under the License.\n       <artifactId>commons-lang3</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-webmvc</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-web</artifactId>\n     </dependency>\n-\n+    \n     <dependency>\n       <groupId>com.fasterxml.jackson.core</groupId>\n       <artifactId>jackson-databind</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>com.fasterxml.jackson.module</groupId>\n-      <artifactId>jackson-module-jaxb-annotations</artifactId>\n-    </dependency>\n       \n     <dependency>\n       <groupId>ch.qos.logback</groupId>"},{"sha":"3b9fcf107eb80e2d054a90bb8cb952784c504b34","filename":"common/src/main/java/org/apache/syncope/common/util/CollectionWrapper.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -33,19 +33,13 @@\n import org.apache.syncope.common.to.ValidatorTO;\r\n import org.apache.syncope.common.types.AuditLoggerName;\r\n import org.apache.syncope.common.types.SyncopeLoggerLevel;\r\n-import org.springframework.web.servlet.ModelAndView;\r\n \r\n public final class CollectionWrapper {\r\n \r\n     private CollectionWrapper() {\r\n         // empty constructor for static utility class\r\n     }\r\n \r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public static List<String> wrapStrings(final ModelAndView modelAndView) {\r\n-        return (List<String>) modelAndView.getModel().values().iterator().next();\r\n-    }\r\n-\r\n     public static Set<EntitlementTO> wrap(final Collection<String> collection) {\r\n         Set<EntitlementTO> respons = new HashSet<EntitlementTO>();\r\n         for (String e : collection) {\r"},{"sha":"bf51f78f6f34861cae961c7a020908d88789e05a","filename":"console/pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -113,12 +113,12 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.springframework</groupId>\n-      <artifactId>spring-webmvc</artifactId>\n+      <artifactId>spring-web</artifactId>\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.httpcomponents</groupId>\n-      <artifactId>httpclient</artifactId>\n+      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n+      <artifactId>jackson-jaxrs-json-provider</artifactId>\n     </dependency>\n \n     <!-- TEST -->"},{"sha":"9fb2302a9cf9c2af6a2bee8abfef4b5d8bfe2466","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":18,"deletions":71,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -20,48 +20,15 @@\n \n import java.text.DateFormat;\n import java.util.Arrays;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Locale;\n-import java.util.Map;\n-import org.apache.syncope.client.services.proxy.ConfigurationServiceProxy;\n-import org.apache.syncope.client.services.proxy.ConnectorServiceProxy;\n-import org.apache.syncope.client.services.proxy.EntitlementServiceProxy;\n-import org.apache.syncope.client.services.proxy.LoggerServiceProxy;\n-import org.apache.syncope.client.services.proxy.NotificationServiceProxy;\n-import org.apache.syncope.client.services.proxy.PolicyServiceProxy;\n-import org.apache.syncope.client.services.proxy.ReportServiceProxy;\n-import org.apache.syncope.client.services.proxy.ResourceServiceProxy;\n-import org.apache.syncope.client.services.proxy.RoleServiceProxy;\n-import org.apache.syncope.client.services.proxy.SchemaServiceProxy;\n-import org.apache.syncope.client.services.proxy.SpringServiceProxy;\n-import org.apache.syncope.client.services.proxy.TaskServiceProxy;\n-import org.apache.syncope.client.services.proxy.UserRequestServiceProxy;\n-import org.apache.syncope.client.services.proxy.UserServiceProxy;\n-import org.apache.syncope.client.services.proxy.UserWorkflowServiceProxy;\n-import org.apache.syncope.client.services.proxy.WorkflowServiceProxy;\n-import org.apache.syncope.common.services.ConfigurationService;\n-import org.apache.syncope.common.services.ConnectorService;\n-import org.apache.syncope.common.services.EntitlementService;\n-import org.apache.syncope.common.services.LoggerService;\n-import org.apache.syncope.common.services.NotificationService;\n-import org.apache.syncope.common.services.PolicyService;\n-import org.apache.syncope.common.services.ReportService;\n-import org.apache.syncope.common.services.ResourceService;\n-import org.apache.syncope.common.services.RoleService;\n-import org.apache.syncope.common.services.SchemaService;\n-import org.apache.syncope.common.services.TaskService;\n-import org.apache.syncope.common.services.UserRequestService;\n-import org.apache.syncope.common.services.UserService;\n-import org.apache.syncope.common.services.UserWorkflowService;\n-import org.apache.syncope.common.services.WorkflowService;\n+import org.apache.syncope.client.rest.RestClientFactoryBean;\n import org.apache.wicket.Session;\n import org.apache.wicket.authroles.authorization.strategies.role.Roles;\n import org.apache.wicket.protocol.http.WebApplication;\n import org.apache.wicket.protocol.http.WebSession;\n import org.apache.wicket.request.Request;\n import org.springframework.context.ApplicationContext;\n-import org.springframework.web.client.RestTemplate;\n import org.springframework.web.context.support.WebApplicationContextUtils;\n \n /**\n@@ -71,20 +38,18 @@ public class SyncopeSession extends WebSession {\n \n     private static final long serialVersionUID = 7743446298924805872L;\n \n-    public static final List<Locale> SUPPORTED_LOCALES = Arrays.asList(new Locale[]{\n+    public static final List<Locale> SUPPORTED_LOCALES = Arrays.asList(new Locale[] {\n         Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\")});\n \n-    private String userId;\n+    private String username;\n+\n+    private String password;\n \n     private String version;\n \n     private Roles roles = new Roles();\n \n-    protected String baseURL;\n-\n-    private final RestTemplate restTemplate;\n-\n-    private final Map<Class<?>, SpringServiceProxy> services = new HashMap<Class<?>, SpringServiceProxy>();\n+    private final RestClientFactoryBean restClientFactory;\n \n     public static SyncopeSession get() {\n         return (SyncopeSession) Session.get();\n@@ -96,45 +61,27 @@ public SyncopeSession(final Request request) {\n         final ApplicationContext applicationContext =\n                 WebApplicationContextUtils.getWebApplicationContext(WebApplication.get().getServletContext());\n \n-        restTemplate = applicationContext.getBean(RestTemplate.class);\n-        baseURL = applicationContext.getBean(\"baseURL\", String.class);\n-\n-        setupRESTClients();\n+        restClientFactory = applicationContext.getBean(RestClientFactoryBean.class);\n     }\n \n-    private void setupRESTClients() {\n-        services.put(ConfigurationService.class, new ConfigurationServiceProxy(baseURL, restTemplate));\n-        services.put(ConnectorService.class, new ConnectorServiceProxy(baseURL, restTemplate));\n-        services.put(EntitlementService.class, new EntitlementServiceProxy(baseURL, restTemplate));\n-        services.put(LoggerService.class, new LoggerServiceProxy(baseURL, restTemplate));\n-        services.put(NotificationService.class, new NotificationServiceProxy(baseURL, restTemplate));\n-        services.put(PolicyService.class, new PolicyServiceProxy(baseURL, restTemplate));\n-        services.put(ReportService.class, new ReportServiceProxy(baseURL, restTemplate));\n-        services.put(ResourceService.class, new ResourceServiceProxy(baseURL, restTemplate));\n-        services.put(RoleService.class, new RoleServiceProxy(baseURL, restTemplate));\n-        services.put(SchemaService.class, new SchemaServiceProxy(baseURL, restTemplate));\n-        services.put(TaskService.class, new TaskServiceProxy(baseURL, restTemplate));\n-        services.put(UserRequestService.class, new UserRequestServiceProxy(baseURL, restTemplate));\n-        services.put(UserService.class, new UserServiceProxy(baseURL, restTemplate));\n-        services.put(UserWorkflowService.class, new UserWorkflowServiceProxy(baseURL, restTemplate));\n-        services.put(WorkflowService.class, new WorkflowServiceProxy(baseURL, restTemplate));\n+    public <T> T getService(final Class<T> service) {\n+        return restClientFactory.createServiceInstance(service, username, password);\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    public <T> T getService(final Class<T> service) {\n-        return (T) services.get(service);\n+    public <T> T getService(final Class<T> service, final String username, final String password) {\n+        return restClientFactory.createServiceInstance(service, username, password);\n     }\n \n-    public RestTemplate getRestTemplate() {\n-        return restTemplate;\n+    public String getUsername() {\n+        return username;\n     }\n \n-    public String getUserId() {\n-        return userId;\n+    public void setUsername(final String username) {\n+        this.username = username;\n     }\n \n-    public void setUserId(final String userId) {\n-        this.userId = userId;\n+    public void setPassword(final String password) {\n+        this.password = password;\n     }\n \n     public String getVersion() {\n@@ -155,7 +102,7 @@ public Roles getEntitlements() {\n     }\n \n     public boolean isAuthenticated() {\n-        return getUserId() != null;\n+        return getUsername() != null;\n     }\n \n     public boolean hasAnyRole(final Roles roles) {"},{"sha":"15a2b0e33b12d015aada42d0015486aac5ba31b2","filename":"console/src/main/java/org/apache/syncope/console/commons/PreferenceManager.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -54,15 +54,16 @@ public class PreferenceManager {\n \n     private static final List<Integer> PAGINATOR_CHOICES = Arrays.asList(new Integer[]{10, 25, 50});\n \n-    @Autowired\n-    private ObjectMapper mapper;\n+    private final ObjectMapper mapper;\n \n     private final CookieUtils cookieUtils;\n \n     public PreferenceManager() {\n+        this.mapper = new ObjectMapper();\n+        \n         CookieDefaults cookieDefaults = new CookieDefaults();\n         cookieDefaults.setMaxAge(ONE_YEAR_TIME);\n-        cookieUtils = new CookieUtils(cookieDefaults);\n+        this.cookieUtils = new CookieUtils(cookieDefaults);\n     }\n \n     public List<Integer> getPaginatorChoices() {"},{"sha":"38d2c3a003233417349af59fdbafc9af2cb85e8a","filename":"console/src/main/java/org/apache/syncope/console/commons/XMLRolesReader.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -25,9 +25,9 @@\n import javax.xml.xpath.XPathExpression;\n import javax.xml.xpath.XPathExpressionException;\n import javax.xml.xpath.XPathFactory;\n+import org.apache.commons.lang3.StringUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.w3c.dom.Document;\n import org.w3c.dom.NodeList;\n \n@@ -41,12 +41,9 @@ public class XMLRolesReader {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(XMLRolesReader.class);\n \n-    @Autowired\n-    private String authorizations;\n-\n     private Document doc;\n \n-    public void init() {\n+    public void setAuthorizations(final String authorizations) {\n         DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n         dbf.setNamespaceAware(true);\n         try {\n@@ -67,12 +64,8 @@ public void init() {\n      * @return roles list comma separated\n      */\n     public String getAllAllowedRoles(final String pageId, final String actionId) {\n-\n-        if (doc == null) {\n-            init();\n-        }\n         if (doc == null) {\n-            return \"\";\n+            return StringUtils.EMPTY;\n         }\n \n         final StringBuilder roles = new StringBuilder();"},{"sha":"1c1458728a954defbda3dfd3bc7173b806ff6900","filename":"console/src/main/java/org/apache/syncope/console/pages/BasePage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -125,9 +125,9 @@ public Page createPage() {\n             }\n         };\n \n-        editProfileLink.add(new Label(\"username\", SyncopeSession.get().getUserId()));\n+        editProfileLink.add(new Label(\"username\", SyncopeSession.get().getUsername()));\n \n-        if (\"admin\".equals(SyncopeSession.get().getUserId())) {\n+        if (\"admin\".equals(SyncopeSession.get().getUsername())) {\n             editProfileLink.setEnabled(false);\n         }\n "},{"sha":"dfd878c36dce64d8587b98a467190d7a9ea741b3","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import static org.apache.wicket.Component.ENABLE;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;"},{"sha":"969d251762372cf5015b8c64551af89de7efb699","filename":"console/src/main/java/org/apache/syncope/console/pages/Login.java","status":"modified","additions":8,"deletions":30,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -22,16 +22,15 @@\n import java.util.Locale;\n import java.util.Set;\n import org.apache.http.HttpResponse;\n-import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.client.methods.HttpGet;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.http.util.EntityUtils;\n-import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.apache.syncope.common.services.EntitlementService;\n import org.apache.syncope.common.services.UserRequestService;\n import org.apache.syncope.common.to.EntitlementTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n+import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.SyncopeSession;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n@@ -58,8 +57,6 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.web.client.HttpClientErrorException;\n-import org.springframework.web.client.RestTemplate;\n \n /**\n  * Syncope Login page.\n@@ -114,19 +111,14 @@ public void onSubmit() {\n                 try {\n                     String[] entitlements = authenticate(userIdField.getRawInput(), passwordField.getRawInput());\n \n-                    SyncopeSession.get().setUserId(userIdField.getRawInput());\n+                    SyncopeSession.get().setUsername(userIdField.getRawInput());\n+                    SyncopeSession.get().setPassword(passwordField.getRawInput());\n                     SyncopeSession.get().setEntitlements(entitlements);\n                     SyncopeSession.get().setVersion(getSyncopeVersion());\n \n                     setResponsePage(WelcomePage.class, parameters);\n                 } catch (AccessControlException e) {\n                     error(getString(\"login-error\"));\n-\n-                    PreemptiveAuthHttpRequestFactory requestFactory =\n-                            ((PreemptiveAuthHttpRequestFactory) SyncopeSession.\n-                            get().getRestTemplate().getRequestFactory());\n-\n-                    ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().clear();\n                 }\n             }\n         };\n@@ -180,26 +172,17 @@ public Page createPage() {\n         add(selfRegFrag);\n     }\n \n-    private String[] authenticate(final String userId, final String password) {\n-        final RestTemplate restTemplate = SyncopeSession.get().getRestTemplate();\n-\n-        // 1. Set provided credentials to check\n-        PreemptiveAuthHttpRequestFactory requestFactory =\n-                ((PreemptiveAuthHttpRequestFactory) restTemplate.getRequestFactory());\n-\n-        ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n-                requestFactory.getAuthScope(), new UsernamePasswordCredentials(userId, password));\n-\n-        // 2. Search authorizations for user specified by credentials\n-        Set<EntitlementTO> entitlements = SyncopeSession.get().getService(EntitlementService.class).getMyEntitlements();\n+    private String[] authenticate(final String username, final String password) {\n+        Set<EntitlementTO> entitlements = SyncopeSession.get().\n+                getService(EntitlementService.class, username, password).getMyEntitlements();\n         return CollectionWrapper.unwrap(entitlements).toArray(new String[0]);\n     }\n \n     private boolean isSelfRegistrationAllowed() {\n         Boolean result = null;\n         try {\n             result = SyncopeSession.get().getService(UserRequestService.class).isCreateAllowed();\n-        } catch (HttpClientErrorException e) {\n+        } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While seeking if self registration is allowed\", e);\n         }\n \n@@ -209,15 +192,10 @@ private boolean isSelfRegistrationAllowed() {\n     }\n \n     private String getSyncopeVersion() {\n-        final RestTemplate restTemplate = SyncopeSession.get().getRestTemplate();\n-\n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                getRequestFactory());\n-\n         String version = \"\";\n         try {\n             HttpGet get = new HttpGet(baseURL + \"../version.jsp\");\n-            HttpResponse response = requestFactory.getHttpClient().execute(get);\n+            HttpResponse response = new DefaultHttpClient().execute(get);\n             version = EntityUtils.toString(response.getEntity()).trim();\n         } catch (Exception e) {\n             LOG.error(\"While fetching version from core\", e);"},{"sha":"7681c5ffddef8cdef07872184026508d68ff997e","filename":"console/src/main/java/org/apache/syncope/console/pages/Logout.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogout.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import org.apache.http.impl.client.DefaultHttpClient;\n-import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.apache.syncope.console.SyncopeSession;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n@@ -35,14 +33,6 @@ public Logout(final PageParameters parameters) {\n \n         SyncopeSession.get().invalidate();\n \n-        // TODO: check that this is indeed not necessary anymore.\n-        //        getRequestCycle().setRedirect(true);\n-\n         setResponsePage(getApplication().getHomePage());\n-\n-        PreemptiveAuthHttpRequestFactory requestFactory =\n-                ((PreemptiveAuthHttpRequestFactory) SyncopeSession.get().getRestTemplate().getRequestFactory());\n-\n-        ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().clear();\n     }\n }"},{"sha":"3348b420023572c17cb6c4203b828813b6239431","filename":"console/src/main/java/org/apache/syncope/console/pages/Todo.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -170,7 +170,7 @@ public Page createPage() {\n                         editApprovalWin.show(target);\n                     }\n                 }, ActionLink.ActionType.EDIT, \"Approval\",\n-                        SyncopeSession.get().getUserId().equals(formTO.getOwner()));\n+                        SyncopeSession.get().getUsername().equals(formTO.getOwner()));\n \n                 cellItem.add(panel);\n             }"},{"sha":"977c68c6c13caceef2fe2837351ebc353ba742a1","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":39,"deletions":62,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -19,21 +19,14 @@ under the License.\n -->\n <beans xmlns=\"http://www.springframework.org/schema/beans\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n-       xmlns:p=\"http://www.springframework.org/schema/p\"\n        xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xmlns:oxm=\"http://www.springframework.org/schema/oxm\"\n-       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n+       xmlns:cxf=\"http://cxf.apache.org/core\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\n-                           http://www.springframework.org/schema/oxm\n-                           http://www.springframework.org/schema/oxm/spring-oxm.xsd\n-                           http://www.springframework.org/schema/tx\n-                           http://www.springframework.org/schema/tx/spring-tx.xsd\n-                           http://www.springframework.org/schema/aop\n-                           http://www.springframework.org/schema/aop/spring-aop.xsd\">\n+                           http://cxf.apache.org/core \n+                           http://cxf.apache.org/schemas/core.xsd\">\n \n   <context:component-scan base-package=\"org.apache.syncope.console.rest\"/>\n \n@@ -63,78 +56,62 @@ under the License.\n     <constructor-arg value=\"${licenseUrl}\"/>\n   </bean>\n \n-  <bean id=\"authorizations\" class=\"java.lang.String\">\n-    <constructor-arg value=\"authorizations.xml\"/>\n-  </bean>\n-\n   <bean id=\"syncopeApplication\" class=\"org.apache.syncope.console.SyncopeApplication\"/>\n \n-  <bean id=\"jacksonObjectMapper\" class=\"org.codehaus.jackson.map.ObjectMapper\"/>\n+  <bean id=\"preferenceManager\" class=\"org.apache.syncope.console.commons.PreferenceManager\"/>\n \n-  <bean id=\"mappingJacksonHttpMessageConverter\" \n-        class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\">\n-    <property name=\"objectMapper\" ref=\"jacksonObjectMapper\"/>\n+  <bean id=\"xmlRolesReader\" class=\"org.apache.syncope.console.commons.XMLRolesReader\">\n+    <property name=\"authorizations\" value=\"authorizations.xml\"/>\n   </bean>\n \n-  <bean id=\"httpClientConnManager\" class=\"org.apache.http.impl.conn.PoolingClientConnectionManager\"/>\n+  <bean id=\"roleTreeBuilder\" class=\"org.apache.syncope.console.commons.RoleTreeBuilder\"/>\n \n-  <bean id=\"httpHostHeader\" class=\"org.apache.http.message.BasicHeader\">\n-    <constructor-arg value=\"Host\"/>\n-    <constructor-arg value=\"${host}\"/>\n-  </bean>\n-  \n-  <bean id=\"httpClientParams\" class=\"org.apache.syncope.client.http.HttpClientParams\">\n-    <property name=\"parameterMap\">\n-      <map key-type=\"java.lang.String\">\n-        <entry>\n-          <key>\n-            <value>http.protocol.handle-authentication</value>\n-          </key>\n-          <value type=\"java.lang.Boolean\">false</value>\n-        </entry>\n-        <entry>\n-          <key>\n-            <value>http.auth.credential-charset</value>\n-          </key>\n-          <value type=\"java.lang.String\">UTF-8</value>\n+  <bean id=\"jaxbProvider\" class=\"org.apache.cxf.jaxrs.provider.JAXBElementProvider\">\n+    <property name=\"depthProperties\">\n+      <bean id=\"depthProperties\" class=\"org.apache.cxf.staxutils.DocumentDepthProperties\">\n+        <property name=\"innerElementCountThreshold\" value=\"500\"/>\n+      </bean>\n+    </property>\n+    <property name=\"marshallerProperties\">\n+      <map>\n+        <entry key=\"jaxb.formatted.output\">\n+          <value type=\"java.lang.Boolean\">true</value>\n         </entry>\n+      </map>\n+    </property>\n+    <property name=\"collectionWrapperMap\">\n+      <map>\n         <entry>\n           <key>\n-            <value>http.default-headers</value>\n+            <value>org.apache.syncope.common.to.PolicyTO</value>\n           </key>\n-          <list>\n-            <ref bean=\"httpHostHeader\"/>\n-          </list>\n+          <value>policies</value>\n         </entry>\n       </map>\n     </property>\n   </bean>\n \n-  <bean id=\"httpClientFactory\" class=\"org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory\"\n-        scope=\"prototype\">\n-    <constructor-arg value=\"${host}\"/>\n-    <constructor-arg value=\"${port}\"/>\n-    <constructor-arg value=\"${scheme}\"/>\n-    <constructor-arg ref=\"httpClientConnManager\"/>\n-    <constructor-arg ref=\"httpClientParams\"/>\n-  </bean>\n+  <bean id=\"jsonProvider\" class=\"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider\"/>\n+\n+  <bean id=\"exceptionMapper\" class=\"org.apache.syncope.client.rest.RestClientExceptionMapper\"/>\n \n-  <bean id=\"restTemplate\" class=\"org.springframework.web.client.RestTemplate\" scope=\"prototype\">\n-    <constructor-arg ref=\"httpClientFactory\"/>\n-    <property name=\"messageConverters\">\n+  <bean id=\"restClientFactory\" class=\"org.apache.syncope.client.rest.RestClientFactoryBean\" scope=\"prototype\">\n+    <property name=\"address\" value=\"${scheme}://${host}:${port}/${rootPath}\"/>\n+    <property name=\"threadSafe\" value=\"true\"/>\n+    <property name=\"inheritHeaders\" value=\"true\"/>\n+    <property name=\"contentType\" value=\"application/xml\"/>\n+    <property name=\"features\">\n       <list>\n-        <ref bean=\"mappingJacksonHttpMessageConverter\"/>\n+        <cxf:logging/>\n       </list>\n     </property>\n-    <property name=\"errorHandler\">\n-      <bean id=\"syncopeClientErrorHandler\" class=\"org.apache.syncope.common.validation.SyncopeClientErrorHandler\"/>\n+    <property name=\"providers\">\n+      <list>\n+        <ref bean=\"jaxbProvider\"/>\n+        <ref bean=\"jsonProvider\"/>\n+        <ref bean=\"exceptionMapper\"/>\n+      </list>\n     </property>\n   </bean>\n \n-  <bean id=\"preferenceManager\" class=\"org.apache.syncope.console.commons.PreferenceManager\"/>\n-\n-  <bean id=\"xmlRolesReader\" class=\"org.apache.syncope.console.commons.XMLRolesReader\"/>\n-\n-  <bean id=\"roleTreeBuilder\" class=\"org.apache.syncope.console.commons.RoleTreeBuilder\"/>\n-\n </beans>"},{"sha":"57d7ee3653303835b89b6741bdf827134fd390e7","filename":"console/src/main/resources/configuration.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -17,4 +17,4 @@\n scheme=http\n host=localhost\n port=8080\n-rootPath=/syncope/rest/\n+rootPath=/syncope/cxf/"},{"sha":"d09da7802d2b97a518b1a0e5d4d4dc5c88f6639e","filename":"console/src/main/resources/logback.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -55,6 +55,11 @@ under the License.\n     <appender-ref ref=\"main\"/>\n   </logger>\n     \n+  <logger name=\"org.apache.cxf\" additivity=\"false\">\n+    <level value=\"INFO\"/>\n+    <appender-ref ref=\"main\"/>\n+  </logger>\n+    \n   <root>\n     <level value=\"INFO\"/>\n     <appender-ref ref=\"main\"/>"},{"sha":"d0547ebc8b7a7b0da4b693703ef930cac4231868","filename":"console/src/test/resources/configuration.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Ftest%2Fresources%2Fconfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/console%2Fsrc%2Ftest%2Fresources%2Fconfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fconfiguration.properties?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -17,4 +17,4 @@\n scheme=http\n host=localhost\n port=9080\n-rootPath=/syncope/rest/\n+rootPath=/syncope/cxf/"},{"sha":"13907d10e2effd972d0da4b17fa90f59b620bbf1","filename":"core/src/main/java/org/apache/syncope/core/services/WorkflowServiceImpl.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -18,14 +18,14 @@\n  */\r\n package org.apache.syncope.core.services;\r\n \r\n+import java.util.List;\r\n import javax.ws.rs.BadRequestException;\r\n import javax.ws.rs.core.UriInfo;\r\n \r\n import org.apache.syncope.common.services.WorkflowService;\r\n import org.apache.syncope.common.services.WorkflowTasks;\r\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n-import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.rest.controller.WorkflowController;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n@@ -63,12 +63,17 @@ public void updateDefinition(final AttributableType kind, final WorkflowDefiniti\n     }\r\n \r\n     @Override\r\n+    @SuppressWarnings(\"unchecked\")\r\n     public WorkflowTasks getDefinedTasks(final AttributableType kind) {\r\n         switch (kind) {\r\n             case USER:\r\n-                return new WorkflowTasks(CollectionWrapper.wrapStrings(workflowController.getDefinedUserTasks()));\r\n+                return new WorkflowTasks((List<String>) workflowController.getDefinedUserTasks().\r\n+                        getModel().values().iterator().next());\r\n+\r\n             case ROLE:\r\n-                return new WorkflowTasks(CollectionWrapper.wrapStrings(workflowController.getDefinedUserTasks()));\r\n+                return new WorkflowTasks((List<String>) workflowController.getDefinedRoleTasks().\r\n+                        getModel().values().iterator().next());\r\n+\r\n             default:\r\n                 throw new BadRequestException();\r\n         }\r"},{"sha":"cf26045d83fa2ba563a4a5a485bfc0f24a5d2ea6","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":13,"deletions":38,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -30,14 +30,13 @@\n import javax.ws.rs.core.MultivaluedMap;\n import javax.ws.rs.core.Response;\n \n-import org.apache.cxf.jaxrs.client.Client;\n-import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.http.HttpStatus;\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n-import org.apache.syncope.client.rest.utils.RestClientExceptionMapper;\n+import org.apache.syncope.client.rest.RestClientExceptionMapper;\n+import org.apache.syncope.client.rest.RestClientFactoryBean;\n import org.apache.syncope.client.services.proxy.ConfigurationServiceProxy;\n import org.apache.syncope.client.services.proxy.ConnectorServiceProxy;\n import org.apache.syncope.client.services.proxy.EntitlementServiceProxy;\n@@ -121,7 +120,7 @@ public abstract class AbstractTest {\n     private PreemptiveAuthHttpRequestFactory httpClientFactory;\n \n     @Autowired\n-    protected JAXRSClientFactoryBean restClientFactory;\n+    protected RestClientFactoryBean restClientFactory;\n \n     @Autowired\n     protected DataSource testDataSource;\n@@ -166,6 +165,11 @@ public abstract class AbstractTest {\n     @Before\n     public void setup() throws Exception {\n         if (enabledCXF) {\n+            String envContentType = System.getProperty(ENV_KEY_CONTENT_TYPE);\n+            contentType = (envContentType == null || envContentType.isEmpty())\n+                    ? DEFAULT_CONTENT_TYPE\n+                    : envContentType;\n+\n             setupCXFServices();\n         } else {\n             resetRestTemplate();\n@@ -208,8 +212,8 @@ protected void resetRestTemplate() {\n         schemaService = new SchemaServiceProxy(BASE_URL, restTemplate);\n         userRequestService = new UserRequestServiceProxy(BASE_URL, restTemplate);\n     }\n-\n     // END Spring MVC Initialization\n+\n     // BEGIN CXF Initialization\n     protected void setupCXFServices() throws Exception {\n         userService = createServiceInstance(UserService.class);\n@@ -230,38 +234,14 @@ protected void setupCXFServices() throws Exception {\n     }\n \n     protected <T> T createServiceInstance(final Class<T> serviceClass) {\n-        return createServiceInstance(serviceClass, ADMIN_UNAME);\n+        return restClientFactory.createServiceInstance(serviceClass, ADMIN_UNAME, ADMIN_PWD);\n     }\n-\n-    protected <T> T createServiceInstance(final Class<T> serviceClass, final String username) {\n-        return createServiceInstance(serviceClass, username, ADMIN_PWD);\n-    }\n-\n-    protected <T> T createServiceInstance(final Class<T> serviceClass, final String username, final String password) {\n-        restClientFactory.setUsername(username);\n-        restClientFactory.setPassword(password);\n-        restClientFactory.setServiceClass(serviceClass);\n-        T serviceProxy = restClientFactory.create(serviceClass);\n-        setupContentType(WebClient.client(serviceProxy));\n-        return serviceProxy;\n-    }\n-\n-    protected void setupContentType(final Client restClient) {\n-        if (contentType == null) {\n-            String envContentType = System.getProperty(ENV_KEY_CONTENT_TYPE);\n-            if (envContentType == null || envContentType.isEmpty()) {\n-                contentType = DEFAULT_CONTENT_TYPE;\n-            } else {\n-                contentType = envContentType;\n-            }\n-        }\n-        restClient.type(contentType).accept(contentType);\n-    }\n-\n     // END CXF Initialization\n+\n     @SuppressWarnings(\"unchecked\")\n     protected <T> T setupCredentials(final T proxy, final Class<?> serviceInterface, final String username,\n             final String password) {\n+\n         if (proxy instanceof SpringServiceProxy) {\n             SpringServiceProxy service = (SpringServiceProxy) proxy;\n             if (username == null && password == null) {\n@@ -271,12 +251,7 @@ protected <T> T setupCredentials(final T proxy, final Class<?> serviceInterface,\n             }\n             return proxy;\n         } else {\n-            restClientFactory.setUsername(username);\n-            restClientFactory.setPassword(password);\n-            restClientFactory.setServiceClass(serviceInterface);\n-            T serviceProxy = (T) restClientFactory.create(serviceInterface);\n-            setupContentType(WebClient.client(serviceProxy));\n-            return serviceProxy;\n+            return (T) restClientFactory.createServiceInstance(serviceInterface, username, password);\n         }\n     }\n "},{"sha":"5fc5718130d3e7c6b5a98fd5134f4020752329cd","filename":"core/src/test/resources/restClientContext.xml","status":"modified","additions":4,"deletions":11,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7f37c029191d267a5a90bf9239e8166e74252e91/core%2Fsrc%2Ftest%2Fresources%2FrestClientContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7f37c029191d267a5a90bf9239e8166e74252e91/core%2Fsrc%2Ftest%2Fresources%2FrestClientContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FrestClientContext.xml?ref=7f37c029191d267a5a90bf9239e8166e74252e91","patch":"@@ -19,17 +19,11 @@ under the License.\n -->\n <beans xmlns=\"http://www.springframework.org/schema/beans\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n-       xmlns:util=\"http://www.springframework.org/schema/util\"\n        xmlns:cxf=\"http://cxf.apache.org/core\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://cxf.apache.org/jaxrs\n-                           http://cxf.apache.org/schemas/jaxrs.xsd\n                            http://cxf.apache.org/core \n-                           http://cxf.apache.org/schemas/core.xsd\n-                           http://www.springframework.org/schema/util \n-                           http://www.springframework.org/schema/util/spring-util.xsd\">\n+                           http://cxf.apache.org/schemas/core.xsd\">\n \n   <bean id=\"httpClientConnManager\"\n         class=\"org.apache.http.impl.conn.PoolingClientConnectionManager\"/>\n@@ -108,14 +102,13 @@ under the License.\n     <property name=\"mapper\" ref=\"jacksonObjectMapper\"/>\n   </bean>\n \n-  <bean id=\"exceptionMapper\" class=\"org.apache.syncope.client.rest.utils.RestClientExceptionMapper\"/>\n+  <bean id=\"exceptionMapper\" class=\"org.apache.syncope.client.rest.RestClientExceptionMapper\"/>\n \n-  <bean id=\"restClientFactory\" class=\"org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean\">\n+  <bean id=\"restClientFactory\" class=\"org.apache.syncope.client.rest.RestClientFactoryBean\">\n     <property name=\"address\" value=\"http://localhost:9080/syncope/cxf\"/>\n     <property name=\"threadSafe\" value=\"true\"/>\n-    <property name=\"username\" value=\"admin\"/>\n-    <property name=\"password\" value=\"password\"/>\n     <property name=\"inheritHeaders\" value=\"true\"/>\n+    <property name=\"contentType\" value=\"application/xml\"/>\n     <property name=\"features\">\n       <list>\n         <cxf:logging/>"}]}