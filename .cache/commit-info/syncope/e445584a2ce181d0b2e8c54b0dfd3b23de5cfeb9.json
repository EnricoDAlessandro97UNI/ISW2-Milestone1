{"sha":"e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU0NDU1ODRhMmNlMTgxZDBiMmU4YzU0YjBkZmQzYjIzZGU1Y2ZlYjk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-02-10T17:15:20Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-02-10T17:15:20Z"},"message":"Update issue 283\nReorganizing things a bit in order to provide better configuration for reportlets.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247400 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5831f6ca338f749e7d52bda011d5de1bf0c0e7ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5831f6ca338f749e7d52bda011d5de1bf0c0e7ad"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/comments","author":null,"committer":null,"parents":[{"sha":"dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a"}],"stats":{"total":408,"additions":274,"deletions":134},"files":[{"sha":"34bbcef749885146be9df03aeb340270c9dd3acc","filename":"client/src/main/java/org/syncope/client/report/AbstractReportletConf.java","status":"renamed","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FAbstractReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FAbstractReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FAbstractReportletConf.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -15,18 +15,14 @@\n \n import org.syncope.client.AbstractBaseBean;\n \n-public abstract class AbstractReportlet extends AbstractBaseBean\n-        implements Reportlet {\n+public abstract class AbstractReportletConf extends AbstractBaseBean\n+        implements ReportletConf {\n \n-    private static final long serialVersionUID = 2261593176065528113L;\n+    private static final long serialVersionUID = -6130008602014516608L;\n \n     private String name;\n \n-    public AbstractReportlet() {\n-        this.name = this.getClass().getSimpleName();\n-    }\n-\n-    public AbstractReportlet(final String name) {\n+    public AbstractReportletConf(final String name) {\n         this.name = name;\n     }\n ","previous_filename":"client/src/main/java/org/syncope/client/report/AbstractReportlet.java"},{"sha":"48f61075d3588c1cd78d20efcbc6739aacad5d55","filename":"client/src/main/java/org/syncope/client/report/ReportletConf.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FReportletConf.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.client.report;\n+\n+import org.codehaus.jackson.annotate.JsonTypeInfo;\n+\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS,\n+include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n+public interface ReportletConf {\n+\n+    /**\n+     * Give name of related reportlet instance.\n+     *\n+     * @return name of this reportlet instance\n+     */\n+    String getName();\n+\n+    /**\n+     * Return Reportlet implementation for this conf.\n+     *\n+     * @return corresponding reportlet class name\n+     */\n+    String getReportletClassName();\n+}"},{"sha":"2e804b16d46981e43ae1905ac5345e2d76b44ad9","filename":"client/src/main/java/org/syncope/client/report/UserReportletConf.java","status":"added","additions":109,"deletions":0,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FUserReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FUserReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FUserReportletConf.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -0,0 +1,109 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.client.report;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.codehaus.jackson.annotate.JsonIgnore;\n+import org.syncope.client.search.NodeCond;\n+\n+public class UserReportletConf extends AbstractReportletConf {\n+\n+    public enum Feature {\n+\n+        id,\n+        username,\n+        workflowId,\n+        status,\n+        creationDate,\n+        lastLoginDate,\n+        changePwdDate,\n+        passwordHistorySize,\n+        failedLoginCount,\n+        memberships,\n+        resources\n+\n+    }\n+\n+    private static final long serialVersionUID = 6602717600064602764L;\n+\n+    private NodeCond matchingCond;\n+\n+    private List<String> attrs;\n+\n+    private List<String> derAttrs;\n+\n+    private List<String> virAttrs;\n+\n+    private List<Feature> features;\n+\n+    public UserReportletConf() {\n+        this(UserReportletConf.class.getName());\n+    }\n+\n+    public UserReportletConf(final String name) {\n+        super(name);\n+\n+        attrs = new ArrayList<String>();\n+        derAttrs = new ArrayList<String>();\n+        virAttrs = new ArrayList<String>();\n+        features = new ArrayList<Feature>();\n+    }\n+\n+    @JsonIgnore\n+    @Override\n+    public String getReportletClassName() {\n+        return \"org.syncope.core.report.UserReportlet\";\n+    }\n+\n+    public List<String> getAttrs() {\n+        return attrs;\n+    }\n+\n+    public void setAttrs(List<String> attrs) {\n+        this.attrs = attrs;\n+    }\n+\n+    public List<String> getDerAttrs() {\n+        return derAttrs;\n+    }\n+\n+    public void setDerAttrs(List<String> derAttrs) {\n+        this.derAttrs = derAttrs;\n+    }\n+\n+    public List<Feature> getFeatures() {\n+        return features;\n+    }\n+\n+    public void setFeatures(List<Feature> features) {\n+        this.features = features;\n+    }\n+\n+    public NodeCond getMatchingCond() {\n+        return matchingCond;\n+    }\n+\n+    public void setMatchingCond(NodeCond matchingCond) {\n+        this.matchingCond = matchingCond;\n+    }\n+\n+    public List<String> getVirAttrs() {\n+        return virAttrs;\n+    }\n+\n+    public void setVirAttrs(List<String> virAttrs) {\n+        this.virAttrs = virAttrs;\n+    }\n+}"},{"sha":"b4a1eb90ac0619ea7e84caff55f0034101ca2069","filename":"client/src/main/java/org/syncope/client/to/ReportTO.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FReportTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FReportTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FReportTO.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -16,7 +16,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.syncope.client.AbstractBaseBean;\n-import org.syncope.client.report.Reportlet;\n+import org.syncope.client.report.ReportletConf;\n \n public class ReportTO extends AbstractBaseBean {\n \n@@ -26,7 +26,7 @@ public class ReportTO extends AbstractBaseBean {\n \n     private String name;\n \n-    private List<Reportlet> reportlets;\n+    private List<ReportletConf> reportletConfs;\n \n     private String cronExpression;\n \n@@ -35,7 +35,7 @@ public class ReportTO extends AbstractBaseBean {\n     public ReportTO() {\n         super();\n \n-        reportlets = new ArrayList<Reportlet>();\n+        reportletConfs = new ArrayList<ReportletConf>();\n         executions = new ArrayList<ReportExecTO>();\n     }\n \n@@ -55,20 +55,20 @@ public void setName(String name) {\n         this.name = name;\n     }\n \n-    public boolean addReportlet(Reportlet reportlet) {\n-        return this.reportlets.add(reportlet);\n+    public boolean addReportletConf(ReportletConf reportlet) {\n+        return this.reportletConfs.add(reportlet);\n     }\n \n-    public boolean removeReportlet(Reportlet reportlet) {\n-        return this.reportlets.remove(reportlet);\n+    public boolean removeReportletConf(ReportletConf reportlet) {\n+        return this.reportletConfs.remove(reportlet);\n     }\n \n-    public List<Reportlet> getReportlets() {\n-        return reportlets;\n+    public List<ReportletConf> getReportletConfs() {\n+        return reportletConfs;\n     }\n \n-    public void setReportlets(List<Reportlet> reportlets) {\n-        this.reportlets = reportlets;\n+    public void setReportletConfs(List<ReportletConf> reportlets) {\n+        this.reportletConfs = reportlets;\n     }\n \n     public String getCronExpression() {"},{"sha":"a4de4bc1bd9c97edfa49988637d19af2349990b5","filename":"client/src/test/java/org/syncope/client/test/JSONTest.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -23,7 +23,7 @@\n import java.util.List;\n import org.codehaus.jackson.map.ObjectMapper;\n import org.junit.Test;\n-import org.syncope.client.report.UserReportlet;\n+import org.syncope.client.report.UserReportletConf;\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n@@ -103,21 +103,20 @@ public void testMap()\n     }\n \n     @Test\n-    public void testReportletImplementations()\n+    public void testReportletConfImplementations()\n             throws IOException {\n \n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForCreate\");\n-        report.addReportlet(new UserReportlet());\n-        report.addReportlet(new UserReportlet(\"second\"));\n+        report.addReportletConf(new UserReportletConf(\"first\"));\n+        report.addReportletConf(new UserReportletConf(\"second\"));\n \n         ObjectMapper mapper = new ObjectMapper();\n \n         StringWriter writer = new StringWriter();\n         mapper.writeValue(writer, report);\n \n-        ReportTO actual = mapper.readValue(\n-                writer.toString(), ReportTO.class);\n+        ReportTO actual = mapper.readValue(writer.toString(), ReportTO.class);\n         assertEquals(report, actual);\n     }\n }"},{"sha":"8613333ad46e5fc0895d36f0996d88027e5d0845","filename":"core/src/main/java/org/syncope/core/persistence/beans/Report.java","status":"modified","additions":26,"deletions":22,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReport.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -23,8 +23,9 @@\n import javax.persistence.GeneratedValue;\n import javax.persistence.GenerationType;\n import javax.persistence.Id;\n+import javax.persistence.Lob;\n import javax.persistence.OneToMany;\n-import org.syncope.client.report.Reportlet;\n+import org.syncope.client.report.ReportletConf;\n import org.syncope.core.persistence.validation.entity.ReportCheck;\n import org.syncope.core.util.XMLSerializer;\n \n@@ -41,9 +42,10 @@ public class Report extends AbstractBaseBean {\n     @Column(unique = true, nullable = false)\n     private String name;\n \n+    @Lob\n     @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"reportlets\")\n-    private List<String> reportlets;\n+    @Column(name = \"reportletConfs\", columnDefinition = \"CLOB\")\n+    private List<String> reportletConfs;\n \n     private String cronExpression;\n \n@@ -54,7 +56,7 @@ public class Report extends AbstractBaseBean {\n     public Report() {\n         super();\n \n-        reportlets = new ArrayList<String>();\n+        reportletConfs = new ArrayList<String>();\n         executions = new ArrayList<ReportExec>();\n     }\n \n@@ -90,39 +92,41 @@ public void setExecs(List<ReportExec> executions) {\n         }\n     }\n \n-    public boolean addReportlet(Reportlet reportlet) {\n-        if (reportlet == null) {\n+    public boolean addReportletConf(ReportletConf reportletConf) {\n+        if (reportletConf == null) {\n             return false;\n         }\n \n-        String xmlReportlet = XMLSerializer.serialize(reportlet);\n-        return !reportlets.contains(xmlReportlet)\n-                && reportlets.add(xmlReportlet);\n+        String xmlReportlet = XMLSerializer.serialize(reportletConf);\n+        return !reportletConfs.contains(xmlReportlet)\n+                && reportletConfs.add(xmlReportlet);\n     }\n \n-    public boolean removeReportlet(Reportlet reportlet) {\n-        if (reportlet == null) {\n+    public boolean removeReportletConf(ReportletConf reportletConf) {\n+        if (reportletConf == null) {\n             return false;\n         }\n \n-        String xmlReportlet = XMLSerializer.serialize(reportlet);\n-        return reportlets.remove(xmlReportlet);\n+        String xmlReportlet = XMLSerializer.serialize(reportletConf);\n+        return reportletConfs.remove(xmlReportlet);\n     }\n \n-    public List<Reportlet> getReportlets() {\n-        List<Reportlet> result = new ArrayList<Reportlet>(reportlets.size());\n-        for (String xmlReportlet : reportlets) {\n-            result.add(XMLSerializer.<Reportlet>deserialize(xmlReportlet));\n+    public List<ReportletConf> getReportletConfs() {\n+        List<ReportletConf> result =\n+                new ArrayList<ReportletConf>(reportletConfs.size());\n+        for (String xmlReportletConf : reportletConfs) {\n+            result.add(\n+                    XMLSerializer.<ReportletConf>deserialize(xmlReportletConf));\n         }\n \n         return result;\n     }\n \n-    public void setReportlets(List<Reportlet> reportlets) {\n-        this.reportlets.clear();\n-        if (reportlets != null && !reportlets.isEmpty()) {\n-            for (Reportlet reportlet : reportlets) {\n-                addReportlet(reportlet);\n+    public void setReportlets(List<ReportletConf> reportletConfs) {\n+        this.reportletConfs.clear();\n+        if (reportletConfs != null && !reportletConfs.isEmpty()) {\n+            for (ReportletConf reportlet : reportletConfs) {\n+                addReportletConf(reportlet);\n             }\n         }\n     }"},{"sha":"42963acbc2517daae90b481d24ad1b5a016f7755","filename":"core/src/main/java/org/syncope/core/report/AbstractReportlet.java","status":"renamed","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -11,21 +11,20 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.syncope.client.report;\n+package org.syncope.core.report;\n \n-public class XMLReport {\n+import org.syncope.client.report.ReportletConf;\n \n-    public static String TYPE_TEXT = \"CDATA\";\n+public abstract class AbstractReportlet implements Reportlet {\n \n-    public enum Elements {\n-\n-        report\n+    private ReportletConf conf;\n \n+    public ReportletConf getConf() {\n+        return conf;\n     }\n \n-    public enum Attrs {\n-\n-        name\n-\n+    @Override\n+    public void setConf(final ReportletConf conf) {\n+        this.conf = conf;\n     }\n }","previous_filename":"client/src/main/java/org/syncope/client/report/XMLReport.java"},{"sha":"cb3b65aafe1e49f057abfe71905774761b487f1d","filename":"core/src/main/java/org/syncope/core/report/Reportlet.java","status":"renamed","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportlet.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -11,9 +11,9 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.syncope.client.report;\n+package org.syncope.core.report;\n \n-import org.codehaus.jackson.annotate.JsonTypeInfo;\n+import org.syncope.client.report.ReportletConf;\n import org.xml.sax.ContentHandler;\n import org.xml.sax.SAXException;\n \n@@ -22,16 +22,12 @@\n  *\n  * @see org.syncope.core.persistence.beans.Report\n  */\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS,\n-include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n public interface Reportlet {\n \n     /**\n-     * Give name of this reportlet instance.\n-     *\n-     * @return name of this reportlet instance\n+     * Set this reportlet configuration.\n      */\n-    String getName();\n+    void setConf(ReportletConf conf);\n \n     /**\n      * Actual data extraction for reporting.","previous_filename":"client/src/main/java/org/syncope/client/report/Reportlet.java"},{"sha":"58ab0ba4ff8ef0d55c9adf58c14b733057f66afb","filename":"core/src/main/java/org/syncope/core/report/UserReportlet.java","status":"renamed","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -11,24 +11,28 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.syncope.client.report;\n+package org.syncope.core.report;\n \n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.client.report.UserReportletConf;\n+import org.syncope.core.persistence.dao.UserDAO;\n+import org.syncope.core.persistence.dao.UserSearchDAO;\n import org.xml.sax.ContentHandler;\n import org.xml.sax.SAXException;\n \n public class UserReportlet extends AbstractReportlet {\n \n-    private static final long serialVersionUID = 6602717600064602764L;\n+    private UserReportletConf conf;\n \n-    public UserReportlet() {\n-        super();\n-    }\n+    @Autowired\n+    private UserDAO userDAO;\n \n-    public UserReportlet(final String name) {\n-        super(name);\n-    }\n+    @Autowired\n+    private UserSearchDAO searchDAO;\n \n     @Override\n+    @Transactional(readOnly = true)\n     public void extract(final ContentHandler handler)\n             throws SAXException {\n     }","previous_filename":"client/src/main/java/org/syncope/client/report/UserReportlet.java"},{"sha":"ba54b3db90c5b8aa3a7a652db6b2c9c2967f1cf9","filename":"core/src/main/java/org/syncope/core/rest/controller/ReportController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -45,8 +45,8 @@\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.bind.annotation.RequestParam;\n import org.springframework.web.servlet.ModelAndView;\n-import org.syncope.client.report.AbstractReportlet;\n-import org.syncope.client.report.Reportlet;\n+import org.syncope.core.report.AbstractReportlet;\n+import org.syncope.core.report.Reportlet;\n import org.syncope.client.to.ReportExecTO;\n import org.syncope.client.to.ReportTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;"},{"sha":"f604acf79cc4a1542de83401489347366a964cbd","filename":"core/src/main/java/org/syncope/core/rest/data/ReportDataBinder.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -15,7 +15,7 @@\n \n import org.springframework.beans.BeanUtils;\n import org.springframework.stereotype.Component;\n-import org.syncope.client.report.Reportlet;\n+import org.syncope.client.report.ReportletConf;\n import org.syncope.client.to.ReportExecTO;\n import org.syncope.client.to.ReportTO;\n import org.syncope.core.persistence.beans.Report;\n@@ -31,21 +31,19 @@ public class ReportDataBinder {\n         \"id\", \"report\", \"execResult\"};\n \n     public void getReport(final Report report, final ReportTO reportTO) {\n-        BeanUtils.copyProperties(reportTO, report,\n-                IGNORE_REPORT_PROPERTIES);\n-        report.getReportlets().clear();\n-        for (Reportlet reportlet : reportTO.getReportlets()) {\n-            report.addReportlet(reportlet);\n+        BeanUtils.copyProperties(reportTO, report, IGNORE_REPORT_PROPERTIES);\n+        report.getReportletConfs().clear();\n+        for (ReportletConf conf : reportTO.getReportletConfs()) {\n+            report.addReportletConf(conf);\n         }\n     }\n \n     public ReportTO getReportTO(final Report report) {\n         ReportTO reportTO = new ReportTO();\n         reportTO.setId(report.getId());\n-        BeanUtils.copyProperties(report, reportTO,\n-                IGNORE_REPORT_PROPERTIES);\n+        BeanUtils.copyProperties(report, reportTO, IGNORE_REPORT_PROPERTIES);\n \n-        reportTO.setReportlets(report.getReportlets());\n+        reportTO.setReportletConfs(report.getReportletConfs());\n \n         for (ReportExec reportExec : report.getExecs()) {\n             reportTO.addExec(getReportExecTO(reportExec));"},{"sha":"98635b22a4158550d88a6f2e483a53aab282fd2a","filename":"core/src/main/java/org/syncope/core/scheduling/ReportJob.java","status":"modified","additions":33,"deletions":33,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -17,10 +17,7 @@\n import java.io.IOException;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n-import java.lang.reflect.Field;\n-import java.util.ArrayList;\n import java.util.Date;\n-import java.util.List;\n import java.util.zip.Deflater;\n import java.util.zip.ZipEntry;\n import java.util.zip.ZipOutputStream;\n@@ -34,18 +31,15 @@\n import org.quartz.StatefulJob;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n-import org.syncope.client.report.Reportlet;\n-import org.syncope.client.report.XMLReport;\n-import org.syncope.client.report.XMLReport.Attrs;\n-import org.syncope.client.report.XMLReport.Elements;\n+import org.syncope.client.report.ReportletConf;\n import org.syncope.core.persistence.beans.Report;\n import org.syncope.core.persistence.beans.ReportExec;\n import org.syncope.core.persistence.dao.ReportDAO;\n import org.syncope.core.persistence.dao.ReportExecDAO;\n+import org.syncope.core.report.Reportlet;\n import org.syncope.core.util.ApplicationContextManager;\n import org.syncope.types.ReportExecStatus;\n import org.xml.sax.SAXException;\n@@ -62,6 +56,12 @@ public class ReportJob implements StatefulJob {\n     private static final Logger LOG = LoggerFactory.getLogger(\n             ReportJob.class);\n \n+    private static String TYPE_TEXT = \"CDATA\";\n+\n+    private static String ELEMENT_REPORT = \"report\";\n+\n+    private static String ATTR_NAME = \"name\";\n+\n     /**\n      * Report DAO.\n      */\n@@ -142,39 +142,39 @@ public void execute(final JobExecutionContext context)\n             // report header\n             handler.startDocument();\n             AttributesImpl atts = new AttributesImpl();\n-            atts.addAttribute(\"\", \"\", Attrs.name.name(),\n-                    XMLReport.TYPE_TEXT, report.getName());\n-            handler.startElement(\"\", \"\", Elements.report.name(), atts);\n+            atts.addAttribute(\"\", \"\", ATTR_NAME, TYPE_TEXT, report.getName());\n+            handler.startElement(\"\", \"\", ELEMENT_REPORT, atts);\n \n             // iterate over reportlet instances defined for this report\n-            for (Reportlet reportlet : report.getReportlets()) {\n-                // for each reportlet instance, get an autowired instance\n-                // and copy non autowired field values\n-                List<String> ignoreProperties = new ArrayList<String>();\n-                for (Field field : reportlet.getClass().getFields()) {\n-                    if (field.isAnnotationPresent(Autowired.class)) {\n-                        ignoreProperties.add(field.getName());\n-                    }\n-                }\n+            for (ReportletConf reportletConf : report.getReportletConfs()) {\n+                Class reportletClass = null;\n+                try {\n+                    reportletClass = Class.forName(\n+                            reportletConf.getReportletClassName());\n+                } catch (ClassNotFoundException e) {\n+                    LOG.error(\"Reportlet class not found: {}\",\n+                            reportletConf.getReportletClassName(), e);\n \n-                Reportlet autowired = (Reportlet) beanFactory.autowire(\n-                        reportlet.getClass(),\n-                        AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n-                BeanUtils.copyProperties(reportlet, autowired,\n-                        ignoreProperties.toArray(new String[ignoreProperties.\n-                        size()]));\n+                }\n \n-                // invoke reportlet\n-                try {\n-                    autowired.extract(handler);\n-                } catch (SAXException e) {\n-                    LOG.error(\"While extracting from reportlet {}\",\n-                            reportlet.getName(), e);\n+                if (reportletClass != null) {\n+                    Reportlet autowired =\n+                            (Reportlet) beanFactory.autowire(reportletClass,\n+                            AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+                    autowired.setConf(reportletConf);\n+\n+                    // invoke reportlet\n+                    try {\n+                        autowired.extract(handler);\n+                    } catch (SAXException e) {\n+                        LOG.error(\"While extracting from reportlet {}\",\n+                                reportletConf.getName(), e);\n+                    }\n                 }\n             }\n \n             // report footer\n-            handler.endElement(\"\", \"\", Elements.report.name());\n+            handler.endElement(\"\", \"\", ELEMENT_REPORT);\n             handler.endDocument();\n \n             execution.setStatus(ReportExecStatus.SUCCESS);"},{"sha":"9ac746a12f25aa0b10dd1828b32362ee282f22b5","filename":"core/src/test/java/org/syncope/core/persistence/dao/ReportTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportTest.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -20,7 +20,7 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.client.report.UserReportlet;\n+import org.syncope.client.report.UserReportletConf;\n import org.syncope.core.AbstractTest;\n import org.syncope.core.persistence.beans.Report;\n \n@@ -52,8 +52,8 @@ public void save() {\n \n         Report report = new Report();\n         report.setName(\"new report\");\n-        report.addReportlet(new UserReportlet());\n-        report.addReportlet(new UserReportlet(\"second\"));\n+        report.addReportletConf(new UserReportletConf(\"first\"));\n+        report.addReportletConf(new UserReportletConf(\"second\"));\n \n         report = reportDAO.save(report);\n         assertNotNull(report);"},{"sha":"d7e35f32dc3c6a90fc9d53f61a136bcae55e605b","filename":"core/src/test/java/org/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -13,19 +13,19 @@\n  */\n package org.syncope.core.rest;\n \n+import static org.junit.Assert.*;\n+\n import java.io.IOException;\n import java.util.Arrays;\n import java.util.List;\n import org.apache.http.HttpResponse;\n import org.apache.http.client.methods.HttpGet;\n import org.apache.http.util.EntityUtils;\n-import static org.junit.Assert.*;\n-\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpStatusCodeException;\n import org.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n-import org.syncope.client.report.UserReportlet;\n+import org.syncope.client.report.UserReportletConf;\n import org.syncope.client.to.ReportExecTO;\n import org.syncope.client.to.ReportTO;\n import org.syncope.client.to.UserTO;\n@@ -85,8 +85,8 @@ public void readExecution() {\n     public void create() {\n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForCreate\");\n-        report.addReportlet(new UserReportlet());\n-        report.addReportlet(new UserReportlet(\"second\"));\n+        report.addReportletConf(new UserReportletConf(\"first\"));\n+        report.addReportletConf(new UserReportletConf(\"second\"));\n \n         report = restTemplate.postForObject(\n                 BASE_URL + \"report/create\", report, ReportTO.class);\n@@ -103,28 +103,28 @@ public void create() {\n     public void update() {\n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForUpdate\");\n-        report.addReportlet(new UserReportlet());\n-        report.addReportlet(new UserReportlet(\"second\"));\n+        report.addReportletConf(new UserReportletConf(\"first\"));\n+        report.addReportletConf(new UserReportletConf(\"second\"));\n \n         report = restTemplate.postForObject(\n                 BASE_URL + \"report/create\", report, ReportTO.class);\n         assertNotNull(report);\n-        assertEquals(2, report.getReportlets().size());\n+        assertEquals(2, report.getReportletConfs().size());\n \n-        report.addReportlet(new UserReportlet(\"last\"));\n+        report.addReportletConf(new UserReportletConf(\"last\"));\n \n         ReportTO updated = restTemplate.postForObject(\n                 BASE_URL + \"report/update\", report, ReportTO.class);\n         assertNotNull(updated);\n-        assertEquals(3, updated.getReportlets().size());\n+        assertEquals(3, updated.getReportletConfs().size());\n     }\n \n     @Test\n     public void delete() {\n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForDelete\");\n-        report.addReportlet(new UserReportlet());\n-        report.addReportlet(new UserReportlet(\"second\"));\n+        report.addReportletConf(new UserReportletConf(\"first\"));\n+        report.addReportletConf(new UserReportletConf(\"second\"));\n \n         report = restTemplate.postForObject(\n                 BASE_URL + \"report/create\", report, ReportTO.class);\n@@ -163,7 +163,7 @@ public void executeAndExport()\n             newExecs = reportTO.getExecutions().size();\n         }\n         assertEquals(newExecs, execs + 1);\n-        \n+\n         long newExec = reportTO.getExecutions().get(newExecs - 1).getId();\n \n         HttpGet getMethod = new HttpGet("},{"sha":"85e525b90cdda21d08ec70703b91436d5263fe7a","filename":"core/src/test/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=e445584a2ce181d0b2e8c54b0dfd3b23de5cfeb9","patch":"@@ -580,6 +580,6 @@\n     <Notification_events Notification_id=\"101\" events=\"unexisting2\"/>\n     \n     <Report id=\"1\" name=\"test\"/>\n-    <Report_reportlets Report_id=\"1\" reportlets=\"%3Corg.syncope.client.report.UserReportlet%3E%0A++%3Cname%3EtestReportlet%3C%2Fname%3E%0A%3C%2Forg.syncope.client.report.UserReportlet%3E\"/>\n+    <Report_reportletConfs Report_id=\"1\" reportletConfs=\"%3Corg.syncope.client.report.UserReportletConf%3E%0A++%3Cname%3Eorg.syncope.client.report.UserReportletConf%3C%2Fname%3E%0A++%3Cattrs%2F%3E%0A++%3CderAttrs%2F%3E%0A++%3CvirAttrs%2F%3E%0A++%3Cfeatures%2F%3E%0A%3C%2Forg.syncope.client.report.UserReportletConf%3E\"/>\n     <ReportExec Report_id=\"1\" id=\"1\" status=\"SUCCESS\" startDate=\"2012-02-26 15:40:04\" endDate=\"2012-02-26 15:41:04\"/>\n </dataset>"}]}