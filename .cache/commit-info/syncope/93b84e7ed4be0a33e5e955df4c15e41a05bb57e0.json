{"sha":"93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkzYjg0ZTdlZDRiZTBhMzNlNWU5NTVkZjRjMTVlNDFhMDViYjU3ZTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-29T12:43:13Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-29T12:47:37Z"},"message":"[SYNCOPE-1200] Ensuring createApproval works, besides updateApproval","tree":{"sha":"f9da8d3a638f5a05ba026e1bb1e64b4cd823b506","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f9da8d3a638f5a05ba026e1bb1e64b4cd823b506"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1fa7fe115309ffc71e8821644f5279a6b80c2ac8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1fa7fe115309ffc71e8821644f5279a6b80c2ac8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1fa7fe115309ffc71e8821644f5279a6b80c2ac8"}],"stats":{"total":118,"additions":91,"deletions":27},"files":[{"sha":"0c7ed6fa9fc102f73092b1e9f0ecc1d4e0d9c802","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","patch":"@@ -75,7 +75,6 @@\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.DerAttrHandler;\n import org.apache.syncope.core.provisioning.api.IntAttrName;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n@@ -640,14 +639,10 @@ protected MembershipTO getMembershipTO(\n         return membershipTO;\n     }\n \n-    protected Map<String, String> getConnObjectKeys(final Any<?> any) {\n+    protected Map<String, String> getConnObjectKeys(final Any<?> any, final AnyUtils anyUtils) {\n         Map<String, String> connObjectKeys = new HashMap<>();\n \n-        Iterable<? extends ExternalResource> iterable = any instanceof User\n-                ? userDAO.findAllResources((User) any)\n-                : any instanceof AnyObject\n-                        ? anyObjectDAO.findAllResources((AnyObject) any)\n-                        : ((Group) any).getResources();\n+        Iterable<? extends ExternalResource> iterable = anyUtils.getAllResources(any);\n         for (ExternalResource resource : iterable) {\n             Optional<? extends Provision> provision = resource.getProvision(any.getType());\n             if (provision.isPresent() && provision.get().getMapping() != null) {"},{"sha":"8827a19b10611898e28d7d1e1315c83b490c321f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","patch":"@@ -251,10 +251,12 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n+        AnyUtils anyUtils = anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT);\n+\n         Collection<String> currentResources = anyObjectDAO.findAllResourceKeys(anyObject.getKey());\n \n         // fetch connObjectKeys before update\n-        Map<String, String> oldConnObjectKeys = getConnObjectKeys(anyObject);\n+        Map<String, String> oldConnObjectKeys = getConnObjectKeys(anyObject, anyUtils);\n \n         // realm\n         setRealm(anyObject, anyObjectPatch);\n@@ -266,7 +268,6 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n             anyObject.setName(anyObjectPatch.getName().getValue());\n         }\n \n-        AnyUtils anyUtils = anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT);\n         // attributes and resources\n         propByRes.merge(fill(anyObject, anyObjectPatch, anyUtils, scce));\n \n@@ -416,7 +417,7 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n         }\n \n         // check if some connObjectKey was changed by the update above\n-        Map<String, String> newcCnnObjectKeys = getConnObjectKeys(anyObject);\n+        Map<String, String> newcCnnObjectKeys = getConnObjectKeys(anyObject, anyUtils);\n         oldConnObjectKeys.entrySet().stream().\n                 filter(entry -> newcCnnObjectKeys.containsKey(entry.getKey())\n                 && !entry.getValue().equals(newcCnnObjectKeys.get(entry.getKey())))."},{"sha":"da70ed849a0c1f5e7ef08754f8a5b17ca6a562b3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/GroupDataBinderImpl.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java?ref=93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","patch":"@@ -43,6 +43,7 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n+import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.DynGroupMembership;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n@@ -192,8 +193,10 @@ public PropagationByResource update(final Group toBeUpdated, final GroupPatch gr\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n+        AnyUtils anyUtils = anyUtilsFactory.getInstance(AnyTypeKind.GROUP);\n+\n         // fetch connObjectKeys before update\n-        Map<String, String> oldConnObjectKeys = getConnObjectKeys(group);\n+        Map<String, String> oldConnObjectKeys = getConnObjectKeys(group, anyUtils);\n \n         // realm\n         setRealm(group, groupPatch);\n@@ -218,15 +221,14 @@ public PropagationByResource update(final Group toBeUpdated, final GroupPatch gr\n         }\n \n         // attributes and resources\n-        propByRes.merge(fill(group, groupPatch, anyUtilsFactory.getInstance(AnyTypeKind.GROUP), scce));\n+        propByRes.merge(fill(group, groupPatch, anyUtils, scce));\n \n         // check if some connObjectKey was changed by the update above\n-        Map<String, String> newConnObjectKeys = getConnObjectKeys(group);\n+        Map<String, String> newConnObjectKeys = getConnObjectKeys(group, anyUtils);\n         oldConnObjectKeys.entrySet().stream().\n                 filter(entry -> newConnObjectKeys.containsKey(entry.getKey())\n                 && !entry.getValue().equals(newConnObjectKeys.get(entry.getKey()))).\n                 forEach(entry -> {\n-\n                     propByRes.addOldConnObjectKey(entry.getKey(), entry.getValue());\n                     propByRes.add(ResourceOperation.UPDATE, entry.getKey());\n                 });"},{"sha":"d1ce405fc6ba4c4daf67815ecc7e0242654d6fca","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","patch":"@@ -296,10 +296,12 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n+        AnyUtils anyUtils = anyUtilsFactory.getInstance(AnyTypeKind.USER);\n+\n         Collection<String> currentResources = userDAO.findAllResourceKeys(user.getKey());\n \n         // fetch connObjectKeys before update\n-        Map<String, String> oldConnObjectKeys = getConnObjectKeys(user);\n+        Map<String, String> oldConnObjectKeys = getConnObjectKeys(user, anyUtils);\n \n         // realm\n         setRealm(user, userPatch);\n@@ -369,7 +371,6 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n             }\n         }\n \n-        AnyUtils anyUtils = anyUtilsFactory.getInstance(AnyTypeKind.USER);\n         // attributes and resources\n         propByRes.merge(fill(user, userPatch, anyUtils, scce));\n \n@@ -519,12 +520,11 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n         }\n \n         // check if some connObjectKey was changed by the update above\n-        Map<String, String> newcCnnObjectKeys = getConnObjectKeys(user);\n+        Map<String, String> newcCnnObjectKeys = getConnObjectKeys(user, anyUtils);\n         oldConnObjectKeys.entrySet().stream().\n                 filter(entry -> newcCnnObjectKeys.containsKey(entry.getKey())\n                 && !entry.getValue().equals(newcCnnObjectKeys.get(entry.getKey()))).\n                 forEach(entry -> {\n-\n                     propByRes.addOldConnObjectKey(entry.getKey(), entry.getValue());\n                     propByRes.add(ResourceOperation.UPDATE, entry.getKey());\n                 });"},{"sha":"c24d66fbbde8a5584a4ba385560568435de70ab5","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserWorkflowServiceImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserWorkflowServiceImpl.java?ref=93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","patch":"@@ -30,30 +30,30 @@\n public class UserWorkflowServiceImpl implements UserWorkflowService {\n \n     @Autowired\n-    private UserWorkflowLogic lofic;\n+    private UserWorkflowLogic logic;\n \n     @Override\n     public WorkflowFormTO claimForm(final String taskId) {\n-        return lofic.claimForm(taskId);\n+        return logic.claimForm(taskId);\n     }\n \n     @Override\n     public UserTO executeTask(final String taskId, final UserTO userTO) {\n-        return lofic.executeWorkflowTask(userTO, taskId);\n+        return logic.executeWorkflowTask(userTO, taskId);\n     }\n \n     @Override\n     public WorkflowFormTO getFormForUser(final String userKey) {\n-        return lofic.getFormForUser(userKey);\n+        return logic.getFormForUser(userKey);\n     }\n \n     @Override\n     public List<WorkflowFormTO> getForms() {\n-        return lofic.getForms();\n+        return logic.getForms();\n     }\n \n     @Override\n     public UserTO submitForm(final WorkflowFormTO form) {\n-        return lofic.submitForm(form);\n+        return logic.submitForm(form);\n     }\n }"},{"sha":"4cc01391470a610eaea2daeb6eb6f7a06a87651a","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableUserWorkflowAdapter.java","status":"modified","additions":26,"deletions":2,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java?ref=93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","patch":"@@ -198,14 +198,33 @@ protected Set<String> getPerformedTasks(final User user) {\n     protected void saveForFormSubmit(final User user, final String password, final PropagationByResource propByRes) {\n         String formTaskId = getFormTask(user);\n         if (formTaskId != null) {\n+            UserTO userTO = engine.getRuntimeService().getVariable(user.getWorkflowId(), USER_TO, UserTO.class);\n+            if (userTO != null) {\n+                userTO.setKey(user.getKey());\n+                userTO.setCreationDate(user.getCreationDate());\n+                userTO.setLastChangeDate(user.getLastChangeDate());\n+                if (password == null) {\n+                    String encryptedPwd = engine.getRuntimeService().\n+                            getVariable(user.getWorkflowId(), ENCRYPTED_PWD, String.class);\n+                    if (encryptedPwd != null) {\n+                        userTO.setPassword(decrypt(encryptedPwd));\n+                    }\n+                } else {\n+                    userTO.setPassword(password);\n+                }\n+\n+                engine.getRuntimeService().setVariable(user.getWorkflowId(), USER_TO, userTO);\n+            }\n+\n             // SYNCOPE-238: This is needed to simplify the task query in this.getForms()\n             engine.getTaskService().setVariableLocal(formTaskId, TASK_IS_FORM, Boolean.TRUE);\n+\n             engine.getRuntimeService().setVariable(user.getWorkflowId(), PROP_BY_RESOURCE, propByRes);\n             if (propByRes != null) {\n                 propByRes.clear();\n             }\n \n-            if (StringUtils.isNotBlank(password)) {\n+            if (password != null) {\n                 engine.getRuntimeService().setVariable(user.getWorkflowId(), ENCRYPTED_PWD, encrypt(password));\n             }\n         }\n@@ -433,13 +452,18 @@ protected void doDelete(final User user) {\n     public WorkflowResult<String> execute(final UserTO userTO, final String taskId) {\n         User user = userDAO.authFind(userTO.getKey());\n \n-        final Map<String, Object> variables = new HashMap<>();\n+        Map<String, Object> variables = new HashMap<>();\n         variables.put(USER_TO, userTO);\n \n         Set<String> performedTasks = doExecuteTask(user, taskId, variables);\n         updateStatus(user);\n         User updated = userDAO.save(user);\n \n+        PropagationByResource propByRes = engine.getRuntimeService().getVariable(\n+                user.getWorkflowId(), PROP_BY_RESOURCE, PropagationByResource.class);\n+\n+        saveForFormSubmit(updated, userTO.getPassword(), propByRes);\n+\n         return new WorkflowResult<>(updated.getKey(), null, performedTasks);\n     }\n "},{"sha":"02ee77f24938763e67826e626b51537f37b16cf2","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/task/AutoActivate.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FAutoActivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FAutoActivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FAutoActivate.java?ref=93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","patch":"@@ -18,14 +18,43 @@\n  */\n package org.apache.syncope.core.workflow.flowable.task;\n \n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.workflow.flowable.FlowableUserWorkflowAdapter;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class AutoActivate extends AbstractFlowableServiceTask {\n \n+    @Autowired\n+    private UserDataBinder dataBinder;\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n     @Override\n     protected void doExecute(final String executionId) {\n+        User user = engine.getRuntimeService().\n+                getVariable(executionId, FlowableUserWorkflowAdapter.USER, User.class);\n+        UserTO userTO = engine.getRuntimeService().\n+                getVariable(executionId, FlowableUserWorkflowAdapter.USER_TO, UserTO.class);\n+        if (userTO != null && userTO.getKey() != null && user.getKey() != null) {\n+            user = userDAO.save(user);\n+\n+            UserPatch userPatch = AnyOperations.diff(userTO, dataBinder.getUserTO(user, true), false);\n+            // don't mess with password, as the cleartext values was already properly saved\n+            userPatch.setPassword(null);\n+\n+            dataBinder.update(user, userPatch);\n+\n+            engine.getRuntimeService().setVariable(executionId, FlowableUserWorkflowAdapter.USER, user);\n+        }\n+\n         engine.getRuntimeService().setVariable(executionId, FlowableUserWorkflowAdapter.PROPAGATE_ENABLE, Boolean.TRUE);\n     }\n }"},{"sha":"d8a7431f25fb0461c48bf2edff015fcf8b0399b2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserWorkflowITCase.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b84e7ed4be0a33e5e955df4c15e41a05bb57e0/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java?ref=93b84e7ed4be0a33e5e955df4c15e41a05bb57e0","patch":"@@ -29,6 +29,7 @@\n \n import java.util.Collections;\n import java.util.List;\n+import java.util.UUID;\n import javax.sql.DataSource;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -180,21 +181,33 @@ public void createWithApproval() {\n         assertNotNull(forms);\n         assertEquals(preForms + 1, forms.size());\n \n+        // 3. as admin, request for changes: still pending approval\n+        String updatedUsername = \"changed-\" + UUID.randomUUID().toString();\n+        userTO.setUsername(updatedUsername);\n+        userWorkflowService.executeTask(\"default\", userTO);\n+\n         WorkflowFormTO form = userWorkflowService.getFormForUser(userTO.getKey());\n         assertNotNull(form);\n         assertNotNull(form.getTaskId());\n+        assertNotNull(form.getUserTO());\n+        assertEquals(updatedUsername, form.getUserTO().getUsername());\n+        assertNull(form.getUserPatch());\n         assertNull(form.getOwner());\n \n-        // 4. claim task (from admin)\n+        // 4. claim task (as admin)\n         form = userWorkflowService.claimForm(form.getTaskId());\n         assertNotNull(form);\n         assertNotNull(form.getTaskId());\n+        assertNotNull(form.getUserTO());\n+        assertEquals(updatedUsername, form.getUserTO().getUsername());\n+        assertNull(form.getUserPatch());\n         assertNotNull(form.getOwner());\n \n         // 5. approve user (and verify that propagation occurred)\n         form.getProperty(\"approve\").get().setValue(Boolean.TRUE.toString());\n         userTO = userWorkflowService.submitForm(form);\n         assertNotNull(userTO);\n+        assertEquals(updatedUsername, userTO.getUsername());\n         assertEquals(\"active\", userTO.getStatus());\n         assertEquals(Collections.singleton(RESOURCE_NAME_TESTDB), userTO.getResources());\n "}]}