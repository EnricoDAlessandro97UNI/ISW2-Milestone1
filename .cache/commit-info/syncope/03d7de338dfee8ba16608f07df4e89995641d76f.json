{"sha":"03d7de338dfee8ba16608f07df4e89995641d76f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzZDdkZTMzOGRmZWU4YmExNjYwOGYwN2RmNGU4OTk5NTY0MWQ3NmY=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-01-12T15:31:53Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-01-12T15:31:53Z"},"message":"[SYNCOPE-156] provides any object create/update result page + several refactorings","tree":{"sha":"a972c3620f1a9385cab5b113b7fec88f650cefda","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a972c3620f1a9385cab5b113b7fec88f650cefda"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/03d7de338dfee8ba16608f07df4e89995641d76f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03d7de338dfee8ba16608f07df4e89995641d76f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03d7de338dfee8ba16608f07df4e89995641d76f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03d7de338dfee8ba16608f07df4e89995641d76f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"d5296cadd09eec9dbd2e945709ea02c5162df56e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5296cadd09eec9dbd2e945709ea02c5162df56e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d5296cadd09eec9dbd2e945709ea02c5162df56e"}],"stats":{"total":1978,"additions":818,"deletions":1160},"files":[{"sha":"e172bd45881430b54e21cb71650bd68ae32246a8","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -118,6 +118,16 @@ public final class Constants {\n \n     public static final String PREF_ANY_DERIVED_ATTRIBUTES_VIEW = \"any.%s.derived.attributes.view\";\n \n+    public static final String SUSPENDED_ICON = \"glyphicon glyphicon-ban-circle\";\n+\n+    public static final String ACTIVE_ICON = \"glyphicon glyphicon-ok-circle\";\n+\n+    public static final String UNDEFINED_ICON = \"glyphicon glyphicon-question-sign\";\n+\n+    public static final String NOT_FOUND_ICON = \"glyphicon glyphicon-remove-circle\";\n+\n+    ;\n+\n     /**\n      * ConnId's GuardedString is not in the classpath.\n      */"},{"sha":"5a25bed909e23bd95a9dde37c2e715e9cfc95a69","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -178,20 +178,6 @@ public static StatusPatch buildStatusPatch(final Collection<StatusBean> statuses\n         return statusPatch;\n     }\n \n-    public ConnObjectTO getConnObjectTO(\n-            final Long anyKey, final String resourceName, final List<ConnObjectWrapper> objects) {\n-\n-        for (ConnObjectWrapper object : objects) {\n-            if (anyKey.equals(object.getAny().getKey())\n-                    && resourceName.equalsIgnoreCase(object.getResourceName())) {\n-\n-                return object.getConnObjectTO();\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n     public Image getStatusImage(final String componentId, final Status status) {\n         final String alt, title, statusName;\n "},{"sha":"a376bf4b0789748160e6e48536b5a20572762fd1","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -49,15 +49,16 @@\n \n     private static final long serialVersionUID = 4114026480146090962L;\n \n+    private final String pageId = \"Any\";\n+\n     public BulkActionModalPage(\n             final BaseModal<T> modal,\n             final PageReference pageRef,\n             final Collection<T> items,\n             final List<IColumn<T, S>> columns,\n             final Collection<ActionLink.ActionType> actions,\n             final BaseRestClient bulkActionExecutor,\n-            final String keyFieldName,\n-            final String pageId) {\n+            final String keyFieldName) {\n \n         super(modal, pageRef);\n "},{"sha":"950794127d6113bf026bea0453d2c4d804a8157e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResultStatusModal.java","status":"removed","additions":0,"deletions":428,"changes":428,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -1,428 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.pages;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.Mode;\n-import org.apache.syncope.client.console.commons.status.Status;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.panels.FailureMessageModal;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.AttrTO;\n-import org.apache.syncope.common.lib.to.ConnObjectTO;\n-import org.apache.syncope.common.lib.to.PropagationStatus;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.image.Image;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.request.resource.ContextRelativeResource;\n-\n-/**\n- * Show user or group status after performing a successful operation.\n- *\n- * @param <T> anyTO\n- */\n-public final class ResultStatusModal<T extends AnyTO> extends AbstractModalPanel<T> {\n-\n-    private static final long serialVersionUID = 2646115294319713723L;\n-\n-    private static final String IMG_PREFIX = \"/img/statuses/\";\n-\n-    private final ProvisioningResult<AnyTO> provResult;\n-\n-    private final Mode mode;\n-\n-    /**\n-     * Status management utilities.\n-     */\n-    private final StatusUtils statusUtils;\n-\n-    public static class Builder<T extends AnyTO> implements Serializable {\n-\n-        private static final long serialVersionUID = 220361441802274899L;\n-\n-        private Mode mode;\n-\n-        private ProvisioningResult<AnyTO> provResult;\n-\n-        private final BaseModal<T> modal;\n-\n-        private final PageReference pageRef;\n-\n-        public Builder(\n-                final BaseModal<T> modal,\n-                final PageReference pageRef,\n-                final ProvisioningResult<AnyTO> provResult) {\n-            this.provResult = provResult;\n-            this.modal = modal;\n-            this.pageRef = pageRef;\n-        }\n-\n-        public ResultStatusModal.Builder<T> mode(final Mode mode) {\n-            this.mode = mode;\n-            return this;\n-        }\n-\n-        public ResultStatusModal<T> build() {\n-            return new ResultStatusModal<>(modal, pageRef, this);\n-        }\n-    }\n-\n-    private ResultStatusModal(\n-            final BaseModal<T> modal,\n-            final PageReference pageRef,\n-            final Builder<T> builder) {\n-\n-        super(modal, pageRef);\n-\n-        this.provResult = builder.provResult;\n-        statusUtils = new StatusUtils(new UserRestClient());\n-        if (builder.mode == null) {\n-            this.mode = Mode.ADMIN;\n-        } else {\n-            this.mode = builder.mode;\n-        }\n-\n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-        container.setOutputMarkupId(true);\n-        add(container);\n-\n-        final Fragment fragment = new Fragment(\"resultFrag\", mode == Mode.SELF\n-                ? \"userSelfResultFrag\"\n-                : \"propagationResultFrag\", this);\n-        fragment.setOutputMarkupId(true);\n-        container.add(fragment);\n-\n-        if (mode == Mode.ADMIN) {\n-            // add Syncope propagation status\n-            PropagationStatus syncope = new PropagationStatus();\n-            syncope.setResource(\"Syncope\");\n-            syncope.setStatus(PropagationTaskExecStatus.SUCCESS);\n-\n-            List<PropagationStatus> propagations = new ArrayList<PropagationStatus>();\n-            propagations.add(syncope);\n-            propagations.addAll(provResult.getPropagationStatuses());\n-\n-            AnyTO any = provResult.getAny();\n-\n-            fragment.add(new Label(\"info\",\n-                    ((any instanceof UserTO) && ((UserTO) any).getUsername() != null)\n-                            ? ((UserTO) any).getUsername()\n-                            : ((any instanceof GroupTO) && ((GroupTO) any).getName() != null)\n-                                    ? ((GroupTO) any).getName()\n-                                    : String.valueOf(any.getKey())));\n-\n-            final ListView<PropagationStatus> propRes = new ListView<PropagationStatus>(\"resources\",\n-                    propagations) {\n-\n-                private static final long serialVersionUID = -1020475259727720708L;\n-\n-                @Override\n-                protected void populateItem(final ListItem<PropagationStatus> item) {\n-                    final PropagationStatus propTO = (PropagationStatus) item.getDefaultModelObject();\n-\n-                    final ListView<String> attributes = getConnObjectView(propTO);\n-\n-                    final Fragment attrhead;\n-                    if (attributes.getModelObject() == null || attributes.getModelObject().isEmpty()) {\n-                        attrhead = new Fragment(\"attrhead\", \"emptyAttrHeadFrag\", this);\n-                    } else {\n-                        attrhead = new Fragment(\"attrhead\", \"attrHeadFrag\", this);\n-                    }\n-\n-                    item.add(attrhead);\n-                    item.add(attributes);\n-\n-                    attrhead.add(new Label(\"resource\", propTO.getResource()));\n-\n-                    attrhead.add(new Label(\"propagation\", propTO.getStatus() == null\n-                            ? \"UNDEFINED\" : propTO.getStatus().toString()));\n-\n-                    final Image image;\n-                    final String alt, title;\n-\n-                    final BaseModal<T> failureWindow = new BaseModal<>(\"failureWindow\");\n-\n-                    final AjaxLink<?> failureWindowLink = new AjaxLink<Void>(\"showFailureWindow\") {\n-\n-                        private static final long serialVersionUID = -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target) {\n-                            failureWindow.show(target);\n-                        }\n-                    };\n-\n-                    switch (propTO.getStatus()) {\n-\n-                        case SUCCESS:\n-                        case CREATED:\n-                            image = new Image(\"icon\",\n-                                    new ContextRelativeResource(IMG_PREFIX + Status.ACTIVE.toString()\n-                                            + Constants.PNG_EXT));\n-                            alt = \"success icon\";\n-                            title = \"success\";\n-                            failureWindow.setVisible(false);\n-                            failureWindowLink.setEnabled(false);\n-                            break;\n-\n-                        default:\n-                            image = new Image(\"icon\",\n-                                    new ContextRelativeResource(IMG_PREFIX + Status.SUSPENDED.toString()\n-                                            + Constants.PNG_EXT));\n-                            alt = \"failure icon\";\n-                            title = \"failure\";\n-                    }\n-\n-                    image.add(new Behavior() {\n-\n-                        private static final long serialVersionUID = 1469628524240283489L;\n-\n-                        @Override\n-                        public void onComponentTag(final Component component, final ComponentTag tag) {\n-                            tag.put(\"alt\", alt);\n-                            tag.put(\"title\", title);\n-                        }\n-                    });\n-                    final FailureMessageModal<T> executionFailureMessagePage;\n-                    if (propTO.getFailureReason() == null) {\n-                        executionFailureMessagePage = new FailureMessageModal<>(\n-                                modal, pageRef, StringUtils.EMPTY);\n-                    } else {\n-                        executionFailureMessagePage = new FailureMessageModal<>(\n-                                modal, pageRef, propTO.getFailureReason());\n-                    }\n-\n-                    failureWindow.setContent(executionFailureMessagePage);\n-                }\n-            };\n-            fragment.add(propRes);\n-        }\n-\n-        final AjaxLink<Void> close = new IndicatingAjaxLink<Void>(\"close\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                builder.modal.close(target);\n-            }\n-        };\n-        container.add(close);\n-\n-        setOutputMarkupId(true);\n-    }\n-\n-    /**\n-     * Get remote attributes list view.\n-     *\n-     * @param propTO propagation TO.\n-     * @return list view.\n-     */\n-    private ListView<String> getConnObjectView(final PropagationStatus propTO) {\n-        final ConnObjectTO before = propTO.getBeforeObj();\n-        final ConnObjectTO after = propTO.getAfterObj();\n-\n-        // sorted in reversed presentation order\n-        final List<String> head = new ArrayList<String>();\n-        if (provResult.getAny() instanceof UserTO) {\n-            head.add(ConnIdSpecialAttributeName.PASSWORD);\n-            head.add(ConnIdSpecialAttributeName.ENABLE);\n-        }\n-        head.add(ConnIdSpecialAttributeName.UID);\n-        head.add(ConnIdSpecialAttributeName.NAME);\n-\n-        final Map<String, AttrTO> beforeAttrMap = before == null\n-                ? Collections.<String, AttrTO>emptyMap()\n-                : before.getPlainAttrMap();\n-\n-        final Map<String, AttrTO> afterAttrMap = after == null\n-                ? Collections.<String, AttrTO>emptyMap()\n-                : after.getPlainAttrMap();\n-\n-        final Set<String> attributes = new HashSet<String>();\n-        attributes.addAll(beforeAttrMap.keySet());\n-        attributes.addAll(afterAttrMap.keySet());\n-\n-        if (!(provResult.getAny() instanceof UserTO)) {\n-            attributes.remove(ConnIdSpecialAttributeName.PASSWORD);\n-            attributes.remove(ConnIdSpecialAttributeName.ENABLE);\n-        }\n-\n-        final List<String> profile = new ArrayList<String>();\n-        profile.addAll(attributes);\n-        profile.removeAll(head);\n-        Collections.sort(profile);\n-\n-        for (String attr : head) {\n-            if (attributes.contains(attr)) {\n-                profile.add(0, attr);\n-            }\n-        }\n-\n-        return new ListView<String>(\"attrs\", profile) {\n-\n-            private static final long serialVersionUID = 4949588177564901031L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<String> item) {\n-                String name = item.getModelObject();\n-\n-                final Fragment beforeValue;\n-                final Fragment afterValue;\n-                if (ConnIdSpecialAttributeName.ENABLE.equals(name)) {\n-                    beforeValue = getStatusIcon(\"beforeValue\", propTO.getResource(), before);\n-                    afterValue = getStatusIcon(\"afterValue\", propTO.getResource(), after);\n-                } else {\n-                    beforeValue = getLabelValue(\"beforeValue\", name, beforeAttrMap);\n-                    afterValue = getLabelValue(\"afterValue\", name, afterAttrMap);\n-                }\n-\n-                item.add(new Label(\"attrName\", new ResourceModel(name, name)));\n-\n-                item.add(beforeValue);\n-                item.add(afterValue);\n-            }\n-        };\n-    }\n-\n-    /**\n-     * Get fragment for attribute value (not remote status).\n-     *\n-     * @param id component id to be replaced with the fragment content.\n-     * @param attrName remote attribute name\n-     * @param attrMap remote attributes map.\n-     * @return fragment.\n-     */\n-    private Fragment getLabelValue(final String id, final String attrName, final Map<String, AttrTO> attrMap) {\n-        final String value;\n-\n-        final AttrTO attr = attrMap.get(attrName);\n-\n-        if (attr == null || attr.getValues() == null || attr.getValues().isEmpty()) {\n-            value = \"\";\n-        } else if (ConnIdSpecialAttributeName.PASSWORD.equals(attrName)) {\n-            value = \"********\";\n-        } else {\n-            value = attr.getValues().size() > 1\n-                    ? attr.getValues().toString()\n-                    : attr.getValues().get(0);\n-        }\n-\n-        Component label = new Label(\"value\", value.length() > 50 ? value.substring(0, 50) + \"...\" : value).\n-                add(new Behavior() {\n-\n-                    private static final long serialVersionUID = 1469628524240283489L;\n-\n-                    @Override\n-                    public void onComponentTag(final Component component, final ComponentTag tag) {\n-                        tag.put(\"title\", value);\n-                    }\n-                });\n-\n-        final Fragment frag = new Fragment(id, \"attrValueFrag\", this);\n-        frag.add(label);\n-\n-        return frag;\n-    }\n-\n-    /**\n-     * Get fragment for user status icon.\n-     *\n-     * @param id component id to be replaced with the fragment content\n-     * @param resourceName resource name\n-     * @param objectTO connector object TO\n-     * @return fragment.\n-     */\n-    private Fragment getStatusIcon(final String id, final String resourceName, final ConnObjectTO objectTO) {\n-        final Image image;\n-        final String alt, title;\n-        switch (statusUtils.getStatusBean(\n-                provResult.getAny(), resourceName, objectTO, this.provResult.getAny() instanceof GroupTO).getStatus()) {\n-\n-            case ACTIVE:\n-                image = new Image(\"status\",\n-                        new ContextRelativeResource(IMG_PREFIX + Status.ACTIVE.toString() + Constants.PNG_EXT));\n-                alt = \"active icon\";\n-                title = \"Enabled\";\n-                break;\n-\n-            case SUSPENDED:\n-                image = new Image(\"status\",\n-                        new ContextRelativeResource(IMG_PREFIX + Status.SUSPENDED.toString() + Constants.PNG_EXT));\n-                alt = \"inactive icon\";\n-                title = \"Disabled\";\n-                break;\n-\n-            default:\n-                image = null;\n-                alt = null;\n-                title = null;\n-        }\n-\n-        final Fragment frag;\n-        if (image == null) {\n-            frag = new Fragment(id, \"emptyFrag\", this);\n-        } else {\n-            image.add(new Behavior() {\n-\n-                private static final long serialVersionUID = 1469628524240283489L;\n-\n-                @Override\n-                public void onComponentTag(final Component component, final ComponentTag tag) {\n-                    tag.put(\"alt\", alt);\n-                    tag.put(\"title\", title);\n-                    tag.put(\"width\", \"12px\");\n-                    tag.put(\"height\", \"12px\");\n-                }\n-            });\n-\n-            frag = new Fragment(id, \"remoteStatusFrag\", this);\n-            frag.add(image);\n-        }\n-\n-        return frag;\n-    }\n-}"},{"sha":"9da22a5ca0791b97228c0082b1d50dfb1c2f137b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -170,7 +170,7 @@ private void updateResultTable(final boolean create, final int rows) {\n                 ? (create ? (int) resultTable.getPageCount() - 1 : (int) resultTable.getCurrentPage()) : 0;\n \n         AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<>(\n-                dataProvider, getPageId(), page.getPageReference()).\n+                dataProvider, page.getPageReference()).\n                 setColumns(getColumns()).\n                 setRowsPerPage(rows).\n                 setBulkActions(getBulkActions(), restClient, \"key\").\n@@ -257,8 +257,6 @@ public void setRows(final int rows) {\n \n     protected abstract Collection<ActionLink.ActionType> getBulkActions();\n \n-    protected abstract String getPageId();\n-\n     public abstract static class Builder<T extends Serializable, W extends Serializable, E extends BaseRestClient>\n             extends WizardMgtPanel.Builder<W> {\n "},{"sha":"3cd283d62955ccc758d955f4fd87500b2149eba5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -67,15 +67,12 @@\n \n         private String itemKeyField;\n \n-        private final String pageId;\n-\n         private final PageReference pageRef;\n \n         private WebMarkupContainer container;\n \n-        public Builder(final ISortableDataProvider<T, S> provider, final String pageId, final PageReference pageRef) {\n+        public Builder(final ISortableDataProvider<T, S> provider, final PageReference pageRef) {\n             this.dataProvider = provider;\n-            this.pageId = pageId;\n             this.pageRef = pageRef;\n         }\n \n@@ -208,8 +205,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         builder.columns,\n                         builder.bulkActions,\n                         builder.bulkActionExecutor,\n-                        builder.itemKeyField,\n-                        builder.pageId));\n+                        builder.itemKeyField));\n \n                 bulkModalWin.show(target);\n             }"},{"sha":"a7e5d319958591ca02f1f491ca491b0e2abd28dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":32,"deletions":137,"changes":169,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -18,21 +18,17 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n-import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.client.console.commons.AnyDataProvider;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.AnyDisplayAttributesModalPage;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n-import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -41,7 +37,6 @@\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n@@ -52,65 +47,16 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public class AnyObjectSearchResultPanel<T extends AnyTO>\n-        extends AbstractSearchResultPanel<T, AnyHandler<T>, AnyDataProvider<T>, AbstractAnyRestClient<T>> {\n+public class AnyObjectSearchResultPanel extends AnySearchResultPanel<AnyObjectTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    protected final SchemaRestClient schemaRestClient = new SchemaRestClient();\n-\n-    protected final List<String> schemaNames;\n-\n-    protected final List<String> dSchemaNames;\n-\n-    private final String pageID = \"Any\";\n-\n-    /**\n-     * Filter used in case of filtered search.\n-     */\n-    private String fiql;\n-\n-    /**\n-     * Realm related to current panel.\n-     */\n-    protected final String realm;\n-\n-    /**\n-     * Any type related to current panel.\n-     */\n-    protected final String type;\n-\n-    protected AnyObjectSearchResultPanel(final String id, final Builder<T> builder) {\n+    protected AnyObjectSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n-        this.realm = builder.realm;\n-        this.type = builder.type;\n-        this.fiql = builder.fiql;\n-\n-        modal.size(Modal.Size.Large);\n-\n-        add(new Label(\"name\", builder.type));\n-\n-        this.schemaNames = new ArrayList<>();\n-        for (AnyTypeClassTO anyTypeClassTO : AnySearchResultPanelBuilder.class.cast(builder).getAnyTypeClassTOs()) {\n-            this.schemaNames.addAll(anyTypeClassTO.getPlainSchemas());\n-        }\n-        this.dSchemaNames = new ArrayList<>();\n-        for (AnyTypeClassTO anyTypeClassTO : AnySearchResultPanelBuilder.class.cast(builder).getAnyTypeClassTOs()) {\n-            this.dSchemaNames.addAll(anyTypeClassTO.getDerSchemas());\n-        }\n-\n-        initResultTable();\n-    }\n-\n-    @Override\n-    protected AnyDataProvider<T> dataProvider() {\n-        final AnyDataProvider<T> dp = new AnyDataProvider<>(restClient, rows, filtered, realm, type);\n-        return dp.setFIQL(this.fiql);\n     }\n \n     @Override\n@@ -119,80 +65,81 @@ protected String paginatorRowsKey() {\n     }\n \n     @Override\n-    protected List<IColumn<T, String>> getColumns() {\n-        final List<IColumn<T, String>> columns = new ArrayList<>();\n+    protected List<IColumn<AnyObjectTO, String>> getColumns() {\n+        final List<IColumn<AnyObjectTO, String>> columns = new ArrayList<>();\n \n         for (String name : prefMan.getList(getRequest(), String.format(Constants.PREF_ANY_DETAILS_VIEW, type))) {\n             final Field field = ReflectionUtils.findField(AnyObjectTO.class, name);\n \n             if (\"token\".equalsIgnoreCase(name)) {\n-                columns.add(new PropertyColumn<T, String>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n             } else if (field != null && field.getType().equals(Date.class)) {\n-                columns.add(new PropertyColumn<T, String>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n             } else {\n-                columns.add(new PropertyColumn<T, String>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n             }\n         }\n \n         for (String name : prefMan.getList(getRequest(), String.format(Constants.PREF_ANY_ATTRIBUTES_VIEW, type))) {\n             if (schemaNames.contains(name)) {\n-                columns.add(new AttrColumn<T>(name, SchemaType.PLAIN));\n+                columns.add(new AttrColumn<AnyObjectTO>(name, SchemaType.PLAIN));\n             }\n         }\n \n         for (String name\n                 : prefMan.getList(getRequest(), String.format(Constants.PREF_ANY_DERIVED_ATTRIBUTES_VIEW, type))) {\n             if (dSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<T>(name, SchemaType.DERIVED));\n+                columns.add(new AttrColumn<AnyObjectTO>(name, SchemaType.DERIVED));\n             }\n         }\n \n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : AnyDisplayAttributesModalPage.ANY_DEFAULT_SELECTION) {\n-                columns.add(new PropertyColumn<T, String>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n             }\n \n         }\n \n-        columns.add(new ActionColumn<T, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new ActionColumn<AnyObjectTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = -3503023501954863131L;\n \n             @Override\n-            public ActionLinksPanel<T> getActions(final String componentId, final IModel<T> model) {\n-                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder(page.getPageReference());\n+            public ActionLinksPanel<AnyObjectTO> getActions(final String componentId, final IModel<AnyObjectTO> model) {\n+                final ActionLinksPanel.Builder<AnyObjectTO> panel = ActionLinksPanel.builder(page.getPageReference());\n \n-                panel.add(new ActionLink<T>() {\n+                panel.add(new ActionLink<AnyObjectTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                         send(AnyObjectSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<AnyHandler<T>>(\n-                                        new AnyHandler<T>(\n-                                                new AnyObjectRestClient().<T>read(model.getObject().getKey())),\n+                                new AjaxWizard.EditItemActionEvent<AnyHandler<AnyObjectTO>>(\n+                                        new AnyHandler<AnyObjectTO>(new AnyObjectRestClient().<AnyObjectTO>read(\n+                                                model.getObject().getKey())),\n                                         target));\n                     }\n                 }, ActionLink.ActionType.EDIT, String.format(\"%s_%s\", type, AnyEntitlement.READ)).add(\n-                        new ActionLink<T>() {\n+                        new ActionLink<AnyObjectTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770645L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                        final T clone = SerializationUtils.clone(model.getObject());\n+                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                        final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n                         clone.setKey(0L);\n                         send(AnyObjectSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.NewItemActionEvent<AnyHandler<T>>(new AnyHandler<T>(clone), target));\n+                                new AjaxWizard.NewItemActionEvent<AnyHandler<AnyObjectTO>>(new AnyHandler<AnyObjectTO>(\n+                                        clone), target));\n                     }\n-                }, ActionLink.ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<T>() {\n+                }, ActionLink.ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<AnyObjectTO>() {\n \n                             private static final long serialVersionUID = -7978723352517770646L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                                 try {\n                                     restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n@@ -245,75 +192,23 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n         return columns;\n     }\n \n-    public void search(final String fiql, final AjaxRequestTarget target) {\n-        this.fiql = fiql;\n-        dataProvider.setFIQL(fiql);\n-        super.search(target);\n-    }\n-\n-    @Override\n-    protected Collection<ActionLink.ActionType> getBulkActions() {\n-        final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+    public static class Builder extends AnySearchResultPanel.Builder<AnyObjectTO> {\n \n-        bulkActions.add(ActionLink.ActionType.DELETE);\n-        bulkActions.add(ActionLink.ActionType.SUSPEND);\n-        bulkActions.add(ActionLink.ActionType.REACTIVATE);\n-\n-        return bulkActions;\n-    }\n-\n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n-    public interface AnySearchResultPanelBuilder extends Serializable {\n-\n-        List<AnyTypeClassTO> getAnyTypeClassTOs();\n-    }\n-\n-    public static class Builder<T extends AnyTO>\n-            extends AbstractSearchResultPanel.Builder<T, AnyHandler<T>, AbstractAnyRestClient<T>>\n-            implements AnySearchResultPanelBuilder {\n-\n-        private static final long serialVersionUID = -6828423611982275640L;\n-\n-        /**\n-         * Realm related to current panel.\n-         */\n-        protected String realm = \"/\";\n-\n-        /**\n-         * Any type related to current panel.\n-         */\n-        protected final String type;\n-\n-        private final List<AnyTypeClassTO> anyTypeClassTOs;\n+        private static final long serialVersionUID = -6828423611982275641L;\n \n         public Builder(\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<T> restClient,\n+                final AbstractAnyRestClient<AnyObjectTO> restClient,\n                 final String type,\n                 final PageReference pageRef) {\n \n-            super(restClient, pageRef);\n-            this.anyTypeClassTOs = anyTypeClassTOs;\n-            this.type = type;\n-        }\n-\n-        @Override\n-        protected WizardMgtPanel<AnyHandler<T>> newInstance(final String id) {\n-            return new AnyObjectSearchResultPanel<T>(id, this);\n-        }\n-\n-        public Builder<T> setRealm(final String realm) {\n-            this.realm = realm;\n-            return this;\n+            super(anyTypeClassTOs, restClient, type, pageRef);\n+            setShowResultPage(true);\n         }\n \n         @Override\n-        public List<AnyTypeClassTO> getAnyTypeClassTOs() {\n-            return this.anyTypeClassTOs;\n+        protected WizardMgtPanel<AnyHandler<AnyObjectTO>> newInstance(final String id) {\n+            return new AnyObjectSearchResultPanel(id, this);\n         }\n     }\n }"},{"sha":"6021d8e6b1de76d8d301ac360a925990cf086e67","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnySearchResultPanel.java","status":"added","additions":195,"deletions":0,"changes":195,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -0,0 +1,195 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.commons.AnyDataProvider;\n+import org.apache.syncope.client.console.commons.SerializableTransformer;\n+import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n+import org.apache.syncope.client.console.wizards.any.StatusPanel;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public abstract class AnySearchResultPanel<T extends AnyTO>\n+        extends AbstractSearchResultPanel<T, AnyHandler<T>, AnyDataProvider<T>, AbstractAnyRestClient<T>> {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    protected final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    protected final List<String> schemaNames;\n+\n+    protected final List<String> dSchemaNames;\n+\n+    /**\n+     * Filter used in case of filtered search.\n+     */\n+    protected String fiql;\n+\n+    /**\n+     * Realm related to current panel.\n+     */\n+    protected final String realm;\n+\n+    /**\n+     * Any type related to current panel.\n+     */\n+    protected final String type;\n+\n+    protected AnySearchResultPanel(final String id, final Builder<T> builder) {\n+        super(id, builder);\n+        this.realm = builder.realm;\n+        this.type = builder.type;\n+        this.fiql = builder.fiql;\n+\n+        modal.size(Modal.Size.Large);\n+\n+        add(new Label(\"name\", builder.type));\n+\n+        this.schemaNames = new ArrayList<>();\n+        for (AnyTypeClassTO anyTypeClassTO : AnySearchResultPanelBuilder.class.cast(builder).getAnyTypeClassTOs()) {\n+            this.schemaNames.addAll(anyTypeClassTO.getPlainSchemas());\n+        }\n+        this.dSchemaNames = new ArrayList<>();\n+        for (AnyTypeClassTO anyTypeClassTO : AnySearchResultPanelBuilder.class.cast(builder).getAnyTypeClassTOs()) {\n+            this.dSchemaNames.addAll(anyTypeClassTO.getDerSchemas());\n+        }\n+\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected AnyDataProvider<T> dataProvider() {\n+        final AnyDataProvider<T> dp = new AnyDataProvider<>(restClient, rows, filtered, realm, type);\n+        return dp.setFIQL(this.fiql);\n+    }\n+\n+    public void search(final String fiql, final AjaxRequestTarget target) {\n+        this.fiql = fiql;\n+        dataProvider.setFIQL(fiql);\n+        super.search(target);\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+\n+        bulkActions.add(ActionLink.ActionType.DELETE);\n+        bulkActions.add(ActionLink.ActionType.SUSPEND);\n+        bulkActions.add(ActionLink.ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n+    public interface AnySearchResultPanelBuilder extends Serializable {\n+\n+        List<AnyTypeClassTO> getAnyTypeClassTOs();\n+    }\n+\n+    public abstract static class Builder<T extends AnyTO>\n+            extends AbstractSearchResultPanel.Builder<T, AnyHandler<T>, AbstractAnyRestClient<T>>\n+            implements AnySearchResultPanelBuilder {\n+\n+        private static final long serialVersionUID = -6828423611982275640L;\n+\n+        /**\n+         * Realm related to current panel.\n+         */\n+        protected String realm = \"/\";\n+\n+        /**\n+         * Any type related to current panel.\n+         */\n+        protected final String type;\n+\n+        private final List<AnyTypeClassTO> anyTypeClassTOs;\n+\n+        public Builder(\n+                final List<AnyTypeClassTO> anyTypeClassTOs,\n+                final AbstractAnyRestClient<T> restClient,\n+                final String type,\n+                final PageReference pageRef) {\n+\n+            super(restClient, pageRef);\n+            this.anyTypeClassTOs = anyTypeClassTOs;\n+            this.type = type;\n+        }\n+\n+        public Builder<T> setRealm(final String realm) {\n+            this.realm = realm;\n+            return this;\n+        }\n+\n+        @Override\n+        public List<AnyTypeClassTO> getAnyTypeClassTOs() {\n+            return this.anyTypeClassTOs;\n+        }\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    protected Panel customResultBody(\n+            final String panelId, final AnyHandler<T> item, final Serializable result) {\n+        if (!(result instanceof ProvisioningResult)) {\n+            throw new IllegalStateException(\"Unsupported result type\");\n+        }\n+\n+        return new StatusPanel(\n+                panelId,\n+                ((ProvisioningResult<T>) result).getAny(),\n+                new ListModel<StatusBean>(new ArrayList<StatusBean>()),\n+                CollectionUtils.collect(\n+                        ((ProvisioningResult<T>) result).getPropagationStatuses(),\n+                        new SerializableTransformer<PropagationStatus, Pair<ConnObjectTO, ConnObjectWrapper>>() {\n+\n+                    private static final long serialVersionUID = -4931455531906427515L;\n+\n+                    @Override\n+                    public Pair<ConnObjectTO, ConnObjectWrapper> transform(final PropagationStatus input) {\n+                        ConnObjectTO before = input.getBeforeObj();\n+                        ConnObjectWrapper afterObjWrapper = new ConnObjectWrapper(\n+                                ((ProvisioningResult<T>) result).getAny(),\n+                                input.getResource(),\n+                                input.getAfterObj());\n+                        return Pair.of(before, afterObjWrapper);\n+                    }\n+\n+                }, new ArrayList<Pair<ConnObjectTO, ConnObjectWrapper>>()),\n+                pageRef);\n+    }\n+}"},{"sha":"be9d3c0b9ecf128cdf232fe03b1186449b9a116a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -60,8 +60,6 @@ public class AnyTypeClassesPanel extends AbstractTypesPanel<AnyTypeClassTO, AnyT\n \n     private static final long serialVersionUID = -2356760296223908382L;\n \n-    private final String pageID = \"AnyTypesClasses\";\n-\n     public AnyTypeClassesPanel(final String id,\n             final AbstractSearchResultPanel.Builder<AnyTypeClassTO, AnyTypeClassTO, BaseRestClient> builder) {\n         super(id, builder);\n@@ -114,7 +112,8 @@ protected void onCancelInternal(final AnyTypeClassTO modelObject) {\n             }\n \n             @Override\n-            protected void onApplyInternal(final AnyTypeClassTO modelObject) {\n+            protected Serializable onApplyInternal(final AnyTypeClassTO modelObject) {\n+                return null;\n             }\n         }, true);\n \n@@ -137,11 +136,6 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n \n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n     @Override\n     protected List<IColumn<AnyTypeClassTO, String>> getColumns() {\n \n@@ -205,8 +199,8 @@ public String getCssClass() {\n             public void populateItem(final Item<ICellPopulator<AnyTypeClassTO>> item, final String componentId,\n                     final IModel<AnyTypeClassTO> model) {\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.\n+                        getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks.addWithRoles(new ActionLink<Serializable>() {\n "},{"sha":"3bea20aef956bfdaacd06a4df774f63f4732360d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypePanel.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -64,8 +64,6 @@ public class AnyTypePanel extends AbstractTypesPanel<AnyTypeTO, AnyTypeProvider>\n \n     private static final long serialVersionUID = 3905038169553185171L;\n \n-    private final String pageID = \"AnyTypes\";\n-\n     public AnyTypePanel(final String id, final Builder<AnyTypeTO, AnyTypeTO, BaseRestClient> builder) {\n         super(id, builder);\n     }\n@@ -117,7 +115,9 @@ protected void onCancelInternal(final AnyTypeTO modelObject) {\n             }\n \n             @Override\n-            protected void onApplyInternal(final AnyTypeTO modelObject) {\n+            protected Serializable onApplyInternal(final AnyTypeTO modelObject) {\n+                // do nothing\n+                return null;\n             }\n         }, true);\n \n@@ -140,11 +140,6 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n \n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n     @Override\n     protected List<IColumn<AnyTypeTO, String>> getColumns() {\n "},{"sha":"ecf64c9f42b8650cfd88b0a81459721c74472e65","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/FailureMessageModal.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -21,15 +21,18 @@\n import java.io.Serializable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n \n-public class FailureMessageModal<T extends Serializable> extends AbstractModalPanel<T> {\n+public class FailureMessageModal<T extends Serializable> extends Panel implements ModalPanel<T> {\n \n     private static final long serialVersionUID = 9216117990503199258L;\n \n-    public FailureMessageModal(final BaseModal<T> modal, final PageReference pageRef, final String failureMessage) {\n-        super(modal, pageRef);\n+    public FailureMessageModal(final PageReference pageRef, final String failureMessage) {\n+        super(BaseModal.CONTENT_ID);\n         final Label executionFailureMessage;\n         if (!failureMessage.isEmpty()) {\n             executionFailureMessage = new Label(\"failureMessage\", new Model<String>(failureMessage));\n@@ -38,4 +41,19 @@ public FailureMessageModal(final BaseModal<T> modal, final PageReference pageRef\n         }\n         add(executionFailureMessage.setOutputMarkupId(true));\n     }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public T getItem() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n }"},{"sha":"762878b70eba366a4e3be195770e4539e11b722d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":3,"deletions":22,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -22,7 +22,6 @@\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n@@ -34,7 +33,6 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -54,12 +52,10 @@\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public class GroupSearchResultPanel extends AnyObjectSearchResultPanel<GroupTO> {\n+public class GroupSearchResultPanel extends AnySearchResultPanel<GroupTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    private final String pageID = \"Groups\";\n-\n     protected GroupSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n     }\n@@ -192,23 +188,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n         return columns;\n     }\n \n-    @Override\n-    protected Collection<ActionLink.ActionType> getBulkActions() {\n-        final List<ActionType> bulkActions = new ArrayList<>();\n-\n-        bulkActions.add(ActionType.DELETE);\n-        bulkActions.add(ActionType.SUSPEND);\n-        bulkActions.add(ActionType.REACTIVATE);\n-\n-        return bulkActions;\n-    }\n-\n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n-    public static class Builder extends AnyObjectSearchResultPanel.Builder<GroupTO>\n+    public static class Builder extends AnySearchResultPanel.Builder<GroupTO>\n             implements AnySearchResultPanelBuilder {\n \n         private static final long serialVersionUID = 1L;\n@@ -220,6 +200,7 @@ public Builder(\n                 final PageReference pageRef) {\n \n             super(anyTypeClassTOs, restClient, type, pageRef);\n+            setShowResultPage(true);\n         }\n \n         @Override"},{"sha":"c07789c9ceb166347857818fa8a75607a9bac8d9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n@@ -183,12 +183,12 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 final AnyObjectTO anyObjectTO = new AnyObjectTO();\n                 anyObjectTO.setRealm(realmTO.getFullPath());\n                 anyObjectTO.setType(anyTypeTO.getKey());\n-                panel = new AnyObjectSearchResultPanel.Builder<AnyObjectTO>(\n+                panel = new AnyObjectSearchResultPanel.Builder(\n                         anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n                         anyObjectRestClient,\n                         anyTypeTO.getKey(),\n                         pageReference).setRealm(realmTO.getFullPath()).\n-                        addNewItemPanelBuilder(new AnyWizardBuilder<AnyObjectTO>(\n+                        addNewItemPanelBuilder(new AnyObjectWizardBuilder(\n                                 BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).\n                         addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getNotificationPanel()).\n                         build(id);"},{"sha":"0bafa606820b38d61ecbcc473063202f1d5efa44","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypePanel.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -62,8 +62,6 @@ public class RelationshipTypePanel extends AbstractTypesPanel<RelationshipTypeTO\n \n     private static final long serialVersionUID = -3731778000138547357L;\n \n-    private final String pageID = \"RelationshipTypes\";\n-\n     public RelationshipTypePanel(\n             final String id, final Builder<RelationshipTypeTO, RelationshipTypeTO, BaseRestClient> builder) {\n         super(id, builder);\n@@ -119,7 +117,9 @@ protected void onCancelInternal(final RelationshipTypeTO modelObject) {\n             }\n \n             @Override\n-            protected void onApplyInternal(final RelationshipTypeTO modelObject) {\n+            protected Serializable onApplyInternal(final RelationshipTypeTO modelObject) {\n+                // do nothing\n+                return null;\n             }\n         }, true);\n \n@@ -142,11 +142,6 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n \n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n     @Override\n     protected List<IColumn<RelationshipTypeTO, String>> getColumns() {\n "},{"sha":"b091a4b983088ddb1029091adbe84ce4abbe4b1d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSearchResultPanel.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -51,10 +51,9 @@\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    private final String pageID = \"Roles\";\n-\n     protected RoleSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n+        setShowResultPage(true);\n \n         modal.size(Modal.Size.Large);\n         initResultTable();\n@@ -161,11 +160,6 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return bulkActions;\n     }\n \n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n     public abstract static class Builder\n             extends AbstractSearchResultPanel.Builder<RoleTO, RoleHandler, RoleRestClient> {\n "},{"sha":"dba30871594bbec84e65258773c145ddfebfcc82","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -86,8 +86,6 @@ public class SchemaTypePanel extends AbstractTypesPanel<AbstractSchemaTO, Schema\n         }\n     };\n \n-    private final String pageID = \"Schema\";\n-\n     private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n     private final SchemaType schemaType;\n@@ -152,7 +150,8 @@ protected void onCancelInternal(final AbstractSchemaTO modelObject) {\n                 }\n \n                 @Override\n-                protected void onApplyInternal(final AbstractSchemaTO modelObject) {\n+                protected Serializable onApplyInternal(final AbstractSchemaTO modelObject) {\n+                    return null;\n                 }\n             }, true);\n \n@@ -178,11 +177,6 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n \n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n     @Override\n     protected List<IColumn<AbstractSchemaTO, String>> getColumns() {\n \n@@ -255,8 +249,8 @@ public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item, fina\n \n                 final AbstractSchemaTO schemaTO = model.getObject();\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.\n+                        getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks.addWithRoles(new ActionLink<Serializable>() {"},{"sha":"e4ec8dd1084e7d90163d4e92e2ea14e59a2a199a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -64,8 +64,6 @@ public class SecurityQuestionsPanel extends AbstractSearchResultPanel<\n \n     private static final long serialVersionUID = 3323019773236588850L;\n \n-    private final String pageID = \"SecurityQuestions\";\n-\n     public SecurityQuestionsPanel(final String id, final PageReference pageRef) {\n         super(id, new Builder<SecurityQuestionTO, SecurityQuestionTO, BaseRestClient>(null, pageRef) {\n \n@@ -93,7 +91,9 @@ protected void onCancelInternal(final SecurityQuestionTO modelObject) {\n             }\n \n             @Override\n-            protected void onApplyInternal(final SecurityQuestionTO modelObject) {\n+            protected Serializable onApplyInternal(final SecurityQuestionTO modelObject) {\n+                // do nothing\n+                return null;\n             }\n         }, true);\n \n@@ -125,11 +125,6 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n \n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n     @Override\n     protected List<IColumn<SecurityQuestionTO, String>> getColumns() {\n "},{"sha":"e1625f57eeb335d260085090640aaa3615994e5c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":3,"deletions":22,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -22,7 +22,6 @@\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n@@ -35,7 +34,6 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -56,12 +54,10 @@\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public class UserSearchResultPanel extends AnyObjectSearchResultPanel<UserTO> {\n+public class UserSearchResultPanel extends AnySearchResultPanel<UserTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    private final String pageID = \"Users\";\n-\n     protected UserSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n     }\n@@ -234,23 +230,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n         return columns;\n     }\n \n-    @Override\n-    protected Collection<ActionLink.ActionType> getBulkActions() {\n-        final List<ActionType> bulkActions = new ArrayList<>();\n-\n-        bulkActions.add(ActionType.DELETE);\n-        bulkActions.add(ActionType.SUSPEND);\n-        bulkActions.add(ActionType.REACTIVATE);\n-\n-        return bulkActions;\n-    }\n-\n-    @Override\n-    protected String getPageId() {\n-        return pageID;\n-    }\n-\n-    public static class Builder extends AnyObjectSearchResultPanel.Builder<UserTO> {\n+    public static class Builder extends AnySearchResultPanel.Builder<UserTO> {\n \n         private static final long serialVersionUID = 1L;\n \n@@ -261,6 +241,7 @@ public Builder(\n                 final PageReference pageRef) {\n \n             super(anyTypeClassTOs, restClient, type, pageRef);\n+            setShowResultPage(true);\n         }\n \n         @Override"},{"sha":"20399379defaa072ffa9e580a3cefd495513fa74","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSelectionSearchResultPanel.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -38,6 +38,11 @@ private AnyObjectSelectionSearchResultPanel(final String id,\n         super(id, builder);\n     }\n \n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_ANYOBJECT_PAGINATOR_ROWS;\n+    }\n+\n     @Override\n     protected String[] getDislayAttributes() {\n         return USER_DEFAULT_SELECTION;"},{"sha":"d013179aece718f01afebc1574a10e947f0e033d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionSearchResultPanel.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -27,7 +27,7 @@\n import java.util.Date;\n import java.util.List;\n import org.apache.syncope.client.console.pages.AnyDisplayAttributesModalPage;\n-import org.apache.syncope.client.console.panels.AnyObjectSearchResultPanel;\n+import org.apache.syncope.client.console.panels.AnySearchResultPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n@@ -47,12 +47,11 @@\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public abstract class AnySelectionSearchResultPanel<T extends AnyTO> extends AnyObjectSearchResultPanel<T> {\n+public abstract class AnySelectionSearchResultPanel<T extends AnyTO> extends AnySearchResultPanel<T> {\n \n     private static final long serialVersionUID = -1100228004207271272L;\n \n-    protected AnySelectionSearchResultPanel(\n-            final String id, final AnySelectionSearchResultPanel.Builder<T> builder) {\n+    protected AnySelectionSearchResultPanel(final String id, final AnySearchResultPanel.Builder<T> builder) {\n         super(id, builder);\n     }\n \n@@ -168,7 +167,7 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n \n     protected abstract String getPrefDerivedAttributesView();\n \n-    public static class Builder<T extends AnyTO> extends AnyObjectSearchResultPanel.Builder<T> {\n+    public abstract static class Builder<T extends AnyTO> extends AnySearchResultPanel.Builder<T> {\n \n         private static final long serialVersionUID = 1L;\n "},{"sha":"e3a734cdeb5d049ac00a50f0b5b06feef911c542","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionSearchResultPanel.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -37,6 +37,11 @@ private GroupSelectionSearchResultPanel(final String id, final Builder builder)\n         super(id, builder);\n     }\n \n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_GROUP_PAGINATOR_ROWS;\n+    }\n+\n     @Override\n     protected String[] getDislayAttributes() {\n         return GROUP_DEFAULT_SELECTION;"},{"sha":"8ae41f4b7693c9569815eba0800bd7fc09cd2530","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionSearchResultPanel.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -37,6 +37,11 @@ private UserSelectionSearchResultPanel(final String id, final UserSelectionSearc\n         super(id, builder);\n     }\n \n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_USERS_PAGINATOR_ROWS;\n+    }\n+\n     @Override\n     protected String[] getDislayAttributes() {\n         return USER_DEFAULT_SELECTION;"},{"sha":"4437adb72d6002989345d38f209d2b17b28c5776","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -78,6 +78,7 @@ public BaseModal(final String id) {\n         super(id);\n \n         form = new Form<>(FORM);\n+        form.setOutputMarkupId(true);\n         add(form);\n \n         content = new AbstractModalPanel<T>(this, null) {"},{"sha":"708fd9293e01c5a3b337a7522f6f1c085f2c8b08","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -21,7 +21,7 @@\n import java.io.Serializable;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n \n-public abstract class ActionLink<T> implements Serializable {\n+public abstract class ActionLink<T extends Serializable> implements Serializable {\n \n     private static final long serialVersionUID = 7031329706998320639L;\n \n@@ -56,6 +56,7 @@ public enum ActionType {\n         DRYRUN(\"execute\"),\n         CLAIM(\"claim\"),\n         SELECT(\"read\"),\n+        CLOSE(\"read\"),\n         EXPORT(\"read\"),\n         SUSPEND(\"update\"),\n         REACTIVATE(\"update\"),"},{"sha":"b3e989d0baa308b01889005fb1cf1b6e73989fd2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":31,"deletions":1,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -75,6 +75,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model, final\n         super.add(new Fragment(\"panelExecute\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelDryRun\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelSelect\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelClose\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelExport\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelSuspend\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelReactivate\", \"emptyFragment\", this));\n@@ -477,6 +478,25 @@ public String getAjaxIndicatorMarkupId() {\n                     }\n                 }).setVisible(link.isEnabled(model.getObject()));\n \n+                break;\n+            case CLOSE:\n+                fragment = new Fragment(\"panelClose\", \"fragmentClose\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"closeLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }).setVisible(link.isEnabled(model.getObject()));\n+\n                 break;\n \n             case EXPORT:\n@@ -739,7 +759,9 @@ public String getAjaxIndicatorMarkupId() {\n \n         if (fragment != null) {\n             fragment.setEnabled(enabled);\n-            MetaDataRoleAuthorizationStrategy.authorize(fragment, ENABLE, entitlements);\n+            if (StringUtils.isNotBlank(entitlements)) {\n+                MetaDataRoleAuthorizationStrategy.authorize(fragment, ENABLE, entitlements);\n+            }\n             super.addOrReplace(fragment);\n         }\n \n@@ -812,6 +834,10 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelSelect\", \"emptyFragment\", this));\n                 break;\n \n+            case CLOSE:\n+                super.addOrReplace(new Fragment(\"panelClose\", \"emptyFragment\", this));\n+                break;\n+\n             case EXPORT:\n                 super.addOrReplace(new Fragment(\"panelExport\", \"emptyFragment\", this));\n                 break;\n@@ -899,6 +925,10 @@ public Builder<T> setDisableIndicator(final boolean disableIndicator) {\n             return this;\n         }\n \n+        public Builder<T> add(final ActionLink<T> link, final ActionLink.ActionType type) {\n+            return addWithRoles(link, type, null, true);\n+        }\n+\n         public Builder<T> add(\n                 final ActionLink<T> link,\n                 final ActionLink.ActionType type,"},{"sha":"dc418a7ec43d0aefc9af75105ee1b434a8933f15","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractModalPanelBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -49,7 +49,7 @@ public AbstractModalPanelBuilder(final String id, final T defaultItem, final Pag\n \n     protected abstract void onCancelInternal(T modelObject);\n \n-    protected abstract void onApplyInternal(T modelObject);\n+    protected abstract Serializable onApplyInternal(T modelObject);\n \n     protected T getOriginalItem() {\n         return item;"},{"sha":"2b9ec69cf4b2fb7840ce7fdd289f01b34a4e4c45","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":21,"deletions":4,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -77,7 +77,7 @@ public NotificationPanel getFeedbackPanel() {\n \n     protected abstract void onCancelInternal();\n \n-    protected abstract void onApplyInternal();\n+    protected abstract Serializable onApplyInternal();\n \n     /**\n      * @see org.apache.wicket.extensions.wizard.Wizard#onCancel()\n@@ -102,15 +102,21 @@ public final void onCancel() {\n     public final void onFinish() {\n         final AjaxRequestTarget target = RequestCycle.get().find(AjaxRequestTarget.class);\n         try {\n-            onApplyInternal();\n-            send(AjaxWizard.this, Broadcast.BUBBLE, new NewItemFinishEvent<>(item, target));\n+            final Serializable res = onApplyInternal();\n+            send(AjaxWizard.this, Broadcast.BUBBLE, new NewItemFinishEvent<>(item, target).setResult(res));\n         } catch (Exception e) {\n+            System.out.println(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1 \" + e);\n+            e.printStackTrace();\n             LOG.warn(\"Wizard error on finish\", e);\n             error(getString(\"wizard.apply.error\"));\n             feedbackPanel.refresh(target);\n+        } catch (Throwable t) {\n+            System.out.println(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2 \" + t);\n+            t.printStackTrace();\n         }\n     }\n \n+    @Override\n     public T getItem() {\n         return item;\n     }\n@@ -207,7 +213,9 @@ public String getEventDescription() {\n \n     public static class NewItemFinishEvent<T> extends NewItemEvent<T> {\n \n-        private static final String EVENT_DESCRIPTION = \"cancel\";\n+        private static final String EVENT_DESCRIPTION = \"finish\";\n+\n+        private Serializable result;\n \n         public NewItemFinishEvent(final T item, final AjaxRequestTarget target) {\n             super(item, target);\n@@ -217,6 +225,15 @@ public NewItemFinishEvent(final T item, final AjaxRequestTarget target) {\n         public String getEventDescription() {\n             return NewItemFinishEvent.EVENT_DESCRIPTION;\n         }\n+\n+        public NewItemFinishEvent<T> setResult(final Serializable result) {\n+            this.result = result;\n+            return this;\n+        }\n+\n+        public Serializable getResult() {\n+            return result;\n+        }\n     }\n \n     @Override"},{"sha":"d1dc7567734d89520e51b2add9b518c30d36e754","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -57,8 +57,8 @@ protected void onCancelInternal() {\n             }\n \n             @Override\n-            protected void onApplyInternal() {\n-                AjaxWizardBuilder.this.onApplyInternal(modelObject);\n+            protected Serializable onApplyInternal() {\n+                return AjaxWizardBuilder.this.onApplyInternal(modelObject);\n             }\n         };\n     }"},{"sha":"90ca57b8fedb76c01a6ab5ab579f15fa99d73571","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardButtonBar.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -16,6 +16,8 @@\n package org.apache.syncope.client.console.wizards;\n \n import org.apache.syncope.client.console.panels.NotificationPanel;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.IWizardModel;\n import org.apache.wicket.extensions.wizard.IWizardStep;\n@@ -125,4 +127,8 @@ public final boolean isEnabled() {\n         });\n     }\n \n+    @Override\n+    public final MarkupContainer addOrReplace(final Component... childs) {\n+        return super.addOrReplace(childs);\n+    }\n }"},{"sha":"c1e7c96c51e9bee3c54c85df3ad518675e9d5457","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":69,"deletions":9,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -23,6 +23,7 @@\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wizards.any.ResultPage;\n import org.apache.wicket.Component;\n import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.PageReference;\n@@ -44,6 +45,8 @@\n \n     private static final long serialVersionUID = 1L;\n \n+    protected PageReference pageRef;\n+\n     private final WebMarkupContainer container;\n \n     private final Fragment initialFragment;\n@@ -56,6 +59,10 @@\n \n     private boolean footerVisibility = false;\n \n+    private boolean showResultPage = false;\n+\n+    private final boolean wizardInModal;\n+\n     /**\n      * Modal window.\n      */\n@@ -71,8 +78,6 @@ protected void onConfigure() {\n \n     };\n \n-    private final boolean wizardInModal;\n-\n     protected WizardMgtPanel(final String id) {\n         this(id, false);\n     }\n@@ -106,6 +111,16 @@ public void onClick(final AjaxRequestTarget target) {\n         initialFragment.add(addAjaxLink);\n     }\n \n+    public <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> setPageRef(final PageReference pageRef) {\n+        this.pageRef = pageRef;\n+        return this;\n+    }\n+\n+    public <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> setShowResultPage(final boolean showResultPage) {\n+        this.showResultPage = showResultPage;\n+        return this;\n+    }\n+\n     @Override\n     public final MarkupContainer add(final Component... childs) {\n         return super.add(childs);\n@@ -146,15 +161,41 @@ public void onEvent(final IEvent<?> event) {\n                     fragment.add(Component.class.cast(modalPanel));\n                     container.addOrReplace(fragment);\n                 }\n-            } else {\n-                if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n-                    if (notificationPanel != null) {\n-                        getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        notificationPanel.refresh(target);\n-                    }\n+            } else if (event.getPayload() instanceof AjaxWizard.NewItemCancelEvent) {\n+                if (wizardInModal) {\n+                    modal.show(false);\n+                    modal.close(target);\n+                } else {\n+                    container.addOrReplace(initialFragment);\n+                }\n+            } else if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n+                if (notificationPanel != null) {\n+                    getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    notificationPanel.refresh(target);\n                 }\n \n-                if (wizardInModal) {\n+                if (wizardInModal && showResultPage) {\n+                    modal.setContent(new ResultPage<T>(\n+                            item,\n+                            AjaxWizard.NewItemFinishEvent.class.cast(newItemEvent).getResult(),\n+                            pageRef) {\n+\n+                        private static final long serialVersionUID = 1L;\n+\n+                        @Override\n+                        protected void closeAction(final AjaxRequestTarget target) {\n+                            modal.show(false);\n+                            modal.close(target);\n+                        }\n+\n+                        @Override\n+                        protected Panel customResultBody(\n+                                final String id, final T item, final Serializable result) {\n+                            return WizardMgtPanel.this.customResultBody(id, item, result);\n+                        }\n+                    });\n+                    target.add(modal.getForm());\n+                } else if (wizardInModal) {\n                     modal.show(false);\n                     modal.close(target);\n                 } else {\n@@ -167,6 +208,17 @@ public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n     }\n \n+    /*\n+     * Override this method to specify your custom result body panel.\n+     */\n+    protected Panel customResultBody(final String panelId, final T item, final Serializable result) {\n+        return new Panel(panelId) {\n+\n+            private static final long serialVersionUID = 5538299138211283825L;\n+\n+        };\n+    }\n+\n     protected <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> addNewItemPanelBuilder(\n             final B panelBuilder, final boolean newItemDefaultButtonEnabled) {\n         this.newItemPanelBuilder = panelBuilder;\n@@ -201,6 +253,8 @@ protected WizardMgtPanel<T> addNotificationPanel(final NotificationPanel notific\n \n         private NotificationPanel notificationPanel;\n \n+        private boolean showResultPage = false;\n+\n         protected Builder(final PageReference pageRef) {\n             this.pageRef = pageRef;\n         }\n@@ -215,10 +269,16 @@ protected Builder(final PageReference pageRef) {\n          */\n         public WizardMgtPanel<T> build(final String id) {\n             return newInstance(id).\n+                    setPageRef(pageRef).\n+                    setShowResultPage(showResultPage).\n                     addNewItemPanelBuilder(newItemPanelBuilder, newItemDefaultButtonEnabled).\n                     addNotificationPanel(notificationPanel);\n         }\n \n+        public void setShowResultPage(final boolean showResultPage) {\n+            this.showResultPage = showResultPage;\n+        }\n+\n         public Builder<T> addNewItemPanelBuilder(final AbstractModalPanelBuilder<T> panelBuilder) {\n             this.newItemPanelBuilder = panelBuilder;\n             return this;"},{"sha":"5625732812f44a74425a45d2c3df89d6cfe361ec","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":34,"deletions":107,"changes":141,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -16,128 +16,55 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.io.Serializable;\n-import java.util.ArrayList;\n+\n import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+\n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n-import org.apache.wicket.extensions.wizard.WizardStep;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.TextField;\n-import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.model.StringResourceModel;\n-\n-public class AnyObjectWizardBuilder extends AjaxWizardBuilder<AnyTO> implements Serializable {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    private final AnyTO anyTO;\n \n-    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<List<String>>() {\n+public class AnyObjectWizardBuilder extends AnyWizardBuilder<AnyObjectTO> implements Serializable {\n \n-        private static final long serialVersionUID = 1L;\n-\n-        @Override\n-        protected List<String> load() {\n-            final List<String> currentlyAdded = new ArrayList<>();\n-            return currentlyAdded;\n-        }\n-    };\n-\n-    /**\n-     * The object type specification step.\n-     */\n-    private final class ObjectType extends WizardStep {\n-\n-        private static final long serialVersionUID = 1L;\n-\n-        /**\n-         * Construct.\n-         */\n-        ObjectType(final AnyTO item) {\n-            super(new ResourceModel(\"type.title\", StringUtils.EMPTY),\n-                    new ResourceModel(\"type.summary\", StringUtils.EMPTY), new Model<AnyTO>(item));\n-\n-            add(new AjaxDropDownChoicePanel<String>(\"type\", \"type\", new PropertyModel<String>(item, \"anyType\"), false).\n-                    setChoices(anyTypes).\n-                    setStyleSheet(\"form-control\").\n-                    setRequired(true));\n-\n-            add(new TextField<String>(\n-                    \"class\", new PropertyModel<String>(item, \"objectClass\")).setRequired(true));\n-        }\n-    }\n-\n-    /**\n-     * Mapping definition step.\n-     */\n-    private final class Mapping extends WizardStep {\n-\n-        private static final long serialVersionUID = 1L;\n-\n-        /**\n-         * Construct.\n-         */\n-        Mapping(final AnyTO item) {\n-            setTitleModel(new ResourceModel(\"mapping.title\", \"Mapping\"));\n-            setSummaryModel(new StringResourceModel(\"mapping.summary\", this, new Model<AnyTO>(item)));\n-        }\n-    }\n-\n-    /**\n-     * AccountLink specification step.\n-     */\n-    private final class ConnObjectLink extends WizardStep {\n-\n-        private static final long serialVersionUID = 1L;\n-\n-        /**\n-         * Construct.\n-         */\n-        ConnObjectLink(final AnyTO item) {\n-            super(new ResourceModel(\"link.title\", StringUtils.EMPTY),\n-                    new ResourceModel(\"link.summary\", StringUtils.EMPTY));\n-\n-            final WebMarkupContainer connObjectLinkContainer = new WebMarkupContainer(\"connObjectLinkContainer\");\n-            connObjectLinkContainer.setOutputMarkupId(true);\n-            add(connObjectLinkContainer);\n-        }\n-    }\n+    private static final long serialVersionUID = -2480279868319546243L;\n \n     /**\n      * Construct.\n      *\n      * @param id The component id\n-     * @param anyTO external resource to be updated.\n+     * @param anyObjectTO any object TO.\n+     * @param anyTypeClasses any type classes\n      * @param pageRef Caller page reference.\n      */\n-    public AnyObjectWizardBuilder(final String id, final AnyTO anyTO, final PageReference pageRef) {\n-        super(id, new AnyObjectTO(), pageRef);\n-        this.anyTO = anyTO;\n+    public AnyObjectWizardBuilder(\n+            final String id,\n+            final AnyObjectTO anyObjectTO,\n+            final List<String> anyTypeClasses,\n+            final PageReference pageRef) {\n+        super(id, anyObjectTO, anyTypeClasses, pageRef);\n     }\n \n     @Override\n-    protected WizardModel buildModelSteps(final AnyTO modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new ObjectType(modelObject));\n-        wizardModel.add(new Mapping(modelObject));\n-        wizardModel.add(new ConnObjectLink(modelObject));\n-        return wizardModel;\n-    }\n-\n-    @Override\n-    protected void onCancelInternal(final AnyTO modelObject) {\n-        // d nothing\n-    }\n+    protected Serializable onApplyInternal(final AnyHandler<AnyObjectTO> modelObject) {\n+        final AnyObjectTO obj = modelObject.getInnerObject();\n+\n+        final ProvisioningResult<AnyObjectTO> actual;\n+\n+        if (obj.getKey() == 0) {\n+            actual = anyTypeRestClient.create(AnyObjectTO.class.cast(obj));\n+        } else {\n+            final AnyObjectPatch patch = AnyOperations.diff(obj, getOriginalItem().getInnerObject(), false);\n+\n+            // update user just if it is changed\n+            if (!patch.isEmpty()) {\n+                actual = anyTypeRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n+            } else {\n+                actual = new ProvisioningResult<>();\n+                actual.setAny(obj);\n+            }\n+        }\n \n-    @Override\n-    protected void onApplyInternal(final AnyTO modelObject) {\n-        // do nothing\n+        return actual;\n     }\n }"},{"sha":"676c6b9380d6a93fac58bb30c69917289661abe7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":2,"deletions":31,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -24,18 +24,14 @@\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n-import org.apache.syncope.common.lib.AnyOperations;\n-import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class AnyWizardBuilder<T extends AnyTO> extends AjaxWizardBuilder<AnyHandler<T>>\n+public abstract class AnyWizardBuilder<T extends AnyTO> extends AjaxWizardBuilder<AnyHandler<T>>\n         implements Serializable {\n \n     private static final long serialVersionUID = -2480279868319546243L;\n@@ -113,36 +109,11 @@ protected void onCancelInternal(final AnyHandler<T> modelObject) {\n         // do nothing\n     }\n \n-    @Override\n-    protected void onApplyInternal(final AnyHandler<T> modelObject) {\n-        final T obj = modelObject.getInnerObject();\n-\n-        if (!(obj instanceof AnyObjectTO)) {\n-            throw new IllegalArgumentException();\n-        }\n-\n-        final ProvisioningResult<AnyObjectTO> actual;\n-\n-        if (obj.getKey() == 0) {\n-            actual = anyTypeRestClient.create(AnyObjectTO.class.cast(obj));\n-        } else {\n-            final AnyObjectPatch patch = AnyOperations.diff(obj, getOriginalItem().getInnerObject(), false);\n-\n-            // update user just if it is changed\n-            if (!patch.isEmpty()) {\n-                actual = anyTypeRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n-            }\n-        }\n-    }\n-\n     protected AnyWizardBuilder<T> addOptionalDetailsPanel(\n             final AnyHandler<T> modelObject, final WizardModel wizardModel) {\n         if (modelObject.getInnerObject().getKey() > 0) {\n             wizardModel.add(new Details<T>(\n-                    modelObject,\n-                    new ListModel<>(Collections.<StatusBean>emptyList()),\n-                    pageRef,\n-                    true));\n+                    modelObject, new ListModel<>(Collections.<StatusBean>emptyList()), pageRef, true));\n         }\n         return this;\n     }"},{"sha":"fc5131506b591681617ae3605dafd49bf27b2c56","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"modified","additions":79,"deletions":18,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -22,13 +22,20 @@\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n@@ -39,16 +46,19 @@ public class ConnObjectPanel extends Panel {\n \n     private static final long serialVersionUID = -6469290753080058487L;\n \n-    public ConnObjectPanel(final String id, final ConnObjectTO connObjectTO) {\n+    public ConnObjectPanel(final String id, final Pair<ConnObjectTO, ConnObjectTO> connObjectTOs) {\n         super(id);\n \n-        IModel<List<AttrTO>> formProps = new LoadableDetachableModel<List<AttrTO>>() {\n+        final IModel<List<AttrTO>> formProps = new LoadableDetachableModel<List<AttrTO>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<AttrTO> load() {\n-                List<AttrTO> attrs = new ArrayList<>(connObjectTO.getPlainAttrs());\n+                List<AttrTO> attrs = new ArrayList<>(connObjectTOs == null || connObjectTOs.getRight() == null\n+                        ? Collections.<AttrTO>emptyList()\n+                        : connObjectTOs.getRight().getPlainAttrs());\n+\n                 Collections.sort(attrs, new Comparator<AttrTO>() {\n \n                     @Override\n@@ -67,6 +77,10 @@ public int compare(final AttrTO attr1, final AttrTO attr2) {\n             }\n         };\n \n+        final Map<String, AttrTO> beforeProfile = connObjectTOs.getLeft() == null\n+                ? null\n+                : connObjectTOs.getLeft().getPlainAttrMap();\n+\n         final ListView<AttrTO> propView = new ListView<AttrTO>(\"propView\", formProps) {\n \n             private static final long serialVersionUID = 3109256773218160485L;\n@@ -75,24 +89,71 @@ public int compare(final AttrTO attr1, final AttrTO attr2) {\n             protected void populateItem(final ListItem<AttrTO> item) {\n                 final AttrTO prop = item.getModelObject();\n \n-                Label label = new Label(\"key\", prop.getSchema());\n-                item.add(label);\n-\n-                Panel field;\n-                if (prop.getValues().isEmpty()) {\n-                    field = new AjaxTextFieldPanel(\"attribute\", prop.getSchema(), new Model<String>());\n-                } else if (prop.getValues().size() == 1) {\n-                    field = new AjaxTextFieldPanel(\"attribute\",\n-                            prop.getSchema(), new Model<String>(prop.getValues().get(0)));\n+                final Fragment valueFragment;\n+                if (beforeProfile == null) {\n+                    valueFragment = new Fragment(\"value\", \"singleValue\", ConnObjectPanel.this);\n+                    valueFragment.add(getValuePanel(\"attribute\", prop.getSchema(), prop));\n                 } else {\n-                    field = new MultiFieldPanel.Builder<String>(new ListModel<String>(prop.getValues())).build(\n-                            \"attribute\",\n-                            prop.getSchema(),\n-                            new AjaxTextFieldPanel(\"panel\", prop.getSchema(), new Model<String>()));\n+                    final AttrTO before = beforeProfile.get(prop.getSchema());\n+\n+                    valueFragment = new Fragment(\"value\", \"doubleValue\", ConnObjectPanel.this);\n+                    valueFragment.add(getValuePanel(\"oldAttribute\", prop.getSchema(), before));\n+                    valueFragment.add(getValuePanel(\"newAttribute\", prop.getSchema(), prop));\n+\n+                    if (before == null\n+                            || (CollectionUtils.isNotEmpty(prop.getValues())\n+                            && CollectionUtils.isEmpty(before.getValues()))\n+                            || (CollectionUtils.isEmpty(prop.getValues())\n+                            && CollectionUtils.isNotEmpty(before.getValues()))\n+                            || (CollectionUtils.isNotEmpty(prop.getValues())\n+                            && CollectionUtils.isNotEmpty(before.getValues())\n+                            && prop.getValues().size() != before.getValues().size())\n+                            || (CollectionUtils.isNotEmpty(prop.getValues())\n+                            && CollectionUtils.isNotEmpty(before.getValues())\n+                            && !prop.getValues().equals(before.getValues()))) {\n+                        valueFragment.add(new Behavior() {\n+\n+                            private static final long serialVersionUID = 3109256773218160485L;\n+\n+                            @Override\n+                            public void onComponentTag(final Component component, final ComponentTag tag) {\n+                                tag.put(\"class\", \"highlight\");\n+                            }\n+                        });\n+                    }\n                 }\n-                item.add(field);\n+                item.add(valueFragment);\n             }\n         };\n         add(propView);\n     }\n+\n+    /**\n+     * Get panel for attribute value (not remote status).\n+     *\n+     * @param id component id to be replaced with the fragment content.\n+     * @param attrTO remote attribute.\n+     * @return fragment.\n+     */\n+    private Panel getValuePanel(final String id, final String schemaName, final AttrTO attrTO) {\n+        Panel field;\n+        if (attrTO == null) {\n+            field = new AjaxTextFieldPanel(id, schemaName, new Model<String>());\n+        } else if (CollectionUtils.isEmpty(attrTO.getValues())) {\n+            field = new AjaxTextFieldPanel(id, schemaName, new Model<String>());\n+        } else if (ConnIdSpecialAttributeName.PASSWORD.equals(schemaName)) {\n+            field = new AjaxTextFieldPanel(id, schemaName, new Model<String>(\"********\"));\n+        } else if (attrTO.getValues().size() == 1) {\n+            field = new AjaxTextFieldPanel(id, schemaName, new Model<String>(attrTO.getValues().get(0)));\n+        } else {\n+            field = new MultiFieldPanel.Builder<String>(new ListModel<String>(attrTO.getValues())).build(\n+                    id,\n+                    schemaName,\n+                    new AjaxTextFieldPanel(\"panel\", schemaName, new Model<String>()));\n+        }\n+\n+        field.setEnabled(false);\n+        return field;\n+    }\n+\n }"},{"sha":"7bbae5bb9ef5bb6ca51583f831b55b308e241f65","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -15,6 +15,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.io.Serializable;\n import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n@@ -62,7 +63,7 @@ public AjaxWizardBuilder<AnyHandler<GroupTO>> setItem(final AnyHandler<GroupTO>\n     }\n \n     @Override\n-    protected void onApplyInternal(final AnyHandler<GroupTO> modelObject) {\n+    protected Serializable onApplyInternal(final AnyHandler<GroupTO> modelObject) {\n         final ProvisioningResult<GroupTO> actual;\n \n         GroupTO toBeProcessed = modelObject instanceof GroupHandler\n@@ -76,8 +77,12 @@ protected void onApplyInternal(final AnyHandler<GroupTO> modelObject) {\n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n                 actual = groupRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n+            } else {\n+                actual = null;\n             }\n         }\n+\n+        return actual;\n     }\n \n     @Override"},{"sha":"060a02796b1f0e7b1648abe15c4802db8ce1e913","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ResultPage.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+/**\n+ *\n+ * @param <T> item input type\n+ */\n+public abstract class ResultPage<T extends Serializable> extends Panel implements ModalPanel<T> {\n+\n+    private static final long serialVersionUID = -1619945285130369086L;\n+\n+    private final T item;\n+\n+    public ResultPage(final T item, final Serializable result, final PageReference pageRef) {\n+        super(BaseModal.CONTENT_ID);\n+        setOutputMarkupId(true);\n+        this.item = item;\n+\n+        add(customResultBody(\"customResultBody\", item, result));\n+\n+        add(ActionLinksPanel.<T>builder(pageRef).add(new ActionLink<T>() {\n+\n+            private static final long serialVersionUID = 3257738274365467945L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                closeAction(target);\n+            }\n+        }, ActionLink.ActionType.CLOSE).build(\"action\").setRenderBodyOnly(true));\n+    }\n+\n+    protected abstract void closeAction(final AjaxRequestTarget target);\n+\n+    protected abstract Panel customResultBody(final String panleId, final T item, final Serializable result);\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Unsupported operation.\");\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Unsupported operation.\");\n+    }\n+\n+    @Override\n+    public T getItem() {\n+        return this.item;\n+    }\n+}"},{"sha":"77f9355c534c67c4873cae6e38b64b5bc81c30fb","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":75,"deletions":23,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -18,11 +18,18 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import static org.apache.syncope.client.console.commons.status.Status.ACTIVE;\n+import static org.apache.syncope.client.console.commons.status.Status.SUSPENDED;\n+\n import java.util.ArrayList;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SerializableTransformer;\n import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.client.console.commons.status.Status;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n@@ -32,6 +39,7 @@\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -59,40 +67,64 @@ public class StatusPanel extends Panel implements IHeaderContributor {\n \n     private static final long serialVersionUID = -4064294905566247728L;\n \n-    private UserRestClient userRestClient = new UserRestClient();\n-\n-    private GroupRestClient groupRestClient = new GroupRestClient();\n+    private final UserRestClient userRestClient = new UserRestClient();\n \n-    private final List<ConnObjectWrapper> connObjects;\n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    private final Map<String, StatusBean> initialStatusBeanMap;\n+    private Map<String, StatusBean> initialStatusBeanMap;\n \n     private final StatusUtils statusUtils;\n \n-    private final ListViewPanel<?> listViewPanel;\n+    private ListViewPanel<?> listViewPanel;\n \n-    private final TransparentWebMarkupContainer container;\n+    private TransparentWebMarkupContainer container;\n \n-    private final Fragment resourceListFragment;\n+    private Fragment resourceListFragment;\n \n     public <T extends AnyTO> StatusPanel(\n             final String id,\n             final T any,\n             final IModel<List<StatusBean>> model,\n             final PageReference pageRef) {\n+        super(id);\n+        statusUtils = new StatusUtils(any instanceof GroupTO ? groupRestClient : userRestClient);\n+        init(any, model,\n+                CollectionUtils.collect(statusUtils.getConnectorObjects(any),\n+                        new SerializableTransformer<ConnObjectWrapper, Pair<ConnObjectTO, ConnObjectWrapper>>() {\n+\n+                    private static final long serialVersionUID = 2658691884036294287L;\n+\n+                    @Override\n+                    public Pair<ConnObjectTO, ConnObjectWrapper> transform(final ConnObjectWrapper input) {\n+                        return Pair.of(null, input);\n+                    }\n \n+                }, new ArrayList<Pair<ConnObjectTO, ConnObjectWrapper>>()), pageRef);\n+    }\n+\n+    public <T extends AnyTO> StatusPanel(\n+            final String id,\n+            final T any,\n+            final IModel<List<StatusBean>> model,\n+            final List<Pair<ConnObjectTO, ConnObjectWrapper>> connObjects,\n+            final PageReference pageRef) {\n         super(id);\n+        statusUtils = new StatusUtils(any instanceof GroupTO ? groupRestClient : userRestClient);\n+        init(any, model, connObjects, pageRef);\n+    }\n+\n+    private void init(\n+            final AnyTO any,\n+            final IModel<List<StatusBean>> model,\n+            final List<Pair<ConnObjectTO, ConnObjectWrapper>> connObjects,\n+            final PageReference pageRef) {\n \n         container = new TransparentWebMarkupContainer(\"container\");\n         container.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n         add(container);\n \n         resourceListFragment = new Fragment(\"content\", \"resources\", this);\n-        container.addOrReplace(resourceListFragment);\n-\n-        statusUtils = new StatusUtils(any instanceof GroupTO ? groupRestClient : userRestClient);\n-\n-        connObjects = statusUtils.getConnectorObjects(any);\n+        container.addOrReplace(resourceListFragment.setRenderBodyOnly(true));\n \n         final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n         initialStatusBeanMap = new LinkedHashMap<>(connObjects.size() + 1);\n@@ -119,7 +151,8 @@ public <T extends AnyTO> StatusPanel(\n         statusBeans.add(syncope);\n         initialStatusBeanMap.put(syncope.getResourceName(), syncope);\n \n-        for (ConnObjectWrapper entry : connObjects) {\n+        for (Pair<ConnObjectTO, ConnObjectWrapper> pair : connObjects) {\n+            ConnObjectWrapper entry = pair.getRight();\n             final StatusBean statusBean = statusUtils.getStatusBean(entry.getAny(),\n                     entry.getResourceName(),\n                     entry.getConnObjectTO(),\n@@ -146,18 +179,18 @@ protected void onComponentTag(final ComponentTag tag) {\n                             if (null != bean.getStatus()) {\n                                 switch (bean.getStatus()) {\n                                     case OBJECT_NOT_FOUND:\n-                                        tag.put(\"class\", \"glyphicon glyphicon-remove-circle\");\n+                                        tag.put(\"class\", Constants.NOT_FOUND_ICON);\n                                         break;\n                                     case UNDEFINED:\n                                     case CREATED:\n                                     case NOT_YET_SUBMITTED:\n-                                        tag.put(\"class\", \"glyphicon glyphicon-question-sign\");\n+                                        tag.put(\"class\", Constants.UNDEFINED_ICON);\n                                         break;\n                                     case SUSPENDED:\n-                                        tag.put(\"class\", \"glyphicon glyphicon-ban-circle\");\n+                                        tag.put(\"class\", Constants.SUSPENDED_ICON);\n                                         break;\n                                     case ACTIVE:\n-                                        tag.put(\"class\", \"glyphicon glyphicon-ok-circle\");\n+                                        tag.put(\"class\", Constants.ACTIVE_ICON);\n                                         break;\n                                     default:\n                                         break;\n@@ -186,30 +219,35 @@ protected void onComponentTag(final ComponentTag tag) {\n \n             @Override\n             protected boolean statusCondition(final StatusBean bean) {\n-                return statusUtils.getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects) != null;\n+                final Pair<ConnObjectTO, ConnObjectTO> pair\n+                        = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n+\n+                return pair != null && pair.getRight() != null;\n             }\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                 final Fragment remoteObjectFragment = new Fragment(\"content\", \"remoteObject\", StatusPanel.this);\n-                container.addOrReplace(remoteObjectFragment);\n+                container.addOrReplace(remoteObjectFragment.setRenderBodyOnly(true));\n \n                 remoteObjectFragment.add(new AjaxLink<StatusBean>(\"back\") {\n \n                     private static final long serialVersionUID = 1L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        container.addOrReplace(resourceListFragment);\n+                        container.addOrReplace(resourceListFragment.setRenderBodyOnly(true));\n                         target.add(container);\n                     }\n                 });\n \n                 remoteObjectFragment.add(\n                         new Label(\"resource\", new ResourceModel(bean.getResourceName(), bean.getResourceName())));\n \n-                remoteObjectFragment.add(new ConnObjectPanel(\"remoteObject\",\n-                        statusUtils.getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects)));\n+                final Pair<ConnObjectTO, ConnObjectTO> res\n+                        = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n+\n+                remoteObjectFragment.add(new ConnObjectPanel(\"remoteObject\", res == null ? null : res));\n \n                 target.add(container);\n             }\n@@ -226,4 +264,18 @@ public void setCheckAvailability(final ListViewPanel.CheckAvailability check) {\n     public Map<String, StatusBean> getInitialStatusBeanMap() {\n         return initialStatusBeanMap;\n     }\n+\n+    private Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO(\n+            final Long anyKey, final String resourceName, final List<Pair<ConnObjectTO, ConnObjectWrapper>> objects) {\n+\n+        for (Pair<ConnObjectTO, ConnObjectWrapper> object : objects) {\n+            if (anyKey.equals(object.getRight().getAny().getKey())\n+                    && resourceName.equalsIgnoreCase(object.getRight().getResourceName())) {\n+\n+                return Pair.of(object.getLeft(), object.getRight().getConnObjectTO());\n+            }\n+        }\n+\n+        return null;\n+    }\n }"},{"sha":"835b51ae4cd84fb2d79331a1abc56036f024f4f1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -15,6 +15,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n@@ -56,7 +57,7 @@ public UserWizardBuilder(\n     }\n \n     @Override\n-    protected void onApplyInternal(final AnyHandler<UserTO> modelObject) {\n+    protected Serializable onApplyInternal(final AnyHandler<UserTO> modelObject) {\n         final ProvisioningResult<UserTO> actual;\n \n         final UserTO inner = modelObject.getInnerObject();\n@@ -72,8 +73,12 @@ protected void onApplyInternal(final AnyHandler<UserTO> modelObject) {\n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n                 actual = userRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n+            } else {\n+                actual = null;\n             }\n         }\n+\n+        return actual;\n     }\n \n     @Override"},{"sha":"b74b86c12c8ae2b347211e2f6a15d0d6c3a34a2f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -247,7 +247,8 @@ protected void onCancelInternal(final ProvisionTO modelObject) {\n     }\n \n     @Override\n-    protected void onApplyInternal(final ProvisionTO modelObject) {\n+    protected Serializable onApplyInternal(final ProvisionTO modelObject) {\n         this.resourceTO.getProvisions().add(modelObject);\n+        return null;\n     }\n }"},{"sha":"68d2119fcdd40b7345a8594c1c5eae69d920fba5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -16,6 +16,7 @@\n package org.apache.syncope.client.console.wizards.role;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.Collapsible;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -74,14 +75,15 @@ public AjaxWizardBuilder<RoleHandler> setItem(final RoleHandler item) {\n     }\n \n     @Override\n-    protected void onApplyInternal(final RoleHandler modelObject) {\n+    protected Serializable onApplyInternal(final RoleHandler modelObject) {\n         modelObject.fillDynamicConditions();\n         if (getOriginalItem() == null || getOriginalItem().getInnerObject() == null\n                 || StringUtils.isBlank(getOriginalItem().getInnerObject().getKey())) {\n             groupRestClient.create(modelObject.getInnerObject());\n         } else {\n             groupRestClient.update(modelObject.getInnerObject());\n         }\n+        return null;\n     }\n \n     @Override"},{"sha":"d9bd850fd5b8060d8d28d1ca59c49802bdf79078","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -261,6 +261,13 @@ div#resource-modal.modal-lg {\n   width: 1200px;\n }\n \n+.details {\n+  max-height: 380px;\n+  overflow-x: hidden;\n+  overflow-y: auto;\n+  display: block\n+}\n+\n /**\n   BEGIN - Style for Information panel\n */\n@@ -468,3 +475,22 @@ START - DataTable\n /**\n END - DataTable\n */\n+\n+/**\n+START - Resukt page\n+*/\n+.attribute {\n+  padding: 0px 4px 0px 4px; \n+}\n+\n+.left {\n+  float:left; \n+  width: 50%; \n+}\n+\n+span.highlight .attribute label {\n+  color : red;\n+}\n+/**\n+END - Resukt page\n+*/\n\\ No newline at end of file"},{"sha":"647a311043292e02b6fd28b66b006a01cb2649c9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResultStatusModal.html","status":"removed","additions":0,"deletions":226,"changes":226,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.html?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -1,226 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <style>\n-      div#propagation {\n-        font-size: 8px;\n-        height: auto;\n-        margin-top: 3px;\n-        text-align: left;\n-      }\n-\n-      div#status {\n-        float: left;\n-        height: 25px;\n-        margin-top: 3px;\n-        text-align: center;\n-        width: 8%;\n-      }\n-\n-      div.assignment {\n-        border: 1px solid #DDDDDD;\n-        display: inline-table;\n-        margin-bottom: 20px;\n-        width: 100%;\n-      }\n-\n-      div.assignments {\n-        color: #555555;\n-        display: inline-table;\n-        margin-top: 20px;\n-        width: 100%;\n-      }\n-\n-      div.header {\n-        display: inline-table;\n-        margin: 5px;\n-        width: 98%;\n-      }\n-\n-      div.profile div#row{\n-        display: inline-table;\n-        width:100%;\n-        vertical-align: middle;\n-      }\n-\n-      div.profile {\n-        background-color: #EEEEEE;\n-        color: #555555;\n-        display: inline-table;\n-        margin: 0px 5px 5px 5px;\n-        width: 98%;\n-      }\n-\n-      div#name {\n-        border-bottom: 1px solid #DDDDDD;\n-        display: table-cell;\n-        height: 15px;\n-        width: 220px;\n-        padding: 0px 5px 0px 5px;\n-        vertical-align: middle;\n-      }\n-\n-      div#value {\n-        border-bottom: 1px solid #DDDDDD;\n-        border-left: 1px solid #DDDDDD;\n-        display: table-cell;\n-        height: 15px;\n-        width: 38%;\n-        padding: 0px 5px 0px 5px;\n-        overflow: hidden;\n-        vertical-align: middle;\n-      }\n-\n-      div#resource {\n-        display: table-cell;\n-        width: 220px;\n-        height: 30px;\n-        padding: 10px 0px 5px 0px;\n-      }\n-\n-      div#resource img{\n-        width: 12px;\n-        height: 12px;\n-        position: relative;\n-        left: 3px;\n-        top: 1px;\n-        opacity: 1;\n-      }\n-\n-      div#attrhead {\n-        display: table-cell;\n-        border-left: 1px solid #DDDDDD;\n-        width: 38%;\n-        height: 30px;\n-        padding: 3px 0px 5px 0px;\n-        text-align: center;\n-        vertical-align: middle;\n-        font-size: 11px;\n-      }\n-    </style>\n-  </wicket:head>\n-  <wicket:extend>\n-\n-    <wicket:fragment wicket:id=\"propagationResultFrag\">\n-      <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-        <wicket:message key=\"operationResult\"/>&nbsp;<span wicket:id=\"info\"/>\n-      </p>\n-\n-      <div class=\"assignments\">\n-        <div wicket:id=\"resources\" class=\"assignment\">\n-\n-          <span wicket:id=\"attrhead\">[Attributes head]</span>\n-\n-          <div class=\"profile\">\n-            <span wicket:id=\"attrs\">\n-              <div id=\"row\">\n-                <div id=\"name\">\n-                  <span wicket:id=\"attrName\">[Attribute name]</span>\n-                </div>\n-                <div id=\"value\">\n-                  <span wicket:id=\"beforeValue\">[Before value]</span>\n-                </div>\n-                <div id=\"value\">\n-                  <span wicket:id=\"afterValue\">[After value]</span>\n-                </div>\n-              </div>\n-            </span>\n-          </div>\n-        </div>\n-      </div>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"userSelfResultFrag\">\n-      <p><wicket:message key=\"selfResult\"/></p>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"remoteStatusFrag\">\n-      <img wicket:id=\"status\"/>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"attrValueFrag\">\n-      <span wicket:id=\"value\">[After value]</span>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"attrHeadFrag\">\n-      <div class=\"header alt\">\n-        <div id=\"resource\">\n-          <div>\n-            <span wicket:id=\"resource\">[resource name]</span>\n-            <a wicket:id=\"showFailureWindow\" href=\"#\">\n-              <img wicket:id=\"icon\"/>\n-            </a>\n-\n-            <div id=\"propagation\">\n-              <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n-              &nbsp;\n-              <span wicket:id=\"propagation\">[propagation result]</span>\n-            </div>\n-\n-            <div wicket:id=\"failureWindow\"></div>\n-\n-          </div>\n-        </div>\n-\n-        <div id=\"attrhead\">\n-          <wicket:message key=\"before\">[before]</wicket:message>\n-        </div>\n-\n-        <div id=\"attrhead\">\n-          <wicket:message key=\"after\">[after]</wicket:message>\n-        </div>\n-      </div>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"emptyAttrHeadFrag\">\n-      <div class=\"header alt\">\n-        <div id=\"resource\">\n-          <div>\n-            <span wicket:id=\"resource\">[resource name]</span>\n-            <a wicket:id=\"showFailureWindow\" href=\"#\">\n-              <img wicket:id=\"icon\"/>\n-            </a>\n-\n-            <div id=\"propagation\">\n-              <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n-              &nbsp;\n-              <span wicket:id=\"propagation\">[propagation result]</span>\n-              <div wicket:id=\"failureWindow\"></div>\n-\n-            </div>\n-\n-          </div>\n-        </div>\n-      </div>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"emptyFrag\">\n-    </wicket:fragment>\n-\n-    <div wicket:id=\"container\" id=\"users-contain\" class=\"ui-widget\" style=\"margin:30px; width:inherit\">\n-\n-      <span wicket:id=\"resultFrag\"/>\n-\n-      <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"close\">\n-        <wicket:message key=\"close\"/>\n-      </a>\n-    </div>\n-  </wicket:extend>\n-</html>"},{"sha":"ff21666ef0da4d723ce50e281be55000d8bc750e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -31,4 +31,6 @@ tokenNotValued=Not valued\n \n any.edit=Edit ${anyTO.type} ${anyTO.key}\n any.new=New ${anyTO.type}\n+any.finish=Submit ${anyTO.type}\n+any.cancel=Cancel ${anyTO.type}\n any.attr.display=Attributes to be displayed"},{"sha":"eb11fe4e3ab9650a044dd150f41e1689fac44a34","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -32,3 +32,5 @@ tokenNotValued=Not valued\n any.edit=Modifica ${anyTO.type} ${key}\n any.new=Nuovo ${anyTO.type}\n any.attr.display=Attributes to be displayed\n+any.finish=Submit ${anyTO.type}\n+any.cancel=Cancel ${anyTO.type}"},{"sha":"21148f2174a4bdc130ea3e6f78fe77e6d94afd75","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -32,3 +32,5 @@ tokenNotValued=N\\u00e3o Atribu\\u00eddo\n any.edit=Alterar ${anyTO.type} ${key}\n any.new=Novo ${anyTO.type}\n any.attr.display=Attributes to be displayed\n+any.finish=Submit ${anyTO.type}\n+any.cancel=Cancel ${anyTO.type}"},{"sha":"93ff5edbc3d19a093187bb5684e266c34434d2e5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -45,7 +45,8 @@\n     <span wicket:id=\"panelEdit\">[plus]</span>\n     <span wicket:id=\"panelExport\">[plus]</span>\n     <span wicket:id=\"panelDelete\">[plus]</span>\n-    <span wicket:id=\"panelSelect\">[plus]</span>\n+    <span wicket:id=\"panelSelect\">[select]</span>\n+    <span wicket:id=\"panelClose\">[close]</span>\n     <span wicket:id=\"panelSuspend\">[plus]</span>\n     <span wicket:id=\"panelReactivate\">[plus]</span>\n     <span wicket:id=\"panelReload\">[plus]</span>\n@@ -134,6 +135,10 @@\n     <wicket:fragment wicket:id=\"fragmentSelect\">\n       <a href=\"#\" wicket:id=\"selectLink\" class=\"btn\"><i class=\"glyphicon glyphicon-ok\"></i></a>\n     </wicket:fragment>\n+    \n+    <wicket:fragment wicket:id=\"fragmentClose\">\n+      <a href=\"#\" wicket:id=\"closeLink\" class=\"btn\"><i class=\"fa fa-sign-out\"></i></a>\n+    </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentExport\">\n       <a href=\"#\" wicket:id=\"exportLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/export.png\" alt=\"export icon\" title=\"Export\"/></a>"},{"sha":"63f511b1cc4271b357e1debd236e22b5833c697f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.html","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -20,7 +20,18 @@\n   <head><title></title></head>\n   <wicket:panel>\n     <div class=\"form-group\" wicket:id=\"propView\">\n-      <span wicket:id=\"attribute\">[ATTIRIBUTE]</span>\n+      <span wicket:id=\"value\">[ATTIRIBUTE]</span>\n     </div>\n+    <wicket:fragment wicket:id=\"singleValue\">\n+      <span wicket:id=\"attribute\">[ATTIRIBUTE]</span>\n+    </wicket:fragment>\n+    <wicket:fragment wicket:id=\"doubleValue\">\n+      <div class=\"left attribute\">\n+        <span wicket:id=\"oldAttribute\">[ATTIRIBUTE]</span>\n+      </div>\n+      <div class=\"attribute\">\n+        <span wicket:id=\"newAttribute\">[ATTIRIBUTE]</span>\n+      </div>\n+    </wicket:fragment>\n   </wicket:panel>\n </html>"},{"sha":"829de1889a191693d721939a1a67755779d9107c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Details.html","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.html?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -20,9 +20,13 @@\n   <head><title></title></head>\n   <body>\n     <wicket:panel>\n-      <wicket:child/>\n-      <span wicket:id=\"status\">[STATUS]</span>\n-      <span wicket:id=\"generalStatusInformation\">[GENERAL STATUS INFORMATION]</span>\n+      <div class=\"details\">\n+        <wicket:child/>\n+        <span wicket:id=\"status\">[STATUS]</span>\n+      </div>\n+      <div class=\"details-footer\">\n+        <span wicket:id=\"generalStatusInformation\">[GENERAL STATUS INFORMATION]</span>\n+      </div>\n     </wicket:panel>\n   </body>\n </html>"},{"sha":"558f3b31e9a417243819de786ed9c3a35ac23775","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ResultPage.html","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.html?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -0,0 +1,29 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"customResultBody\"/>\n+      <div class=\"modal-footer circular-actions\">\n+        <span wicket:id=\"action\"/>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"7e234f7e8eef963257b1f86521334b041945db8f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ResultPage.properties","status":"renamed","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.properties?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -14,13 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-operationResult=Operation result for\n-close=Close\n-selfResult=Your request has been registered: depending on configuration, approval might be required.\n-__NAME__=Account Link\n-__UID__=Account Id\n-__PASSWORD__=Password\n-__ENABLE__=Enabled\n-propresult=Propagation: \n-before=Before propagation\n-after=After propagation\n+listview.caption=Occurred propagations","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResultStatusModal.properties"},{"sha":"a48352d7b5d0a1a2d398f3794ae6bdde4a37f5b4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ResultPage_it.properties","status":"renamed","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage_it.properties?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -14,13 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-operationResult=Risultato dell'operazione per\n-close=Chiudi\n-selfResult=La sua richiesta \\u00e8 stata presa in carico: se la configurazione lo prevede, sar\\u00e0 necessaria l'approvazione.\n-__NAME__=Account Link\n-__UID__=Account Id\n-__PASSWORD__=Password\n-__ENABLE__=Abilitato\n-propresult=Propagazione: \n-before=Prima della propagazione\n-after=Dopo la propagazione\n+listview.caption=Propagazioni effettuate","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResultStatusModal_it.properties"},{"sha":"eff8cfa883c0a60b809acdc11b49769cfbc0a6f7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ResultPage_pt_BR.properties","status":"renamed","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage_pt_BR.properties?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -14,13 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-operationResult=Resultado de opera\\u00E7\\u00E3o para\\:\n-close=Fechar\n-selfResult=Sua requis\\u00E7\\u00E3o foi registrada e ser\\u00E1 encaminhada ao administrador respons\\u00E1vel. Obrigado\n-__NAME__=Link de conta\n-__UID__=Identificador de Conta\n-__PASSWORD__=Senha\n-__ENABLE__=Habilitado\n-propresult=Propaga\\u00E7\\u00E3o\n-before=Antes da Propaga\\u00E7\\u00E3o\n-after=Depois da Propaga\\u00E7\\u00E3o\n+listview.caption=Propagations feito","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResultStatusModal_pt_BR.properties"},{"sha":"d7c9981968e1c5be9ad25ec12c94e2bef1cc4159","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/StatusPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d7de338dfee8ba16608f07df4e89995641d76f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html?ref=03d7de338dfee8ba16608f07df4e89995641d76f","patch":"@@ -19,9 +19,9 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <head><title></title></head>\n   <wicket:panel>\n-    <span wicket:id=\"container\">\n+    <div wicket:id=\"container\">\n       <wicket:container wicket:id=\"content\" />\n-    </span>\n+    </div>\n \n     <wicket:fragment wicket:id=\"resources\">\n       <span wicket:id=\"resources\">[RESOURCES]</span>"}]}