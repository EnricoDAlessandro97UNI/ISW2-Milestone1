{"sha":"520f7f874b2a87b66201640ada135f363a1f1883","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUyMGY3Zjg3NGIyYTg3YjY2MjAxNjQwYWRhMTM1ZjM2M2ExZjE4ODM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-05T16:33:51Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-05T16:33:51Z"},"message":"[SYNCOPE-156] Fixing console IT tests","tree":{"sha":"5dfe6eca6dcbc45d45f6d8b5e46a3de20b159882","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5dfe6eca6dcbc45d45f6d8b5e46a3de20b159882"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/520f7f874b2a87b66201640ada135f363a1f1883","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/520f7f874b2a87b66201640ada135f363a1f1883","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/520f7f874b2a87b66201640ada135f363a1f1883","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/520f7f874b2a87b66201640ada135f363a1f1883/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"18dd88e83c5fac484c897dcac33af02c7c7788c6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/18dd88e83c5fac484c897dcac33af02c7c7788c6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/18dd88e83c5fac484c897dcac33af02c7c7788c6"}],"stats":{"total":158,"additions":78,"deletions":80},"files":[{"sha":"048c84d8e2f968ab4e0793895334223a424f60f5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractTypesITCase.java","status":"modified","additions":27,"deletions":30,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java?ref=520f7f874b2a87b66201640ada135f363a1f1883","patch":"@@ -26,70 +26,67 @@\n \n public abstract class AbstractTypesITCase extends AbstractConsoleITCase {\n \n-    protected static final String PLAIN_DATATABLE_PATH = \"content:tabbedPanel:panel:\"\n+    protected static final String PLAIN_DATATABLE_PATH = \"body:content:tabbedPanel:panel:\"\n             + \"collapsePanel:tabs:0:body:content:container:content:searchContainer:resultTable\";\n \n     protected static final String DATATABLE_PATH =\n-            \"content:tabbedPanel:panel:container:content:searchContainer:resultTable\";\n+            \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable\";\n \n     @Before\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n     }\n \n     protected void browsingToRelationshipType() {\n-\n-        wicketTester.clickLink(\"configurationLI:configurationUL:typesLI:types\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n         wicketTester.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:0:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n         wicketTester.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToAnyTypes() {\n-\n-        wicketTester.clickLink(\"configurationLI:configurationUL:typesLI:types\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n         wicketTester.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:1:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         wicketTester.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToAnyTypeClasses() {\n-\n-        wicketTester.clickLink(\"configurationLI:configurationUL:typesLI:types\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n         wicketTester.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:2:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n         wicketTester.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToPlainSchemas() {\n-\n-        wicketTester.clickLink(\"configurationLI:configurationUL:typesLI:types\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n         wicketTester.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:3:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n         wicketTester.assertComponent(PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void createPlainSchema(final String key) {\n         browsingToPlainSchemas();\n-        wicketTester.clickLink(\"content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:container:content:add\");\n+        wicketTester.clickLink(\n+                \"body:content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:container:content:add\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:modal\", Modal.class);\n+                \"body:content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:modal\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:\"\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"collapsePanel:tabs:0:body:content:modal:form\");\n         formTester.setValue(\"content:details:form:key:textField\", key);\n         formTester.setValue(\"content:details:form:type:dropDownChoiceField\", \"3\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:\"\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:\"\n                 + \"collapsePanel:tabs:0:body:content:modal:dialog:footer:inputs:0:submit\");\n \n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n@@ -100,14 +97,14 @@ protected void createPlainSchema(final String key) {\n     protected void createAnyTypeClassWithoutSchema(final String name) {\n         browsingToAnyTypeClasses();\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:container:content:add\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:modal\", Modal.class);\n+                \"body:content:tabbedPanel:panel:modal\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:modal:form\");\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:modal:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", name);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n \n         wicketTester.clearFeedbackMessages();\n@@ -116,14 +113,14 @@ protected void createAnyTypeClassWithoutSchema(final String name) {\n     protected void createAnyType(final String name) {\n         browsingToAnyTypes();\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:container:content:add\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:modal\", Modal.class);\n+                \"body:content:tabbedPanel:panel:modal\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:modal:form\");\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:modal:form\");\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:key:textField\", name);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n \n         wicketTester.clearFeedbackMessages();\n@@ -132,17 +129,17 @@ protected void createAnyType(final String name) {\n     protected void createRelationshipType(final String name) {\n         browsingToRelationshipType();\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:container:content:add\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:modal\", Modal.class);\n+                \"body:content:tabbedPanel:panel:modal\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:modal:form\");\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:modal:form\");\n         formTester.setValue(\"content:relationshipTypeDetails:container:form:key:textField\", name);\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"test relationshipType\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n \n         wicketTester.clearFeedbackMessages();"},{"sha":"e1c0697b48f5fb62940f047df8415ef80390e102","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypeClassesITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java?ref=520f7f874b2a87b66201640ada135f363a1f1883","patch":"@@ -52,31 +52,31 @@ public void read() {\n                 result.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:modal\", BaseModal.class);\n+                \"body:content:tabbedPanel:panel:modal\", BaseModal.class);\n     }\n \n     @Test\n     public void create() {\n         browsingToAnyTypeClasses();\n         final String anyTypeClassTest = \"anyTypeClassTest\";\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:container:content:add\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:modal\", Modal.class);\n+                \"body:content:tabbedPanel:panel:modal\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:modal:form\");\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:modal:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", anyTypeClassTest);\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:derSchemas:paletteField:recorder\", \"mderiveddata\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n \n         wicketTester.clearFeedbackMessages();\n         wicketTester.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:2:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n         wicketTester.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n \n@@ -102,11 +102,11 @@ public void update() {\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelEdit:editLink\");\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:modal:form\");\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:modal:form\");\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:plainSchemas:paletteField:recorder\", plainSchema);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n     }\n "},{"sha":"fc07ea53699efacd7b10e8e375ee04aa6075bac2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypesITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java?ref=520f7f874b2a87b66201640ada135f363a1f1883","patch":"@@ -54,31 +54,31 @@ public void read() {\n                 result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:modal\", BaseModal.class);\n+                \"body:content:tabbedPanel:panel:modal\", BaseModal.class);\n     }\n \n     @Test\n     public void create() {\n         browsingToAnyTypes();\n         final String anyTypeTest = \"anyTypeTest2\";\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:container:content:add\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:modal\", Modal.class);\n+                \"body:content:tabbedPanel:panel:modal\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:modal:form\");\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:modal:form\");\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:key:textField\", anyTypeTest);\n         formTester.setValue(\n                 \"content:anyTypeDetailsPanel:container:form:classes:paletteField:recorder\", \"csv\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n \n         wicketTester.clearFeedbackMessages();\n         wicketTester.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:1:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         wicketTester.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeTest);\n@@ -103,11 +103,11 @@ public void update() {\n                 + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:4:cell:panelEdit:editLink\");\n \n         final FormTester formTester =\n-                wicketTester.newFormTester(\"content:tabbedPanel:panel:modal:form\");\n+                wicketTester.newFormTester(\"body:content:tabbedPanel:panel:modal:form\");\n         formTester.setValue(\n                 \"content:anyTypeDetailsPanel:container:form:classes:paletteField:recorder\", name + \",minimal group\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n     }\n "},{"sha":"40ed0e555d3dcefca03efef0fb83afc85d961251","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BaseITCase.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java?ref=520f7f874b2a87b66201640ada135f363a1f1883","patch":"@@ -61,37 +61,37 @@ public void browsingBookmarkablePageLink() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n         wicketTester.assertRenderedPage(Dashboard.class);\n \n-        wicketTester.clickLink(\"realmsLI:realms\");\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n         wicketTester.assertRenderedPage(Realms.class);\n \n-        wicketTester.clickLink(\"topologyLI:topology\");\n+        wicketTester.clickLink(\"body:topologyLI:topology\");\n         wicketTester.assertRenderedPage(Topology.class);\n \n-        wicketTester.clickLink(\"reportsLI:reports\");\n+        wicketTester.clickLink(\"body:reportsLI:reports\");\n         wicketTester.assertRenderedPage(Reports.class);\n \n-        wicketTester.clickLink(\"configurationLI:configurationUL:workflowLI:workflow\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:workflowLI:workflow\");\n         wicketTester.assertRenderedPage(Workflow.class);\n \n-        wicketTester.clickLink(\"configurationLI:configurationUL:logsLI:logs\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n         wicketTester.assertRenderedPage(Logs.class);\n \n-        wicketTester.clickLink(\"configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n         wicketTester.assertRenderedPage(SecurityQuestions.class);\n \n-        wicketTester.clickLink(\"configurationLI:configurationUL:typesLI:types\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n         wicketTester.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"configurationLI:configurationUL:rolesLI:roles\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n         wicketTester.assertRenderedPage(Roles.class);\n \n-        wicketTester.clickLink(\"configurationLI:configurationUL:policiesLI:policies\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n         wicketTester.assertRenderedPage(Policies.class);\n \n-        wicketTester.clickLink(\"configurationLI:configurationUL:layoutsLI:layouts\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:layoutsLI:layouts\");\n         wicketTester.assertRenderedPage(Layouts.class);\n \n-        wicketTester.clickLink(\"configurationLI:configurationUL:notificationsLI:notifications\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n         wicketTester.assertRenderedPage(Notifications.class);\n     }\n }"},{"sha":"c7a8ee3998ca97a15cae25575117c10187af9300","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/LogsITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java?ref=520f7f874b2a87b66201640ada135f363a1f1883","patch":"@@ -36,7 +36,7 @@\n \n public class LogsITCase extends AbstractConsoleITCase {\n \n-    private final static String CONTAINER_PATH = \"content:tabbedPanel:panel:loggerContainer\";\n+    private final static String CONTAINER_PATH = \"body:content:tabbedPanel:panel:loggerContainer\";\n \n     @Before\n     public void login() {\n@@ -46,15 +46,15 @@ public void login() {\n \n     @Test\n     public void readCoreLogs() {\n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:0:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n         wicketTester.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         assertNotNull(searchLog(KEY, CONTAINER_PATH, \"org.apache.camel\"));\n     }\n \n     @Test\n     public void updateCoreLogs() {\n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:0:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n         wicketTester.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         Component result = searchLog(KEY, CONTAINER_PATH, \"org.apache.camel\");\n@@ -71,16 +71,16 @@ public void updateCoreLogs() {\n \n     @Test\n     public void readConsoleLogs() {\n-        wicketTester.assertComponent(\"content:tabbedPanel:tabs-container:tabs:1:link\", AjaxFallbackLink.class);\n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:1:link\");\n+        wicketTester.assertComponent(\"body:content:tabbedPanel:tabs-container:tabs:1:link\", AjaxFallbackLink.class);\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         wicketTester.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         assertNotNull(searchLog(KEY, CONTAINER_PATH, \"org.apache.syncope.fit\"));\n     }\n \n     @Test\n     public void updateConsoleLogs() {\n-        wicketTester.clickLink(\"content:tabbedPanel:tabs-container:tabs:1:link\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         wicketTester.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         Component result = searchLog(KEY, CONTAINER_PATH, \"org.apache.syncope.fit\");\n@@ -115,7 +115,7 @@ public void component(final ListItem<LoggerTO> object, final IVisit<Component> v\n     }\n \n     private void browsingToLogs() {\n-        wicketTester.clickLink(\"configurationLI:configurationUL:logsLI:logs\");\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n         wicketTester.assertRenderedPage(Logs.class);\n     }\n }"},{"sha":"2df31fa9b88913f13c603db386e8f0ebfd5c1da6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RelationshipTypeITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypeITCase.java?ref=520f7f874b2a87b66201640ada135f363a1f1883","patch":"@@ -51,7 +51,7 @@ public void read() {\n                 result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:modal\", BaseModal.class);\n+                \"body:content:tabbedPanel:panel:modal\", BaseModal.class);\n     }\n \n     @Test\n@@ -84,11 +84,11 @@ public void update() {\n                 + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:3:cell:panelEdit:editLink\");\n \n         final FormTester formTester =\n-                wicketTester.newFormTester(\"content:tabbedPanel:panel:modal:form\");\n+                wicketTester.newFormTester(\"body:content:tabbedPanel:panel:modal:form\");\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"new description\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:modal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n     }\n "},{"sha":"8692d9ba93b94ec7fbe9a855ed9f5eb6859e5f9a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SchemasITCase.java","status":"modified","additions":14,"deletions":13,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/520f7f874b2a87b66201640ada135f363a1f1883/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java?ref=520f7f874b2a87b66201640ada135f363a1f1883","patch":"@@ -54,25 +54,26 @@ public void readPlainSchema() {\n                 + \"body:rows:1:cells:7:cell:panelEdit:editLink\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:\"\n+                \"body:content:tabbedPanel:\"\n                 + \"panel:collapsePanel:tabs:0:body:content:modal:\"\n                 + \"form:content:kindForm:kind:dropDownChoiceField\", DropDownChoice.class);\n     }\n \n     @Test\n     public void createPlainSchema() {\n         browsingToPlainSchemas();\n-        wicketTester.clickLink(\"content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:container:content:add\");\n+        wicketTester.clickLink(\n+                \"body:content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:container:content:add\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:modal\", Modal.class);\n+                \"body:content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:modal\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:\"\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"collapsePanel:tabs:0:body:content:modal:form\");\n         formTester.setValue(\"content:details:form:key:textField\", \"zBoolean\");\n         formTester.setValue(\"content:details:form:type:dropDownChoiceField\", \"3\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:\"\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:\"\n                 + \"collapsePanel:tabs:0:body:content:modal:dialog:footer:inputs:0:submit\");\n \n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n@@ -94,15 +95,15 @@ public void updatePlainSchema() {\n                 result.getPageRelativePath() + \":cells:7:cell:panelEdit:editLink\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:\"\n+                \"body:content:tabbedPanel:\"\n                 + \"panel:collapsePanel:tabs:0:body:content:modal:\"\n                 + \"form:content:kindForm:kind:dropDownChoiceField\", DropDownChoice.class);\n \n-        final FormTester formTester =\n-                wicketTester.newFormTester(\"content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:modal:form\");\n+        FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:modal:form\");\n         formTester.setValue(\"content:details:form:multivalue:checkboxField\", \"true\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:\"\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:\"\n                 + \"collapsePanel:tabs:0:body:content:modal:dialog:footer:inputs:0:submit\", true);\n \n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n@@ -113,17 +114,17 @@ public void deletePlainSchema() {\n         browsingToPlainSchemas();\n         //create new Plain Schema\n         final String schemaName = \"zStringDelete\";\n-        wicketTester.clickLink(\"content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:container:content:add\");\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:container:content:add\");\n \n         wicketTester.assertComponent(\n-                \"content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:modal\", Modal.class);\n+                \"body:content:tabbedPanel:panel:collapsePanel:tabs:0:body:content:modal\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"content:tabbedPanel:panel:\"\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"collapsePanel:tabs:0:body:content:modal:form\");\n         formTester.setValue(\"content:details:form:key:textField\", schemaName);\n         formTester.setValue(\"content:details:form:type:dropDownChoiceField\", \"0\");\n \n-        wicketTester.clickLink(\"content:tabbedPanel:panel:\"\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:\"\n                 + \"collapsePanel:tabs:0:body:content:modal:dialog:footer:inputs:0:submit\");\n \n         wicketTester.assertInfoMessages(\"Operation executed successfully\");;"}]}