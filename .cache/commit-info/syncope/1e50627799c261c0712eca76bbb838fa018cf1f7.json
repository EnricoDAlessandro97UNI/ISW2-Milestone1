{"sha":"1e50627799c261c0712eca76bbb838fa018cf1f7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFlNTA2Mjc3OTljMjYxYzA3MTJlY2E3NmJiYjgzOGZhMDE4Y2YxZjc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-10T14:17:59Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-10T14:17:59Z"},"message":"Fixes issue 202\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247188 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0092bbcb2b2038302e8dbf4944eb592996721aa4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0092bbcb2b2038302e8dbf4944eb592996721aa4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1e50627799c261c0712eca76bbb838fa018cf1f7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1e50627799c261c0712eca76bbb838fa018cf1f7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1e50627799c261c0712eca76bbb838fa018cf1f7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1e50627799c261c0712eca76bbb838fa018cf1f7/comments","author":null,"committer":null,"parents":[{"sha":"c60fd59463cbd1a606bccba0cb7431ab356ceada","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c60fd59463cbd1a606bccba0cb7431ab356ceada","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c60fd59463cbd1a606bccba0cb7431ab356ceada"}],"stats":{"total":71,"additions":49,"deletions":22},"files":[{"sha":"9bc8fc4fbb11380f8b3ec7a98e232906c27b568b","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java","status":"modified","additions":24,"deletions":20,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1e50627799c261c0712eca76bbb838fa018cf1f7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1e50627799c261c0712eca76bbb838fa018cf1f7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java?ref=1e50627799c261c0712eca76bbb838fa018cf1f7","patch":"@@ -230,15 +230,16 @@ private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n                 new HashMap<Integer, Object>());\n \n         // 1. get the query string from the search condition\n-        StringBuilder queryString = getQuery(nodeCond, parameters);\n+        final StringBuilder queryString = getQuery(nodeCond, parameters);\n \n         // 2. take into account administrative roles\n         queryString.insert(0, \"SELECT u.user_id FROM (\");\n         queryString.append(\") u WHERE user_id NOT IN (\");\n         queryString.append(getAdminRolesFilter(adminRoles)).append(\")\");\n \n         // 3. prepare the search query\n-        Query query = entityManager.createNativeQuery(queryString.toString());\n+        final Query query =\n+                entityManager.createNativeQuery(queryString.toString());\n \n         // page starts from 1, while setFirtResult() starts from 0\n         query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n@@ -254,8 +255,8 @@ private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n                 queryString.toString(), parameters);\n \n         // 5. Prepare the result (avoiding duplicates - set)\n-        Set<Number> userIds = new HashSet<Number>();\n-        List resultList = query.getResultList();\n+        final Set<Number> userIds = new HashSet<Number>();\n+        final List resultList = query.getResultList();\n \n         //fix for HHH-5902 - bug hibernate\n         if (resultList != null) {\n@@ -268,7 +269,7 @@ private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n             }\n         }\n \n-        List<SyncopeUser> result =\n+        final List<SyncopeUser> result =\n                 new ArrayList<SyncopeUser>(userIds.size());\n \n         SyncopeUser user;\n@@ -345,14 +346,17 @@ private String getQuery(final MembershipCond cond,\n             final boolean not, final Map<Integer, Object> parameters) {\n \n         StringBuilder query = new StringBuilder(\n-                \"SELECT DISTINCT user_id FROM user_search_membership WHERE \");\n+                \"SELECT DISTINCT user_id FROM user_search WHERE \");\n \n         if (not) {\n-            query.append(\"user_id NOT IN (\").\n-                    append(\"SELECT DISTINCT user_id \").\n-                    append(\"FROM user_search_membership WHERE \");\n+            query.append(\"user_id NOT IN (\");\n+        } else {\n+            query.append(\"user_id IN (\");\n         }\n \n+        query.append(\"SELECT DISTINCT user_id \").\n+                append(\"FROM user_search_membership WHERE \");\n+\n         if (cond.getRoleId() != null) {\n             query.append(\"role_id=:param\").append(\n                     setParameter(parameters, cond.getRoleId()));\n@@ -361,31 +365,31 @@ private String getQuery(final MembershipCond cond,\n                     setParameter(parameters, cond.getRoleName()));\n         }\n \n-        if (not) {\n-            query.append(\")\");\n-        }\n+        query.append(\")\");\n \n         return query.toString();\n     }\n \n     private String getQuery(final ResourceCond cond,\n             final boolean not, final Map<Integer, Object> parameters) {\n \n-        StringBuilder query = new StringBuilder(\n-                \"SELECT DISTINCT user_id FROM user_search_resource WHERE \");\n+        final StringBuilder query = new StringBuilder(\n+                \"SELECT DISTINCT user_id FROM user_search WHERE \");\n \n         if (not) {\n-            query.append(\"user_id NOT IN (\").\n-                    append(\"SELECT DISTINCT user_id \").\n-                    append(\"FROM user_search_resource WHERE \");\n+            query.append(\"user_id NOT IN (\");\n+        } else {\n+            query.append(\"user_id IN (\");\n         }\n \n+        query.append(\"SELECT DISTINCT user_id \").\n+                append(\"FROM user_search_resource WHERE \");\n+\n         query.append(\"resource_name=:param\").append(\n                 setParameter(parameters, cond.getResourceName()));\n \n-        if (not) {\n-            query.append(\")\");\n-        }\n+        query.append(\")\");\n+\n         return query.toString();\n     }\n "},{"sha":"72230375c1ec1615a401f37495d25e7c3ebf2d7c","filename":"core/src/test/java/org/syncope/core/persistence/dao/UserSearchTest.java","status":"modified","additions":25,"deletions":2,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1e50627799c261c0712eca76bbb838fa018cf1f7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1e50627799c261c0712eca76bbb838fa018cf1f7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java?ref=1e50627799c261c0712eca76bbb838fa018cf1f7","patch":"@@ -197,7 +197,7 @@ public final void searchByMembership() {\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                 NodeCond.getNotLeafCond(membershipCond));\n         assertNotNull(users);\n-        assertEquals(3, users.size());\n+        assertEquals(4, users.size());\n     }\n \n     @Test\n@@ -226,7 +226,7 @@ public void searchByIsNull() {\n     @Test\n     public void searchByResource() {\n         ResourceCond ws2 = new ResourceCond();\n-        ws2.setResourceName(\"ws-target-resource2\");\n+        ws2.setResourceName(\"ws-target-resource-2\");\n \n         ResourceCond ws1 = new ResourceCond();\n         ws1.setResourceName(\"ws-target-resource-list-mappings-2\");\n@@ -326,4 +326,27 @@ public void searchById() {\n         assertEquals(1, matchingUsers.size());\n         assertEquals(4L, matchingUsers.iterator().next().getId().longValue());\n     }\n+\n+    @Test\n+    public final void issue202() {\n+        final ResourceCond ws2 = new ResourceCond();\n+        ws2.setResourceName(\"ws-target-resource-2\");\n+\n+        final ResourceCond ws1 = new ResourceCond();\n+        ws1.setResourceName(\"ws-target-resource-list-mappings-1\");\n+\n+        final NodeCond searchCondition = NodeCond.getAndCond(\n+                NodeCond.getNotLeafCond(ws2),\n+                NodeCond.getNotLeafCond(ws1));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        final List<SyncopeUser> users = searchDAO.search(\n+                EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n+                searchCondition);\n+\n+        assertNotNull(users);\n+        assertEquals(1, users.size());\n+        assertEquals(4L, users.iterator().next().getId().longValue());\n+    }\n }"}]}