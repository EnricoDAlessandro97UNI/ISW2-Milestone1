{"sha":"cfc82fcb81afea03c249cf5e489f301ae0470da4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNmYzgyZmNiODFhZmVhMDNjMjQ5Y2Y1ZTQ4OWYzMDFhZTA0NzBkYTQ=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-02-07T16:26:43Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-02-07T16:26:43Z"},"message":"SYNCOPE-231 Fixing some more issues with the jaxrs services\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1443594 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7bcd3a64c39006a1001e75a9c72a5631caa1e39d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7bcd3a64c39006a1001e75a9c72a5631caa1e39d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cfc82fcb81afea03c249cf5e489f301ae0470da4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cfc82fcb81afea03c249cf5e489f301ae0470da4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cfc82fcb81afea03c249cf5e489f301ae0470da4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cfc82fcb81afea03c249cf5e489f301ae0470da4/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"883b80d7911932829ae4f5359bbe34aabe87398c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/883b80d7911932829ae4f5359bbe34aabe87398c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/883b80d7911932829ae4f5359bbe34aabe87398c"}],"stats":{"total":122,"additions":108,"deletions":14},"files":[{"sha":"98464a8fa480fe173ac9c54d190fc9d7a0cb88c1","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/SpringServiceProxy.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FSpringServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FSpringServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FSpringServiceProxy.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -74,13 +74,11 @@ protected Response handleStream(final String url) {\n             if (httpResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\r\n                 HttpEntity entity = httpResponse.getEntity();\r\n                 response = Response.ok(entity.getContent(), entity.getContentType().getValue()).\r\n-                        location(getMethod.getURI()).\r\n                         header(SyncopeConstants.CONTENT_DISPOSITION_HEADER,\r\n                         httpResponse.getLastHeader(SyncopeConstants.CONTENT_DISPOSITION_HEADER).getValue()).\r\n                         build();\r\n             } else {\r\n                 response = Response.noContent().status(httpResponse.getStatusLine().getStatusCode()).\r\n-                        location(getMethod.getURI()).\r\n                         build();\r\n             }\r\n \r"},{"sha":"d489ad62cd0d18ea38f1476cc474b120c4e91f60","filename":"common/src/main/java/org/apache/syncope/common/services/ConfigurationService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -47,7 +47,7 @@ public interface ConfigurationService {\n      * @return Returns configuration as an downloadable content.xml database export file.\r\n      */\r\n     @GET\r\n-    @Path(\"dbDump\")\r\n+    @Path(\"all/export\")\r\n     Response dbExport();\r\n \r\n     /**\r"},{"sha":"f41d70360b237e52d13be1ce1282db4d1fee3e2e","filename":"core/src/main/java/org/apache/syncope/core/services/ConfigurationServiceImpl.java","status":"modified","additions":15,"deletions":2,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -20,19 +20,24 @@\n \r\n import java.io.IOException;\r\n import java.io.OutputStream;\r\n+import java.io.PrintStream;\r\n import java.net.URI;\r\n import java.util.List;\r\n import java.util.Set;\r\n+\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import javax.ws.rs.core.StreamingOutput;\r\n import javax.ws.rs.core.UriInfo;\r\n+\r\n import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ConfigurationService;\r\n import org.apache.syncope.common.to.ConfigurationTO;\r\n import org.apache.syncope.common.to.MailTemplateTO;\r\n import org.apache.syncope.common.to.ValidatorTO;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.rest.controller.ConfigurationController;\r\n+import org.apache.syncope.core.util.ImportExport;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n \r\n@@ -53,13 +58,21 @@ public Response create(final ConfigurationTO configurationTO) {\n \r\n     @Override\r\n     public Response dbExport() {\r\n-        return Response.ok(new StreamingOutput() {\r\n+    \tStreamingOutput sout = new StreamingOutput() {\r\n \r\n             @Override\r\n             public void write(final OutputStream os) throws IOException {\r\n+            \tPrintStream ps = new PrintStream(os);\r\n+            \tps.println(\"Test\");\r\n                 configurationController.dbExportInternal(os);\r\n             }\r\n-        }).build();\r\n+        };\r\n+        return Response.ok(sout)\r\n+        \t\t.type(MediaType.TEXT_XML)\r\n+        \t\t.header(SyncopeConstants.CONTENT_DISPOSITION_HEADER, \r\n+        \t\t\t\t\"attachment; filename=\" + ImportExport.CONTENT_FILE)\r\n+\r\n+        \t\t.build();\r\n     }\r\n \r\n     @Override\r"},{"sha":"bbe14898420a75a6284a32c6d3bd7b92107921cc","filename":"core/src/main/java/org/apache/syncope/core/services/ReportServiceImpl.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -22,7 +22,6 @@\n import java.io.OutputStream;\n import java.net.URI;\n import java.util.List;\n-import java.util.Set;\n \n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.StreamingOutput;\n@@ -104,12 +103,16 @@ public ReportExecTO readExecution(final Long executionId) {\n     public Response exportExecutionResult(final Long executionId, final ReportExecExportFormat fmt) {\n         final ReportExecExportFormat format = (fmt == null) ? ReportExecExportFormat.XML : fmt;\n         final ReportExec reportExec = reportController.getAndCheckReportExecInternal(executionId);\n-        return Response.ok(new StreamingOutput() {\n+        StreamingOutput sout = new StreamingOutput() {\n             @Override\n             public void write(final OutputStream os) throws IOException {\n                 reportController.exportExecutionResultInternal(os, reportExec, format);\n             }\n-        }).build();\n+        };\n+        String disposition = \"attachment; filename=\" + reportExec.getReport().getName() + \".\" + format.name().toLowerCase();\n+\t\treturn Response.ok(sout)\n+\t\t\t\t.header(SyncopeConstants.CONTENT_DISPOSITION_HEADER, disposition)\n+\t\t\t\t.build();\n     }\n \n     @Override"},{"sha":"61d1b2cfcc188a735c018cbc01aa0cce23b2e26f","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -24,13 +24,15 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.net.Authenticator;\n import java.security.AccessControlException;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n \n import javax.ws.rs.core.Response;\n \n+import org.apache.cxf.transport.http.CXFAuthenticator;\n import org.apache.syncope.common.search.AttributeCond;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n@@ -48,6 +50,7 @@\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n+import org.apache.syncope.core.rest.jaxrs.CXFPatchedAuthenticator;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -221,6 +224,9 @@ public void testUserSearch() throws InvalidSearchConditionException {\n \n     @Test\n     public void checkFailedLogins() {\n+    \t// Workaround for CXF issue.. remove after upgrade to 2.7.3\n+    \tCXFAuthenticator.addAuthenticator();\n+    \tAuthenticator.setDefault(new CXFPatchedAuthenticator());\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"checkFailedLogin@syncope.apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();"},{"sha":"d7c902cbea8476afae20dbc6ee374a404742bd63","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -27,9 +27,10 @@\n import java.io.InputStream;\n import java.io.UnsupportedEncodingException;\n import java.util.List;\n+\n import javax.ws.rs.core.HttpHeaders;\n-import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n+\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.ConfigurationTO;\n@@ -115,12 +116,15 @@ public void dbExport() throws IOException {\n         Response response = configurationService.dbExport();\n         assertNotNull(response);\n         assertEquals(HttpStatus.OK.value(), response.getStatus());\n-        assertNotNull(response.getLocation());\n-        assertTrue(response.getHeaderString(HttpHeaders.CONTENT_TYPE).startsWith(MediaType.TEXT_XML));\n-        assertNotNull(response.getHeaderString(SyncopeConstants.CONTENT_DISPOSITION_HEADER));\n+        String contentType = response.getHeaderString(HttpHeaders.CONTENT_TYPE);\n+        assertTrue(contentType.contains(\"xml\"));\n+        String contentDisposition = response.getHeaderString(SyncopeConstants.CONTENT_DISPOSITION_HEADER);\n+        assertNotNull(contentDisposition);\n \n         Object entity = response.getEntity();\n         assertTrue(entity instanceof InputStream);\n-        assertFalse(IOUtils.toString((InputStream) entity, \"UTF-8\").isEmpty());\n+        String configExport = IOUtils.toString((InputStream) entity, \"UTF-8\");\n+        assertFalse(configExport.isEmpty());\n+        assertTrue(configExport.length() > 1000);\n     }\n }"},{"sha":"2ae1072face8b6e4f44853c87321cfd6add65fff","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -158,7 +158,6 @@ private void checkExport(final Long execId, final ReportExecExportFormat fmt) th\n         final Response response = reportService.exportExecutionResult(execId, fmt);\n         assertNotNull(response);\n         assertEquals(HttpStatus.OK.value(), response.getStatus());\n-        assertNotNull(response.getLocation());\n         assertNotNull(response.getHeaderString(SyncopeConstants.CONTENT_DISPOSITION_HEADER));\n         assertTrue(response.getHeaderString(SyncopeConstants.CONTENT_DISPOSITION_HEADER).\n                 endsWith(\".\" + fmt.name().toLowerCase()));"},{"sha":"8eabdce277c2f9c168d53c995673201d544fa099","filename":"core/src/test/java/org/apache/syncope/core/rest/jaxrs/CXFPatchedAuthenticator.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FCXFPatchedAuthenticator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FCXFPatchedAuthenticator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FCXFPatchedAuthenticator.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -0,0 +1,70 @@\n+package org.apache.syncope.core.rest.jaxrs;\n+\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.net.PasswordAuthentication;\n+\n+import org.apache.cxf.message.Exchange;\n+import org.apache.cxf.message.Message;\n+import org.apache.cxf.phase.PhaseInterceptorChain;\n+import org.apache.cxf.transport.Conduit;\n+import org.apache.cxf.transport.http.CXFAuthenticator;\n+import org.apache.cxf.transport.http.HTTPConduit;\n+\n+/**\n+ * To workaround issue https://issues.apache.org/jira/browse/CXF-4815\n+ * TODO: remove as soon as we switched to cxf 2.7.3\n+ */\n+public class CXFPatchedAuthenticator extends CXFAuthenticator {\n+    \n+    public CXFPatchedAuthenticator() {\n+    }\n+    \n+    protected PasswordAuthentication getPasswordAuthentication() { \n+        PasswordAuthentication auth = null;\n+        Message m = PhaseInterceptorChain.getCurrentMessage();\n+        if (m != null) {\n+            Exchange exchange = m.getExchange();\n+            Conduit conduit = exchange.getConduit(m);\n+            if (conduit instanceof HTTPConduit) {\n+                HTTPConduit httpConduit = (HTTPConduit)conduit;\n+                if (getRequestorType() == RequestorType.PROXY\n+                    && httpConduit.getProxyAuthorization() != null) {\n+                    String un = httpConduit.getProxyAuthorization().getUserName();\n+                    String pwd =  httpConduit.getProxyAuthorization().getPassword();\n+                    if (un != null && pwd != null) {\n+                        auth = new PasswordAuthentication(un, pwd.toCharArray());\n+                    }\n+                } else if (getRequestorType() == RequestorType.SERVER\n+                    && httpConduit.getAuthorization() != null) {\n+                    \n+                    if (\"basic\".equals(getRequestingScheme())\n+                            || \"digest\".equals(getRequestingScheme())) {\n+                        return null;\n+                    }\n+                }\n+            }\n+        }\n+        // else PhaseInterceptorChain.getCurrentMessage() is null,\n+        // this HTTP call has therefore not been generated by CXF\n+        return auth;\n+    }\n+}\n+"},{"sha":"cca51d12ea219eef2ea5f4a7543b4f91d5c39208","filename":"core/src/test/java/org/apache/syncope/core/rest/jaxrs/ConfigurationTestITCaseJAXRS.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FConfigurationTestITCaseJAXRS.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfc82fcb81afea03c249cf5e489f301ae0470da4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FConfigurationTestITCaseJAXRS.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FConfigurationTestITCaseJAXRS.java?ref=cfc82fcb81afea03c249cf5e489f301ae0470da4","patch":"@@ -27,6 +27,7 @@ public class ConfigurationTestITCaseJAXRS extends ConfigurationTestITCase {\n \r\n     public ConfigurationTestITCaseJAXRS() {\r\n         super();\r\n+        setContentType(CONTENT_TYPE_XML);\r\n         setEnabledCXF(true);\r\n     }\r\n }\r"}]}