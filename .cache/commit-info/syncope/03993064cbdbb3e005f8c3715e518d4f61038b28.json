{"sha":"03993064cbdbb3e005f8c3715e518d4f61038b28","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzOTkzMDY0Y2JkYmIzZTAwNWY4YzM3MTVlNTE4ZDRmNjEwMzhiMjg=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2019-04-12T15:30:12Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2019-04-15T16:02:58Z"},"message":"[SYNCOPE-1421] added password strength meter, wizard bugfixing","tree":{"sha":"df98372775dc18fa8dbc19b8815b8934cc8adfe9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/df98372775dc18fa8dbc19b8815b8934cc8adfe9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/03993064cbdbb3e005f8c3715e518d4f61038b28","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03993064cbdbb3e005f8c3715e518d4f61038b28","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03993064cbdbb3e005f8c3715e518d4f61038b28","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03993064cbdbb3e005f8c3715e518d4f61038b28/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"2358f285018483f0ea195e5376a4025ff4859a63","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2358f285018483f0ea195e5376a4025ff4859a63","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2358f285018483f0ea195e5376a4025ff4859a63"}],"stats":{"total":215,"additions":194,"deletions":21},"files":[{"sha":"071f630eefab1b929462aaffb6e047feea66738b","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/Self.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelf.java?ref=03993064cbdbb3e005f8c3715e518d4f61038b28","patch":"@@ -45,7 +45,10 @@ public Self(final PageParameters parameters) {\n \n         body.add(buildWizard(SyncopeEnduserSession.get().isAuthenticated()\n                 ? SyncopeEnduserSession.get().getSelfTO()\n-                : buildNewUserTO()));\n+                : buildNewUserTO(),\n+                SyncopeEnduserSession.get().isAuthenticated()\n+                ? AjaxWizard.Mode.EDIT\n+                : AjaxWizard.Mode.CREATE));\n     }\n \n     @Override\n@@ -67,15 +70,15 @@ public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n     }\n \n-    protected final AjaxWizard<AnyWrapper<UserTO>> buildWizard(final UserTO userTO) {\n+    protected final AjaxWizard<AnyWrapper<UserTO>> buildWizard(final UserTO userTO, final AjaxWizard.Mode mode) {\n         userWizardBuilder = new UserWizardBuilder(\n                 null,\n                 userTO,\n                 SyncopeEnduserSession.get().getService(SyncopeService.class).platform().getUserClasses(),\n                 new UserFormLayoutInfo(),\n                 this.getPageReference());\n         userWizardBuilder.setItem(new UserWrapper(userTO));\n-        return userWizardBuilder.build(WIZARD_ID, userTO == null ? AjaxWizard.Mode.CREATE : AjaxWizard.Mode.EDIT);\n+        return userWizardBuilder.build(WIZARD_ID, mode);\n     }\n \n     private UserTO buildNewUserTO() {"},{"sha":"25c1cb083d430e4a0a4e9483a87d198af485ee90","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/AnyWizardBuilder.java","status":"modified","additions":138,"deletions":0,"changes":138,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=03993064cbdbb3e005f8c3715e518d4f61038b28","patch":"@@ -27,11 +27,18 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizardMgtButtonBar;\n import org.apache.syncope.client.ui.commons.wizards.any.AbstractAnyWizardBuilder;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.wizard.FinishButton;\n+import org.apache.wicket.extensions.wizard.IWizard;\n+import org.apache.wicket.extensions.wizard.IWizardModel;\n+import org.apache.wicket.extensions.wizard.IWizardStep;\n import org.apache.wicket.extensions.wizard.WizardModel;\n \n public abstract class AnyWizardBuilder extends AbstractAnyWizardBuilder<UserTO> {\n@@ -159,4 +166,135 @@ protected Future<Pair<Serializable, Serializable>> execute(\n             final Callable<Pair<Serializable, Serializable>> future) {\n         return SyncopeEnduserSession.get().execute(future);\n     }\n+\n+    @Override\n+    public AjaxWizard<AnyWrapper<UserTO>> build(final String id, final AjaxWizard.Mode mode) {\n+        this.mode = mode;\n+\n+        // get the specified item if available\n+        final AnyWrapper<UserTO> modelObject = newModelObject();\n+\n+        return new AjaxWizard<AnyWrapper<UserTO>>(id, modelObject, buildModelSteps(modelObject, new WizardModel()),\n+                mode, this.pageRef) {\n+\n+            private static final long serialVersionUID = 7770507663760640735L;\n+\n+            @Override\n+            protected void onCancelInternal() {\n+                AnyWizardBuilder.this.onCancelInternal(modelObject);\n+            }\n+\n+            @Override\n+            protected Pair<Serializable, Serializable> onApplyInternal(final AjaxRequestTarget target) {\n+                Serializable res = AnyWizardBuilder.this.onApplyInternal(modelObject);\n+\n+                Serializable payload;\n+                switch (mode) {\n+                    case CREATE:\n+                        payload = getCreateCustomPayloadEvent(res, target);\n+                        break;\n+                    case EDIT:\n+                    case TEMPLATE:\n+                        payload = getEditCustomPayloadEvent(res, target);\n+                        break;\n+                    default:\n+                        payload = null;\n+                }\n+\n+                return Pair.of(payload, res);\n+            }\n+\n+            @Override\n+            protected long getMaxWaitTimeInSeconds() {\n+                return AnyWizardBuilder.this.getMaxWaitTimeInSeconds();\n+            }\n+\n+            @Override\n+            protected void sendError(final String message) {\n+                AnyWizardBuilder.this.sendError(message);\n+            }\n+\n+            @Override\n+            protected void sendWarning(final String message) {\n+                AnyWizardBuilder.this.sendWarning(message);\n+            }\n+\n+            @Override\n+            protected Future<Pair<Serializable, Serializable>> execute(\n+                    final Callable<Pair<Serializable, Serializable>> future) {\n+                return AnyWizardBuilder.this.execute(future);\n+            }\n+\n+            @Override\n+            protected Component newButtonBar(final String id) {\n+                return new AjaxWizardMgtButtonBar<>(id, this, mode) {\n+\n+                    private static final long serialVersionUID = -3041152400413815333L;\n+\n+                    @Override\n+                    protected FinishButton newFinishButton(final String id, final IWizard wizard) {\n+                        return new FinishButton(id, wizard) {\n+\n+                            private static final long serialVersionUID = 864248301720764819L;\n+\n+                            @Override\n+                            public boolean isEnabled() {\n+                                switch (mode) {\n+                                    case EDIT:\n+                                    case TEMPLATE:\n+                                        return true;\n+                                    case READONLY:\n+                                        return false;\n+                                    default:\n+                                        if (!completed) {\n+                                            final IWizardStep activeStep = getWizardModel().getActiveStep();\n+                                            completed = (activeStep != null)\n+                                                    && getWizardModel().isLastStep(activeStep)\n+                                                    && super.isEnabled();\n+                                        }\n+                                        return completed;\n+                                }\n+                            }\n+\n+                            @Override\n+                            public boolean isVisible() {\n+                                switch (mode) {\n+                                    case READONLY:\n+                                        return false;\n+                                    default:\n+                                        return true;\n+                                }\n+                            }\n+\n+                            @Override\n+                            public void onClick() {\n+                                IWizardModel wizardModel = getWizardModel();\n+                                IWizardStep activeStep = wizardModel.getActiveStep();\n+\n+                                // let the step apply any state\n+                                activeStep.applyState();\n+\n+                                // if the step completed after applying the state, notify the wizard\n+                                if (activeStep.isComplete()\n+                                        && SyncopeWebApplication.get().isCaptchaEnabled()\n+                                        && !getWizardModel().isLastStep(activeStep)) {\n+                                    // go to last step\n+                                    getWizardModel().last();\n+                                } else if (activeStep.isComplete()) {\n+                                    getWizardModel().finish();\n+                                } else {\n+                                    error(getLocalizer().getString(\n+                                            \"org.apache.wicket.extensions.wizard.FinishButton.step.did.not.complete\",\n+                                            this));\n+                                }\n+                            }\n+                        };\n+                    }\n+\n+                };\n+            }\n+\n+        }.setEventSink(eventSink).addOuterObject(outerObjects);\n+    }\n+\n }"},{"sha":"7323f338662526b5929f86ee9a14496792dfa222","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/UserDetails.java","status":"modified","additions":18,"deletions":11,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java?ref=03993064cbdbb3e005f8c3715e518d4f61038b28","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.enduser.wizards.any;\n \n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthBehavior;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthConfig;\n import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n@@ -68,7 +70,7 @@ public class UserDetails extends WizardStep {\n \n     protected final UserTO userTO;\n \n-    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public UserDetails(\n             final UserWrapper wrapper,\n             final boolean templateMode,\n@@ -154,15 +156,6 @@ public void onClick(final AjaxRequestTarget target) {\n         add(accordion);\n         // ------------------------\n \n-        // ------------------------\n-        // Security Answer\n-        // ------------------------\n-        securityAnswer =\n-                new AjaxTextFieldPanel(\"securityAnswer\", \"securityAnswer\",\n-                        new PropertyModel<>(userTO, \"securityAnswer\"), false);\n-        add(securityAnswer.setOutputMarkupId(true).setOutputMarkupPlaceholderTag(true).setEnabled(false));\n-        // ------------------------\n-\n         // ------------------------\n         // Security Question\n         // ------------------------\n@@ -210,6 +203,16 @@ protected void onEvent(final AjaxRequestTarget target) {\n \n         add(securityQuestion);\n         // ------------------------\n+\n+        // ------------------------\n+        // Security Answer\n+        // ------------------------\n+        securityAnswer =\n+                new AjaxTextFieldPanel(\"securityAnswer\", \"securityAnswer\",\n+                        new PropertyModel<>(userTO, \"securityAnswer\"), false);\n+        add(securityAnswer.setOutputMarkupId(true).setOutputMarkupPlaceholderTag(true).setEnabled(StringUtils.\n+                isNotBlank(securityQuestion.getModelObject())));\n+        // ------------------------\n     }\n \n     public static class EditUserPasswordPanel extends Panel {\n@@ -223,7 +226,11 @@ public EditUserPasswordPanel(\n             super(id);\n             setOutputMarkupId(true);\n             add(new Label(\"warning\", new ResourceModel(\"password.change.warning\")));\n-            add(new PasswordPanel(\"passwordPanel\", wrapper, templateMode));\n+            add(new PasswordPanel(\"passwordPanel\", wrapper, templateMode, new PasswordStrengthBehavior(\n+                    new PasswordStrengthConfig()\n+                            .withDebug(true)\n+                            .withShowVerdictsInsideProgressBar(true)\n+                            .withShowProgressBar(true))));\n         }\n \n     }"},{"sha":"bddd03a701d2dd7780f18d3d0029b1ae70937af5","filename":"client/idrepo/enduser/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPasswordFieldPanel.html","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html?ref=03993064cbdbb3e005f8c3715e518d4f61038b28","patch":"@@ -26,7 +26,9 @@\n         <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n         <span wicket:id=\"externalAction\"/>\n       </wicket:enclosure>\n-      <fieldset class=\"input-group\">\n+      <!--to be restored and merged with password strength meter-->\n+      <!--<fieldset class=\"input-group\">-->\n+      <fieldset>\n         <input type=\"password\" class=\"form-control\" wicket:id=\"passwordField\" />\n       </fieldset>\n     </wicket:extend>"},{"sha":"91588fce1027db73e376df07e60c7f9c03516faf","filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=03993064cbdbb3e005f8c3715e518d4f61038b28","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.ui.commons.markup.html.form;\n \n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthBehavior;\n import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -30,14 +31,23 @@ public class AjaxPasswordFieldPanel extends FieldPanel<String> {\n     private static final long serialVersionUID = -5490115280336667460L;\n \n     public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model) {\n-        this(id, name, model, true);\n+        this(id, name, model, true, null);\n+    }\n+\n+    public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model,\n+            final boolean enableOnChange) {\n+        this(id, name, model, enableOnChange, null);\n     }\n \n     public AjaxPasswordFieldPanel(\n-            final String id, final String name, final IModel<String> model, final boolean enableOnChange) {\n+            final String id, final String name, final IModel<String> model, final boolean enableOnChange,\n+            final PasswordStrengthBehavior passwordStrengthBehavior) {\n         super(id, name, model);\n \n         field = new PasswordTextField(\"passwordField\", model);\n+        if (passwordStrengthBehavior != null) {\n+            field.add(passwordStrengthBehavior);\n+        }\n         add(field.setLabel(new ResourceModel(name, name)).setRequired(false).setOutputMarkupId(true));\n \n         if (enableOnChange && !isReadOnly()) {"},{"sha":"ba9f1e077f194b7895eed4a1e23486fba740231b","filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java?ref=03993064cbdbb3e005f8c3715e518d4f61038b28","patch":"@@ -40,7 +40,7 @@\n \n     protected AjaxWizard.Mode mode = AjaxWizard.Mode.CREATE;\n \n-    private final List<Component> outerObjects = new ArrayList<>();\n+    protected final List<Component> outerObjects = new ArrayList<>();\n \n     /**\n      * Construct."},{"sha":"ce68be91a6820cea6f3a533e39b3440fdb3177ac","filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardMgtButtonBar.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java?ref=03993064cbdbb3e005f8c3715e518d4f61038b28","patch":"@@ -39,7 +39,7 @@\n \n     private final AjaxWizard.Mode mode;\n \n-    private boolean completed = false;\n+    protected boolean completed = false;\n \n     public AjaxWizardMgtButtonBar(final String id, final AjaxWizard<T> wizard, final AjaxWizard.Mode mode) {\n         super(id, wizard);"},{"sha":"6cf3087a8b87ed8d52e9a9438795cfa480f00561","filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/PasswordPanel.java","status":"modified","additions":15,"deletions":2,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03993064cbdbb3e005f8c3715e518d4f61038b28/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java?ref=03993064cbdbb3e005f8c3715e518d4f61038b28","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.ui.commons.wizards.any;\n \n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthBehavior;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n@@ -38,6 +39,14 @@ public PasswordPanel(\n             final String id,\n             final UserWrapper wrapper,\n             final boolean templateMode) {\n+        this(id, wrapper, templateMode, null);\n+    }\n+\n+    public PasswordPanel(\n+            final String id,\n+            final UserWrapper wrapper,\n+            final boolean templateMode,\n+            final PasswordStrengthBehavior passwordStrengthBehavior) {\n \n         super(id);\n         setOutputMarkupId(true);\n@@ -46,7 +55,7 @@ public PasswordPanel(\n         add(form);\n \n         FieldPanel<String> confirmPasswordField = new AjaxPasswordFieldPanel(\n-                \"confirmPassword\", \"confirmPassword\", new Model<>(), false);\n+                \"confirmPassword\", \"confirmPassword\", new Model<>(), false, null);\n \n         confirmPasswordField.setMarkupId(\"confirmPassword\");\n         confirmPasswordField.setPlaceholder(\"confirmPassword\");\n@@ -66,7 +75,11 @@ public PasswordPanel(\n             passwordField.enableJexlHelp();\n         } else {\n             AjaxPasswordFieldPanel passwordField = new AjaxPasswordFieldPanel(\n-                    \"password\", \"password\", new PropertyModel<>(wrapper.getInnerObject(), \"password\"), false);\n+                    \"password\",\n+                    \"password\",\n+                    new PropertyModel<>(wrapper.getInnerObject(), \"password\"),\n+                    false,\n+                    passwordStrengthBehavior);\n             passwordField.setRequired(true);\n             passwordField.setMarkupId(\"password\");\n             passwordField.setPlaceholder(\"password\");"}]}