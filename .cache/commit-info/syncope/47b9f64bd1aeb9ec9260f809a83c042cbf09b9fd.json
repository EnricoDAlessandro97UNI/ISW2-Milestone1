{"sha":"47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ3YjlmNjRiZDFhZWI5ZWM5MjYwZjgwOWE4M2MwNDJjYmYwOWI5ZmQ=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-27T17:07:06Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-27T17:07:24Z"},"message":"Fixed SYNCOPE-580, refactoring and added realm stack, SYNCOPE-158","tree":{"sha":"281ab1449dcb223c242ac052ee0f955fbeae1925","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/281ab1449dcb223c242ac052ee0f955fbeae1925"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"7866cdba5a3d8c9626916b8d388e5b37fa97a2e0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7866cdba5a3d8c9626916b8d388e5b37fa97a2e0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7866cdba5a3d8c9626916b8d388e5b37fa97a2e0"}],"stats":{"total":1833,"additions":1697,"deletions":136},"files":[{"sha":"63d7952f8ce0e81924cd4fb0f83a5ec77907411f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/Input.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.cli;\n \n+import java.util.Arrays;\n+import java.util.List;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n import org.apache.syncope.client.cli.util.CommandUtils;\n \n@@ -63,6 +65,10 @@ public String getOption() {\n     public String[] getParameters() {\n         return parameters;\n     }\n+    \n+    public List<String> listParameters() {\n+        return Arrays.asList(parameters);\n+    }\n \n     public String firstParameter() {\n         return parameters[0];"},{"sha":"39c32e6e1f4516f5f6519d0b7861c584ef8518c0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/CommonsResultManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -24,7 +24,7 @@\n \n public abstract class CommonsResultManager {\n \n-    public void managerNumberFormatException(final String what, final String key) {\n+    public void numberFormatException(final String what, final String key) {\n         Messages.printIdNotNumberDeletedMessage(what, key);\n     }\n "},{"sha":"87f0b00ec10c8d0f2fde37d7248a31316dd70f1b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/AbstractConfigurationCommand.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FAbstractConfigurationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FAbstractConfigurationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FAbstractConfigurationCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,12 +18,10 @@\n  */\n package org.apache.syncope.client.cli.commands.configuration;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.ConfigurationService;\n-\n public abstract class AbstractConfigurationCommand {\n \n-    protected final ConfigurationService configurationService = SyncopeServices.get(ConfigurationService.class);\n+    protected final ConfigurationSyncopeOperations configurationSyncopeOperations\n+            = new ConfigurationSyncopeOperations();\n \n     protected final ConfigurationResultManager configurationResultManager = new ConfigurationResultManager();\n "},{"sha":"870cb270ef5479a6192db4741970685cd75fba4a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -36,7 +36,7 @@ public void delete() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    configurationService.delete(parameter);\n+                    configurationSyncopeOperations.delete(parameter);\n                     configurationResultManager.deletedMessage(\"Configuration\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"d08677a205bae3a3f56ed203bad7562e3ccc49d4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationExport.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -45,7 +45,7 @@ public void export() {\n         if (input.parameterNumber() == 1) {\n             try {\n                 XMLUtils.createXMLFile(\n-                        (SequenceInputStream) configurationService.export().getEntity(),\n+                        (SequenceInputStream) configurationSyncopeOperations.export().getEntity(),\n                         input.firstParameter() + EXPORT_FILE_NAME);\n                 configurationResultManager.generic(\n                         input.firstParameter() + EXPORT_FILE_NAME + \" successfully created\");"},{"sha":"3cad82d232c431b1599edc80e88e86a398b02a4a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationGet.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -27,7 +27,7 @@ public ConfigurationGet() {\n \n     public void get() {\n         try {\n-            configurationResultManager.fromGet(new LinkedList<>(configurationService.list()));\n+            configurationResultManager.fromGet(new LinkedList<>(configurationSyncopeOperations.list()));\n         } catch (final Exception ex) {\n             configurationResultManager.generic(ex.getMessage());\n         }"},{"sha":"5bccb3fc42c3cecd613365dd81a4d64ba801729f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -40,7 +40,7 @@ public void read() {\n             boolean failed = false;\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    attrList.add(configurationService.get(parameter));\n+                    attrList.add(configurationSyncopeOperations.get(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", parameter);"},{"sha":"8efc97cc5c39ac3ff04552b015878032d914d37f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationSyncopeOperations.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.configuration;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.rest.api.service.ConfigurationService;\n+\n+public class ConfigurationSyncopeOperations {\n+\n+    private final ConfigurationService configurationService = SyncopeServices.get(ConfigurationService.class);\n+\n+    public AttrTO get(final String schema) {\n+        return configurationService.get(schema);\n+    }\n+\n+    public void set(final AttrTO attrTO) {\n+        configurationService.set(attrTO);\n+    }\n+\n+    public List<AttrTO> list() {\n+        return configurationService.list();\n+    }\n+\n+    public Response export() {\n+        return configurationService.export();\n+    }\n+\n+    public void delete(final String schema) {\n+        configurationService.delete(schema);\n+    }\n+}"},{"sha":"2f85ffaf1e65890045a211a5344a898be2be0bae","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationUpdate.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -44,10 +44,10 @@ public void update() {\n             for (final String parameter : input.getParameters()) {\n                 try {\n                     pairParameter = input.toPairParameter(parameter);\n-                    attrTO = configurationService.get(pairParameter.getKey());\n+                    attrTO = configurationSyncopeOperations.get(pairParameter.getKey());\n                     attrTO.getValues().clear();\n                     attrTO.getValues().add(pairParameter.getValue());\n-                    configurationService.set(attrTO);\n+                    configurationSyncopeOperations.set(attrTO);\n                     attrList.add(attrTO);\n                 } catch (final IllegalArgumentException ex) {\n                     configurationResultManager.generic(ex.getMessage(), UPDATE_HELP_MESSAGE);"},{"sha":"6286ed46d094deab457437ae28012f0e367e6987","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/AbstractConnectorCommand.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.client.cli.commands.connector;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.ConnectorService;\n-\n public abstract class AbstractConnectorCommand {\n \n-    protected final ConnectorService connectorService = SyncopeServices.get(ConnectorService.class);\n+    protected final ConnectorSyncopeOperations connectorSyncopeOperations = new ConnectorSyncopeOperations();\n \n     protected final ConnectorResultManager connectorResultManager = new ConnectorResultManager();\n "},{"sha":"6e26b9b6b8135983a690eeeb8ce02371ec9f9d48","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorDelete.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -40,10 +40,10 @@ public void delete() {\n             final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    connectorService.delete(Long.valueOf(parameter));\n+                    connectorSyncopeOperations.delete(parameter);\n                     connectorResultManager.deletedMessage(\"connector\", parameter);\n                 } catch (final NumberFormatException ex) {\n-                    connectorResultManager.managerNumberFormatException(\"connector\", parameter);\n+                    connectorResultManager.numberFormatException(\"connector\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Connector\", parameter);"},{"sha":"f063228c6e047ad6deb90378193587c8b83c41fe","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -24,7 +24,7 @@ public class ConnectorList extends AbstractConnectorCommand {\n \n     public void list() {\n         try {\n-            connectorResultManager.toView(connectorService.list(null));\n+            connectorResultManager.toView(connectorSyncopeOperations.list());\n         } catch (final SyncopeClientException ex) {\n             connectorResultManager.generic(ex.getMessage());\n         }"},{"sha":"d77cd834a231deca5ea5c9b172f65d078bfa9869","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListBundles.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -24,7 +24,7 @@ public class ConnectorListBundles extends AbstractConnectorCommand {\n \n     public void list() {\n         try {\n-            connectorResultManager.fromListBundles(connectorService.getBundles(null));\n+            connectorResultManager.fromListBundles(connectorSyncopeOperations.getBundles());\n         } catch (final SyncopeClientException ex) {\n             connectorResultManager.generic(ex.getMessage());\n         }"},{"sha":"91a00216dade770e926b20a90677ead29495e435","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListConfigurationProperties.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -38,9 +38,9 @@ public void list() {\n             for (final String parameter : input.getParameters()) {\n                 try {\n                     connectorResultManager.fromConfigurationProperties(\n-                            connectorService.read(Long.valueOf(parameter), null).getConf());\n+                            connectorSyncopeOperations.read(parameter).getConf());\n                 } catch (final NumberFormatException ex) {\n-                    connectorResultManager.managerNumberFormatException(\"connector\", parameter);\n+                    connectorResultManager.numberFormatException(\"connector\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Connector\", parameter);"},{"sha":"e2dca1e312df40a226f0a8e1da80fd1c78248183","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorRead.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -40,9 +40,9 @@ public void read() {\n             final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    connInstanceTOs.add(connectorService.read(Long.valueOf(parameter), READ_HELP_MESSAGE));\n+                    connInstanceTOs.add(connectorSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n-                    connectorResultManager.managerNumberFormatException(\"connector\", parameter);\n+                    connectorResultManager.numberFormatException(\"connector\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Connector\", parameter);"},{"sha":"d0620779bea7b99c4ac46effb5a50e6e411fd5a6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorReadByResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -41,7 +41,7 @@ public void read() {\n             final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    connInstanceTOs.add(connectorService.readByResource(parameter, READ_HELP_MESSAGE));\n+                    connInstanceTOs.add(connectorSyncopeOperations.readByResource(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Resource\", parameter);"},{"sha":"b4960634e7ede3458a137d5172e37da6b1a697e6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorSyncopeOperations.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.ConnBundleTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.rest.api.service.ConnectorService;\n+\n+public class ConnectorSyncopeOperations {\n+\n+    protected final ConnectorService connectorService = SyncopeServices.get(ConnectorService.class);\n+\n+    public ConnInstanceTO readByResource(final String resourceName) {\n+        return connectorService.readByResource(resourceName, null);\n+    }\n+\n+    public ConnInstanceTO read(final String resourceId) {\n+        return connectorService.read(Long.valueOf(resourceId), null);\n+    }\n+\n+    public List<ConnBundleTO> getBundles() {\n+        return connectorService.getBundles(null);\n+    }\n+\n+    public List<ConnInstanceTO> list() {\n+        return connectorService.list(null);\n+    }\n+\n+    public void delete(final String resourceId) {\n+        connectorService.delete(Long.valueOf(resourceId));\n+    }\n+}"},{"sha":"902f55ca2e4042ee4356db80af2082027ea666ac","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/AbstractDomainCommand.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.client.cli.commands.domain;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.DomainService;\n-\n public abstract class AbstractDomainCommand {\n \n-    protected final DomainService domainService = SyncopeServices.get(DomainService.class);\n+    protected final DomainSyncopeOperations domainSyncopeOperations = new DomainSyncopeOperations();\n \n     protected final DomainResultManager domainResultManager = new DomainResultManager();\n "},{"sha":"f85d3c9913481a702d437ba6cc987199404ce29a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -35,7 +35,7 @@ public void delete() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    domainService.delete(parameter);\n+                    domainSyncopeOperations.delete(parameter);\n                     domainResultManager.deletedMessage(\"Domain\", parameter);\n                 } catch (final SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"6cf7b7df9c96c0e4b6fb57279f45565f1cd01069","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -28,7 +28,7 @@ public DomainList() {\n \n     public void list() {\n         try {\n-            for (final DomainTO domainTO : domainService.list()) {\n+            for (final DomainTO domainTO : domainSyncopeOperations.list()) {\n                 domainResultManager.generic(domainTO.getKey());\n             }\n         } catch (final SyncopeClientException ex) {"},{"sha":"2eaa75a8cfae07ff02c347eb30aafbd15fbf79e2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainRead.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.DomainTO;\n \n public class DomainRead extends AbstractDomainCommand {\n \n@@ -36,8 +35,7 @@ public void read() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    final DomainTO domainTO = domainService.read(parameter);\n-                    domainResultManager.generic(domainTO.getKey());\n+                    domainResultManager.generic(domainSyncopeOperations.read(parameter).getKey());\n                 } catch (final SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         domainResultManager.notFoundError(\"Domain\", parameter);"},{"sha":"994c2178bfa7547aed99bd36a5d845a072ae5aa4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainSyncopeOperations.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.domain;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.DomainTO;\n+import org.apache.syncope.common.rest.api.service.DomainService;\n+\n+public class DomainSyncopeOperations {\n+\n+    private final DomainService domainService = SyncopeServices.get(DomainService.class);\n+\n+    public DomainTO read(final String domainName) {\n+        return domainService.read(domainName);\n+    }\n+\n+    public List<DomainTO> list() {\n+        return domainService.list();\n+    }\n+    \n+    public void delete(final String domainName) {\n+        domainService.delete(domainName);\n+    }\n+}"},{"sha":"4d9a0ff6e32fd8dbf1f7be6daa9b0aa4351491b7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetup.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -48,8 +48,6 @@ public InstallSetup() {\n     }\n \n     public void setup() {\n-        final Scanner scanIn = new Scanner(System.in);\n-\n         System.out.println(\"\");\n         System.out.println(\"###############################################\");\n         System.out.println(\"#                                             #\");\n@@ -67,6 +65,7 @@ public void setup() {\n         System.out.println(\"- File system permission checked\");\n         System.out.println(\"\");\n \n+        final Scanner scanIn = new Scanner(System.in);\n         System.out.println(\"Syncope server schema [http/https]:\");\n         String syncopeServerSchemaFromSystemIn = scanIn.nextLine();\n         boolean schemaFounded = false;"},{"sha":"3e0978a66710e88ea8ced486c20b9d84e7a49e01","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/AbstractLoggerCommand.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FAbstractLoggerCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FAbstractLoggerCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FAbstractLoggerCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,13 +18,10 @@\n  */\n package org.apache.syncope.client.cli.commands.logger;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.LoggerService;\n-\n public abstract class AbstractLoggerCommand {\n \n-    protected final LoggerService loggerService = SyncopeServices.get(LoggerService.class);\n-    \n+    protected final LoggerSyncopeOperations loggerSyncopeOperations = new LoggerSyncopeOperations();\n+\n     protected final LoggerResultManager loggerResultManager = new LoggerResultManager();\n \n }"},{"sha":"40b5e1b33e5827684015c4457704c5d5a38924cd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCreate.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n-import org.apache.syncope.common.lib.types.LoggerType;\n \n public class LoggerCreate extends AbstractLoggerCommand {\n \n@@ -50,7 +49,7 @@ public void create() {\n                     pairParameter = input.toPairParameter(parameter);\n                     loggerTO.setKey(pairParameter.getKey());\n                     loggerTO.setLevel(LoggerLevel.valueOf(pairParameter.getValue()));\n-                    loggerService.update(LoggerType.LOG, loggerTO);\n+                    loggerSyncopeOperations.update(loggerTO);\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n                     loggerResultManager.typeNotValidError("},{"sha":"8bdb3ab725d6b8305d0404b4035894a607690d28","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDelete.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -21,7 +21,6 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.LoggerType;\n \n public class LoggerDelete extends AbstractLoggerCommand {\n \n@@ -37,7 +36,7 @@ public void delete() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    loggerService.delete(LoggerType.LOG, parameter);\n+                    loggerSyncopeOperations.delete(parameter);\n                     loggerResultManager.deletedMessage(\"Logger\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"b64eef6fd87d568107a4581ecb1d8a528217ecc7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerList.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -20,7 +20,6 @@\n \n import java.util.LinkedList;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.LoggerType;\n \n public class LoggerList extends AbstractLoggerCommand {\n \n@@ -29,7 +28,7 @@ public LoggerList() {\n \n     public void list() {\n         try {\n-            loggerResultManager.fromList(new LinkedList<>(loggerService.list(LoggerType.LOG)));\n+            loggerResultManager.fromList(new LinkedList<>(loggerSyncopeOperations.list()));\n         } catch (final SyncopeClientException ex) {\n             loggerResultManager.generic(\"Error: \" + ex.getMessage());\n         }"},{"sha":"119225236cb54dc147b647d0cd7bcb6b063badba","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -23,7 +23,6 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n-import org.apache.syncope.common.lib.types.LoggerType;\n \n public class LoggerRead extends AbstractLoggerCommand {\n \n@@ -41,7 +40,7 @@ public void read() {\n             boolean failed = false;\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    loggerTOs.add(loggerService.read(LoggerType.LOG, parameter));\n+                    loggerTOs.add(loggerSyncopeOperations.read(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);"},{"sha":"14b7d188f7396adfde03ac8ca803fabce80afe1a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerSyncopeOperations.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.logger;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.LoggerTO;\n+import org.apache.syncope.common.lib.types.LoggerType;\n+import org.apache.syncope.common.rest.api.service.LoggerService;\n+\n+public class LoggerSyncopeOperations {\n+\n+    private final LoggerService loggerService = SyncopeServices.get(LoggerService.class);\n+\n+    public List<LoggerTO> list() {\n+        return loggerService.list(LoggerType.LOG);\n+    }\n+\n+    public void update(final LoggerTO loggerTO) {\n+        loggerService.update(LoggerType.LOG, loggerTO);\n+    }\n+\n+    public LoggerTO read(final String loggerName) {\n+        return loggerService.read(LoggerType.LOG, loggerName);\n+    }\n+    \n+    public void delete(final String loggerName) {\n+        loggerService.delete(LoggerType.LOG, loggerName);\n+    }\n+}"},{"sha":"9a4591673cc2067df36022f3a5dc18a6fc4f055d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdate.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n-import org.apache.syncope.common.lib.types.LoggerType;\n \n public class LoggerUpdate extends AbstractLoggerCommand {\n \n@@ -47,9 +46,9 @@ public void update() {\n             for (final String parameter : input.getParameters()) {\n                 try {\n                     pairParameter = input.toPairParameter(parameter);\n-                    loggerTO = loggerService.read(LoggerType.LOG, pairParameter.getKey());\n+                    loggerTO = loggerSyncopeOperations.read(pairParameter.getKey());\n                     loggerTO.setLevel(LoggerLevel.valueOf(pairParameter.getValue()));\n-                    loggerService.update(LoggerType.LOG, loggerTO);\n+                    loggerSyncopeOperations.update(loggerTO);\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {"},{"sha":"83c8b9ab8a4706a5d1abbe0003c49af2c76893d4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdateAll.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n-import org.apache.syncope.common.lib.types.LoggerType;\n \n public class LoggerUpdateAll extends AbstractLoggerCommand {\n \n@@ -41,10 +40,10 @@ public void updateAll() {\n         if (input.parameterNumber() == 1) {\n             final LinkedList<LoggerTO> loggerTOs = new LinkedList<>();\n             boolean failed = false;\n-            for (final LoggerTO loggerTO : loggerService.list(LoggerType.LOG)) {\n+            for (final LoggerTO loggerTO : loggerSyncopeOperations.list()) {\n                 try {\n                     loggerTO.setLevel(LoggerLevel.valueOf(input.firstParameter()));\n-                    loggerService.update(LoggerType.LOG, loggerTO);\n+                    loggerSyncopeOperations.update(loggerTO);\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {"},{"sha":"a21f2cd8e452251e9410bd130d0610e9c29efba5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/AbstractNotificationCommand.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FAbstractNotificationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FAbstractNotificationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FAbstractNotificationCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.client.cli.commands.notification;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.NotificationService;\n-\n public abstract class AbstractNotificationCommand {\n \n-    protected final NotificationService notificationService = SyncopeServices.get(NotificationService.class);\n+    protected final NotificationSyncopeOperations notificationSyncopeOperations = new NotificationSyncopeOperations();\n     \n     protected final NotificationResultManager notificationResultManager = new NotificationResultManager();\n "},{"sha":"3b11a5a28041bd02f4f4dc1bfa07f21acfd25c8b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -37,7 +37,7 @@ public void delete() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    notificationService.delete(Long.valueOf(parameter));\n+                    notificationSyncopeOperations.delete(parameter);\n                     notificationResultManager.deletedMessage(\"Notification\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"3df5d640000b5f6ba061ec6749ce0e9c5140d6d7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -25,7 +25,7 @@ public class NotificationList extends AbstractNotificationCommand {\n \n     public void list() {\n         try {\n-            for (final NotificationTO notificationTO : notificationService.list()) {\n+            for (final NotificationTO notificationTO : notificationSyncopeOperations.list()) {\n                 System.out.println(notificationTO);\n             }\n         } catch (final SyncopeClientException ex) {"},{"sha":"bd82663486d7818f255d2772a36f3e36deb5116d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -36,7 +36,7 @@ public void read() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    System.out.println(notificationService.read(Long.valueOf(parameter)));\n+                    System.out.println(notificationSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n                     notificationResultManager.notBooleanDeletedError(\"notification\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {"},{"sha":"cb11cb51936bb5a4956dffbba7893a8ade5ff58a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationSyncopeOperations.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.notification;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.NotificationTO;\n+import org.apache.syncope.common.rest.api.service.NotificationService;\n+\n+public class NotificationSyncopeOperations {\n+\n+    private final NotificationService notificationService = SyncopeServices.get(NotificationService.class);\n+\n+    public NotificationTO read(final String notificationId) {\n+        return notificationService.read(Long.valueOf(notificationId));\n+    }\n+\n+    public List<NotificationTO> list() {\n+        return notificationService.list();\n+    }\n+\n+    public void delete(final String notificationId) {\n+        notificationService.delete(Long.valueOf(notificationId));\n+    }\n+}"},{"sha":"0c8a55f1fa1af693898e6ca2b549383f688aeeb3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/AbstractPolicyCommand.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,13 +18,10 @@\n  */\n package org.apache.syncope.client.cli.commands.policy;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.PolicyService;\n-\n public abstract class AbstractPolicyCommand {\n \n-    protected final PolicyService policyService = SyncopeServices.get(PolicyService.class);\n-    \n+    protected final PolicySyncopeOperations policySyncopeOperations = new PolicySyncopeOperations();\n+\n     protected final PolicyResultManager policyResultManager = new PolicyResultManager();\n \n }"},{"sha":"8f9ede3263da343a8dd56dbb80bd08d8dd59e42c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -36,7 +36,7 @@ public void delete() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    policyService.delete(Long.valueOf(parameter));\n+                    policySyncopeOperations.delete(parameter);\n                     policyResultManager.deletedMessage(\"Policy\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     System.out.println(\"Error:\");"},{"sha":"4b672d6b99ad07b98882d516fe542165da256d85","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -42,7 +42,7 @@ public void list() {\n             try {\n                 final PolicyType policyType = PolicyType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractPolicyTO> policyTOs = new LinkedList<>();\n-                for (final AbstractPolicyTO policyTO : policyService.list(policyType)) {\n+                for (final AbstractPolicyTO policyTO : policySyncopeOperations.list(policyType)) {\n                     policyTOs.add(policyTO);\n                 }\n                 policyResultManager.fromList(policyType, policyTOs);"},{"sha":"25c93066acdc9cae26e7d9e2c2ecfe89c77b14ed","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -39,7 +39,7 @@ public void read() {\n             final LinkedList<AbstractPolicyTO> policyTOs = new LinkedList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    policyTOs.add(policyService.read(Long.valueOf(parameter)));\n+                    policyTOs.add(policySyncopeOperations.read(parameter));\n                     policyResultManager.fromRead(policyTOs);\n                 } catch (final NumberFormatException ex) {\n                     policyResultManager.notBooleanDeletedError(\"policy\", parameter);"},{"sha":"7c478f8c1df1f660af78a6ba79646f7bf9c5c3d6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicySyncopeOperations.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.policy;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.common.rest.api.service.PolicyService;\n+\n+public class PolicySyncopeOperations {\n+\n+    private final PolicyService policyService = SyncopeServices.get(PolicyService.class);\n+\n+    public <T extends AbstractPolicyTO> T read(final String policyId) {\n+        return policyService.read(Long.valueOf(policyId));\n+    }\n+\n+    public <T extends AbstractPolicyTO> List<T> list(final PolicyType policyType) {\n+        return policyService.list(policyType);\n+    }\n+\n+    public void delete(final String policyId) {\n+        policyService.delete(Long.valueOf(policyId));\n+    }\n+}"},{"sha":"06cd1badb4191fced577a34a078e95906545295b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/AbstractRealmCommand.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FAbstractRealmCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FAbstractRealmCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FAbstractRealmCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.realm;\n+\n+public abstract class AbstractRealmCommand {\n+\n+    protected final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n+\n+    protected final RealmResultManager realmResultManager = new RealmResultManager();\n+\n+}"},{"sha":"6a32562ff5d9acbbc585be1539a665f74fb2ed75","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmCommand.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.realm;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"realm\")\n+public class RealmCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"Usage: realm [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --list \\n\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(Options.HELP.getOptionName());\n+        }\n+        switch (Options.fromName(input.getOption())) {\n+            case LIST:\n+                new RealmList().list();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new RealmResultManager().deletedMessage(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum Options {\n+\n+        HELP(\"--help\"),\n+        LIST(\"--list\");\n+\n+        private final String optionName;\n+\n+        Options(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static Options fromName(final String name) {\n+            Options optionToReturn = HELP;\n+            for (final Options option : Options.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final Options value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+\n+}"},{"sha":"5d4b902dddb5435b91f64eb0b0ab5c59a411af26","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmList.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.realm;\n+\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class RealmList extends AbstractRealmCommand {\n+\n+    public RealmList() {\n+    }\n+\n+    public void list() {\n+        try {\n+            realmResultManager.toView(realmSyncopeOperations.list());\n+        } catch (final SyncopeClientException ex) {\n+            realmResultManager.generic(\"Error: \" + ex.getMessage());\n+        }\n+    }\n+\n+}"},{"sha":"bbb46d9b6a61291243f4dfb06c1de1ac3791960c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmResultManager.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.realm;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+\n+public class RealmResultManager extends CommonsResultManager {\n+\n+    public void toView(final List<RealmTO> realmTOs) {\n+        for (final RealmTO realmTO : realmTOs) {\n+            System.out.println(\" > REALM ID: \" + realmTO.getKey());\n+            System.out.println(\"    name: \" + realmTO.getName());\n+            System.out.println(\"    full path: \" + realmTO.getFullPath());\n+            System.out.println(\"    actions: \" + realmTO.getActionsClassNames());\n+            System.out.println(\"    templates: \" + realmTO.getTemplates());\n+            System.out.println(\"    parent id: \" + realmTO.getParent());\n+            System.out.println(\"    account policy id: \" + realmTO.getAccountPolicy());\n+            System.out.println(\"    password policy id: \" + realmTO.getPasswordPolicy());\n+        }\n+    }\n+}"},{"sha":"e9d0b6539bdfd7d69d3980dcfaef2a2495f14b3f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmSyncopeOperations.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.realm;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.rest.api.service.RealmService;\n+\n+public class RealmSyncopeOperations {\n+\n+    private final RealmService realmService = SyncopeServices.get(RealmService.class);\n+\n+    public List<RealmTO> list() {\n+        return realmService.list();\n+    }\n+\n+    public boolean exists(final String realm) {\n+        boolean exists = false;\n+        for (final RealmTO list : list()) {\n+            if (list.getName().equals(realm)) {\n+                exists = true;\n+            }\n+        }\n+        return exists;\n+    }\n+\n+}"},{"sha":"38a7b2f91d262acf4bba0be15641092e60d97403","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/AbstractReportCommand.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FAbstractReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FAbstractReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FAbstractReportCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.client.cli.commands.report;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.ReportService;\n-\n public abstract class AbstractReportCommand {\n \n-    protected final ReportService reportService = SyncopeServices.get(ReportService.class);\n+    protected final ReportSyncopeOperations reportSyncopeOperations = new ReportSyncopeOperations();\n \n     protected final ReportResultManager reportResultManager = new ReportResultManager();\n "},{"sha":"aa2c5f868974da7a3edb3ac21c1f280d26120170","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDelete.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -36,7 +36,7 @@ public void delete() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    reportService.delete(Long.valueOf(parameter));\n+                    reportSyncopeOperations.delete(parameter);\n                     reportResultManager.deletedMessage(\"Report\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n@@ -47,7 +47,7 @@ public void delete() {\n                         reportResultManager.generic(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n-                    reportResultManager.managerNumberFormatException(\"report\", parameter);\n+                    reportResultManager.numberFormatException(\"report\", parameter);\n                 }\n             }\n         } else {"},{"sha":"86f31a2a2dcf47e4e2bb59014616b42c79100f61","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDeleteExecution.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -39,7 +39,7 @@ public void delete() {\n             for (final String parameter : input.getParameters()) {\n \n                 try {\n-                    reportService.deleteExecution(Long.valueOf(parameter));\n+                    reportSyncopeOperations.deleteExecution(parameter);\n                     reportResultManager.deletedMessage(\"Report execution\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n@@ -50,7 +50,7 @@ public void delete() {\n                         reportResultManager.generic(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n-                    reportResultManager.managerNumberFormatException(\"report\", parameter);\n+                    reportResultManager.numberFormatException(\"report\", parameter);\n                 }\n             }\n         } else {"},{"sha":"06412038fdad211bdf5b967b65f42349a3ce6cfd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExecute.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -39,10 +39,9 @@ public void execute() {\n         if (input.parameterNumber() == 1) {\n \n             try {\n-                final Long reportIdToExecute = Long.valueOf(input.firstParameter());\n-                reportService.execute(reportIdToExecute);\n+                reportSyncopeOperations.execute(input.firstParameter());\n                 final List<ReportExecTO> executionList\n-                        = reportService.read(reportIdToExecute).getExecutions();\n+                        = reportSyncopeOperations.read(input.firstParameter()).getExecutions();\n                 final ReportExecTO lastExecution = executionList.get(executionList.size() - 1);\n                 reportResultManager.printReportExecution(Arrays.asList(lastExecution));\n             } catch (final WebServiceException | SyncopeClientException ex) {\n@@ -54,7 +53,7 @@ public void execute() {\n                     reportResultManager.generic(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n-                reportResultManager.managerNumberFormatException(\"report\", input.firstParameter());\n+                reportResultManager.numberFormatException(\"report\", input.firstParameter());\n             }\n         } else {\n             reportResultManager.commandOptionError(EXECUTE_HELP_MESSAGE);"},{"sha":"ae79e574693f2be8f3ba7456396fa1afcfd6fea1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExportExecution.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -49,12 +49,11 @@ public void export() {\n             for (final String parameter : parameters) {\n                 try {\n                     final ReportExecExportFormat format = ReportExecExportFormat.valueOf(input.lastParameter());\n-                    final Long exportId = Long.valueOf(parameter);\n-                    final SequenceInputStream report = (SequenceInputStream) reportService.\n-                            exportExecutionResult(exportId, format).getEntity();\n+                    final SequenceInputStream report = (SequenceInputStream) reportSyncopeOperations.\n+                            exportExecutionResult(parameter, format).getEntity();\n                     switch (format) {\n                         case XML:\n-                            final String xmlFinalName = \"export_\" + exportId + \".xml\";\n+                            final String xmlFinalName = \"export_\" + parameter + \".xml\";\n                             XMLUtils.createXMLFile(report, xmlFinalName);\n                             reportResultManager.generic(xmlFinalName + \" successfully created\");\n                             break;\n@@ -75,14 +74,13 @@ public void export() {\n                             break;\n                     }\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n-                    ex.printStackTrace();\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else {\n                         reportResultManager.generic(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n-                    reportResultManager.managerNumberFormatException(\"report\", parameter);\n+                    reportResultManager.numberFormatException(\"report\", parameter);\n                 } catch (IOException | ParserConfigurationException | SAXException | TransformerException e) {\n                     reportResultManager.generic(\" - Error creating \" + \"export_\" + parameter + \" \" + e.getMessage());\n                 } catch (final IllegalArgumentException ex) {"},{"sha":"7fca5c03d595ded5cc4d63ae07c4115b555b0432","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -24,7 +24,7 @@ public class ReportList extends AbstractReportCommand {\n \n     public void list() {\n         try {\n-            reportResultManager.fromValueToView(reportService.list());\n+            reportResultManager.fromValueToView(reportSyncopeOperations.list());\n         } catch (final SyncopeClientException ex) {\n             reportResultManager.generic(ex.getMessage());\n         }"},{"sha":"5b13cbf7919a708d697e02d6b3ec14ccb2f4a1ef","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportListJobs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -26,7 +26,7 @@ public class ReportListJobs extends AbstractReportCommand {\n     public void list() {\n         try {\n             for (final JobStatusType jobStatusType : JobStatusType.values()) {\n-                reportResultManager.printReportExecution(reportService.listJobs(jobStatusType));\n+                reportResultManager.printReportExecution(reportSyncopeOperations.listJobs(jobStatusType));\n             }\n         } catch (final SyncopeClientException ex) {\n             reportResultManager.generic(ex.getMessage());"},{"sha":"9a1ebc84b64bc809505d82f45323d6e5af1257c5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportRead.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -40,9 +40,9 @@ public void read() {\n             final List<ReportTO> reportTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    reportTOs.add(reportService.read(Long.valueOf(parameter)));\n+                    reportTOs.add(reportSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n-                    reportResultManager.managerNumberFormatException(\"report\", parameter);\n+                    reportResultManager.numberFormatException(\"report\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);"},{"sha":"45d1c5467f8641875b78ce1c247b0baf5af83b1a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportReadExecution.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -41,7 +41,7 @@ public void read() {\n             final List<ReportExecTO> reportExecTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    reportExecTOs.add(reportService.readExecution(Long.valueOf(parameter)));\n+                    reportExecTOs.add(reportSyncopeOperations.readExecution(parameter));\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     System.out.println(\"Error:\");\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n@@ -50,7 +50,7 @@ public void read() {\n                         reportResultManager.generic(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n-                    reportResultManager.managerNumberFormatException(\"report\", parameter);\n+                    reportResultManager.numberFormatException(\"report\", parameter);\n                 }\n             }\n             reportResultManager.printReportExecution(reportExecTOs);"},{"sha":"1cf4514099f425c386d33f8c3857b0031bc6f406","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportSyncopeOperations.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.report;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.ReportExecTO;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.types.JobStatusType;\n+import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n+import org.apache.syncope.common.rest.api.service.ReportService;\n+\n+public class ReportSyncopeOperations {\n+\n+    private final ReportService reportService = SyncopeServices.get(ReportService.class);\n+\n+    public ReportExecTO readExecution(final String executionid) {\n+        return reportService.readExecution(Long.valueOf(executionid));\n+    }\n+\n+    public ReportTO read(final String reportId) {\n+        return reportService.read(Long.valueOf(reportId));\n+    }\n+\n+    public List<ReportExecTO> listJobs(final JobStatusType jobStatusType) {\n+        return reportService.listJobs(jobStatusType);\n+    }\n+\n+    public List<ReportTO> list() {\n+        return reportService.list();\n+    }\n+\n+    public Response exportExecutionResult(final String executionKey, final ReportExecExportFormat fmt) {\n+        return reportService.exportExecutionResult(Long.valueOf(executionKey), fmt);\n+    }\n+\n+    public void execute(final String reportId) {\n+        reportService.execute(Long.valueOf(reportId));\n+    }\n+\n+    public void deleteExecution(final String executionId) {\n+        reportService.deleteExecution(Long.valueOf(executionId));\n+    }\n+\n+    public void delete(final String reportId) {\n+        reportService.delete(Long.valueOf(reportId));\n+    }\n+}"},{"sha":"943f4054b3d5829b9eb5f44d1721d2d830393d31","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/AbstractResourceCommand.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,13 +18,10 @@\n  */\n package org.apache.syncope.client.cli.commands.resource;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.ResourceService;\n-\n public abstract class AbstractResourceCommand {\n \n-    protected final ResourceService resourceService = SyncopeServices.get(ResourceService.class);\n-\n+    protected final ResourceSyncopeOperations resourceSyncopeOperations = new ResourceSyncopeOperations();\n+    \n     protected final ResourceResultManager resourceResultManager = new ResourceResultManager();\n \n }"},{"sha":"9068b7d615393087402c703b965d3a3f5d9f88ac","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceDelete.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -35,10 +35,10 @@ public void delete() {\n         if (input.getParameters().length >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    resourceService.delete(parameter);\n+                    resourceSyncopeOperations.delete(parameter);\n                     resourceResultManager.deletedMessage(\"resource\", parameter);\n                 } catch (final NumberFormatException ex) {\n-                    resourceResultManager.managerNumberFormatException(\"resource\", parameter);\n+                    resourceResultManager.numberFormatException(\"resource\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         resourceResultManager.notFoundError(\"Resource\", parameter);"},{"sha":"27f0d74e175b26b65bebd8b3924165d21b75295a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -24,7 +24,7 @@ public class ResourceList extends AbstractResourceCommand {\n \n     public void list() {\n         try {\n-            resourceResultManager.toView(resourceService.list());\n+            resourceResultManager.toView(resourceSyncopeOperations.list());\n         } catch (final SyncopeClientException ex) {\n             resourceResultManager.generic(ex.getMessage());\n         }"},{"sha":"85cd66905618be55080c1266a47b1bda6a623511","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceRead.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -39,9 +39,9 @@ public void read() {\n             final List<ResourceTO> resourceTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    resourceTOs.add(resourceService.read(parameter));\n+                    resourceTOs.add(resourceSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n-                    resourceResultManager.managerNumberFormatException(\"resource\", parameter);\n+                    resourceResultManager.numberFormatException(\"resource\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         resourceResultManager.notFoundError(\"Resource\", parameter);"},{"sha":"d598910f1f7ea33ac829076178411f0ebaa1f535","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceResultManager.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -54,6 +54,7 @@ private void printResource(final ResourceTO resourceTO) {\n         System.out.println(\"    delete trace level: \" + resourceTO.getDeleteTraceLevel());\n         System.out.println(\"    update trace level: \" + resourceTO.getUpdateTraceLevel());\n         System.out.println(\"    sync trace level: \" + resourceTO.getSyncTraceLevel());\n+        System.out.println(\"\");\n     }\n \n     private void printProvision(final List<ProvisionTO> provisionTOs) {\n@@ -66,14 +67,12 @@ private void printProvision(final List<ProvisionTO> provisionTOs) {\n             System.out.println(\"       MAPPING: \");\n             printMapping(provisionTO.getMapping());\n         }\n-        System.out.println(\"\");\n     }\n \n     private void printMapping(final MappingTO mappingTO) {\n         System.out.println(\"          ConnObjectLink: \" + mappingTO.getConnObjectLink());\n         System.out.println(\"          MAPPING ITEM: \");\n         printMappingItem(mappingTO.getItems());\n-        System.out.println(\"\");\n     }\n \n     private void printMappingItem(final List<MappingItemTO> mappingItemTOs) {\n@@ -88,8 +87,8 @@ private void printMappingItem(final List<MappingItemTO> mappingItemTOs) {\n             System.out.println(\"             purpose: \" + mappingItemTO.getPurpose());\n             System.out.println(\"             connector object key: \" + mappingItemTO.isConnObjectKey());\n             System.out.println(\"             password: \" + mappingItemTO.isPassword());\n+            System.out.println(\"\");\n         }\n-        System.out.println(\"\");\n     }\n \n }"},{"sha":"9ddedf8a4b686febc1d617c03f4d3452b7a8336c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceSyncopeOperations.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.resource;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.rest.api.service.ResourceService;\n+\n+public class ResourceSyncopeOperations {\n+\n+    private final ResourceService resourceService = SyncopeServices.get(ResourceService.class);\n+\n+    public void delete(final String name) {\n+        resourceService.delete(name);\n+    }\n+\n+    public List<ResourceTO> list() {\n+        return resourceService.list();\n+    }\n+\n+    public ResourceTO read(final String name) {\n+        return resourceService.read(name);\n+    }\n+\n+    public boolean exists(final String name) {\n+        try {\n+            read(name);\n+            return true;\n+        } catch (final SyncopeClientException ex) {\n+            return false;\n+        }\n+    }\n+}"},{"sha":"96dae04c36707a18455920f6c75d8c386593b948","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/AbstractSchemaCommand.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FAbstractSchemaCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FAbstractSchemaCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FAbstractSchemaCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,13 +18,10 @@\n  */\n package org.apache.syncope.client.cli.commands.schema;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.SchemaService;\n-\n public abstract class AbstractSchemaCommand {\n \n-    protected final SchemaService schemaService = SyncopeServices.get(SchemaService.class);\n-    \n+    protected final SchemaSyncopeOperations schemaSyncopeOperations = new SchemaSyncopeOperations();\n+\n     protected final SchemaResultManager schemaResultManager = new SchemaResultManager();\n \n }"},{"sha":"0850e2fcc3fdd3aa241c3fb30c8147f517b22522","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -41,7 +41,7 @@ public void delete() {\n             final String[] parameters = Arrays.copyOfRange(input.getParameters(), 1, input.parameterNumber());\n             try {\n                 for (final String parameter : parameters) {\n-                    schemaService.delete(SchemaType.valueOf(input.firstParameter()), parameter);\n+                    schemaSyncopeOperations.delete(SchemaType.valueOf(input.firstParameter()), parameter);\n                     schemaResultManager.deletedMessage(\"Schema\", parameter);\n                 }\n             } catch (final SyncopeClientException | WebServiceException ex) {"},{"sha":"404a487e27b15d0c5a5198075542d87bf3750553","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -41,7 +41,7 @@ public void list() {\n             try {\n                 final SchemaType schemaType = SchemaType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-                for (final AbstractSchemaTO schemaTO : schemaService.list(schemaType)) {\n+                for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.list(schemaType)) {\n                     schemaTOs.add(schemaTO);\n                 }\n                 switch (schemaType) {"},{"sha":"57d95a1b63145e4f804a94f523a251fcb5c95074","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListAll.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -30,7 +30,7 @@ public void listAll() {\n         try {\n             for (final SchemaType schemaType : SchemaType.values()) {\n                 final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-                for (final AbstractSchemaTO schemaTO : schemaService.list(schemaType)) {\n+                for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.list(schemaType)) {\n                     schemaTOs.add(schemaTO);\n                 }\n                 switch (schemaType) {"},{"sha":"ee90327808ff39620e376f3a8388bd43105e2ff5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListDerived.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -22,14 +22,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n \n public class SchemaListDerived extends AbstractSchemaCommand {\n \n     public void listDerived() {\n         try {\n             final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-            for (final AbstractSchemaTO schemaTO : schemaService.list(SchemaType.DERIVED)) {\n+            for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listDerived()) {\n                 schemaTOs.add(schemaTO);\n             }\n             schemaResultManager.fromListDerived(schemaTOs);"},{"sha":"6fa9ad60148fb438666ccad1793ef01e55c7321c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListPlain.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -22,14 +22,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n \n public class SchemaListPlain extends AbstractSchemaCommand {\n \n     public void listPlain() {\n         try {\n             final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-            for (final AbstractSchemaTO schemaTO : schemaService.list(SchemaType.PLAIN)) {\n+            for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listPlain()) {\n                 schemaTOs.add(schemaTO);\n             }\n             schemaResultManager.fromListPlain(schemaTOs);"},{"sha":"74b5b6c12074824bf33e17747b035c26909798d3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListVirtual.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -22,14 +22,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n \n public class SchemaListVirtual extends AbstractSchemaCommand {\n \n     public void listVirtual() {\n         try {\n             final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-            for (final AbstractSchemaTO schemaTO : schemaService.list(SchemaType.VIRTUAL)) {\n+            for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listVirtual()) {\n                 schemaTOs.add(schemaTO);\n             }\n             schemaResultManager.fromListVirtual(schemaTOs);"},{"sha":"d84444d3bea03373021e098231b22b9a12d569ed","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -45,7 +45,7 @@ public void read() {\n                 final SchemaType schemaType = SchemaType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n                 for (final String parameter : parameters) {\n-                    schemaTOs.add(schemaService.read(schemaType, parameter));\n+                    schemaTOs.add(schemaSyncopeOperations.read(schemaType, parameter));\n                 }\n                 switch (schemaType) {\n                     case PLAIN:"},{"sha":"c8f0a6d0c0df366ca8c00a3e5ab7a11ffa534f1c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaSyncopeOperations.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.schema;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.rest.api.service.SchemaService;\n+\n+public class SchemaSyncopeOperations {\n+\n+    private final SchemaService schemaService = SyncopeServices.get(SchemaService.class);\n+\n+    public <T extends AbstractSchemaTO> T read(final SchemaType schemaType, final String schemaName) {\n+        return schemaService.read(schemaType, schemaName);\n+    }\n+\n+    public <T extends AbstractSchemaTO> List<T> list(final SchemaType schemaType) {\n+        return schemaService.list(schemaType);\n+    }\n+\n+    public <T extends AbstractSchemaTO> List<T> listVirtual() {\n+        return schemaService.list(SchemaType.VIRTUAL);\n+    }\n+\n+    public <T extends AbstractSchemaTO> List<T> listPlain() {\n+        return schemaService.list(SchemaType.PLAIN);\n+    }\n+\n+    public <T extends AbstractSchemaTO> List<T> listDerived() {\n+        return schemaService.list(SchemaType.DERIVED);\n+    }\n+\n+    public void delete(final SchemaType schemaType, final String schemaName) {\n+        schemaService.delete(schemaType, schemaName);\n+    }\n+}"},{"sha":"bdc4c2225676939ba415682c1fcdcac7ba2b0708","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/AbstractTaskCommand.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FAbstractTaskCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FAbstractTaskCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FAbstractTaskCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.client.cli.commands.task;\n \n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.rest.api.service.TaskService;\n-\n public abstract class AbstractTaskCommand {\n \n-    protected final TaskService taskService = SyncopeServices.get(TaskService.class);\n+    protected final TaskSyncopeOperations taskSyncopeOperations = new TaskSyncopeOperations();\n \n     protected final TaskResultManager taskResultManager = new TaskResultManager();\n "},{"sha":"e0d47531a95395e5f1418393767481603bb4b0c4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -37,7 +37,7 @@ public void delete() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    taskService.delete(Long.valueOf(parameter));\n+                    taskSyncopeOperations.delete(parameter);\n                     taskResultManager.deletedMessage(\"Task\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"dfefae3a6c64d950f6166667ae95a48e0188aebf","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecute.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -37,7 +37,6 @@ public TaskExecute(final Input input) {\n     public void execute() {\n         if (input.parameterNumber() == 2) {\n             try {\n-                final Long taskIdToExecute = Long.valueOf(input.firstParameter());\n                 boolean dryRun = true;\n                 if (\"false\".equalsIgnoreCase(input.secondParameter())) {\n                     dryRun = false;\n@@ -46,7 +45,8 @@ public void execute() {\n                 } else {\n                     taskResultManager.notBooleanDeletedError(\"dry run\", input.secondParameter());\n                 }\n-                taskResultManager.printTaskExecTO(Arrays.asList(taskService.execute(taskIdToExecute, dryRun)));\n+                taskResultManager.printTaskExecTO(Arrays.asList(\n+                        taskSyncopeOperations.execute(input.firstParameter(), dryRun)));\n             } catch (final WebServiceException | SyncopeClientException ex) {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     taskResultManager.notFoundError(\"Task\", input.firstParameter());"},{"sha":"bb6d69440a6c1f64d38369d103bbf11ce56ef5d9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecutionDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -37,7 +37,7 @@ public void delete() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    taskService.deleteExecution(Long.valueOf(parameter));\n+                    taskSyncopeOperations.deleteExecution(parameter);\n                     taskResultManager.deletedMessage(\"Task execution\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"d83e2ef39e90b02b51476f7d8bbebdacfffac302","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecutionRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -38,7 +38,7 @@ public void read() {\n             for (final String parameter : input.getParameters()) {\n                 try {\n                     taskResultManager.printTaskExecTO(\n-                            Arrays.asList(taskService.readExecution(Long.valueOf(parameter))));\n+                            Arrays.asList(taskSyncopeOperations.readExecution(parameter)));\n                 } catch (final NumberFormatException ex) {\n                     taskResultManager.notBooleanDeletedError(\"task execution\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {"},{"sha":"b8c08e56b0f13b6ccb76378f8e749c0645e85987","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -42,7 +42,7 @@ public void list() {\n             try {\n                 final TaskType taskType = TaskType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractTaskTO> taskTOs = new LinkedList<>();\n-                for (final AbstractTaskTO taskTO : taskService.list(taskType, new TaskQuery()).getResult()) {\n+                for (final AbstractTaskTO taskTO : taskSyncopeOperations.list(taskType, new TaskQuery()).getResult()) {\n                     taskTOs.add(taskTO);\n                 }\n                 taskResultManager.fromList(taskType, taskTOs);"},{"sha":"9e93d9efff2e9327f1f6b08b9b18dbe869a6eb58","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -39,7 +39,7 @@ public void read() {\n             final LinkedList<AbstractTaskTO> taskTOs = new LinkedList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    taskTOs.add(taskService.read(Long.valueOf(parameter)));\n+                    taskTOs.add(taskSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n                     taskResultManager.notBooleanDeletedError(\"task\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {"},{"sha":"d3a7e93598aa6219151825c07c9dc1c115ad73f9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskRunningJobs.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRunningJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRunningJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRunningJobs.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -19,13 +19,12 @@\n package org.apache.syncope.client.cli.commands.task;\n \n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.JobStatusType;\n \n public class TaskRunningJobs extends AbstractTaskCommand {\n \n     public void list() {\n         try {\n-            taskResultManager.printTaskExecTO(taskService.listJobs(JobStatusType.RUNNING));\n+            taskResultManager.printTaskExecTO(taskSyncopeOperations.listRunningJobs());\n         } catch (final SyncopeClientException ex) {\n             taskResultManager.generic(ex.getMessage());\n         }"},{"sha":"c4798d5e0641d978b5d58f21dc50750785a5e8d0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskScheduledJobs.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskScheduledJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskScheduledJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskScheduledJobs.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -19,13 +19,12 @@\n package org.apache.syncope.client.cli.commands.task;\n \n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.JobStatusType;\n \n public class TaskScheduledJobs extends AbstractTaskCommand {\n \n     public void list() {\n         try {\n-            taskResultManager.printTaskExecTO(taskService.listJobs(JobStatusType.SCHEDULED));\n+            taskResultManager.printTaskExecTO(taskSyncopeOperations.listScheduledJobs());\n         } catch (final SyncopeClientException ex) {\n             taskResultManager.generic(ex.getMessage());\n         }"},{"sha":"6b819e9f87d5e73da061c570c7f2a18c3e54ad4a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskSyncopeOperations.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.task;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.TaskExecTO;\n+import org.apache.syncope.common.lib.types.JobStatusType;\n+import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.rest.api.beans.TaskQuery;\n+import org.apache.syncope.common.rest.api.service.TaskService;\n+\n+public class TaskSyncopeOperations {\n+\n+    private final TaskService taskService = SyncopeServices.get(TaskService.class);\n+\n+    public List<TaskExecTO> listScheduledJobs() {\n+        return taskService.listJobs(JobStatusType.SCHEDULED);\n+    }\n+\n+    public List<TaskExecTO> listRunningJobs() {\n+        return taskService.listJobs(JobStatusType.RUNNING);\n+    }\n+\n+    public <T extends AbstractTaskTO> T read(final String taskId) {\n+        return taskService.read(Long.valueOf(taskId));\n+    }\n+\n+    public void delete(final String taskId) {\n+        taskService.read(Long.valueOf(taskId));\n+    }\n+\n+    public <T extends AbstractTaskTO> PagedResult<T> list(final TaskType type, final TaskQuery query) {\n+        return taskService.list(type, query);\n+    }\n+\n+    public TaskExecTO readExecution(final String executionId) {\n+        return taskService.readExecution(Long.valueOf(executionId));\n+    }\n+\n+    public void deleteExecution(final String executionId) {\n+        taskService.deleteExecution(Long.valueOf(executionId));\n+    }\n+\n+    public TaskExecTO execute(final String executionId, final boolean dryRun) {\n+        return taskService.execute(Long.valueOf(executionId), dryRun);\n+    }\n+}"},{"sha":"5a28a041d406eb24f825e7e0eb9dbf4d2e69ae31","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/AbstractUserCommand.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+public abstract class AbstractUserCommand {\n+\n+    protected final UserSyncopeOperations userSyncopeOperations = new UserSyncopeOperations();\n+\n+    protected final UserResultManager userResultManager = new UserResultManager();\n+\n+}"},{"sha":"35c3941bbc7df31e14842716c50880b846f5a9cb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCommand.java","status":"added","additions":144,"deletions":0,"changes":144,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"user\")\n+public class UserCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"Usage: user [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --list \\n\"\n+            + \"    --count \\n\"\n+            + \"    --get-user-key\\n\"\n+            + \"       Syntax: --get-user-key {USER-ID} {USER-ID} [...]\\n\"\n+            + \"    --get-username\\n\"\n+            + \"       Syntax: --get-username {USERNAME} {USERNAME} [...]\\n\"\n+            + \"    --read \\n\"\n+            + \"       Syntax: --read {USER-ID} {USER-ID} [...]\\n\"\n+            + \"    --search-by-attribute \\n\"\n+            + \"       Syntax: --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\\n\"\n+            + \"    --search-by-role \\n\"\n+            + \"       Syntax: --search-by-role {REALM} {ROLE-ID}\\n\"\n+            + \"    --search-by-resource \\n\"\n+            + \"       Syntax: --search-by-resource {REALM} {RESOURCE-NAME}\\n\"\n+            + \"    --delete \\n\"\n+            + \"       Syntax: --delete {USER-ID} {USER-ID} [...]\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(UserOptions.HELP.getOptionName());\n+        }\n+\n+        switch (UserOptions.fromName(input.getOption())) {\n+            case COUNT:\n+                new UserCount(input).count();\n+                break;\n+            case LIST:\n+                new UserList().list();\n+                break;\n+            case GET_BY_KEY:\n+                new UserGetKey(input).get();\n+                break;\n+            case GET_BY_USERNAME:\n+                new UserGetUsername(input).get();\n+                break;\n+            case READ:\n+                new UserRead(input).read();\n+                break;\n+            case SEARCH_BY_ATTRIBUTE:\n+                new UserSearchByAttribute(input).search();\n+                break;\n+            case SEARCH_BY_ROLE:\n+                new UserSearchByRole(input).search();\n+                break;\n+            case SEARCH_BY_RESOURCE:\n+                new UserSearchByResource(input).search();\n+                break;\n+            case DELETE:\n+                new UserDelete(input).delete();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new UserResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum UserOptions {\n+\n+        HELP(\"--help\"),\n+        COUNT(\"--count\"),\n+        LIST(\"--list\"),\n+        GET_BY_KEY(\"--get-user-key\"),\n+        GET_BY_USERNAME(\"--get-username\"),\n+        READ(\"--read\"),\n+        SEARCH_BY_ATTRIBUTE(\"--search-by-attribute\"),\n+        SEARCH_BY_ROLE(\"--search-by-role\"),\n+        SEARCH_BY_RESOURCE(\"--search-by-resource\"),\n+        DELETE(\"--delete\");\n+\n+        private final String optionName;\n+\n+        UserOptions(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static UserOptions fromName(final String name) {\n+            UserOptions optionToReturn = HELP;\n+            for (final UserOptions option : UserOptions.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final UserOptions value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+\n+}"},{"sha":"a9cff9ed3d1b4d32901adfb056ea64059bbb473f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCount.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCount.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCount.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCount.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class UserCount extends AbstractUserCommand {\n+\n+    private final Input input;\n+\n+    public UserCount(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void count() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                userResultManager.generic(\"Total users: \" + userSyncopeOperations.count());\n+            } catch (final SyncopeClientException ex) {\n+                userResultManager.generic(\"Error: \" + ex.getMessage());\n+            }\n+        } else {\n+            userResultManager.generic(\"Error: unnecessary parameters \" + input.listParameters());\n+        }\n+    }\n+}"},{"sha":"817db6cd9c8bc5bfc5c731a5c7f666ee79ce7c48","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDelete.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class UserDelete extends AbstractUserCommand {\n+\n+    private static final String DELETE_HELP_MESSAGE = \"user --delete {USER-ID} {USER-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public UserDelete(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.parameterNumber() >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    userSyncopeOperations.delete(parameter);\n+                    userResultManager.deletedMessage(\"User\", parameter);\n+                } catch (final WebServiceException | SyncopeClientException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        userResultManager.notFoundError(\"User\", parameter);\n+                    } else {\n+                        userResultManager.generic(ex.getMessage());\n+                    }\n+                } catch (final NumberFormatException ex) {\n+                    userResultManager.numberFormatException(\"user\", parameter);\n+                }\n+            }\n+        } else {\n+            userResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"d64a3275ec243184815dd93129bc78072f9b86ee","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserGetKey.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class UserGetKey extends AbstractUserCommand {\n+\n+    private static final String GET_HELP_MESSAGE = \"user --get-user-key {USERNAME}\";\n+\n+    private final Input input;\n+\n+    public UserGetKey(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void get() {\n+        if (input.getParameters().length == 1) {\n+            try {\n+                userResultManager.generic(userSyncopeOperations.getIdFromUsername(input.firstParameter()));\n+            } catch (final SyncopeClientException ex) {\n+                userResultManager.generic(\"Error: \" + ex.getMessage());\n+            }\n+        } else {\n+            userResultManager.commandOptionError(GET_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"a94b1df5f66fa64e603065f6494eb7acab1d7393","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserGetUsername.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class UserGetUsername extends AbstractUserCommand {\n+\n+    private static final String GET_HELP_MESSAGE = \"user --get-username {USER-ID}\";\n+\n+    private final Input input;\n+\n+    public UserGetUsername(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void get() {\n+        if (input.getParameters().length == 1) {\n+            try {\n+                userResultManager.generic(userSyncopeOperations.getUsernameFromId(input.firstParameter()));\n+            } catch (final SyncopeClientException ex) {\n+                userResultManager.generic(\"Error: \" + ex.getMessage());\n+            }\n+        } else {\n+            userResultManager.commandOptionError(GET_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"4778cd2eac09e93f15c154482fe5955e6cce7a21","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserList.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.LinkedList;\n+import java.util.Scanner;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserList extends AbstractUserCommand {\n+\n+    public void list() {\n+        try {\n+            final Scanner scanIn = new Scanner(System.in);\n+            System.out.println(\n+                    \"This operation could be print a lot of information \"\n+                    + \"on your screen. Do you want to continue? [yes/no]\");\n+            final String answer = scanIn.nextLine();\n+            if (\"yes\".equalsIgnoreCase(answer)) {\n+                final PagedResult<UserTO> uResult = userSyncopeOperations.list();\n+                userResultManager.toView(new LinkedList<>(uResult.getResult()));\n+            } else if (\"no\".equalsIgnoreCase(answer)) {\n+                userResultManager.generic(\"List operation skipped\");\n+            } else {\n+                userResultManager.generic(\"Invalid parameter, please use [yes/no]\");\n+            }\n+        } catch (final SyncopeClientException ex) {\n+            userResultManager.generic(ex.getMessage());\n+        }\n+    }\n+}"},{"sha":"ae944093b2c8f817fa225dd55bbeda2734a8d0b8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserRead.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.LinkedList;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserRead extends AbstractUserCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"user --read {USER-ID} {USER-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public UserRead(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.getParameters().length >= 1) {\n+            final LinkedList<UserTO> userTOs = new LinkedList<>();\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    userTOs.add(userSyncopeOperations.read(parameter));\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        userResultManager.notFoundError(\"Logger\", parameter);\n+                    } else {\n+                        userResultManager.generic(\"Error: \" + ex.getMessage());\n+                    }\n+                    break;\n+                } catch (final NumberFormatException ex) {\n+                    userResultManager.numberFormatException(\"user\", parameter);\n+                }\n+            }\n+            userResultManager.toView(userTOs);\n+        } else {\n+            userResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"2ea05787be9c133c0c1a2d8be6455c3c0b9e143d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserResultManager.java","status":"added","additions":110,"deletions":0,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.to.RelationshipTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserResultManager extends CommonsResultManager {\n+\n+    public void toView(final List<UserTO> userTOs) {\n+        for (final UserTO userTO : userTOs) {\n+            printUser(userTO);\n+        }\n+        System.out.println(\"\");\n+    }\n+\n+    private void printUser(final UserTO userTO) {\n+        System.out.println(\" > USER ID: \" + userTO.getKey());\n+        System.out.println(\"    username: \" + userTO.getUsername());\n+        System.out.println(\"    realm: \" + userTO.getRealm());\n+        System.out.println(\"    status: \" + userTO.getStatus());\n+        System.out.println(\"    RESOURCES: \");\n+        printResource(userTO.getResources());\n+        System.out.println(\"    ROLES: \");\n+        printRole(userTO.getRoles());\n+        System.out.println(\"    creation date: \" + userTO.getCreationDate());\n+        System.out.println(\"    change password date: \" + userTO.getChangePwdDate());\n+        System.out.println(\"    PLAIN ATTRIBUTES: \");\n+        printAttributes(userTO.getPlainAttrs());\n+        System.out.println(\"    DERIVED ATTRIBUTES: \");\n+        printAttributes(userTO.getDerAttrs());\n+        System.out.println(\"    VIRTUAL ATTRIBUTES: \");\n+        printAttributes(userTO.getVirAttrs());\n+        System.out.println(\"    creator: \" + userTO.getCreator());\n+        System.out.println(\"    last modifier: \" + userTO.getLastModifier());\n+        System.out.println(\"    token: \" + userTO.getToken());\n+        System.out.println(\"    token expiration time: \" + userTO.getTokenExpireTime());\n+        System.out.println(\"    last change: \" + userTO.getLastChangeDate());\n+        System.out.println(\"    last login: \" + userTO.getLastLoginDate());\n+        System.out.println(\"    failed logins: \" + userTO.getFailedLogins());\n+        System.out.println(\"PROPAGATIONS:\");\n+        printPropagationStatus(userTO.getPropagationStatusTOs());\n+        System.out.println(\"RELATIONSHIPS:\");\n+        printRelationships(userTO.getRelationships());\n+        System.out.println(\"    security question id: \" + userTO.getSecurityQuestion());\n+        System.out.println(\"    security question answer id: \" + userTO.getSecurityAnswer());\n+        System.out.println(\"\");\n+    }\n+\n+    private void printResource(final Set<String> resources) {\n+        for (final String resource : resources) {\n+            System.out.println(\"       - \" + resource);\n+        }\n+    }\n+\n+    private void printRole(final List<Long> roles) {\n+        for (final Long role : roles) {\n+            System.out.println(\"       - \" + role);\n+        }\n+    }\n+\n+    private void printAttributes(final Set<AttrTO> derAttrTOs) {\n+        for (final AttrTO attrTO : derAttrTOs) {\n+            final StringBuilder attributeSentence = new StringBuilder();\n+            attributeSentence.append(\"       \")\n+                    .append(attrTO.getSchema())\n+                    .append(\": \")\n+                    .append(attrTO.getValues());\n+            if (attrTO.isReadonly()) {\n+                attributeSentence.append(\" - is readonly.\");\n+            }\n+            System.out.println(attributeSentence);\n+        }\n+    }\n+\n+    private void printPropagationStatus(final List<PropagationStatus> propagationStatuses) {\n+        for (final PropagationStatus propagationStatus : propagationStatuses) {\n+            System.out.println(\"       status: \" + propagationStatus.getStatus());\n+            System.out.println(\"       resource: \" + propagationStatus.getResource());\n+            System.out.println(\"       failure reason: \" + propagationStatus.getFailureReason());\n+        }\n+    }\n+\n+    private void printRelationships(final List<RelationshipTO> relationshipTOs) {\n+        for (final RelationshipTO relationshipTO : relationshipTOs) {\n+            System.out.println(\"       type: \" + relationshipTO.getType());\n+        }\n+    }\n+}"},{"sha":"18ac77ee9d9f5fa4867df7bb5e12f0ad4a3070b2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByAttribute.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.List;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserSearchByAttribute extends AbstractUserCommand {\n+\n+    private static final String SEARCH_HELP_MESSAGE = \"user --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\";\n+\n+    private final Input input;\n+\n+    public UserSearchByAttribute(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void search() {\n+        if (input.parameterNumber() >= 2) {\n+            final String realm = input.firstParameter();\n+            final Input.PairParameter pairParameter = input.toPairParameter(input.secondParameter());\n+            final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n+            try {\n+                List<UserTO> userTOs;\n+                if (!realmSyncopeOperations.exists(realm)) {\n+                    userResultManager.generic(\"Operation performed on root realm because \" + realm + \"does not exists\");\n+                }\n+                userTOs = userSyncopeOperations.searchByAttribute(\n+                        realm, pairParameter.getKey(), pairParameter.getValue());\n+                if (userTOs == null || userTOs.isEmpty()) {\n+                    userResultManager.generic(\"No users found with attribute \"\n+                            + pairParameter.getKey() + \" and value \" + pairParameter.getValue());\n+                } else {\n+                    userResultManager.toView(userTOs);\n+                }\n+            } catch (final WebServiceException | SyncopeClientException ex) {\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    userResultManager.notFoundError(\"User with \" + pairParameter.getKey(), pairParameter.getValue());\n+                } else {\n+                    userResultManager.generic(ex.getMessage(), SEARCH_HELP_MESSAGE);\n+                }\n+            } catch (final IllegalArgumentException ex) {\n+                userResultManager.generic(ex.getMessage(), SEARCH_HELP_MESSAGE);\n+            }\n+            userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"6a2215073ecf0cb42114d1f8d24e1877ba768d1f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByResource.java","status":"added","additions":68,"deletions":0,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.List;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n+import org.apache.syncope.client.cli.commands.resource.ResourceSyncopeOperations;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserSearchByResource extends AbstractUserCommand {\n+\n+    private static final String SEARCH_HELP_MESSAGE = \"user --search {REALM} {RESOURCE-NAME}\";\n+\n+    private final Input input;\n+\n+    public UserSearchByResource(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void search() {\n+        if (input.parameterNumber() == 2) {\n+            final String realm = input.firstParameter();\n+            final String resource = input.secondParameter();\n+            final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n+            final ResourceSyncopeOperations resourceSyncopeOperations = new ResourceSyncopeOperations();\n+            try {\n+                List<UserTO> userTOs = null;\n+                if (!realmSyncopeOperations.exists(realm)) {\n+                    userResultManager.generic(\"Operation performed on root realm because \" + realm + \"does not exists\");\n+                }\n+                if (!resourceSyncopeOperations.exists(resource)) {\n+                    userResultManager.notFoundError(\"Resource\", resource);\n+                } else {\n+                    userTOs = userSyncopeOperations.searchByResource(realm, resource);\n+                }\n+                if (userTOs == null || userTOs.isEmpty()) {\n+                    userResultManager.generic(\"No users has \" + resource + \" assigned\");\n+                } else {\n+                    userResultManager.toView(userTOs);\n+                }\n+            } catch (final WebServiceException | SyncopeClientException ex) {\n+                userResultManager.generic(ex.getMessage(), SEARCH_HELP_MESSAGE);\n+            }\n+        } else {\n+            userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"789bacbbc6cadfb0b0de020936455ed43742d520","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByRole.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.List;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserSearchByRole extends AbstractUserCommand {\n+\n+    private static final String SEARCH_HELP_MESSAGE = \"user --search {REALM} {ROLE-ID}\";\n+\n+    private final Input input;\n+\n+    public UserSearchByRole(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void search() {\n+        if (input.parameterNumber() == 2) {\n+            final String realm = input.firstParameter();\n+            final String role = input.secondParameter();\n+            final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n+            try {\n+                List<UserTO> userTOs;\n+                if (!realmSyncopeOperations.exists(realm)) {\n+                    userResultManager.generic(\"Operation performed on root realm because \" + realm + \"does not exists\");\n+                }\n+                userTOs = userSyncopeOperations.searchByRole(realm, input.secondParameter());\n+                if (userTOs == null || userTOs.isEmpty()) {\n+                    userResultManager.generic(\"No users has \" + role + \" assigned\");\n+                } else {\n+                    userResultManager.toView(userTOs);\n+                }\n+            } catch (final WebServiceException | SyncopeClientException ex) {\n+                userResultManager.generic(ex.getMessage(), SEARCH_HELP_MESSAGE);\n+            }\n+        } else {\n+            userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"0496d97d477b91729f0e7e0429303927c90bebcc","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSyncopeOperations.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java?ref=47b9f64bd1aeb9ec9260f809a83c042cbf09b9fd","patch":"@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n+import org.apache.syncope.common.rest.api.service.UserService;\n+\n+public class UserSyncopeOperations {\n+\n+    private final UserService userService = SyncopeServices.get(UserService.class);\n+\n+    public List<UserTO> searchByRole(final String realm, final String role) {\n+        return userService.search(\n+                SyncopeClient.getAnySearchQueryBuilder().realm(realm).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().inRoles(Long.valueOf(role))\n+                        .query()).build()).getResult();\n+    }\n+\n+    public List<UserTO> searchByResource(final String realm, final String resource) {\n+        return userService.search(\n+                SyncopeClient.getAnySearchQueryBuilder().realm(realm).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().hasResources(resource)\n+                        .query()).build()).getResult();\n+    }\n+\n+    public List<UserTO> searchByAttribute(final String realm, final String attributeName, final String attributeValue) {\n+        return userService.search(\n+                SyncopeClient.getAnySearchQueryBuilder().realm(realm).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(attributeName).equalTo(attributeValue)\n+                        .query()).build()).getResult();\n+    }\n+\n+    public PagedResult<UserTO> list() {\n+        return userService.list(new AnyListQuery());\n+    }\n+\n+    public UserTO read(final String userId) {\n+        return userService.read(Long.valueOf(userId));\n+    }\n+\n+    public void delete(final String userId) {\n+        userService.delete(Long.valueOf(userId));\n+    }\n+\n+    public int count() {\n+        return list().getResult().size();\n+    }\n+\n+    public String getUsernameFromId(final String userId) {\n+        return userService.getUsername(Long.valueOf(userId)).getHeaderString(RESTHeaders.USERNAME);\n+    }\n+\n+    public String getIdFromUsername(final String username) {\n+        return userService.getUserKey(username).getHeaderString(RESTHeaders.USER_KEY);\n+    }\n+}"}]}