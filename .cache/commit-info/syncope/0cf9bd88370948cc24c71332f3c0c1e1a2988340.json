{"sha":"0cf9bd88370948cc24c71332f3c0c1e1a2988340","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBjZjliZDg4MzcwOTQ4Y2MyNGM3MTMzMmYzYzBjMWUxYTI5ODgzNDA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-06-03T06:59:17Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-06-03T07:00:17Z"},"message":"[SYNCOPE-1568] Adding form finalizers","tree":{"sha":"48eb47a39d7cef9581d787cb3656ee2fa2297618","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/48eb47a39d7cef9581d787cb3656ee2fa2297618"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0cf9bd88370948cc24c71332f3c0c1e1a2988340","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0cf9bd88370948cc24c71332f3c0c1e1a2988340","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0cf9bd88370948cc24c71332f3c0c1e1a2988340","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0cf9bd88370948cc24c71332f3c0c1e1a2988340/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c016426bc5f23b0f5f369866b3b7ac7449f1d6a9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c016426bc5f23b0f5f369866b3b7ac7449f1d6a9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c016426bc5f23b0f5f369866b3b7ac7449f1d6a9"}],"stats":{"total":419,"additions":336,"deletions":83},"files":[{"sha":"9ab56ef39d212abb29970110985cfe88ea4fd70b","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/ApplicationContextProvider.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FApplicationContextProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FApplicationContextProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FApplicationContextProvider.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons;\n+\n+import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.ApplicationContextAware;\n+import org.springframework.context.ConfigurableApplicationContext;\n+\n+import java.util.Optional;\n+\n+public class ApplicationContextProvider implements ApplicationContextAware {\n+\n+    private static ConfigurableApplicationContext CTX;\n+\n+    private static DefaultListableBeanFactory BEAN_FACTORY;\n+\n+    public static ConfigurableApplicationContext getApplicationContext() {\n+        return CTX;\n+    }\n+\n+    public static void setApplicationContext(final ConfigurableApplicationContext ctx) {\n+        CTX = ctx;\n+    }\n+\n+    public static DefaultListableBeanFactory getBeanFactory() {\n+        return Optional.ofNullable(BEAN_FACTORY).orElseGet(()\n+            -> Optional.ofNullable(CTX).map(ctx -> (DefaultListableBeanFactory) ctx.getBeanFactory()).orElse(null));\n+    }\n+\n+    public static void setBeanFactory(final DefaultListableBeanFactory beanFactory) {\n+        BEAN_FACTORY = beanFactory;\n+    }\n+\n+    /**\n+     * Wiring the ApplicationContext into a static method.\n+     *\n+     * @param ctx Spring application context\n+     */\n+    @Override\n+    public void setApplicationContext(final ApplicationContext ctx) {\n+        CTX = (ConfigurableApplicationContext) ctx;\n+    }\n+}"},{"sha":"d262d57684d49d2fbf506ee5c5bb1015031979dd","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizard.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -67,7 +67,8 @@ public enum Mode {\n         CREATE,\n         EDIT,\n         TEMPLATE,\n-        READONLY;\n+        READONLY,\n+        EDIT_APPROVAL;\n \n     }\n \n@@ -77,8 +78,6 @@ public enum Mode {\n \n     private final Mode mode;\n \n-    private final boolean async;\n-\n     private IEventSink eventSink;\n \n     private final PageReference pageRef;\n@@ -90,21 +89,18 @@ public enum Mode {\n      * @param item model object\n      * @param model wizard model\n      * @param mode mode\n-     * @param async should apply go async or not?\n      * @param pageRef caller page reference.\n      */\n     public AjaxWizard(\n             final String id,\n             final T item,\n             final WizardModel model,\n             final Mode mode,\n-            final boolean async,\n             final PageReference pageRef) {\n \n         super(id);\n         this.item = item;\n         this.mode = mode;\n-        this.async = async;\n         this.pageRef = pageRef;\n \n         if (mode == Mode.READONLY) {"},{"sha":"9d2bc2d11f3a1c2e4e38043bdd65d79e28884f64","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardBuilder.java","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -43,8 +43,6 @@\n \n     protected final List<Component> outerObjects = new ArrayList<>();\n \n-    private boolean async = true;\n-\n     /**\n      * Construct.\n      *\n@@ -55,11 +53,6 @@ public AjaxWizardBuilder(final T defaultItem, final PageReference pageRef) {\n         super(defaultItem, pageRef);\n     }\n \n-    public AjaxWizardBuilder<T> setAsync(final boolean async) {\n-        this.async = async;\n-        return this;\n-    }\n-\n     public AjaxWizardBuilder<T> addOuterObject(final Component... childs) {\n         outerObjects.addAll(List.of(childs));\n         return this;\n@@ -97,7 +90,7 @@ public AjaxWizard<T> build(final String id, final AjaxWizard.Mode mode) {\n         // get the specified item if available\n         T modelObj = newModelObject();\n \n-        return new AjaxWizard<T>(id, modelObj, buildModelSteps(modelObj, new WizardModel()), mode, async, pageRef) {\n+        return new AjaxWizard<T>(id, modelObj, buildModelSteps(modelObj, new WizardModel()), mode, pageRef) {\n \n             private static final long serialVersionUID = 7770507663760640735L;\n "},{"sha":"03a74a20efddff7ce396832231bb01769095d6d9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -33,10 +33,13 @@\n import org.apache.syncope.client.console.commons.IdRepoVirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.commons.ImplementationInfoProvider;\n import org.apache.syncope.client.console.commons.PolicyTabProvider;\n+import org.apache.syncope.client.console.commons.PreviewUtils;\n import org.apache.syncope.client.console.commons.StatusProvider;\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.syncope.client.console.wizards.any.UserFormFinalizerUtils;\n+import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStart;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStop;\n@@ -74,6 +77,11 @@ public KeymasterStop keymasterStop() {\n         return new KeymasterStop(NetworkService.Type.CONSOLE);\n     }\n \n+    @Bean\n+    public ApplicationContextProvider applicationContextProvider() {\n+        return new ApplicationContextProvider();\n+    }\n+\n     @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")\n     @Bean\n     public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n@@ -90,6 +98,18 @@ public MIMETypesLoader mimeTypesLoader() {\n         return mimeTypesLoader;\n     }\n \n+    @ConditionalOnMissingBean(name = \"previewUtils\")\n+    @Bean\n+    public PreviewUtils previewUtils() {\n+        return new PreviewUtils();\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"userFormFinalizerUtils\")\n+    @Bean\n+    public UserFormFinalizerUtils userFormFinalizerUtils() {\n+        return new UserFormFinalizerUtils();\n+    }\n+\n     @ConditionalOnMissingBean(name = \"resourceProvider\")\n     @Bean\n     public ExternalResourceProvider resourceProvider() {"},{"sha":"5aa240688b8a802c8c0d5ddc949570ffcaee9a7d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/annotations/UserFormFinalize.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FUserFormFinalize.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FUserFormFinalize.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FUserFormFinalize.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Documented\n+public @interface UserFormFinalize {\n+\n+    AjaxWizard.Mode mode() default AjaxWizard.Mode.EDIT_APPROVAL;\n+\n+}"},{"sha":"002d4f90cb0768d15b13e50a8c8cb61f0ca5a85b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/PreviewUtils.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -23,10 +23,8 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.DefaultPreviewer;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n \n-@Component\n public class PreviewUtils {\n \n     @Autowired"},{"sha":"f02677bdea9930a3e6d44631bed6c40a269b8a22","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -64,6 +64,9 @@\n import org.apache.syncope.client.console.commons.StatusProvider;\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n+import org.apache.syncope.client.console.wizards.any.UserFormFinalizer;\n+import org.apache.syncope.client.console.annotations.UserFormFinalize;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n \n public class ClassPathScanImplementationLookup {\n \n@@ -102,6 +105,8 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n \n     private List<Class<? extends AbstractBinaryPreviewer>> previewers;\n \n+    private List<Class<? extends UserFormFinalizer>> userFormFinalizers;\n+\n     private List<Class<? extends BasePage>> idmPages;\n \n     private List<Class<? extends BasePage>> amPages;\n@@ -139,6 +144,7 @@ protected static String getBasePackage() {\n     public void load() {\n         pages = new ArrayList<>();\n         previewers = new ArrayList<>();\n+        userFormFinalizers = new ArrayList<>();\n         idmPages = new ArrayList<>();\n         amPages = new ArrayList<>();\n         extPages = new ArrayList<>();\n@@ -155,6 +161,7 @@ public void load() {\n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n         scanner.addIncludeFilter(new AssignableTypeFilter(BasePage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(UserFormFinalizer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtPage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtWidget.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(ExtAlertWidget.class));\n@@ -210,6 +217,8 @@ public void load() {\n                         }\n                     } else if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz)) {\n                         previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n+                    } else if (UserFormFinalizer.class.isAssignableFrom(clazz)) {\n+                        userFormFinalizers.add((Class<? extends UserFormFinalizer>) clazz);\n                     } else if (BaseSSOLoginFormPanel.class.isAssignableFrom(clazz)) {\n                         ssoLoginFormPanels.add((Class<? extends BaseSSOLoginFormPanel>) clazz);\n                     } else if (ReportletConf.class.isAssignableFrom(clazz)) {\n@@ -236,7 +245,9 @@ public void load() {\n             }\n         });\n         pages = Collections.unmodifiableList(pages);\n+\n         previewers = Collections.unmodifiableList(previewers);\n+        userFormFinalizers = Collections.unmodifiableList(userFormFinalizers);\n \n         idmPages.sort(Comparator.comparing(o -> o.getAnnotation(IdMPage.class).priority()));\n         idmPages = Collections.unmodifiableList(idmPages);\n@@ -264,6 +275,7 @@ public void load() {\n         resources = Collections.unmodifiableList(resources);\n \n         LOG.debug(\"Binary previewers found: {}\", previewers);\n+        LOG.debug(\"User Form finalizers found {}\", userFormFinalizers);\n         LOG.debug(\"Extension pages found: {}\", extPages);\n         LOG.debug(\"Extension widgets found: {}\", extWidgets);\n         LOG.debug(\"Extension alert widgets found: {}\", extAlertWidgets);\n@@ -290,6 +302,20 @@ public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String m\n         return previewer;\n     }\n \n+    public List<Class<? extends UserFormFinalizer>> getUserFormFinalizerClasses(final AjaxWizard.Mode mode) {\n+        List<Class<? extends UserFormFinalizer>> classes = new ArrayList<>();\n+\n+        userFormFinalizers.forEach(candidate -> {\n+            if (candidate.isAnnotationPresent(UserFormFinalize.class)\n+                    && candidate.getAnnotation(UserFormFinalize.class).mode() == mode) {\n+\n+                classes.add(candidate);\n+            }\n+        });\n+\n+        return classes;\n+    }\n+\n     public List<Class<? extends BasePage>> getPageClasses() {\n         return pages;\n     }"},{"sha":"6cc334e3c3412094de7b064be518913908cb3757","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserFormFinalizer.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizer.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+public interface UserFormFinalizer {\n+\n+    default void beforeUpdate(String userKey) {\n+        // nothing to do;\n+    }\n+\n+    default void afterUpdate(String userKey) {\n+        // nothing to do;\n+    }\n+}"},{"sha":"fe11de401df3881adaa293389c65cf2d47a2652b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserFormFinalizerUtils.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizerUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizerUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizerUtils.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.util.ClassUtils;\n+\n+public final class UserFormFinalizerUtils {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(UserFormFinalizerUtils.class);\n+\n+    @Autowired\n+    private ClassPathScanImplementationLookup lookup;\n+\n+    public List<UserFormFinalizer> getFormFinalizers(final AjaxWizard.Mode mode) {\n+        List<UserFormFinalizer> finalizers = new ArrayList<>();\n+\n+        lookup.getUserFormFinalizerClasses(mode).forEach(applier -> {\n+            if (applier != null) {\n+                try {\n+                    finalizers.add(ClassUtils.getConstructorIfAvailable(applier).newInstance());\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not instantiate {}\", applier, e);\n+                }\n+            }\n+        });\n+\n+        return finalizers;\n+    }\n+}"},{"sha":"766d8b738367288015bc69e0ea029bbf6f5baae2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.ui.commons.layout.UserForm;\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n+import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n@@ -89,7 +90,14 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n                 result = new ProvisioningResult<>();\n                 result.setEntity(inner);\n             } else {\n+                List<UserFormFinalizer> finalizers = ApplicationContextProvider.getApplicationContext().\n+                        getBean(UserFormFinalizerUtils.class).getFormFinalizers(this.mode);\n+\n+                finalizers.forEach(finalizer -> finalizer.beforeUpdate(userUR.getKey()));\n+\n                 result = userRestClient.update(getOriginalItem().getInnerObject().getETagValue(), userUR);\n+\n+                finalizers.forEach(finalizer -> finalizer.afterUpdate(userUR.getKey()));\n             }\n         }\n "},{"sha":"05deb81e112b473714831d9c88d54280452792ac","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/AbstractTest.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -56,6 +56,7 @@\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.syncope.client.console.wizards.any.UserFormFinalizerUtils;\n import org.apache.syncope.client.lib.AuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n@@ -139,6 +140,11 @@ public PreviewUtils previewUtils() {\n             return new PreviewUtils();\n         }\n \n+        @Bean\n+        public UserFormFinalizerUtils userFormFinalizerUtils() {\n+            return new UserFormFinalizerUtils();\n+        }\n+\n         @Bean\n         public ExternalResourceProvider resourceProvider() {\n             return new IdRepoExternalResourceProvider();"},{"sha":"f6b13a20b80eb34e9d290fd3ec44371169e429df","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -19,8 +19,10 @@\n package org.apache.syncope.client.enduser;\n \n import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n+import org.apache.syncope.client.enduser.commons.PreviewUtils;\n import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.enduser.init.MIMETypesLoader;\n+import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStart;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStop;\n@@ -58,6 +60,11 @@ public KeymasterStop keymasterStop() {\n         return new KeymasterStop(NetworkService.Type.ENDUSER);\n     }\n \n+    @Bean\n+    public ApplicationContextProvider applicationContextProvider() {\n+        return new ApplicationContextProvider();\n+    }\n+\n     @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")\n     @Bean\n     public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n@@ -73,4 +80,10 @@ public MIMETypesLoader mimeTypesLoader() {\n         mimeTypesLoader.load();\n         return mimeTypesLoader;\n     }\n+\n+    @ConditionalOnMissingBean(name = \"previewUtils\")\n+    @Bean\n+    public PreviewUtils previewUtils() {\n+        return new PreviewUtils();\n+    }\n }"},{"sha":"0bde2a505cad7e6e5d05805df94b8f15fc7670db","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/commons/PreviewUtils.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -23,10 +23,8 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.DefaultPreviewer;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n \n-@Component\n public class PreviewUtils {\n \n     @Autowired"},{"sha":"e7503bfbdfb9c90b935a21d6205341b095411912","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/BaseEnduserWebPage.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBaseEnduserWebPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBaseEnduserWebPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBaseEnduserWebPage.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -45,5 +45,4 @@ public BaseEnduserWebPage(final PageParameters parameters) {\n         navbar = new Navbar(\"navbar\", lookup.getExtPageClasses());\n         body.add(navbar);\n     }\n-\n }"},{"sha":"df2fb34c92d01e2c340d3ae91b8817491264d4a4","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/AnyWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -173,7 +173,7 @@ public AjaxWizard<AnyWrapper<UserTO>> build(final String id, final AjaxWizard.Mo\n         final AnyWrapper<UserTO> modelObject = newModelObject();\n \n         return new AjaxWizard<AnyWrapper<UserTO>>(\n-                id, modelObject, buildModelSteps(modelObject, new WizardModel()), mode, true, this.pageRef) {\n+                id, modelObject, buildModelSteps(modelObject, new WizardModel()), mode, this.pageRef) {\n \n             private static final long serialVersionUID = 7770507663760640735L;\n "},{"sha":"5f39f11c4cd218414bb263ae2aa692d46ba5a31c","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/UserRequestFormDirectoryPanel.java","status":"modified","additions":23,"deletions":62,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -31,23 +31,18 @@\n import org.apache.syncope.client.console.rest.UserRequestRestClient;\n import org.apache.syncope.client.console.panels.UserRequestFormDirectoryPanel.UserRequestFormProvider;\n import org.apache.syncope.client.console.layout.AnyLayoutUtils;\n-import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.widgets.UserRequestFormsWidget;\n-import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n-import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.request.PasswordPatch;\n-import org.apache.syncope.common.lib.request.UserUR;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -136,6 +131,24 @@ protected List<IColumn<UserRequestForm, String>> getColumns() {\n         return columns;\n     }\n \n+    @Override\n+    protected ActionLinksTogglePanel<UserRequestForm> actionTogglePanel() {\n+        return new ActionLinksTogglePanel<UserRequestForm>(Constants.OUTER, pageRef) {\n+\n+            private static final long serialVersionUID = -7688359318035249200L;\n+\n+            @Override\n+            public void updateHeader(final AjaxRequestTarget target, final Serializable object) {\n+                if (object instanceof UserRequestForm) {\n+                    setHeader(target, StringUtils.abbreviate(\n+                            ((UserRequestForm) object).getUsername(), HEADER_FIRST_ABBREVIATION));\n+                } else {\n+                    super.updateHeader(target, object);\n+                }\n+            }\n+        };\n+    }\n+\n     @Override\n     public ActionsPanel<UserRequestForm> getActions(final IModel<UserRequestForm> model) {\n         final ActionsPanel<UserRequestForm> panel = super.getActions(model);\n@@ -224,36 +237,31 @@ public void onClick(final AjaxRequestTarget target, final UserRequestForm ignore\n \n                 UserRequestForm formTO = model.getObject();\n                 UserTO newUserTO;\n-                UserTO previousUserTO;\n                 if (formTO.getUserUR() == null) {\n                     newUserTO = formTO.getUserTO();\n                     if (newUserTO != null) {\n                         // SYNCOPE-1563 do not use the password into formTO.getUserTO()\n                         newUserTO.setPassword(null);\n                     }\n-                    previousUserTO = null;\n                 } else if (formTO.getUserTO() == null) {\n                     // make it stronger by handling possible NPE\n-                    previousUserTO = new UserTO();\n+                    UserTO previousUserTO = new UserTO();\n                     previousUserTO.setKey(formTO.getUserUR().getKey());\n                     newUserTO = AnyOperations.patch(previousUserTO, formTO.getUserUR());\n                 } else {\n-                    previousUserTO = formTO.getUserTO();\n                     formTO.getUserTO().setKey(formTO.getUserUR().getKey());\n                     formTO.getUserTO().setPassword(null);\n                     newUserTO = AnyOperations.patch(formTO.getUserTO(), formTO.getUserUR());\n                 }\n \n                 AjaxWizard.EditItemActionEvent<UserTO> editItemActionEvent =\n                         new AjaxWizard.EditItemActionEvent<>(newUserTO, target);\n-                editItemActionEvent.forceModalPanel(new FormUserWizardBuilder(\n-                        model.getObject(),\n-                        previousUserTO,\n+                editItemActionEvent.forceModalPanel(AnyLayoutUtils.newLayoutInfo(\n                         newUserTO,\n                         AnyTypeRestClient.read(AnyTypeKind.USER.name()).getClasses(),\n                         AnyLayoutUtils.fetch(List.of(AnyTypeKind.USER.name())).getUser(),\n-                        pageRef\n-                ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n+                        pageRef).\n+                        build(BaseModal.CONTENT_ID, 0, AjaxWizard.Mode.EDIT_APPROVAL));\n \n                 send(UserRequestFormDirectoryPanel.this, Broadcast.EXACT, editItemActionEvent);\n             }\n@@ -334,51 +342,4 @@ private void unclaimForm(final String taskId) {\n             SyncopeConsoleSession.get().onException(scee);\n         }\n     }\n-\n-    private class FormUserWizardBuilder extends UserWizardBuilder {\n-\n-        private static final long serialVersionUID = 1854981134836384069L;\n-\n-        private final UserRequestForm formTO;\n-\n-        FormUserWizardBuilder(\n-                final UserRequestForm formTO,\n-                final UserTO previousUserTO,\n-                final UserTO userTO,\n-                final List<String> anyTypeClasses,\n-                final UserFormLayoutInfo formLayoutInfo,\n-                final PageReference pageRef) {\n-\n-            super(previousUserTO, userTO, anyTypeClasses, formLayoutInfo, pageRef);\n-            this.formTO = formTO;\n-        }\n-\n-        @Override\n-        protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n-            UserTO inner = modelObject.getInnerObject();\n-\n-            UserUR userUR = AnyOperations.diff(inner, formTO.getUserTO(), false);\n-\n-            if (StringUtils.isNotBlank(inner.getPassword())) {\n-                PasswordPatch passwordPatch = new PasswordPatch.Builder().\n-                        value(inner.getPassword()).onSyncope(true).resources(inner.\n-                        getResources()).\n-                        build();\n-                userUR.setPassword(passwordPatch);\n-            }\n-\n-            // update just if it is changed\n-            ProvisioningResult<UserTO> result;\n-            if (userUR.isEmpty()) {\n-                result = new ProvisioningResult<>();\n-                result.setEntity(inner);\n-            } else {\n-                result = userRestClient.update(getOriginalItem().getInnerObject().getETagValue(), userUR);\n-                UserRequestRestClient.getForm(result.getEntity().getKey())\n-                        .ifPresent(form -> claimForm(form.getTaskId()));\n-            }\n-\n-            return result;\n-        }\n-    }\n }"},{"sha":"8d829bb4fcea49c85d358f5c01d35ac3478b64a9","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/wizards/any/UserRequestFormFinalizer.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserRequestFormFinalizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserRequestFormFinalizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserRequestFormFinalizer.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.UserRequestRestClient;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.client.console.annotations.UserFormFinalize;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+\n+@UserFormFinalize(mode = AjaxWizard.Mode.EDIT_APPROVAL)\n+public class UserRequestFormFinalizer implements UserFormFinalizer {\n+\n+    @Override\n+    public void afterUpdate(final String userKey) {\n+        UserRequestRestClient.getForm(userKey).ifPresent(form -> {\n+            try {\n+                UserRequestRestClient.claimForm(form.getTaskId());\n+            } catch (SyncopeClientException e) {\n+                SyncopeConsoleSession.get().onException(e);\n+            }\n+        });\n+    }\n+}"},{"sha":"6ffdca5436d144c455c34313696fe7cb6b5baa23","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -31,7 +31,9 @@\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.pages.Login;\n+import org.apache.syncope.client.console.wizards.any.UserFormFinalizerUtils;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.syncope.fit.ui.AbstractUITCase;\n@@ -71,6 +73,11 @@ public WicketEndpointRepository wicketEndpointRepository() {\n             return new WicketEndpointRepositoryDefault();\n         }\n \n+        @Bean\n+        public ApplicationContextProvider applicationContextProvider() {\n+            return new ApplicationContextProvider();\n+        }\n+\n         @Bean\n         public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n             ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n@@ -89,6 +96,11 @@ public MIMETypesLoader mimeTypesLoader() {\n         public PreviewUtils previewUtils() {\n             return new PreviewUtils();\n         }\n+\n+        @Bean\n+        public UserFormFinalizerUtils userFormFinalizerUtils() {\n+            return new UserFormFinalizerUtils();\n+        }\n     }\n \n     @BeforeAll"},{"sha":"b1bd5147a801ce4765b11d8d74510915fe4bc8f1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/AbstractEnduserITCase.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.client.enduser.pages.Login;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.wicket.util.tester.WicketTester;\n import org.junit.jupiter.api.BeforeAll;\n@@ -87,6 +88,11 @@ public WicketEndpointRepository wicketEndpointRepository() {\n             return new WicketEndpointRepositoryDefault();\n         }\n \n+        @Bean\n+        public ApplicationContextProvider applicationContextProvider() {\n+            return new ApplicationContextProvider();\n+        }\n+\n         @Bean\n         public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n             ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();"},{"sha":"2727f1a48af6991bdbb2ecea406abce40e2c5fa0","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cf9bd88370948cc24c71332f3c0c1e1a2988340/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cf9bd88370948cc24c71332f3c0c1e1a2988340/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=0cf9bd88370948cc24c71332f3c0c1e1a2988340","patch":"@@ -2343,7 +2343,7 @@ under the License.\n             <dependency>\n               <groupId>com.puppycrawl.tools</groupId>\n               <artifactId>checkstyle</artifactId>\n-              <version>8.32</version>\n+              <version>8.33</version>\n             </dependency>\n           </dependencies>\n           <configuration>"}]}