{"sha":"0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA2NTZiYzA3ZmM5OWQ4ZmE5ZDg3YmY0MDdmNzY0MWM0ZmEyMjFhZDg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-06T16:05:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-06T16:05:23Z"},"message":"[SYNCOPE-894] Enhancement provided","tree":{"sha":"1dbb99e59ca69414d486308aec8b7c71a44087d8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1dbb99e59ca69414d486308aec8b7c71a44087d8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a9bd3ce15ab684befa28024fd25c1f10e763ff4c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9bd3ce15ab684befa28024fd25c1f10e763ff4c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a9bd3ce15ab684befa28024fd25c1f10e763ff4c"}],"stats":{"total":35,"additions":29,"deletions":6},"files":[{"sha":"81f93a0366d42f1385494d31e239b7f307c5d07e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/SyncopeConstants.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java?ref=0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","patch":"@@ -37,7 +37,7 @@ public final class SyncopeConstants {\n \n     public static final String ENUM_VALUES_SEPARATOR = \";\";\n \n-    public static final String NAME_PATTERN = \"[\\\\w \\\\-@.]+\";\n+    public static final String NAME_PATTERN = \"[\\\\p{L}\\\\p{gc=Mn}\\\\p{gc=Me}\\\\p{gc=Mc}\\\\p{Digit}\\\\p{gc=Pc} \\\\-@.]+\";\n \n     public static final String[] DATE_PATTERNS = {\n         \"yyyy-MM-dd'T'HH:mm:ssZ\","},{"sha":"d4f93ed773eb6912235e09bfed1490286777854b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","patch":"@@ -26,6 +26,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.regex.Pattern;\n import javax.annotation.Resource;\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n@@ -36,6 +37,7 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -81,6 +83,9 @@\n @Repository\n public class JPAUserDAO extends AbstractAnyDAO<User> implements UserDAO {\n \n+    private static final Pattern USERNAME_PATTERN =\n+            Pattern.compile(\"^\" + SyncopeConstants.NAME_PATTERN, Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);\n+\n     @Autowired\n     private RealmDAO realmDAO;\n \n@@ -343,6 +348,10 @@ public Pair<Boolean, Boolean> enforcePolicies(final User user) {\n                 throw new AccountPolicyException(\"Not allowed: \" + user.getUsername());\n             }\n \n+            if (!USERNAME_PATTERN.matcher(user.getUsername()).matches()) {\n+                throw new AccountPolicyException(\"Character(s) not allowed\");\n+            }\n+\n             for (AccountPolicy policy : getAccountPolicies(user)) {\n                 for (AccountRuleConf ruleConf : policy.getRuleConfs()) {\n                     Class<? extends AccountRule> ruleClass ="},{"sha":"bf7ec39bcb5d6232051fc7fc2d37c506483f89a3","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAnnotatedEntity.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java?ref=0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.jpa.entity;\n \n import java.util.Date;\n-import javax.persistence.Column;\n import javax.persistence.EntityListeners;\n import javax.persistence.MappedSuperclass;\n import javax.persistence.Temporal;\n@@ -39,13 +38,11 @@ public abstract class AbstractAnnotatedEntity extends AbstractGeneratedKeyEntity\n      * Username of the user that has created this profile.\n      * Reference to existing user cannot be used: the creator can either be <tt>admin</tt> or was deleted.\n      */\n-    @Column(nullable = false)\n     private String creator;\n \n     /**\n      * Creation date.\n      */\n-    @Column(nullable = false)\n     @Temporal(TemporalType.TIMESTAMP)\n     private Date creationDate;\n \n@@ -55,14 +52,12 @@ public abstract class AbstractAnnotatedEntity extends AbstractGeneratedKeyEntity\n      * The modifier can be the user itself if the last performed change was a self-modification.\n      * Reference to existing user cannot be used: the creator can either be <tt>admin</tt> or was deleted.\n      */\n-    @Column(nullable = false)\n     private String lastModifier;\n \n     /**\n      * Last change date.\n      * This field cannot be null: at creation time it needs to be initialized with <tt>creationDate</tt> field value.\n      */\n-    @Column(nullable = false)\n     @Temporal(TemporalType.TIMESTAMP)\n     private Date lastChangeDate;\n "},{"sha":"39eb25ef557f25094a6b2131d7f52d23b163d43e","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/GroupTest.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java?ref=0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","patch":"@@ -30,6 +30,7 @@\n import java.util.List;\n import javax.persistence.TypedQuery;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n@@ -146,6 +147,16 @@ public void create() {\n         assertEquals(2, group.getTypeExtension(anyTypeDAO.findUser()).getAuxClasses().size());\n     }\n \n+    @Test\n+    public void createWithInternationalCharacters() {\n+        Group group = entityFactory.newEntity(Group.class);\n+        group.setName(\"räksmörgås\");\n+        group.setRealm(realmDAO.findByFullPath(SyncopeConstants.ROOT_REALM));\n+\n+        groupDAO.save(group);\n+        groupDAO.flush();\n+    }\n+\n     @Test\n     public void delete() {\n         groupDAO.delete(\"b1f7c12d-ec83-441f-a50e-1691daaedf3b\");"},{"sha":"939e1f861455e302536047f95e47a498533c099e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0656bc07fc99d8fa9d87bf407f7641c4fa221ad8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=0656bc07fc99d8fa9d87bf407f7641c4fa221ad8","patch":"@@ -140,6 +140,14 @@ public void create() {\n         assertNull(updateGroup(groupPatch).getEntity().getGroupOwner());\n     }\n \n+    @Test\n+    public void createWithInternationalCharacters() {\n+        GroupTO groupTO = getSampleTO(\"räksmörgås\");\n+\n+        groupTO = createGroup(groupTO).getEntity();\n+        assertNotNull(groupTO);\n+    }\n+\n     @Test\n     public void delete() {\n         try {"}]}