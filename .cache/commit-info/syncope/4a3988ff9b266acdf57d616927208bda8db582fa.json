{"sha":"4a3988ff9b266acdf57d616927208bda8db582fa","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRhMzk4OGZmOWIyNjZhY2RmNTdkNjE2OTI3MjA4YmRhOGRiNTgyZmE=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-06-30T13:32:34Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-06-30T13:32:34Z"},"message":"[SYNCOPE-516] provided some smart binary schema enhancements to improve its usability\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1606726 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"76ab3d887cfddaead5ae6f1cffd262f499d9f422","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/76ab3d887cfddaead5ae6f1cffd262f499d9f422"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4a3988ff9b266acdf57d616927208bda8db582fa","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a3988ff9b266acdf57d616927208bda8db582fa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4a3988ff9b266acdf57d616927208bda8db582fa","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a3988ff9b266acdf57d616927208bda8db582fa/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8d951516e835207e89f3bc9c270140cdbd832230","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d951516e835207e89f3bc9c270140cdbd832230","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d951516e835207e89f3bc9c270140cdbd832230"}],"stats":{"total":1362,"additions":1338,"deletions":24},"files":[{"sha":"ef5516eebbe4300f7d7f83ad7f26df589aad67a6","filename":"console/src/main/java/org/apache/syncope/console/init/MIMETypesInitializer.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FMIMETypesInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FMIMETypesInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FMIMETypesInitializer.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.init;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.util.io.IOUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class MIMETypesInitializer {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(MIMETypesInitializer.class);\n+\n+    private List<String> mimeTypes;\n+\n+    public void load() {\n+        final Set<String> mediaTypes = new HashSet<String>();\n+        this.mimeTypes = new ArrayList<String>();\n+        try {\n+            final String mimeTypesFile = IOUtils.toString(this.getClass().getResourceAsStream(\"/MIMETypes\"));\n+            for (String fileRow : mimeTypesFile.split(\"\\n\")) {\n+                if (StringUtils.isNotBlank(fileRow) && !fileRow.startsWith(\"#\")) {\n+                    mediaTypes.add(fileRow);\n+                }\n+            }\n+            this.mimeTypes.addAll(mediaTypes);\n+            Collections.sort(this.mimeTypes);\n+        } catch (Exception e) {\n+            LOG.error(\"Error reading file MIMETypes from resources\", e);\n+        }\n+    }\n+\n+    public List<String> getMimeTypes() {\n+        LOG.debug(\"Returning loaded MIME types list\");\n+        return mimeTypes;\n+    }\n+}"},{"sha":"517545475bc85db27f9cc895bcfbc8f94fdf4519","filename":"console/src/main/java/org/apache/syncope/console/init/PreviewPanelClassInitializer.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FPreviewPanelClassInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FPreviewPanelClassInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FPreviewPanelClassInitializer.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.init;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.syncope.console.preview.BinaryPreview;\n+import org.apache.syncope.console.preview.PreviewerClassScanner;\n+import org.apache.syncope.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class PreviewPanelClassInitializer {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(PreviewPanelClassInitializer.class);\n+\n+    @Autowired\n+    private PreviewerClassScanner classScanner;\n+\n+    private List<Class<? extends AbstractBinaryPreviewer>> classes;\n+\n+    public void load() {\n+        classes = new ArrayList<Class<? extends AbstractBinaryPreviewer>>();\n+        for (Class<? extends AbstractBinaryPreviewer> candidate : classScanner.getComponentClasses()) {\n+            classes.add(candidate);\n+        }\n+    }\n+\n+    public List<Class<? extends AbstractBinaryPreviewer>> getClasses() {\n+        LOG.debug(\"Returning loaded classes: {}\", classes);\n+        return classes;\n+    }\n+\n+    public Class<? extends AbstractBinaryPreviewer> getClass(final String mimeType) {\n+        LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n+        Class<? extends AbstractBinaryPreviewer> previewer = null;\n+        for (Class<? extends AbstractBinaryPreviewer> candidate : classes) {\n+            LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n+            if (Arrays.asList(candidate.getAnnotation(BinaryPreview.class).mimeTypes()).contains(mimeType)) {\n+                LOG.debug(\"Found existing previewer for MIME type {}: {}\", mimeType, candidate.getName());\n+                previewer = candidate;\n+            }\n+        }\n+        return previewer;\n+    }\n+}"},{"sha":"dc2515ca1bb4ed06f6a0db9a9986502632e60a73","filename":"console/src/main/java/org/apache/syncope/console/init/SpringContextInitializer.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Finit%2FSpringContextInitializer.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.init;\n+\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Configurable;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Take care of all initializations needed by Syncope Console to run up and safe.\n+ */\n+@Component\n+@Configurable\n+public class SpringContextInitializer implements InitializingBean {\n+\n+    @Autowired\n+    private PreviewPanelClassInitializer previewPanelClassInitializer;\n+\n+    @Autowired\n+    private MIMETypesInitializer mimeTypesInitializer;\n+\n+    @Override\n+    public void afterPropertiesSet() {\n+        previewPanelClassInitializer.load();\n+        mimeTypesInitializer.load();\n+    }\n+\n+}"},{"sha":"cacfbbcec5b7ff8169697549d51335d4f2803fa6","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractBasePage.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.XMLRolesReader;\n+import org.apache.syncope.console.init.MIMETypesInitializer;\n import org.apache.syncope.console.pages.panels.NotificationPanel;\n import org.apache.syncope.console.rest.ReportRestClient;\n import org.apache.syncope.console.rest.ResourceRestClient;\n@@ -84,6 +85,9 @@ public class AbstractBasePage extends WebPage {\n \n     @SpringBean\n     protected ReportRestClient reportRestClient;\n+    \n+    @SpringBean\n+    protected MIMETypesInitializer mimeTypesInitializer;\n \n     protected NotificationPanel feedbackPanel;\n "},{"sha":"6a452e9613a231e9e18a0e354f38d96b9ad9396d","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -81,6 +81,7 @@ public RoleModalPage(final PageReference pageRef, final ModalWindow window, fina\n         }\n \n         final Form<RoleTO> form = new Form<RoleTO>(\"RoleForm\");\n+        form.setMultiPart(true);\n \n         add(new Label(\"displayName\", roleTO.getId() == 0 ? \"\" : roleTO.getDisplayName()));\n "},{"sha":"ea3eb5af77337d18b580297c2e12d170312c7973","filename":"console/src/main/java/org/apache/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -141,7 +141,8 @@ public void setSchemaModalPage(final PageReference pageRef, final ModalWindow wi\n         // -- binary\n         final AjaxTextFieldPanel mimeType = new AjaxTextFieldPanel(\"mimeType\",\n                 getString(\"mimeType\"), new PropertyModel<String>(schema, \"mimeType\"));\n-\n+        mimeType.setChoices(mimeTypesInitializer.getMimeTypes());\n+        \n         final WebMarkupContainer binaryParams = new WebMarkupContainer(\"binaryParams\");\n         binaryParams.setOutputMarkupPlaceholderTag(true);\n         binaryParams.add(mimeType);"},{"sha":"c0359974939af22c3125fd1839f05d51cf81a0c0","filename":"console/src/main/java/org/apache/syncope/console/preview/BinaryPreview.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FBinaryPreview.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FBinaryPreview.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FBinaryPreview.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.preview;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Documented\n+public @interface BinaryPreview {\n+\n+    public String[] mimeTypes() default {};\n+\n+}"},{"sha":"44bab8440737a6f16dd81917c780c4d69dc00408","filename":"console/src/main/java/org/apache/syncope/console/preview/PreviewUtil.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FPreviewUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FPreviewUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FPreviewUtil.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.preview;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.console.init.PreviewPanelClassInitializer;\n+import org.apache.syncope.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.util.crypt.Base64;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+@org.springframework.stereotype.Component\n+public class PreviewUtil {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(PreviewUtil.class);\n+\n+    @Autowired\n+    private PreviewPanelClassInitializer previewPanelClassInitializer;\n+\n+    public Component getPreviewer(final String mimeType, final String file) throws ClassNotFoundException,\n+            NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\n+\n+        final Class<? extends AbstractBinaryPreviewer> previewer = StringUtils.isBlank(file)\n+                ? null\n+                : previewPanelClassInitializer.getClass(mimeType);\n+\n+        return previewer == null\n+                ? null\n+                : ((AbstractBinaryPreviewer) Class.forName(previewer.getName()).\n+                getConstructor(String.class, String.class, byte[].class).newInstance(\n+                        new Object[] { \"previewer\", mimeType, Base64.decodeBase64(file) })).preview();\n+    }\n+\n+    public Component getPreviewer(final String mimeType, final byte[] file) throws ClassNotFoundException,\n+            NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\n+\n+        final Class<? extends AbstractBinaryPreviewer> previewer = previewPanelClassInitializer.getClass(mimeType);\n+\n+        return previewer == null\n+                ? null\n+                : ((AbstractBinaryPreviewer) Class.forName(previewer.getName()).\n+                getConstructor(String.class, String.class, byte[].class).newInstance(\n+                        new Object[] { \"previewer\", mimeType, file })).preview();\n+    }\n+}"},{"sha":"d97d53fc5941fb88a02c03dadf73f1ee81467bf6","filename":"console/src/main/java/org/apache/syncope/console/preview/PreviewerClassScanner.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FPreviewerClassScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FPreviewerClassScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpreview%2FPreviewerClassScanner.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.preview;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.core.type.filter.AnnotationTypeFilter;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.ClassUtils;\n+\n+@Component\n+public class PreviewerClassScanner extends ClassPathScanningCandidateComponentProvider {\n+\n+    private static final String BASE_PATH = \"org.apache.syncope.console.wicket.markup.html.form\";\n+\n+    public PreviewerClassScanner() {\n+        super(false);\n+        addIncludeFilter(new AnnotationTypeFilter(BinaryPreview.class));\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public final List<Class<? extends AbstractBinaryPreviewer>> getComponentClasses() {\n+        List<Class<? extends AbstractBinaryPreviewer>> classes =\n+                new ArrayList<Class<? extends AbstractBinaryPreviewer>>();\n+        for (BeanDefinition candidate : findCandidateComponents(BASE_PATH)) {\n+            classes.add((Class<AbstractBinaryPreviewer>) ClassUtils.resolveClassName(candidate.getBeanClassName(),\n+                    ClassUtils.getDefaultClassLoader()));\n+        }\n+        return classes;\n+    }\n+}"},{"sha":"28bbf595d7b9f2ed5e8eae0c978a6b2f4c1bef5e","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -51,7 +51,7 @@ public AjaxTextFieldPanel(final String id, final String name, final IModel<Strin\n \n             @Override\n             protected Iterator<String> getChoices(final String input) {\n-                final Pattern pattern = Pattern.compile(Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n+                final Pattern pattern = Pattern.compile(\".*\" + Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n \n                 final List<String> result = new ArrayList<String>();\n "},{"sha":"67843bc1d2e19eaa03b3fb7cde8bcb9664a2b684","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":75,"deletions":14,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -25,20 +25,26 @@\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.HttpResourceStream;\n+import org.apache.syncope.console.preview.PreviewUtil;\n+import org.apache.syncope.console.pages.BaseModalPage;\n+import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.StatelessForm;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.markup.html.form.upload.FileUpload;\n import org.apache.wicket.markup.html.form.upload.FileUploadField;\n import org.apache.wicket.markup.html.link.Link;\n+import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.request.resource.ContentDisposition;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.crypt.Base64;\n import org.apache.wicket.util.lang.Bytes;\n \n@@ -48,16 +54,40 @@ public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private final String mimeType;\n \n+    private final WebMarkupContainer container;\n+\n+    private final Link<Void> downloadLink;\n+\n+    private final Form<?> uploadForm;\n+\n+    private final Fragment emptyFragment;\n+\n+    @SpringBean\n+    private PreviewUtil previewUtil;\n+\n     public BinaryFieldPanel(final String id, final String name, final IModel<String> model, final String mimeType) {\n         super(id, model);\n         this.mimeType = mimeType;\n \n+        uploadForm = new StatelessForm<Void>(\"uploadForm\");\n+        uploadForm.setMultiPart(true);\n+        uploadForm.setMaxSize(Bytes.megabytes(4));\n+        add(uploadForm);\n+\n+        container = new WebMarkupContainer(\"previewContainer\");\n+        container.setOutputMarkupId(true);\n+\n+        emptyFragment = new Fragment(\"panelPreview\", \"emptyFragment\", container);\n+        emptyFragment.setOutputMarkupId(true);\n+        container.add(emptyFragment);\n+        uploadForm.add(container);\n+\n         field = new TextField<String>(\"textField\", model);\n         add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n \n-        add(new Label(\"preview\", StringUtils.isBlank(mimeType) ? StringUtils.EMPTY : \"(\" + mimeType + \")\"));\n+        uploadForm.add(new Label(\"preview\", StringUtils.isBlank(mimeType) ? StringUtils.EMPTY : \"(\" + mimeType + \")\"));\n \n-        Link<Void> downloadLink = new Link<Void>(\"downloadLink\") {\n+        downloadLink = new Link<Void>(\"downloadLink\") {\n \n             private static final long serialVersionUID = -4331619903296515985L;\n \n@@ -75,19 +105,14 @@ public void onClick() {\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                 }\n             }\n-\n         };\n-        add(downloadLink);\n-\n-        Form<?> uploadForm = new StatelessForm<Void>(\"uploadForm\");\n-        uploadForm.setMultiPart(true);\n-        uploadForm.setMaxSize(Bytes.megabytes(4));\n-        add(uploadForm);\n+        downloadLink.setOutputMarkupId(true);\n+        uploadForm.add(downloadLink);\n \n         @SuppressWarnings(\"unchecked\")\n         final FileUploadField fileUpload = new FileUploadField(\"fileUpload\", new Model());\n         fileUpload.setOutputMarkupId(true);\n-        fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_BLUR) {\n+        fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n@@ -96,16 +121,26 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                 final FileUpload uploadedFile = fileUpload.getFileUpload();\n                 if (uploadedFile != null) {\n                     try {\n+                        final byte[] uploadedBytes = uploadedFile.getBytes();\n                         final String uploaded = new String(\n-                                Base64.encodeBase64(uploadedFile.getBytes()),\n+                                Base64.encodeBase64(uploadedBytes),\n                                 SyncopeConstants.DEFAULT_ENCODING);\n                         field.setModelObject(uploaded);\n                         target.add(field);\n \n+                        final Component panelPreview = previewUtil.getPreviewer(mimeType, uploadedBytes);\n+\n+                        if (panelPreview != null) {\n+                            changePreviewer(panelPreview);\n+                        }\n+\n                         fileUpload.setModelObject(null);\n-                        target.add(fileUpload);\n+                        uploadForm.addOrReplace(fileUpload);\n+                        downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n+                        target.add(uploadForm);\n                     } catch (Exception e) {\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        ((BaseModalPage) getPage()).getFeedbackPanel().refresh(target);\n                         LOG.error(\"While saving uploaded file\", e);\n                     }\n                 }\n@@ -122,7 +157,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n             public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n-        add(uploadLink);\n+        uploadForm.add(uploadLink);\n \n         IndicatingAjaxLink<Void> resetLink = new IndicatingAjaxLink<Void>(\"resetLink\") {\n \n@@ -132,19 +167,45 @@ public void onClick(final AjaxRequestTarget target) {\n             public void onClick(final AjaxRequestTarget target) {\n                 field.setModelObject(null);\n                 target.add(field);\n+                downloadLink.setEnabled(false);\n+                container.addOrReplace(emptyFragment);\n+                uploadForm.addOrReplace(container);\n+                target.add(uploadForm);\n             }\n         };\n-        add(resetLink);\n+        uploadForm.add(resetLink);\n     }\n \n     private Response buildResponse() {\n         return Response.ok(new ByteArrayInputStream(Base64.decodeBase64(getModelObject()))).\n                 type(StringUtils.isBlank(mimeType) ? MediaType.APPLICATION_OCTET_STREAM : mimeType).build();\n     }\n \n+    private void changePreviewer(final Component panelPreview) {\n+        final Fragment fragment = new Fragment(\"panelPreview\", \"previewFragment\", container);\n+        fragment.add(panelPreview);\n+        container.addOrReplace(fragment);\n+        uploadForm.addOrReplace(container);\n+    }\n+\n     @Override\n     public BinaryFieldPanel clone() {\n         return (BinaryFieldPanel) super.clone();\n     }\n \n+    @Override\n+    public FieldPanel<String> setNewModel(final IModel<String> model) {\n+        field.setModel(model);\n+        try {\n+            final Component panelPreview = previewUtil.getPreviewer(mimeType, model.getObject());\n+            if (panelPreview != null) {\n+                changePreviewer(panelPreview);\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"While loading saved file\", e);\n+        }\n+        downloadLink.setEnabled(StringUtils.isNotBlank(model.getObject()));\n+        uploadForm.addOrReplace(downloadLink);\n+        return this;\n+    }\n }"},{"sha":"2b2ac4995630812ef2d72c68cde88257c4a82a64","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/preview/AbstractBinaryPreviewer.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.markup.html.form.preview;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class AbstractBinaryPreviewer extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractBinaryPreviewer.class);\n+\n+    private static final long serialVersionUID = -2482706463911903025L;\n+\n+    protected final String mimeType;\n+\n+    protected final byte[] uploadedBytes;\n+\n+    public AbstractBinaryPreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n+        super(id);\n+        this.mimeType = mimeType;\n+        this.uploadedBytes = uploadedBytes;\n+    }\n+\n+    public abstract Component preview();\n+}"},{"sha":"c7a380fa57d8d14bf404e4a9fc2d59fcf8cce557","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/preview/BinaryCertPreviewer.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.markup.html.form.preview;\n+\n+import org.apache.syncope.console.preview.BinaryPreview;\n+import java.io.ByteArrayInputStream;\n+import java.security.cert.CertificateFactory;\n+import java.security.cert.X509Certificate;\n+import javax.naming.ldap.LdapName;\n+import javax.naming.ldap.Rdn;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.util.io.IOUtils;\n+\n+@BinaryPreview(mimeTypes = { \"application/x-x509-ca-cert\", \"application/x-x509-user-cert\", \"application/pkix-cert\" })\n+public class BinaryCertPreviewer extends AbstractBinaryPreviewer {\n+\n+    private static final long serialVersionUID = -5843835939538055110L;\n+\n+    public BinaryCertPreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n+        super(id, mimeType, uploadedBytes);\n+    }\n+\n+    @Override\n+    public Component preview() {\n+        final Label commonNameLabel = new Label(\"certCommonName\", new Model<String>());\n+        final ByteArrayInputStream certificateStream = new ByteArrayInputStream(uploadedBytes);\n+        try {\n+            final X509Certificate certificate = (X509Certificate) CertificateFactory.getInstance(\"X.509\").\n+                    generateCertificate(certificateStream);\n+\n+            final StringBuilder commonNameBuilder = new StringBuilder(\"cn=\");\n+\n+            final LdapName ldapName = new LdapName(certificate.getIssuerDN().getName());\n+\n+            for (Rdn rdn : ldapName.getRdns()) {\n+                if (\"CN\".equalsIgnoreCase(rdn.getType())) {\n+                    commonNameBuilder.append(rdn.getValue() == null\n+                            ? StringUtils.EMPTY\n+                            : rdn.getValue().toString());\n+                }\n+            }\n+            commonNameLabel.setDefaultModelObject(commonNameBuilder.toString());\n+        } catch (Exception e) {\n+            LOG.error(\"Error evaluating certificate file\", e);\n+            throw new IllegalArgumentException(\"Error evaluating certificate file\", e);\n+        } finally {\n+            IOUtils.closeQuietly(certificateStream);\n+        }\n+        return this.add(commonNameLabel);\n+    }\n+}"},{"sha":"bb72c6173ff005afdaa742a8af73c796b188f437","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/preview/BinaryImagePreviewer.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.markup.html.form.preview;\n+\n+import org.apache.syncope.console.preview.BinaryPreview;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource;\n+import org.apache.wicket.markup.html.image.NonCachingImage;\n+import org.apache.wicket.request.resource.DynamicImageResource;\n+import org.apache.wicket.request.resource.IResource;\n+\n+@BinaryPreview(mimeTypes = { \"image/jpeg\", \"image/png\", \"image/gif\", \"image/bmp\", \"image/x-png\", \"image/vnd.wap.wbmp\" })\n+public class BinaryImagePreviewer extends AbstractBinaryPreviewer {\n+\n+    private static final long serialVersionUID = 3338812359368457349L;\n+\n+    private static final int IMG_SIZE = 230;\n+\n+    public BinaryImagePreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n+        super(id, mimeType, uploadedBytes);\n+    }\n+\n+    @Override\n+    public Component preview() {\n+        return this.add(new NonCachingImage(\"previewImage\", new ThumbnailImageResource(new DynamicImageResource() {\n+\n+            private static final long serialVersionUID = 923201517955737928L;\n+\n+            @Override\n+            protected byte[] getImageData(final IResource.Attributes attributes) {\n+                return uploadedBytes;\n+            }\n+        }, IMG_SIZE)));\n+    }\n+}"},{"sha":"320274362a8ab9187dec86a03d42339d5adcc1a1","filename":"console/src/main/resources/MIMETypes","status":"added","additions":671,"deletions":0,"changes":671,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2FMIMETypes","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2FMIMETypes","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FMIMETypes?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,671 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+x-world/x-3dmf\n+x-world/x-3dmf\n+application/octet-stream\n+application/x-authorware-bin\n+application/x-authorware-map\n+application/x-authorware-seg\n+text/vnd.abc\n+text/html\n+video/animaflex\n+application/postscript\n+audio/aiff\n+audio/x-aiff\n+audio/aiff\n+audio/x-aiff\n+audio/aiff\n+audio/x-aiff\n+application/x-aim\n+text/x-audiosoft-intra\n+application/x-navi-animation\n+application/x-nokia-9000-communicator-add-on-software\n+application/mime\n+application/octet-stream\n+application/arj\n+application/octet-stream\n+image/x-jg\n+video/x-ms-asf\n+text/x-asm\n+text/asp\n+application/x-mplayer2\n+video/x-ms-asf\n+video/x-ms-asf-plugin\n+audio/basic\n+audio/x-au\n+application/x-troff-msvideo\n+video/avi\n+video/msvideo\n+video/x-msvideo\n+video/avs-video\n+application/x-bcpio\n+application/mac-binary\n+application/macbinary\n+application/octet-stream\n+application/x-binary\n+application/x-macbinary\n+image/bmp\n+image/bmp\n+image/x-windows-bmp\n+application/book\n+application/book\n+application/x-bzip2\n+application/x-bsh\n+application/x-bzip\n+application/x-bzip2\n+text/plain\n+text/x-c\n+text/plain\n+application/vnd.ms-pki.seccat\n+text/plain\n+text/x-c\n+application/clariscad\n+application/x-cocoa\n+application/cdf\n+application/x-cdf\n+application/x-netcdf\n+application/pkix-cert\n+application/x-x509-ca-cert\n+application/x-chat\n+application/x-chat\n+application/java\n+application/java-byte-code\n+application/x-java-class\n+application/octet-stream\n+text/plain\n+text/plain\n+application/x-cpio\n+text/x-c\n+application/mac-compactpro\n+application/x-compactpro\n+application/x-cpt\n+application/pkcs-crl\n+application/pkix-crl\n+application/pkix-cert\n+application/x-x509-ca-cert\n+application/x-x509-user-cert\n+application/x-csh\n+text/x-script.csh\n+application/x-pointplus\n+text/css\n+text/plain\n+application/x-director\n+application/x-deepv\n+text/plain\n+application/x-x509-ca-cert\n+video/x-dv\n+application/x-director\n+video/dl\n+video/x-dl\n+application/msword\n+application/msword\n+application/commonground\n+application/drafting\n+application/octet-stream\n+video/x-dv\n+application/x-dvi\n+drawing/x-dwf (old)\n+model/vnd.dwf\n+application/acad\n+image/vnd.dwg\n+image/x-dwg\n+application/dxf\n+image/vnd.dwg\n+image/x-dwg\n+application/x-director\n+text/x-script.elisp\n+application/x-bytecode.elisp (compiled elisp)\n+application/x-elc\n+application/x-envoy\n+application/postscript\n+application/x-esrehber\n+text/x-setext\n+application/envoy\n+application/x-envoy\n+application/octet-stream\n+text/plain\n+text/x-fortran\n+text/x-fortran\n+text/plain\n+text/x-fortran\n+application/vnd.fdf\n+application/fractals\n+image/fif\n+video/fli\n+video/x-fli\n+image/florian\n+text/vnd.fmi.flexstor\n+video/x-atomic3d-feature\n+text/plain\n+text/x-fortran\n+image/vnd.fpx\n+image/vnd.net-fpx\n+application/freeloader\n+audio/make\n+text/plain\n+image/g3fax\n+image/gif\n+video/gl\n+video/x-gl\n+audio/x-gsm\n+audio/x-gsm\n+application/x-gsp\n+application/x-gss\n+application/x-gtar\n+application/x-compressed\n+application/x-gzip\n+application/x-gzip\n+multipart/x-gzip\n+text/plain\n+text/x-h\n+application/x-hdf\n+application/x-helpfile\n+application/vnd.hp-hpgl\n+text/plain\n+text/x-h\n+text/x-script\n+application/hlp\n+application/x-helpfile\n+application/x-winhelp\n+application/vnd.hp-hpgl\n+application/vnd.hp-hpgl\n+application/binhex\n+application/binhex4\n+application/mac-binhex\n+application/mac-binhex40\n+application/x-binhex40\n+application/x-mac-binhex40\n+application/hta\n+text/x-component\n+text/html\n+text/html\n+text/html\n+text/webviewhtml\n+text/html\n+x-conference/x-cooltalk\n+image/x-icon\n+text/plain\n+image/ief\n+image/ief\n+application/iges\n+model/iges\n+application/iges\n+model/iges\n+application/x-ima\n+application/x-httpd-imap\n+application/inf\n+application/x-internett-signup\n+application/x-ip2\n+video/x-isvideo\n+audio/it\n+application/x-inventor\n+i-world/i-vrml\n+application/x-livescreen\n+audio/x-jam\n+text/plain\n+text/x-java-source\n+text/plain\n+text/x-java-source\n+application/x-java-commerce\n+image/jpeg\n+image/pjpeg\n+image/jpeg\n+image/jpeg\n+image/pjpeg\n+image/jpeg\n+image/pjpeg\n+image/jpeg\n+image/pjpeg\n+image/x-jps\n+application/x-javascript\n+application/javascript\n+application/ecmascript\n+text/javascript\n+text/ecmascript\n+image/jutvision\n+audio/midi\n+music/x-karaoke\n+application/x-ksh\n+text/x-script.ksh\n+audio/nspaudio\n+audio/x-nspaudio\n+audio/x-liveaudio\n+application/x-latex\n+application/lha\n+application/octet-stream\n+application/x-lha\n+application/octet-stream\n+text/plain\n+audio/nspaudio\n+audio/x-nspaudio\n+text/plain\n+application/x-lisp\n+text/x-script.lisp\n+text/plain\n+text/x-la-asf\n+application/x-latex\n+application/octet-stream\n+application/x-lzh\n+application/lzx\n+application/octet-stream\n+application/x-lzx\n+text/plain\n+text/x-m\n+video/mpeg\n+audio/mpeg\n+video/mpeg\n+audio/x-mpequrl\n+application/x-troff-man\n+application/x-navimap\n+text/plain\n+application/mbedlet\n+application/x-magic-cap-package-1.0\n+application/mcad\n+application/x-mathcad\n+image/vasa\n+text/mcf\n+application/netmc\n+application/x-troff-me\n+message/rfc822\n+message/rfc822\n+application/x-midi\n+audio/midi\n+audio/x-mid\n+audio/x-midi\n+music/crescendo\n+x-music/x-midi\n+application/x-midi\n+audio/midi\n+audio/x-mid\n+audio/x-midi\n+music/crescendo\n+x-music/x-midi\n+application/x-frame\n+application/x-mif\n+message/rfc822\n+www/mime\n+audio/x-vnd.audioexplosion.mjuicemediafile\n+video/x-motion-jpeg\n+application/base64\n+application/x-meme\n+application/base64\n+audio/mod\n+audio/x-mod\n+video/quicktime\n+video/quicktime\n+video/x-sgi-movie\n+audio/mpeg\n+audio/x-mpeg\n+video/mpeg\n+video/x-mpeg\n+video/x-mpeq2a\n+audio/mpeg3\n+audio/x-mpeg-3\n+video/mpeg\n+video/x-mpeg\n+audio/mpeg\n+video/mpeg\n+application/x-project\n+video/mpeg\n+video/mpeg\n+audio/mpeg\n+video/mpeg\n+audio/mpeg\n+application/vnd.ms-project\n+application/x-project\n+application/x-project\n+application/x-project\n+application/marc\n+application/x-troff-ms\n+video/x-sgi-movie\n+audio/make\n+application/x-vnd.audioexplosion.mzz\n+image/naplps\n+image/naplps\n+application/x-netcdf\n+application/vnd.nokia.configuration-message\n+image/x-niff\n+image/x-niff\n+application/x-mix-transfer\n+application/x-conference\n+application/x-navidoc\n+application/octet-stream\n+application/oda\n+application/x-omc\n+application/x-omcdatamaker\n+application/x-omcregerator\n+text/x-pascal\n+application/pkcs10\n+application/x-pkcs10\n+application/pkcs-12\n+application/x-pkcs12\n+application/x-pkcs7-signature\n+application/pkcs7-mime\n+application/x-pkcs7-mime\n+application/pkcs7-mime\n+application/x-pkcs7-mime\n+application/x-pkcs7-certreqresp\n+application/pkcs7-signature\n+application/pro_eng\n+text/pascal\n+image/x-portable-bitmap\n+application/vnd.hp-pcl\n+application/x-pcl\n+image/x-pict\n+image/x-pcx\n+chemical/x-pdb\n+application/pdf\n+audio/make\n+audio/make.my.funk\n+image/x-portable-graymap\n+image/x-portable-greymap\n+image/pict\n+image/pict\n+application/x-newton-compatible-pkg\n+application/vnd.ms-pki.pko\n+text/plain\n+text/x-script.perl\n+application/x-pixclscript\n+image/x-xpixmap\n+text/x-script.perl-module\n+application/x-pagemaker\n+application/x-pagemaker\n+image/png\n+application/x-portable-anymap\n+image/x-portable-anymap\n+application/mspowerpoint\n+application/vnd.ms-powerpoint\n+model/x-pov\n+application/vnd.ms-powerpoint\n+image/x-portable-pixmap\n+application/mspowerpoint\n+application/vnd.ms-powerpoint\n+application/mspowerpoint\n+application/powerpoint\n+application/vnd.ms-powerpoint\n+application/x-mspowerpoint\n+application/mspowerpoint\n+application/x-freelance\n+application/pro_eng\n+application/postscript\n+application/octet-stream\n+paleovu/x-pv\n+application/vnd.ms-powerpoint\n+text/x-script.phyton\n+applicaiton/x-bytecode.python\n+audio/vnd.qcelp\n+x-world/x-3dmf\n+x-world/x-3dmf\n+image/x-quicktime\n+video/quicktime\n+video/x-qtc\n+image/x-quicktime\n+image/x-quicktime\n+audio/x-pn-realaudio\n+audio/x-pn-realaudio-plugin\n+audio/x-realaudio\n+audio/x-pn-realaudio\n+application/x-cmu-raster\n+image/cmu-raster\n+image/x-cmu-raster\n+image/cmu-raster\n+text/x-script.rexx\n+image/vnd.rn-realflash\n+image/x-rgb\n+application/vnd.rn-realmedia\n+audio/x-pn-realaudio\n+audio/mid\n+audio/x-pn-realaudio\n+audio/x-pn-realaudio\n+audio/x-pn-realaudio-plugin\n+application/ringing-tones\n+application/vnd.nokia.ringing-tone\n+application/vnd.rn-realplayer\n+application/x-troff\n+image/vnd.rn-realpix\n+audio/x-pn-realaudio-plugin\n+text/richtext\n+text/vnd.rn-realtext\n+application/rtf\n+application/x-rtf\n+text/richtext\n+application/rtf\n+text/richtext\n+video/vnd.rn-realvideo\n+text/x-asm\n+audio/s3m\n+application/octet-stream\n+application/x-tbook\n+application/x-lotusscreencam\n+text/x-script.guile\n+text/x-script.scheme\n+video/x-scm\n+text/plain\n+application/sdp\n+application/x-sdp\n+application/sounder\n+application/sea\n+application/x-sea\n+application/set\n+text/sgml\n+text/x-sgml\n+text/sgml\n+text/x-sgml\n+application/x-bsh\n+application/x-sh\n+application/x-shar\n+text/x-script.sh\n+application/x-bsh\n+application/x-shar\n+text/html\n+text/x-server-parsed-html\n+audio/x-psid\n+application/x-sit\n+application/x-stuffit\n+application/x-koan\n+application/x-koan\n+application/x-koan\n+application/x-koan\n+application/x-seelogo\n+application/smil\n+application/smil\n+audio/basic\n+audio/x-adpcm\n+application/solids\n+application/x-pkcs7-certificates\n+text/x-speech\n+application/futuresplash\n+application/x-sprite\n+application/x-sprite\n+application/x-wais-source\n+text/x-server-parsed-html\n+application/streamingmedia\n+application/vnd.ms-pki.certstore\n+application/step\n+application/sla\n+application/vnd.ms-pki.stl\n+application/x-navistyle\n+application/step\n+application/x-sv4cpio\n+application/x-sv4crc\n+image/vnd.dwg\n+image/x-dwg\n+application/x-world\n+x-world/x-svr\n+application/x-shockwave-flash\n+application/x-troff\n+text/x-speech\n+application/x-tar\n+application/toolbook\n+application/x-tbook\n+application/x-tcl\n+text/x-script.tcl\n+text/x-script.tcsh\n+application/x-tex\n+application/x-texinfo\n+application/x-texinfo\n+application/plain\n+text/plain\n+application/gnutar\n+application/x-compressed\n+image/tiff\n+image/x-tiff\n+image/tiff\n+image/x-tiff\n+application/x-troff\n+audio/tsp-audio\n+application/dsptype\n+audio/tsplayer\n+text/tab-separated-values\n+image/florian\n+text/plain\n+text/x-uil\n+text/uri-list\n+text/uri-list\n+application/i-deas\n+text/uri-list\n+text/uri-list\n+application/x-ustar\n+multipart/x-ustar\n+application/octet-stream\n+text/x-uuencode\n+text/x-uuencode\n+application/x-cdlink\n+text/x-vcalendar\n+application/vda\n+video/vdo\n+application/groupwise\n+video/vivo\n+video/vnd.vivo\n+video/vivo\n+video/vnd.vivo\n+application/vocaltec-media-desc\n+application/vocaltec-media-file\n+audio/voc\n+audio/x-voc\n+video/vosaic\n+audio/voxware\n+audio/x-twinvq-plugin\n+audio/x-twinvq\n+audio/x-twinvq-plugin\n+application/x-vrml\n+model/vrml\n+x-world/x-vrml\n+x-world/x-vrt\n+application/x-visio\n+application/x-visio\n+application/x-visio\n+application/wordperfect6.0\n+application/wordperfect6.1\n+application/msword\n+audio/wav\n+audio/x-wav\n+application/x-qpro\n+image/vnd.wap.wbmp\n+application/vnd.xara\n+application/msword\n+application/x-123\n+windows/metafile\n+text/vnd.wap.wml\n+application/vnd.wap.wmlc\n+text/vnd.wap.wmlscript\n+application/vnd.wap.wmlscriptc\n+application/msword\n+application/wordperfect\n+application/wordperfect\n+application/wordperfect6.0\n+application/wordperfect\n+application/wordperfect\n+application/x-wpwin\n+application/x-lotus\n+application/mswrite\n+application/x-wri\n+application/x-world\n+model/vrml\n+x-world/x-vrml\n+model/vrml\n+x-world/x-vrml\n+text/scriplet\n+application/x-wais-source\n+application/x-wintalk\n+image/x-xbitmap\n+image/x-xbm\n+image/xbm\n+video/x-amt-demorun\n+xgl/drawing\n+image/vnd.xiff\n+application/excel\n+application/excel\n+application/x-excel\n+application/x-msexcel\n+application/excel\n+application/vnd.ms-excel\n+application/x-excel\n+application/excel\n+application/vnd.ms-excel\n+application/x-excel\n+application/excel\n+application/x-excel\n+application/excel\n+application/x-excel\n+application/excel\n+application/vnd.ms-excel\n+application/x-excel\n+application/excel\n+application/vnd.ms-excel\n+application/x-excel\n+application/excel\n+application/vnd.ms-excel\n+application/x-excel\n+application/x-msexcel\n+application/excel\n+application/x-excel\n+application/excel\n+application/x-excel\n+application/excel\n+application/vnd.ms-excel\n+application/x-excel\n+application/x-msexcel\n+audio/xm\n+application/xml\n+text/xml\n+xgl/movie\n+application/x-vnd.ls-xpix\n+image/x-xpixmap\n+image/xpm\n+image/png\n+video/x-amt-showrun\n+image/x-xwd\n+image/x-xwindowdump\n+chemical/x-pdb\n+application/x-compress\n+application/x-compressed\n+application/x-compressed\n+application/x-zip-compressed\n+application/zip\n+multipart/x-zip\n+application/octet-stream\n+text/x-script.zsh\n+application/vnd.oasis.opendocument.text\n+application/vnd.oasis.opendocument.graphics\n+application/vnd.oasis.opendocument.presentation\n+application/vnd.oasis.opendocument.spreadsheet\n+application/vnd.oasis.opendocument.chart\n+application/vnd.oasis.opendocument.formula\n+application/vnd.oasis.opendocument.database\n+application/vnd.oasis.opendocument.image\n\\ No newline at end of file"},{"sha":"cecdc3e4fe30e9945e417b8d54451dcd1b3b078d","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -29,6 +29,8 @@ under the License.\n                            http://cxf.apache.org/schemas/core.xsd\">\n \n   <context:component-scan base-package=\"org.apache.syncope.console.rest\"/>\n+  <context:component-scan base-package=\"org.apache.syncope.console.init\"/>\n+  <context:component-scan base-package=\"org.apache.syncope.console.preview\"/>\n \n   <bean id=\"systemPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n     <property name=\"order\" value=\"1\"/>"},{"sha":"6b2556f0bdfeb0d765e4396915d1ed9a3652cc86","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/BinaryFieldPanel.html","status":"modified","additions":15,"deletions":7,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.html?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -21,16 +21,24 @@\n     <input style=\"display: none;\" wicket:id=\"textField\"/>\n     <span style=\"margin-right: 20px;\">\n       <div style=\"display: table-cell;\">\n-        <form wicket:id=\"uploadForm\">\n+        <form wicket:id=\"uploadForm\" encType=\"multipart/form-data\" method=\"post\" accept-charset=\"UTF-8\">\n           <input wicket:id=\"fileUpload\" type=\"file\"/>\n+          <div style=\"top: -25px; left: 100%; position: relative; vertical-align: middle;\">\n+            <a href=\"#\" wicket:id=\"uploadLink\"><img src=\"img/file-upload.png\" alt=\"upload\" title=\"upload\" style=\"vertical-align: middle;\"/></a>\n+            <a href=\"#\" wicket:id=\"downloadLink\"><img src=\"img/file-download.png\" alt=\"download\" title=\"download\" style=\"vertical-align: middle;\"/></a>\n+            <a href=\"#\" wicket:id=\"resetLink\"><img src=\"img/disable.png\" alt=\"disable\" title=\"remove value\" style=\"vertical-align: middle;\"/></a>\n+            <span wicket:id=\"preview\"/>\n+          </div>\n+          <span wicket:id=\"previewContainer\">\n+            <span wicket:id=\"panelPreview\">[panelPreview]</span>\n+            <wicket:fragment wicket:id=\"previewFragment\">\n+              <div wicket:id = \"previewer\" class=\"ui-widget-content ui-corner-all\"></div>\n+            </wicket:fragment>\n+            <wicket:fragment wicket:id=\"emptyFragment\">\n+            </wicket:fragment>\n+          </span>\n         </form>\n       </div>\n-      <div style=\"display: table-cell; vertical-align: middle;\">\n-        <a href=\"#\" wicket:id=\"uploadLink\"><img src=\"img/up-icon.png\" alt=\"upload\" title=\"upload\" style=\"vertical-align: middle;\"/></a>\n-        <a href=\"#\" wicket:id=\"downloadLink\"><img src=\"img/down-icon.png\" alt=\"download\" title=\"download\" style=\"vertical-align: middle;\"/></a>\n-        <a href=\"#\" wicket:id=\"resetLink\"><img src=\"img/disable.png\" alt=\"disable\" title=\"remove value\" style=\"vertical-align: middle;\"/></a>\n-        <span wicket:id=\"preview\"/>\n-      </div>\n     </span>\n   </wicket:extend>\n </html>"},{"sha":"81e079778fd89523d9395333f8462fc405db175c","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/preview/AbstractBinaryPreviewer.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.html?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head></wicket:head>\n+  <wicket:panel>\n+    <wicket:child />\n+  </wicket:panel>\n+</html>"},{"sha":"9733b299723d4fd7b240d47172e0265d08730951","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/preview/BinaryCertPreviewer.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.html?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,24 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div wicket:id = \"certCommonName\">[certCommonName]</div>\n+  </wicket:extend>\n+</html>"},{"sha":"3b891b01f5f6231f54bd88abb5b4949c43c857c6","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/preview/BinaryImagePreviewer.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.html?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div><img wicket:id = \"previewImage\"/></div>\n+  </wicket:extend>\n+</html>"},{"sha":"ceae906ebf1a74f91a7c68b81ce1b35cb72a10c4","filename":"console/src/main/webapp/img/file-download.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ffile-download.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ffile-download.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ffile-download.png?ref=4a3988ff9b266acdf57d616927208bda8db582fa"},{"sha":"d4a399ef18c1b6f0aeacadf359403e8f6c9cb7f4","filename":"console/src/main/webapp/img/file-upload.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ffile-upload.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ffile-upload.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ffile-upload.png?ref=4a3988ff9b266acdf57d616927208bda8db582fa"},{"sha":"65b20ef53ae2724ee6ed82eaf0713d52f09e7b33","filename":"core/src/test/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a3988ff9b266acdf57d616927208bda8db582fa/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a3988ff9b266acdf57d616927208bda8db582fa/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=4a3988ff9b266acdf57d616927208bda8db582fa","patch":"@@ -215,7 +215,7 @@ under the License.\n            secretKey=\"7abcdefghilmnopqrstuvz9#\" cipherAlgorithm=\"SHA\"/>\n   <USchema name=\"photo\" type=\"Binary\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n-           mimeType=\"application/jpg\"/>\n+           mimeType=\"image/jpeg\"/>\n \n   <UDerSchema name=\"csvuserid\" expression=\"firstname + ',' + surname\"/>\n   <UDerSchema name=\"cn\" expression=\"surname + ', ' + firstname\"/>"}]}