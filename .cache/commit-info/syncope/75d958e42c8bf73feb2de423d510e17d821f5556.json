{"sha":"75d958e42c8bf73feb2de423d510e17d821f5556","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc1ZDk1OGU0MmM4YmY3M2ZlYjJkZTQyM2Q1MTBlMTdkODIxZjU1NTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-04-15T15:36:06Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-04-15T15:36:06Z"},"message":"Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1468123 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a6a0ceeb3cc54b782270f557a890322737755af8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a6a0ceeb3cc54b782270f557a890322737755af8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/75d958e42c8bf73feb2de423d510e17d821f5556","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75d958e42c8bf73feb2de423d510e17d821f5556","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/75d958e42c8bf73feb2de423d510e17d821f5556","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75d958e42c8bf73feb2de423d510e17d821f5556/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"dd58b3b89912e46c362a0822802fadccc6ac5045","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd58b3b89912e46c362a0822802fadccc6ac5045","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd58b3b89912e46c362a0822802fadccc6ac5045"}],"stats":{"total":54,"additions":22,"deletions":32},"files":[{"sha":"dc1c74233cd56ab9dd6da44e1644026ec9ede9eb","filename":"console/src/main/java/org/apache/syncope/console/pages/Users.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75d958e42c8bf73feb2de423d510e17d821f5556/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75d958e42c8bf73feb2de423d510e17d821f5556/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=75d958e42c8bf73feb2de423d510e17d821f5556","patch":"@@ -71,7 +71,7 @@ public Users(final PageParameters parameters) {\n \n \n         // create new user\n-        final AjaxLink createLink = new ClearIndicatingAjaxLink(\"createLink\", getPageReference()) {\n+        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createLink\", getPageReference()) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"7c7dead1970ec45a7566504c3942e0adb63c5816","filename":"core/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75d958e42c8bf73feb2de423d510e17d821f5556/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75d958e42c8bf73feb2de423d510e17d821f5556/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=75d958e42c8bf73feb2de423d510e17d821f5556","patch":"@@ -171,11 +171,6 @@ under the License.\n       <artifactId>spring-security-config</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>cglib</groupId>\n-      <artifactId>cglib</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>org.aspectj</groupId>\n       <artifactId>aspectjweaver</artifactId>"},{"sha":"06223bce9e61e22e2083a69d24ec91631eb7a95a","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AttributableSearchDAOImpl.java","status":"modified","additions":14,"deletions":11,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75d958e42c8bf73feb2de423d510e17d821f5556/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75d958e42c8bf73feb2de423d510e17d821f5556/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java?ref=75d958e42c8bf73feb2de423d510e17d821f5556","patch":"@@ -23,7 +23,6 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Date;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import javax.persistence.Entity;\n@@ -226,39 +225,43 @@ private <T extends AbstractAttributable> List<T> doSearch(final Set<Long> adminR\n         // 3. prepare the search query\n         final Query query = entityManager.createNativeQuery(queryString.toString());\n \n-        // page starts from 1, while setFirtResult() starts from 0\n+        // 4. page starts from 1, while setFirtResult() starts from 0\n         query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n \n         if (itemsPerPage >= 0) {\n             query.setMaxResults(itemsPerPage);\n         }\n \n-        // 4. populate the search query with parameter values\n+        // 5. populate the search query with parameter values\n         fillWithParameters(query, parameters);\n \n         LOG.debug(\"Native query\\n{}\\nwith parameters\\n{}\", queryString.toString(), parameters);\n \n-        // 5. Prepare the result (avoiding duplicates - set)\n-        final Set<Number> subjectIds = new HashSet<Number>();\n+        // 6. Prepare the result (avoiding duplicates)\n+        final List<Number> subjectIds = new ArrayList<Number>();\n         final List resultList = query.getResultList();\n \n-        //fix for HHH-5902 - bug hibernate\n+        // fix for HHH-5902 - bug hibernate\n         if (resultList != null) {\n             for (Object userId : resultList) {\n+                final Number subjectIdNumber;\n                 if (userId instanceof Object[]) {\n-                    subjectIds.add((Number) ((Object[]) userId)[0]);\n+                    subjectIdNumber = (Number) ((Object[]) userId)[0];\n                 } else {\n-                    subjectIds.add((Number) userId);\n+                    subjectIdNumber = (Number) userId;\n+                }\n+                if (!subjectIds.contains(subjectIdNumber)) {\n+                    subjectIds.add(subjectIdNumber);\n                 }\n             }\n         }\n \n         final List<T> result = new ArrayList<T>(subjectIds.size());\n \n-        for (Object subjectId : subjectIds) {\n+        for (Number subjectId : subjectIds) {\n             T subject = attrUtil.getType() == AttributableType.USER\n-                    ? (T) userDAO.find(((Number) subjectId).longValue())\n-                    : (T) roleDAO.find(((Number) subjectId).longValue());\n+                    ? (T) userDAO.find(subjectId.longValue())\n+                    : (T) roleDAO.find(subjectId.longValue());\n             if (subject == null) {\n                 LOG.error(\"Could not find {} with id {}, even though returned by the native query\",\n                         attrUtil.getType(), subjectId);"},{"sha":"0debbf70a7dfbbb62dc9e3616812dae1a41ab03a","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75d958e42c8bf73feb2de423d510e17d821f5556/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75d958e42c8bf73feb2de423d510e17d821f5556/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=75d958e42c8bf73feb2de423d510e17d821f5556","patch":"@@ -53,8 +53,8 @@ protected <T extends AbstractAttributable> T findInternal(final Long id) {\n \n     @Override\n     public SyncopeUser find(final Long id) {\n-        TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n-                + \" e \" + \"WHERE e.id = :id\", SyncopeUser.class);\n+        TypedQuery<SyncopeUser> query = entityManager.createQuery(\n+                \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e WHERE e.id = :id\", SyncopeUser.class);\n         query.setParameter(\"id\", id);\n \n         SyncopeUser result = null;\n@@ -173,7 +173,7 @@ public final List<SyncopeUser> findAll(final Set<Long> adminRoles, final int pag\n         List<Number> userIds = new ArrayList<Number>();\n         List<Object> resultList = query.getResultList();\n \n-        //fix for HHH-5902 - bug hibernate\n+        // fix for HHH-5902 - bug hibernate\n         if (resultList != null) {\n             for (Object userId : resultList) {\n                 if (userId instanceof Object[]) {\n@@ -186,11 +186,10 @@ public final List<SyncopeUser> findAll(final Set<Long> adminRoles, final int pag\n \n         List<SyncopeUser> result = new ArrayList<SyncopeUser>(userIds.size());\n \n-        SyncopeUser user;\n-        for (Object userId : userIds) {\n-            user = findInternal(((Number) userId).longValue());\n+        for (Number userId : userIds) {\n+            SyncopeUser user = findInternal(userId.longValue());\n             if (user == null) {\n-                LOG.error(\"Could not find user with id {}, \" + \"even though returned by the native query\", userId);\n+                LOG.error(\"Could not find user with id {}, even though returned by the native query\", userId);\n             } else {\n                 result.add(user);\n             }\n@@ -232,8 +231,7 @@ public void delete(final Long id) {\n \n     @Override\n     public void delete(final SyncopeUser user) {\n-        // Not calling membershipDAO.delete() here because it would try\n-        // to save this user as well, thus going into\n+        // Not calling membershipDAO.delete() here because it would try to save this user as well, thus going into\n         // ConcurrentModificationException\n         for (Membership membership : user.getMemberships()) {\n             membership.setSyncopeUser(null);"},{"sha":"f57cf443b6f5bb1e4d4e1dae8fcaec34ca58c615","filename":"pom.xml","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75d958e42c8bf73feb2de423d510e17d821f5556/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75d958e42c8bf73feb2de423d510e17d821f5556/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=75d958e42c8bf73feb2de423d510e17d821f5556","patch":"@@ -576,12 +576,6 @@ under the License.\n       </dependency>\n       <!-- /Spring -->\n \n-      <dependency>\n-        <groupId>cglib</groupId>\n-        <artifactId>cglib</artifactId>\n-        <version>3.0</version>\n-      </dependency>\n-            \n       <dependency>\n         <groupId>org.aspectj</groupId>\n         <artifactId>aspectjweaver</artifactId>"}]}