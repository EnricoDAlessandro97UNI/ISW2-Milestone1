{"sha":"a4df24e34e703bf74a2bdaa38472e7c661f6ae44","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE0ZGYyNGUzNGU3MDNiZjc0YTJiZGFhMzg0NzJlN2M2NjFmNmFlNDQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-09T13:58:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-09T13:58:22Z"},"message":"[SYNCOPE-753] Add support for ConnId pagination API in reference Groovy scripts","tree":{"sha":"1e1b2b0771317dde2f839819e94540625f1ab026","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1e1b2b0771317dde2f839819e94540625f1ab026"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a4df24e34e703bf74a2bdaa38472e7c661f6ae44","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a4df24e34e703bf74a2bdaa38472e7c661f6ae44","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a4df24e34e703bf74a2bdaa38472e7c661f6ae44","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a4df24e34e703bf74a2bdaa38472e7c661f6ae44/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f8ffa6c2fecb48e5b53642dd4f7b927585b68336","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f8ffa6c2fecb48e5b53642dd4f7b927585b68336","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f8ffa6c2fecb48e5b53642dd4f7b927585b68336"}],"stats":{"total":42,"additions":28,"deletions":14},"files":[{"sha":"5ff79d131cab01ef14768cf73a7ad50fa2382039","filename":"core/migration/src/main/resources/scripted/SearchScript.groovy","status":"modified","additions":22,"deletions":7,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4df24e34e703bf74a2bdaa38472e7c661f6ae44/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4df24e34e703bf74a2bdaa38472e7c661f6ae44/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy?ref=a4df24e34e703bf74a2bdaa38472e7c661f6ae44","patch":"@@ -49,7 +49,7 @@ import org.identityconnectors.common.security.GuardedString;\n // !!!! Each Map must contain a '__UID__' and '__NAME__' attribute.\n // This is required to build a ConnectorObject.\n \n-def addAttributes(it) {\n+def addAttributes(it, withValues) {\n   value = it.stringValue;\n   if (value == null) {\n     value = it.longValue;\n@@ -77,9 +77,19 @@ log.ok(\"Entering \" + action + \" script\");\n def sql = new Sql(connection);\n def result = []\n \n+def queryAppend = \"\";\n+def pageSize = options[OperationOptions.OP_PAGE_SIZE];\n+if (pageSize) {\n+  queryAppend += \" LIMIT \" + pageSize;\n+}\n+def pagedResultsCookie = options[OperationOptions.OP_PAGED_RESULTS_COOKIE];\n+if (pagedResultsCookie) {\n+  queryAppend += \" OFFSET \" + pagedResultsCookie;\n+}\n+\n switch ( objectClass ) {\n case \"__ACCOUNT__\":\n-  sql.eachRow(\"SELECT * FROM USER_SEARCH\", {\n+  sql.eachRow(\"SELECT * FROM USER_SEARCH\" + queryAppend, {\n       item = [\n         __UID__: it.username, \n         __NAME__: it.username, \n@@ -92,10 +102,10 @@ case \"__ACCOUNT__\":\n       withValues = ['__UID__', '__NAME__', '__PASSWORD__', 'cipherAlgorithm', '__ENABLE__', 'username'];\n       \n       sql.eachRow(\"SELECT * FROM USER_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n-          addAttributes(it);\n+          addAttributes(it, withValues);\n         });\n       sql.eachRow(\"SELECT * FROM USER_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n-          addAttributes(it);\n+          addAttributes(it, withValues);\n         });\n       \n       for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n@@ -112,10 +122,15 @@ case \"__ACCOUNT__\":\n       \n       result.add(item)\n     });\n+  \n+  if (result.size() == pageSize) {\n+    pagedResultsCookie = pagedResultsCookie + result.size();\n+    result.add([(OperationOptions.OP_PAGED_RESULTS_COOKIE): pagedResultsCookie]);\n+  }\n   break\n \n case \"__GROUP__\":\n-  sql.eachRow(\"SELECT * FROM ROLE_SEARCH\", {\n+  sql.eachRow(\"SELECT * FROM ROLE_SEARCH\" + queryAppend, {\n       name = it.id + ' ' + it.name;\n       item = [\n         __UID__: name, \n@@ -127,10 +142,10 @@ case \"__GROUP__\":\n       withValues = ['__UID__', '__NAME__', '__ENABLE__', 'name'];\n       \n       sql.eachRow(\"SELECT * FROM ROLE_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n-          addAttributes(it);\n+          addAttributes(it, withValues);\n         });\n       sql.eachRow(\"SELECT * FROM ROLE_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n-          addAttributes(it);\n+          addAttributes(it, withValues);\n         });\n       \n       for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {"},{"sha":"8bca31365423d43e542bc11ce1297023ca9d114a","filename":"core/migration/src/main/resources/scripted/SyncScript.groovy","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4df24e34e703bf74a2bdaa38472e7c661f6ae44/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4df24e34e703bf74a2bdaa38472e7c661f6ae44/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy?ref=a4df24e34e703bf74a2bdaa38472e7c661f6ae44","patch":"@@ -47,7 +47,7 @@ import org.identityconnectors.common.security.GuardedString\n // \"attributes\":Map<String,List> of attributes name/values\n // ]\n \n-def addAttributes(it) {\n+def addAttributes(it, withValues) {\n   value = it.stringValue;\n   if (value == null) {\n     value = it.longValue;\n@@ -116,10 +116,10 @@ if (action.equalsIgnoreCase(\"GET_LATEST_SYNC_TOKEN\")) {\n         withValues = ['__UID__', '__NAME__', '__PASSWORD__', 'cipherAlgorithm', '__ENABLE__', 'username'];\n       \n         sql.eachRow(\"SELECT * FROM USER_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n-            addAttributes(it);\n+            addAttributes(it, withValues);\n           });\n         sql.eachRow(\"SELECT * FROM USER_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n-            addAttributes(it);\n+            addAttributes(it, withValues);\n           });\n       \n         for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n@@ -158,10 +158,10 @@ if (action.equalsIgnoreCase(\"GET_LATEST_SYNC_TOKEN\")) {\n         withValues = ['__UID__', '__NAME__', '__ENABLE__', 'name'];\n       \n         sql.eachRow(\"SELECT * FROM ROLE_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n-            addAttributes(it);\n+            addAttributes(it, withValues);\n           });\n         sql.eachRow(\"SELECT * FROM ROLE_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n-            addAttributes(it);\n+            addAttributes(it, withValues);\n           });\n       \n         for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {"},{"sha":"1a2bcc451e24cdb1cae5ad24f0485e21f7bbb7b5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4df24e34e703bf74a2bdaa38472e7c661f6ae44/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4df24e34e703bf74a2bdaa38472e7c661f6ae44/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=a4df24e34e703bf74a2bdaa38472e7c661f6ae44","patch":"@@ -424,8 +424,7 @@ public void search(\n \n         if (connInstance.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n             if (options.getPageSize() == null && options.getPagedResultsCookie() == null) {\n-                OperationOptionsBuilder builder = new OperationOptionsBuilder(options);\n-                builder.setPageSize(DEFAULT_PAGE_SIZE);\n+                OperationOptionsBuilder builder = new OperationOptionsBuilder(options).setPageSize(DEFAULT_PAGE_SIZE);\n \n                 final String[] cookies = new String[] { null };\n                 do {"}]}