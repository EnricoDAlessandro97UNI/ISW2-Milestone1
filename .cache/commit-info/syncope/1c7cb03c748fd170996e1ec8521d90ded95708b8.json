{"sha":"1c7cb03c748fd170996e1ec8521d90ded95708b8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFjN2NiMDNjNzQ4ZmQxNzA5OTZlMWVjODUyMWQ5MGRlZDk1NzA4Yjg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-23T12:40:31Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-23T12:40:31Z"},"message":"bug-fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246412 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0adc6e23a76da1b6e2eff31fe6168b3f6260d910","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0adc6e23a76da1b6e2eff31fe6168b3f6260d910"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1c7cb03c748fd170996e1ec8521d90ded95708b8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c7cb03c748fd170996e1ec8521d90ded95708b8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1c7cb03c748fd170996e1ec8521d90ded95708b8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c7cb03c748fd170996e1ec8521d90ded95708b8/comments","author":null,"committer":null,"parents":[{"sha":"03dcf3146135ecc48d220dce79fb05385a9faa25","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03dcf3146135ecc48d220dce79fb05385a9faa25","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03dcf3146135ecc48d220dce79fb05385a9faa25"}],"stats":{"total":113,"additions":82,"deletions":31},"files":[{"sha":"7c07b89c093a569559e589649ea29fd098abf849","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":82,"deletions":31,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7cb03c748fd170996e1ec8521d90ded95708b8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7cb03c748fd170996e1ec8521d90ded95708b8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=1c7cb03c748fd170996e1ec8521d90ded95708b8","patch":"@@ -33,7 +33,10 @@\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.beans.user.UserAttribute;\n+import org.syncope.core.persistence.beans.user.UserAttributeValue;\n import org.syncope.core.persistence.util.ApplicationContextManager;\n+import org.syncope.types.SchemaType;\n \n public class PropagationManager {\n \n@@ -143,8 +146,7 @@ private Set<String> provision(\n \n         if (log.isDebugEnabled()) {\n             log.debug(\n-                    \"Synchronous provisioning of \" + resources\n-                    + \" with user \" + user.getId());\n+                    \"Synchronous provisioning of \" + resources + \" with user \" + user.getId());\n         }\n \n         for (Resource resource : syncResources) {\n@@ -157,22 +159,19 @@ private Set<String> provision(\n \n                 if (log.isErrorEnabled()) {\n                     log.error(\n-                            \"Exception during provision on resource \"\n-                            + resource.getName(), t);\n+                            \"Exception during provision on resource \" + resource.getName(), t);\n                 }\n \n                 throw new PropagationException(\n-                        \"Exception during provision on resource \"\n-                        + resource.getName(), resource.getName(), t);\n+                        \"Exception during provision on resource \" + resource.getName(), resource.getName(), t);\n             }\n         }\n \n         // asynchronous propagation ...\n \n         if (log.isDebugEnabled()) {\n             log.debug(\n-                    \"Asynchronous provisioning of \" + resources\n-                    + \" with user \" + user.getId());\n+                    \"Asynchronous provisioning of \" + resources + \" with user \" + user.getId());\n         }\n \n         for (Resource resource : asyncResources) {\n@@ -185,16 +184,14 @@ private Set<String> provision(\n \n                 if (log.isErrorEnabled()) {\n                     log.error(\n-                            \"Exception during provision on resource \"\n-                            + resource.getName(), t);\n+                            \"Exception during provision on resource \" + resource.getName(), t);\n                 }\n             }\n         }\n \n         if (log.isDebugEnabled()) {\n             log.debug(\n-                    \"Provisioned \" + provisioned\n-                    + \" with user \" + user.getId());\n+                    \"Provisioned \" + provisioned + \" with user \" + user.getId());\n         }\n \n         return provisioned;\n@@ -213,23 +210,19 @@ private Set<String> provision(\n     private void propagate(SyncopeUser user, Resource resource, boolean merge)\n             throws NoSuchBeanDefinitionException, IllegalStateException {\n \n-        ConnectorInstance connectorInstance = resource.getConnector();\n+        ConnectorInstance connectorInstance =\n+                resource.getConnector();\n \n-        ConfigurableApplicationContext context =\n-                ApplicationContextManager.getApplicationContext();\n-\n-        DefaultListableBeanFactory beanFactory =\n-                (DefaultListableBeanFactory) context.getBeanFactory();\n-\n-        ConnectorFacade connector = (ConnectorFacade) beanFactory.getBean(\n-                connectorInstance.getId().toString());\n+        ConnectorFacade connector =\n+                getConnectorFacade(connectorInstance.getId().toString());\n \n         if (connector == null) {\n             if (log.isErrorEnabled()) {\n \n-                log.error(\"Connector instance bean \"\n-                        + connectorInstance.getId().toString()\n-                        + \" not found\");\n+                log.error(\n+                        \"Connector instance bean \" +\n+                        connectorInstance.getId().toString() +\n+                        \" not found\");\n \n             }\n \n@@ -241,18 +234,57 @@ private void propagate(SyncopeUser user, Resource resource, boolean merge)\n \n         Set<Attribute> attrs = new HashSet<Attribute>();\n \n+        Class castToBeApplied = null;\n+        SchemaType type = null;\n+\n         String accountId = null;\n+\n         String field = null;\n+\n+        UserAttribute userAttribute = null;\n+        String schema = null;\n+        Set<UserAttributeValue> values = null;\n+\n         String password = user.getPassword();\n \n+        Set objValues = new HashSet();\n+\n         for (SchemaMapping mapping : mappings) {\n \n             field = mapping.getField();\n \n-            Object value = user.getAttribute(mapping.getUserSchema().getName());\n+            schema = mapping.getUserSchema().getName();\n+\n+            userAttribute = user.getAttribute(schema);\n+\n+            values = null;\n+\n+            try {\n+                type = mapping.getUserSchema().getType();\n+                castToBeApplied = Class.forName(type.getClassName());\n+            } catch (ClassNotFoundException e) {\n+                castToBeApplied = String.class;\n+            }\n+\n \n-            if (value != null && mapping.isAccountid()) {\n-                accountId = value.toString();\n+            if (log.isDebugEnabled()) {\n+                log.debug(\n+                        \"\\nDefine mapping for: \" +\n+                        \"\\n* Field \" + field +\n+                        \"\\n* Schema \" + schema +\n+                        \"\\n* Type \" + type.getClassName());\n+            }\n+\n+            if (userAttribute != null) {\n+                values = (Set<UserAttributeValue>) userAttribute.getAttributeValues();\n+\n+                for (UserAttributeValue value : values) {\n+                    objValues.add(value.getValue());\n+                }\n+            }\n+\n+            if (!objValues.isEmpty() && mapping.isAccountid()) {\n+                accountId = objValues.iterator().next().toString();\n                 attrs.add(new Name(accountId));\n             }\n \n@@ -261,8 +293,17 @@ private void propagate(SyncopeUser user, Resource resource, boolean merge)\n                         password.toCharArray()));\n             }\n \n-            if (!mapping.isPassword() && !mapping.isAccountid()) {\n-                attrs.add(AttributeBuilder.build(field, value));\n+            if (!mapping.isPassword() &&\n+                    !mapping.isAccountid() &&\n+                    !objValues.isEmpty()) {\n+\n+                if (mapping.getUserSchema().isMultivalue()) {\n+                    attrs.add(AttributeBuilder.build(field, objValues));\n+                } else {\n+                    attrs.add(AttributeBuilder.build(field,\n+                            castToBeApplied.cast(objValues.iterator().next())));\n+                }\n+\n             }\n         }\n \n@@ -280,8 +321,7 @@ private void propagate(SyncopeUser user, Resource resource, boolean merge)\n             if (log.isErrorEnabled()) {\n \n                 log.error(\n-                        \"Error creating user on resource \"\n-                        + resource.getName());\n+                        \"Error creating user on resource \" + resource.getName());\n \n             }\n \n@@ -292,4 +332,15 @@ private void propagate(SyncopeUser user, Resource resource, boolean merge)\n             log.info(\"Created user \" + userUid.getUidValue());\n         }\n     }\n+\n+    private ConnectorFacade getConnectorFacade(String id) {\n+\n+        ConfigurableApplicationContext context =\n+                ApplicationContextManager.getApplicationContext();\n+\n+        DefaultListableBeanFactory beanFactory =\n+                (DefaultListableBeanFactory) context.getBeanFactory();\n+\n+        return (ConnectorFacade) beanFactory.getBean(id);\n+    }\n }"}]}