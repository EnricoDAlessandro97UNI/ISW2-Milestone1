{"sha":"f2bbd9392020f7b50a15e12f515f8faa462b9f59","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYyYmJkOTM5MjAyMGY3YjUwYTE1ZTEyZjUxNWY4ZmFhNDYyYjlmNTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-20T08:50:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-20T08:50:40Z"},"message":"Cleanup: now UserService#read and GroupService#read are able to read either via key (UUID) or username / name","tree":{"sha":"fabf85180d49791cb56473460d16fc9c2044321e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fabf85180d49791cb56473460d16fc9c2044321e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f2bbd9392020f7b50a15e12f515f8faa462b9f59","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f2bbd9392020f7b50a15e12f515f8faa462b9f59","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f2bbd9392020f7b50a15e12f515f8faa462b9f59","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f2bbd9392020f7b50a15e12f515f8faa462b9f59/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f99f36e24e69b80e4a543c0a80bd731cc2c3fd28","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f99f36e24e69b80e4a543c0a80bd731cc2c3fd28","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f99f36e24e69b80e4a543c0a80bd731cc2c3fd28"}],"stats":{"total":36,"additions":16,"deletions":20},"files":[{"sha":"e781b096f270e1339986feefc6000f27a191bc2b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f2bbd9392020f7b50a15e12f515f8faa462b9f59/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f2bbd9392020f7b50a15e12f515f8faa462b9f59/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=f2bbd9392020f7b50a15e12f515f8faa462b9f59","patch":"@@ -314,10 +314,6 @@ protected RoleTO createRole(final RoleTO roleTO) {\n         return getObject(response.getLocation(), RoleService.class, RoleTO.class);\n     }\n \n-    protected UserTO readUser(final String username) {\n-        return userService.read(username);\n-    }\n-\n     protected ProvisioningResult<UserTO> createUser(final UserTO userTO) {\n         return createUser(userTO, true);\n     }"},{"sha":"d3b0192127ee57e99dcc95c4b6d2c86c7751f618","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AbstractTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f2bbd9392020f7b50a15e12f515f8faa462b9f59/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f2bbd9392020f7b50a15e12f515f8faa462b9f59/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java?ref=f2bbd9392020f7b50a15e12f515f8faa462b9f59","patch":"@@ -83,7 +83,7 @@ protected void removeTestUsers() {\n         for (int i = 0; i < 10; i++) {\n             String cUserName = \"test\" + i;\n             try {\n-                UserTO cUserTO = readUser(cUserName);\n+                UserTO cUserTO = userService.read(cUserName);\n                 userService.delete(cUserTO.getKey());\n             } catch (Exception e) {\n                 // Ignore"},{"sha":"781f89b4c138c381d7c55d8f7d15eedbf929b12c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f2bbd9392020f7b50a15e12f515f8faa462b9f59/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f2bbd9392020f7b50a15e12f515f8faa462b9f59/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=f2bbd9392020f7b50a15e12f515f8faa462b9f59","patch":"@@ -452,7 +452,7 @@ public boolean evaluate(final String entitlement) {\n         role.getEntitlements().add(anyTypeKey + \"_CREATE\");\n         role = createRole(role);\n \n-        UserTO bellini = readUser(\"bellini\");\n+        UserTO bellini = userService.read(\"bellini\");\n         UserPatch patch = new UserPatch();\n         patch.setKey(bellini.getKey());\n         patch.getRoles().add(new StringPatchItem.Builder()."},{"sha":"864835d30877eddf09d05645eae2e879d04774c7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f2bbd9392020f7b50a15e12f515f8faa462b9f59/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f2bbd9392020f7b50a15e12f515f8faa462b9f59/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=f2bbd9392020f7b50a15e12f515f8faa462b9f59","patch":"@@ -194,7 +194,7 @@ public void pull() throws Exception {\n             assertFalse(userTO.getResources().contains(RESOURCE_NAME_CSV));\n \n             // check for user template\n-            userTO = readUser(\"test7\");\n+            userTO = userService.read(\"test7\");\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_OTHER\", userTO.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n             assertEquals(3, userTO.getResources().size());\n@@ -213,13 +213,13 @@ public boolean evaluate(final AttrTO attributeTO) {\n                 }\n             }));\n \n-            userTO = readUser(\"test8\");\n+            userTO = userService.read(\"test8\");\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_8\", userTO.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n \n             // Check for ignored user - SYNCOPE-663\n             try {\n-                readUser(\"test2\");\n+                userService.read(\"test2\");\n                 fail();\n             } catch (SyncopeClientException e) {\n                 assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n@@ -235,11 +235,11 @@ public boolean evaluate(final AttrTO attributeTO) {\n             // Check for issue 215:\n             // * expected disabled user test1\n             // * expected enabled user test3\n-            userTO = readUser(\"test1\");\n+            userTO = userService.read(\"test1\");\n             assertNotNull(userTO);\n             assertEquals(\"suspended\", userTO.getStatus());\n \n-            userTO = readUser(\"test3\");\n+            userTO = userService.read(\"test3\");\n             assertNotNull(userTO);\n             assertEquals(\"active\", userTO.getStatus());\n \n@@ -249,8 +249,8 @@ public boolean evaluate(final AttrTO attributeTO) {\n             execProvisioningTasks(taskService, otherPullTaskKeys, 50, false);\n \n             // Matching --> UNLINK\n-            assertFalse(readUser(\"test9\").getResources().contains(RESOURCE_NAME_CSV));\n-            assertFalse(readUser(\"test7\").getResources().contains(RESOURCE_NAME_CSV));\n+            assertFalse(userService.read(\"test9\").getResources().contains(RESOURCE_NAME_CSV));\n+            assertFalse(userService.read(\"test7\").getResources().contains(RESOURCE_NAME_CSV));\n         } finally {\n             removeTestUsers();\n         }\n@@ -274,7 +274,7 @@ public void reconcileFromDB() {\n             assertNotNull(execution.getStatus());\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-            userTO = readUser(\"testuser1\");\n+            userTO = userService.read(\"testuser1\");\n             assertNotNull(userTO);\n             assertEquals(\"reconciled@syncope.apache.org\", userTO.getPlainAttrMap().get(\"userId\").getValues().get(0));\n             assertEquals(\"suspended\", userTO.getStatus());\n@@ -288,7 +288,7 @@ public void reconcileFromDB() {\n             assertNotNull(execution.getStatus());\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-            userTO = readUser(\"testuser1\");\n+            userTO = userService.read(\"testuser1\");\n             assertNotNull(userTO);\n             assertEquals(\"active\", userTO.getStatus());\n         } finally {\n@@ -488,11 +488,11 @@ public void filteredReconciliation() {\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n             // 4. verify that only enabled user was pulled\n-            userTO = readUser(\"user2\");\n+            userTO = userService.read(\"user2\");\n             assertNotNull(userTO);\n \n             try {\n-                readUser(\"user1\");\n+                userService.read(\"user1\");\n                 fail();\n             } catch (SyncopeClientException e) {\n                 assertEquals(ClientExceptionType.NotFound, e.getType());\n@@ -567,7 +567,7 @@ public void issueSYNCOPE68() {\n             ExecTO execution = execProvisioningTask(taskService, actual.getKey(), 50, false);\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-            userTO = readUser(\"testuser2\");\n+            userTO = userService.read(\"testuser2\");\n             assertNotNull(userTO);\n             assertEquals(\"testuser2@syncope.apache.org\", userTO.getPlainAttrMap().get(\"userId\").getValues().get(0));\n             assertEquals(2, userTO.getMemberships().size());\n@@ -584,7 +584,7 @@ public void issueSYNCOPE230() {\n         execProvisioningTask(taskService, \"7c2242f4-14af-4ab5-af31-cdae23783655\", 50, false);\n \n         // 3. read e-mail address for user created by the PullTask first execution\n-        UserTO userTO = readUser(\"issuesyncope230\");\n+        UserTO userTO = userService.read(\"issuesyncope230\");\n         assertNotNull(userTO);\n         String email = userTO.getPlainAttrMap().get(\"email\").getValues().iterator().next();\n         assertNotNull(email);\n@@ -597,7 +597,7 @@ public void issueSYNCOPE230() {\n         execProvisioningTask(taskService, \"7c2242f4-14af-4ab5-af31-cdae23783655\", 50, false);\n \n         // 6. verify that the e-mail was updated\n-        userTO = readUser(\"issuesyncope230\");\n+        userTO = userService.read(\"issuesyncope230\");\n         assertNotNull(userTO);\n         email = userTO.getPlainAttrMap().get(\"email\").getValues().iterator().next();\n         assertNotNull(email);"}]}