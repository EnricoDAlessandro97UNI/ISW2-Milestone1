{"sha":"6dae3c089c51b4aa2767095ec19fed5c20bb5f49","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZkYWUzYzA4OWM1MWI0YWEyNzY3MDk1ZWMxOWZlZDVjMjBiYjVmNDk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-23T14:09:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-23T14:09:01Z"},"message":"Upgrading to Spring 4.3.0","tree":{"sha":"7726c09a476d74210c54bc2b2d932d0dc567515c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7726c09a476d74210c54bc2b2d932d0dc567515c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6dae3c089c51b4aa2767095ec19fed5c20bb5f49","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6dae3c089c51b4aa2767095ec19fed5c20bb5f49","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6dae3c089c51b4aa2767095ec19fed5c20bb5f49","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b3d99e42894ace7053ef288eb5ef373a5a74a8d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b3d99e42894ace7053ef288eb5ef373a5a74a8d6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b3d99e42894ace7053ef288eb5ef373a5a74a8d6"}],"stats":{"total":66,"additions":45,"deletions":21},"files":[{"sha":"7728080e26e30da082ac230512887f4ceb2b7b75","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=6dae3c089c51b4aa2767095ec19fed5c20bb5f49","patch":"@@ -55,7 +55,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n-import org.apache.syncope.core.provisioning.java.data.JEXLMappingItemTransformer;\n+import org.apache.syncope.core.provisioning.java.data.JEXLMappingItemTransformerImpl;\n import org.apache.syncope.core.provisioning.java.job.GroupMemberProvisionTaskJobDelegate;\n import org.apache.syncope.core.provisioning.java.pushpull.PlainAttrsPullCorrelationRule;\n \n@@ -144,7 +144,7 @@ public void load() {\n                 }\n \n                 if (MappingItemTransformer.class.isAssignableFrom(clazz) && !isAbsractClazz\n-                        && !clazz.equals(JEXLMappingItemTransformer.class)) {\n+                        && !clazz.equals(JEXLMappingItemTransformerImpl.class)) {\n \n                     classNames.get(Type.MAPPING_ITEM_TRANSFORMER).add(clazz.getName());\n                 }"},{"sha":"8717e3da4099fc4fcdcd6bc865915c6de3f5f2de","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/JEXLMappingItemTransformer.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FJEXLMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FJEXLMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FJEXLMappingItemTransformer.java?ref=6dae3c089c51b4aa2767095ec19fed5c20bb5f49","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.data;\n+\n+/**\n+ * {@link MappingItemTransformer} implementing evaluation of JEXL expression defined for a given\n+ * {@link org.apache.syncope.core.persistence.api.entity.resource.MappingItem}.\n+ */\n+public interface JEXLMappingItemTransformer extends MappingItemTransformer {\n+\n+    void setPropagationJEXL(String propagationJEXL);\n+\n+    void setPullJEXL(String pullJEXL);\n+}"},{"sha":"07618aa6a32aaf811e437e84645a60035cd9acd8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/JEXLMappingItemTransformerImpl.java","status":"renamed","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformerImpl.java?ref=6dae3c089c51b4aa2767095ec19fed5c20bb5f49","patch":"@@ -27,22 +27,22 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n+import org.apache.syncope.core.provisioning.api.data.JEXLMappingItemTransformer;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n \n-/**\n- * {@link org.apache.syncope.core.provisioning.api.data.MappingItemTransformer} implemeting evaluation of JEXL\n- * expression defined for a given {@link MappingItem}.\n- */\n-public class JEXLMappingItemTransformer extends DefaultMappingItemTransformer {\n+public class JEXLMappingItemTransformerImpl\n+        extends DefaultMappingItemTransformer implements JEXLMappingItemTransformer {\n \n     private String propagationJEXL;\n \n     private String pullJEXL;\n \n+    @Override\n     public void setPropagationJEXL(final String propagationJEXL) {\n         this.propagationJEXL = propagationJEXL;\n     }\n \n+    @Override\n     public void setPullJEXL(final String pullJEXL) {\n         this.pullJEXL = pullJEXL;\n     }\n@@ -79,7 +79,6 @@ public List<Object> beforePull(\n             final List<Object> values) {\n \n         if (StringUtils.isNotBlank(pullJEXL) && values != null) {\n-\n             List<Object> newValues = new ArrayList<>(values.size());\n             for (Object value : values) {\n                 JexlContext jexlContext = new MapContext();","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/JEXLMappingItemTransformer.java"},{"sha":"f8e93b4e2372f9161a9af6277329e73a1b7e9461","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/MappingUtils.java","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java?ref=6dae3c089c51b4aa2767095ec19fed5c20bb5f49","patch":"@@ -34,8 +34,9 @@\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnit;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.provisioning.api.data.JEXLMappingItemTransformer;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n-import org.apache.syncope.core.provisioning.java.data.JEXLMappingItemTransformer;\n+import org.apache.syncope.core.provisioning.java.data.JEXLMappingItemTransformerImpl;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.identityconnectors.framework.common.objects.Name;\n@@ -171,21 +172,15 @@ public static List<MappingItemTransformer> getMappingItemTransformers(final Mapp\n         List<MappingItemTransformer> result = new ArrayList<>();\n \n         // First consider the JEXL transformation expressions\n-        JEXLMappingItemTransformer jexlTransformer = null;\n         if (StringUtils.isNotBlank(mappingItem.getPropagationJEXLTransformer())\n                 || StringUtils.isNotBlank(mappingItem.getPullJEXLTransformer())) {\n \n-            try {\n-                jexlTransformer = (JEXLMappingItemTransformer) ApplicationContextProvider.getBeanFactory().\n-                        createBean(JEXLMappingItemTransformer.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+            JEXLMappingItemTransformer jexlTransformer =\n+                    (JEXLMappingItemTransformer) ApplicationContextProvider.getBeanFactory().\n+                    createBean(JEXLMappingItemTransformerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n \n-                jexlTransformer.setPropagationJEXL(mappingItem.getPropagationJEXLTransformer());\n-                jexlTransformer.setPullJEXL(mappingItem.getPullJEXLTransformer());\n-            } catch (Exception e) {\n-                LOG.error(\"Could not instantiate {}, ignoring...\", JEXLMappingItemTransformer.class.getName(), e);\n-            }\n-        }\n-        if (jexlTransformer != null) {\n+            jexlTransformer.setPropagationJEXL(mappingItem.getPropagationJEXLTransformer());\n+            jexlTransformer.setPullJEXL(mappingItem.getPullJEXLTransformer());\n             result.add(jexlTransformer);\n         }\n "},{"sha":"8b1afb7ce0604c86f218e7430ae1981c0d6e0abf","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6dae3c089c51b4aa2767095ec19fed5c20bb5f49/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=6dae3c089c51b4aa2767095ec19fed5c20bb5f49","patch":"@@ -338,7 +338,7 @@ under the License.\n \n     <jackson.version>2.7.5</jackson.version>\n \n-    <spring.version>4.2.6.RELEASE</spring.version>\n+    <spring.version>4.3.0.RELEASE</spring.version>\n     <spring-security.version>4.1.0.RELEASE</spring-security.version>\n \n     <openjpa.version>2.4.1</openjpa.version>"}]}