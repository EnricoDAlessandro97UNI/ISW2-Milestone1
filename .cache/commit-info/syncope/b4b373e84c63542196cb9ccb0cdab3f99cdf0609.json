{"sha":"b4b373e84c63542196cb9ccb0cdab3f99cdf0609","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI0YjM3M2U4NGM2MzU0MjE5NmNiOWNjYjBjZGFiM2Y5OWNkZjA2MDk=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2019-10-10T10:11:27Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@users.noreply.github.com","date":"2019-10-10T10:11:27Z"},"message":"SYNCOPE-1465: make sure task objects track the executor. (#127)","tree":{"sha":"ef51f8c0160a5959bc51a2e2860d73f8b3d45494","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ef51f8c0160a5959bc51a2e2860d73f8b3d45494"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b4b373e84c63542196cb9ccb0cdab3f99cdf0609","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4b373e84c63542196cb9ccb0cdab3f99cdf0609","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b4b373e84c63542196cb9ccb0cdab3f99cdf0609","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2bff895d5ecdcf2f1beab202b4ee818243faf654","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2bff895d5ecdcf2f1beab202b4ee818243faf654","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2bff895d5ecdcf2f1beab202b4ee818243faf654"}],"stats":{"total":27,"additions":22,"deletions":5},"files":[{"sha":"6dd9d35ae3baac391bb42227178147f3766ca95d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/TaskTO.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java?ref=b4b373e84c63542196cb9ccb0cdab3f99cdf0609","patch":"@@ -54,6 +54,8 @@ public abstract class TaskTO extends AbstractStartEndBean implements EntityTO {\n \n     private String latestExecStatus;\n \n+    private String lastExecutor;\n+\n     private final List<ExecTO> executions = new ArrayList<>();\n \n     @Schema(name = \"@class\", required = true)\n@@ -84,6 +86,15 @@ public void setLatestExecStatus(final String latestExecStatus) {\n         this.latestExecStatus = latestExecStatus;\n     }\n \n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n+    public String getLastExecutor() {\n+        return lastExecutor;\n+    }\n+\n+    public void setLastExecutor(final String lastExecutor) {\n+        this.lastExecutor = lastExecutor;\n+    }\n+    \n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"executions\")\n     @XmlElement(name = \"execution\")\n@@ -100,6 +111,7 @@ public int hashCode() {\n                 append(discriminator).\n                 append(executions).\n                 append(latestExecStatus).\n+                append(lastExecutor).\n                 build();\n     }\n \n@@ -121,6 +133,7 @@ public boolean equals(final Object obj) {\n                 append(discriminator, other.discriminator).\n                 append(executions, other.executions).\n                 append(latestExecStatus, other.latestExecStatus).\n+                append(lastExecutor, other.lastExecutor).\n                 build();\n     }\n }"},{"sha":"16b01229a46d295567648ae7505a7c1e109c206c","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=b4b373e84c63542196cb9ccb0cdab3f99cdf0609","patch":"@@ -294,6 +294,7 @@ public ExecTO execute(final String key, final Date startAt, final boolean dryRun\n                 result.setRefKey(task.getKey());\n                 result.setRefDesc(binder.buildRefDesc(task));\n                 result.setStart(new Date());\n+                result.setExecutor(executor);\n                 result.setStatus(\"JOB_FIRED\");\n                 result.setMessage(\"Job fired; waiting for results...\");\n                 break;"},{"sha":"7463ef9869230d003af45057b634ff2df3f5a2e9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=b4b373e84c63542196cb9ccb0cdab3f99cdf0609","patch":"@@ -312,7 +312,8 @@ public ExecTO getExecTO(final TaskExec execution) {\n         execTO.setMessage(execution.getMessage());\n         execTO.setStart(execution.getStart());\n         execTO.setEnd(execution.getEnd());\n-\n+        execTO.setExecutor(execution.getExecutor());\n+        \n         if (execution.getTask() != null && execution.getTask().getKey() != null) {\n             execTO.setJobType(JobType.TASK);\n             execTO.setRefKey(execution.getTask().getKey());\n@@ -330,7 +331,7 @@ private void fill(final SchedTaskTO schedTaskTO, final SchedTask schedTask) {\n         schedTaskTO.setActive(schedTask.isActive());\n \n         schedTaskTO.setLastExec(schedTaskTO.getStart());\n-\n+       \n         String triggerName = JobNamer.getTriggerName(JobNamer.getJobKey(schedTask).getName());\n         try {\n             Trigger trigger = scheduler.getScheduler().getTrigger(new TriggerKey(triggerName, Scheduler.DEFAULT_GROUP));\n@@ -371,6 +372,7 @@ public <T extends TaskTO> T getTaskTO(final Task task, final TaskUtils taskUtils\n             taskTO.setLatestExecStatus(latestExec.getStatus());\n             taskTO.setStart(latestExec.getStart());\n             taskTO.setEnd(latestExec.getEnd());\n+            taskTO.setLastExecutor(latestExec.getExecutor());\n         }\n \n         if (details) {"},{"sha":"aceab143967a367d1a540d81b12e884f512bd6ab","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AbstractTaskITCase.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4b373e84c63542196cb9ccb0cdab3f99cdf0609/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java?ref=b4b373e84c63542196cb9ccb0cdab3f99cdf0609","patch":"@@ -126,10 +126,11 @@ protected static ExecTO execTask(\n         assertNotNull(taskTO.getExecutions());\n \n         int preSyncSize = taskTO.getExecutions().size();\n-        ExecTO execution = taskService.execute(\n-                new ExecuteQuery.Builder().key(taskTO.getKey()).dryRun(dryRun).build());\n+        ExecuteQuery query = new ExecuteQuery.Builder().key(taskTO.getKey()).dryRun(dryRun).build();\n+        ExecTO execution = taskService.execute(query);\n         assertEquals(initialStatus, execution.getStatus());\n-\n+        assertNotNull(execution.getExecutor());\n+        \n         int i = 0;\n \n         // wait for completion (executions incremented)"}]}