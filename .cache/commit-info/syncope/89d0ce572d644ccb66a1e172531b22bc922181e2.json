{"sha":"89d0ce572d644ccb66a1e172531b22bc922181e2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg5ZDBjZTU3MmQ2NDRjY2I2NmExZTE3MjUzMWIyMmJjOTIyMTgxZTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-02T17:12:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-02T17:12:47Z"},"message":"[SYNCOPE-156] All tables feature the reload button","tree":{"sha":"022f80c5b286e482b500ba2e41afce0ee9b39f30","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/022f80c5b286e482b500ba2e41afce0ee9b39f30"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/89d0ce572d644ccb66a1e172531b22bc922181e2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89d0ce572d644ccb66a1e172531b22bc922181e2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/89d0ce572d644ccb66a1e172531b22bc922181e2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89d0ce572d644ccb66a1e172531b22bc922181e2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"03b743992215a24fe131fe4e00f2171911e55f1d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03b743992215a24fe131fe4e00f2171911e55f1d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03b743992215a24fe131fe4e00f2171911e55f1d"}],"stats":{"total":722,"additions":371,"deletions":351},"files":[{"sha":"664315bffd5241eb431ed61eb31481630481bda2","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Types.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -23,7 +23,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.panels.AnyTypeClassesPanel;\n import org.apache.syncope.client.console.panels.AnyTypesPanel;\n-import org.apache.syncope.client.console.panels.RelationshipTypePanel;\n+import org.apache.syncope.client.console.panels.RelationshipTypesPanel;\n import org.apache.syncope.client.console.panels.SchemasPanel;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n@@ -62,7 +62,7 @@ private List<ITab> buildTabList() {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new RelationshipTypePanel(panelId, getPageReference());\n+                return new RelationshipTypesPanel(panelId, getPageReference());\n             }\n         });\n "},{"sha":"1f88ea430604894dde01199f4810999fffd0da40","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":50,"deletions":38,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n@@ -32,6 +31,8 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -44,12 +45,9 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -126,6 +124,9 @@ protected List<IColumn<AnyTypeClassTO, String>> getColumns() {\n \n                     columns.add(new PropertyColumn<AnyTypeClassTO, String>(\n                             new ResourceModel(field.getName()), field.getName()));\n+                } else if (field.getType().equals(boolean.class) || field.getType().equals(Boolean.class)) {\n+                    columns.add(new BooleanPropertyColumn<AnyTypeClassTO>(\n+                            new ResourceModel(field.getName()), field.getName(), field.getName()));\n                 } else {\n                     columns.add(new PropertyColumn<AnyTypeClassTO, String>(\n                             new ResourceModel(field.getName()), field.getName(), field.getName()) {\n@@ -147,57 +148,68 @@ public String getCssClass() {\n             }\n         }\n \n-        columns.add(new AbstractColumn<AnyTypeClassTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new ActionColumn<AnyTypeClassTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = 906457126287899096L;\n \n             @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n+            public ActionLinksPanel<AnyTypeClassTO> getActions(\n+                    final String componentId, final IModel<AnyTypeClassTO> model) {\n \n-            @Override\n-            public void populateItem(final Item<ICellPopulator<AnyTypeClassTO>> item, final String componentId,\n-                    final IModel<AnyTypeClassTO> model) {\n+                ActionLinksPanel<AnyTypeClassTO> panel = ActionLinksPanel.<AnyTypeClassTO>builder(pageRef).\n+                        add(new ActionLink<AnyTypeClassTO>() {\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.\n-                        getPageReference());\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+                            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n+                                send(AnyTypeClassesPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPECLASS_UPDATE).\n+                        add(new ActionLink<AnyTypeClassTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n+                                try {\n+                                    SyncopeConsoleSession.get().\n+                                            getService(AnyTypeClassService.class).delete(model.getObject().getKey());\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (Exception e) {\n+                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                }\n+                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE).\n+                        build(componentId);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        send(AnyTypeClassesPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPECLASS_UPDATE).addWithRoles(\n-                        new ActionLink<Serializable>() {\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<AnyTypeClassTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<AnyTypeClassTO> panel =\n+                        ActionLinksPanel.builder(page.getPageReference());\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                return panel.add(new ActionLink<AnyTypeClassTO>() {\n+\n+                    private static final long serialVersionUID = -1140254463922516111L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        try {\n-                            SyncopeConsoleSession.get().\n-                                    getService(AnyTypeClassService.class).delete(model.getObject().getKey());\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                    public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n+                        if (target != null) {\n                             target.add(container);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While deleting AnyTypeClassTO\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         }\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE);\n-\n-                item.add(actionLinks.build(componentId));\n+                }, ActionLink.ActionType.RELOAD).build(componentId);\n             }\n         });\n \n         return columns;\n-\n     }\n \n     protected final class AnyTypeClassProvider extends SearchableDataProvider<AnyTypeClassTO> {"},{"sha":"43656102f09e6326f6377fbba5af7c2871f3d81f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":50,"deletions":38,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n@@ -33,6 +32,8 @@\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.AnyTypesPanel.AnyTypeProvider;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -45,12 +46,9 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -127,6 +125,9 @@ protected List<IColumn<AnyTypeTO, String>> getColumns() {\n \n                     columns.add(new PropertyColumn<AnyTypeTO, String>(\n                             new ResourceModel(field.getName()), field.getName()));\n+                } else if (field.getType().equals(boolean.class) || field.getType().equals(Boolean.class)) {\n+                    columns.add(new BooleanPropertyColumn<AnyTypeTO>(\n+                            new ResourceModel(field.getName()), field.getName(), field.getName()));\n                 } else {\n                     columns.add(new PropertyColumn<AnyTypeTO, String>(\n                             new ResourceModel(field.getName()), field.getName(), field.getName()) {\n@@ -148,57 +149,68 @@ public String getCssClass() {\n             }\n         }\n \n-        columns.add(new AbstractColumn<AnyTypeTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new ActionColumn<AnyTypeTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = 906457126287899096L;\n \n             @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n+            public ActionLinksPanel<AnyTypeTO> getActions(\n+                    final String componentId, final IModel<AnyTypeTO> model) {\n \n-            @Override\n-            public void populateItem(final Item<ICellPopulator<AnyTypeTO>> item, final String componentId,\n-                    final IModel<AnyTypeTO> model) {\n+                ActionLinksPanel<AnyTypeTO> panel = ActionLinksPanel.<AnyTypeTO>builder(pageRef).\n+                        add(new ActionLink<AnyTypeTO>() {\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.\n-                        getPageReference());\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+                            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n+                                send(AnyTypesPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPE_UPDATE).\n+                        add(new ActionLink<AnyTypeTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n+                                try {\n+                                    SyncopeConsoleSession.get().\n+                                            getService(AnyTypeService.class).delete(model.getObject().getKey());\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (Exception e) {\n+                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                }\n+                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPE_DELETE).\n+                        build(componentId);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        send(AnyTypesPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPE_UPDATE).addWithRoles(\n-                        new ActionLink<Serializable>() {\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<AnyTypeTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<AnyTypeTO> panel =\n+                        ActionLinksPanel.builder(page.getPageReference());\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                return panel.add(new ActionLink<AnyTypeTO>() {\n+\n+                    private static final long serialVersionUID = -1140254463922516111L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        try {\n-                            SyncopeConsoleSession.get().\n-                                    getService(AnyTypeService.class).delete(model.getObject().getKey());\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                    public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n+                        if (target != null) {\n                             target.add(container);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While deleting AnyTypeTO\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         }\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPE_DELETE);\n-\n-                item.add(actionLinks.build(componentId));\n+                }, ActionLink.ActionType.RELOAD).build(componentId);\n             }\n         });\n \n         return columns;\n-\n     }\n \n     protected final class AnyTypeProvider extends SearchableDataProvider<AnyTypeTO> {"},{"sha":"0eec9ceba212ca7481701106a50d6404bf113801","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorDetailsPanel.java","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -37,20 +37,13 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n /**\n  * Modal window with Connector form.\n  */\n public class ConnectorDetailsPanel extends Panel {\n \n-    private static final long serialVersionUID = -2025535531121434050L;\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(ConnectorDetailsPanel.class);\n+    private static final long serialVersionUID = -2435937897614232137L;\n \n     public ConnectorDetailsPanel(\n             final String id, final IModel<ConnInstanceTO> model, final List<ConnBundleTO> bundles) {"},{"sha":"060160ee01e0f57009ef0d187f9bd4340044b801","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardPanel.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -58,10 +58,18 @@ protected void onCancelInternal(final ParametersForm modelObject) {\n     protected Serializable onApplyInternal(final ParametersForm modelObject) {\n         final PlainSchemaTO plainSchemaTO = modelObject.getPlainSchemaTO();\n         plainSchemaTO.setKey(modelObject.getAttrTO().getSchema());\n-        \n-        SyncopeConsoleSession.get().getService(SchemaService.class).create(\n-                SchemaType.PLAIN, plainSchemaTO);\n-        SyncopeConsoleSession.get().getService(ConfigurationService.class).set(modelObject.getAttrTO());\n+\n+        SyncopeConsoleSession.get().getService(SchemaService.class).\n+                create(SchemaType.PLAIN, plainSchemaTO);\n+        try {\n+            SyncopeConsoleSession.get().getService(ConfigurationService.class).set(modelObject.getAttrTO());\n+        } catch (Exception e) {\n+            LOG.error(\"While setting {}, removing {}\", modelObject.getAttrTO(), plainSchemaTO, e);\n+            SyncopeConsoleSession.get().getService(SchemaService.class).\n+                    delete(SchemaType.PLAIN, plainSchemaTO.getKey());\n+\n+            throw e;\n+        }\n         return modelObject.getAttrTO();\n     }\n "},{"sha":"a826ede3a68a4108b6f79d9f6f872bd518bfb462","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersPanel.java","status":"modified","additions":41,"deletions":68,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -19,22 +19,18 @@\n package org.apache.syncope.client.console.panels;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n-import java.io.Serializable;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.ParametersPanel.ParametersProvider;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -49,12 +45,9 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -140,91 +133,71 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n     protected List<IColumn<AttrTO, String>> getColumns() {\n         final List<IColumn<AttrTO, String>> columns = new ArrayList<>();\n \n-        for (Field field : AttrTO.class.getDeclaredFields()) {\n-            if (field != null && !Modifier.isStatic(field.getModifiers())) {\n-                final String fieldName = field.getName();\n-                if (field.getType().isArray()\n-                        || Collection.class.isAssignableFrom(field.getType())\n-                        || Map.class.isAssignableFrom(field.getType())) {\n-\n-                    columns.add(new PropertyColumn<AttrTO, String>(\n-                            new ResourceModel(field.getName()), field.getName()));\n-                } else {\n-                    columns.add(new PropertyColumn<AttrTO, String>(\n-                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n-\n-                        private static final long serialVersionUID = -6902459669035442212L;\n-\n-                        @Override\n-                        public String getCssClass() {\n-                            String css = super.getCssClass();\n-                            if (\"key\".equals(fieldName)) {\n-                                css = StringUtils.isBlank(css)\n-                                        ? \"col-xs-1\"\n-                                        : css + \" col-xs-1\";\n-                            }\n-                            return css;\n-                        }\n-                    });\n-                }\n-            }\n-        }\n+        columns.add(new PropertyColumn<AttrTO, String>(new ResourceModel(\"schema\"), \"schema\", \"schema\"));\n+        columns.add(new PropertyColumn<AttrTO, String>(new ResourceModel(\"values\"), \"values\"));\n \n-        columns.add(new AbstractColumn<AttrTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new ActionColumn<AttrTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+            private static final long serialVersionUID = 906457126287899096L;\n \n             @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<AttrTO>> item,\n-                    final String componentId,\n-                    final IModel<AttrTO> model) {\n-\n-                final AttrTO attrTO = model.getObject();\n+            public ActionLinksPanel<AttrTO> getActions(final String componentId, final IModel<AttrTO> model) {\n+                ActionLinksPanel<AttrTO> panel = ActionLinksPanel.<AttrTO>builder(pageRef).\n+                        add(new ActionLink<AttrTO>() {\n \n-                ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.getPageReference());\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks.\n-                        addWithRoles(new ActionLink<Serializable>() {\n-\n-                            private static final long serialVersionUID = 3257738274365467945L;\n+                            private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                            public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n                                 target.add(modalDetails);\n                                 modalDetails.addSumbitButton();\n                                 modalDetails.header(new StringResourceModel(\"any.edit\"));\n-                                modalDetails.setContent(new ParametersEditModalPanel(modalDetails, attrTO, pageRef));\n+                                modalDetails.setContent(\n+                                        new ParametersEditModalPanel(modalDetails, model.getObject(), pageRef));\n                                 modalDetails.show(true);\n                             }\n                         }, ActionLink.ActionType.EDIT, StandardEntitlement.CONFIGURATION_SET).\n-                        addWithRoles(new ActionLink<Serializable>() {\n+                        add(new ActionLink<AttrTO>() {\n \n-                            private static final long serialVersionUID = 3257738274365467945L;\n+                            private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                            public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n                                 try {\n-                                    SyncopeConsoleSession.get().getService(\n-                                            ConfigurationService.class).delete(attrTO.getSchema());\n-                                    SyncopeConsoleSession.get().getService(\n-                                            SchemaService.class).delete(SchemaType.PLAIN, attrTO.getSchema());\n+                                    SyncopeConsoleSession.get().getService(ConfigurationService.class).\n+                                            delete(model.getObject().getSchema());\n+                                    SyncopeConsoleSession.get().getService(SchemaService.class).\n+                                            delete(SchemaType.PLAIN, model.getObject().getSchema());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (Exception e) {\n-                                    LOG.error(\"While deleting AttrTO\", e);\n+                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n                                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.CONFIGURATION_DELETE);\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.CONFIGURATION_DELETE).\n+                        build(componentId);\n+\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<AttrTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<AttrTO> panel =\n+                        ActionLinksPanel.builder(page.getPageReference());\n+\n+                return panel.add(new ActionLink<AttrTO>() {\n \n-                item.add(actionLinks.build(componentId));\n+                    private static final long serialVersionUID = -1140254463922516111L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD).build(componentId);\n             }\n         });\n "},{"sha":"01b565ec2c97a58bda0d6fe0456bc5c4ed4b29aa","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"renamed","additions":76,"deletions":60,"changes":136,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -18,20 +18,22 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.panels.RelationshipTypePanel.RelationshipTypeProvider;\n+import org.apache.syncope.client.console.panels.RelationshipTypesPanel.RelationshipTypeProvider;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -44,21 +46,18 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public class RelationshipTypePanel extends AbstractTypesPanel<RelationshipTypeTO, RelationshipTypeProvider> {\n+public class RelationshipTypesPanel extends AbstractTypesPanel<RelationshipTypeTO, RelationshipTypeProvider> {\n \n     private static final long serialVersionUID = -3731778000138547357L;\n \n-    public RelationshipTypePanel(final String id, final PageReference pageRef) {\n+    public RelationshipTypesPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef);\n         disableCheckBoxes();\n \n@@ -121,83 +120,100 @@ protected List<IColumn<RelationshipTypeTO, String>> getColumns() {\n         final List<IColumn<RelationshipTypeTO, String>> columns = new ArrayList<>();\n \n         for (Field field : RelationshipTypeTO.class.getDeclaredFields()) {\n-\n             if (field != null && !Modifier.isStatic(field.getModifiers())) {\n                 final String fieldName = field.getName();\n-\n-                final IColumn<RelationshipTypeTO, String> column = new PropertyColumn<RelationshipTypeTO, String>(\n-                        new ResourceModel(field.getName()), field.getName(), field.getName()) {\n-\n-                    private static final long serialVersionUID = 3282547854226892169L;\n-\n-                    @Override\n-                    public String getCssClass() {\n-                        String css = super.getCssClass();\n-                        if (\"key\".equals(fieldName)) {\n-                            css = StringUtils.isBlank(css)\n-                                    ? \"col-xs-1\"\n-                                    : css + \" col-xs-1\";\n+                if (field.getType().isArray()\n+                        || Collection.class.isAssignableFrom(field.getType())\n+                        || Map.class.isAssignableFrom(field.getType())) {\n+\n+                    columns.add(new PropertyColumn<RelationshipTypeTO, String>(\n+                            new ResourceModel(field.getName()), field.getName()));\n+                } else if (field.getType().equals(boolean.class) || field.getType().equals(Boolean.class)) {\n+                    columns.add(new BooleanPropertyColumn<RelationshipTypeTO>(\n+                            new ResourceModel(field.getName()), field.getName(), field.getName()));\n+                } else {\n+                    columns.add(new PropertyColumn<RelationshipTypeTO, String>(\n+                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n+\n+                        private static final long serialVersionUID = -6902459669035442212L;\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            String css = super.getCssClass();\n+                            if (\"key\".equals(fieldName)) {\n+                                css = StringUtils.isBlank(css)\n+                                        ? \"col-xs-1\"\n+                                        : css + \" col-xs-1\";\n+                            }\n+                            return css;\n                         }\n-                        return css;\n-                    }\n-                };\n-                columns.add(column);\n-\n+                    });\n+                }\n             }\n         }\n \n-        columns.add(new AbstractColumn<RelationshipTypeTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new ActionColumn<RelationshipTypeTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = 906457126287899096L;\n \n             @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n+            public ActionLinksPanel<RelationshipTypeTO> getActions(\n+                    final String componentId, final IModel<RelationshipTypeTO> model) {\n \n-            @Override\n-            public void populateItem(final Item<ICellPopulator<RelationshipTypeTO>> item, final String componentId,\n-                    final IModel<RelationshipTypeTO> model) {\n+                ActionLinksPanel<RelationshipTypeTO> panel = ActionLinksPanel.<RelationshipTypeTO>builder(pageRef).\n+                        add(new ActionLink<RelationshipTypeTO>() {\n \n-                final RelationshipTypeTO relationshipTypeTO = model.getObject();\n+                            private static final long serialVersionUID = -3722207913631435501L;\n \n-                ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.getPageReference());\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n+                                send(RelationshipTypesPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.RELATIONSHIPTYPE_UPDATE).\n+                        add(new ActionLink<RelationshipTypeTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n+                                try {\n+                                    SyncopeConsoleSession.get().getService(\n+                                            RelationshipTypeService.class).delete(model.getObject().getKey());\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (Exception e) {\n+                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                }\n+                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.RELATIONSHIPTYPE_DELETE).\n+                        build(componentId);\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                return panel;\n+            }\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        send(RelationshipTypePanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.RELATIONSHIPTYPE_UPDATE).addWithRoles(\n-                        new ActionLink<Serializable>() {\n+            @Override\n+            public ActionLinksPanel<RelationshipTypeTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<RelationshipTypeTO> panel =\n+                        ActionLinksPanel.builder(page.getPageReference());\n+\n+                return panel.add(new ActionLink<RelationshipTypeTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                    private static final long serialVersionUID = -1140254463922516111L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        try {\n-                            SyncopeConsoleSession.get().getService(\n-                                    RelationshipTypeService.class).delete(relationshipTypeTO.getKey());\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                    public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n+                        if (target != null) {\n                             target.add(container);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While deleting RelationshipType\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         }\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.RELATIONSHIPTYPE_DELETE);\n-\n-                item.add(actionLinks.build(componentId));\n+                }, ActionLink.ActionType.RELOAD).build(componentId);\n             }\n         });\n \n         return columns;\n-\n     }\n \n     protected final class RelationshipTypeProvider extends SearchableDataProvider<RelationshipTypeTO> {","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypePanel.java"},{"sha":"f611442525929032863d1471046a93b21342c300","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":5,"deletions":12,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.wizards.any.AnnotatedBeanPanel;\n import java.util.Arrays;\n import java.util.List;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n+import org.apache.syncope.client.console.wizards.any.AnnotatedBeanPanel;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -34,18 +34,11 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class ResourceDetailsPanel extends Panel {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(ResourceDetailsPanel.class);\n-\n     public ResourceDetailsPanel(\n             final String id,\n             final IModel<ResourceTO> model,\n@@ -86,10 +79,10 @@ public ResourceDetailsPanel(\n \n         container.add(new MultiFieldPanel.Builder<>(\n                 new PropertyModel<List<String>>(model, \"propagationActionsClassNames\")).build(\n-                        \"actionsClasses\",\n-                        \"actionsClasses\",\n-                        new AjaxDropDownChoicePanel<>(\"panel\", \"panel\", new Model<String>())\n-                        .setChoices(actionClassNames).setNullValid(true).setRequired(true)));\n+                \"actionsClasses\",\n+                \"actionsClasses\",\n+                new AjaxDropDownChoicePanel<>(\"panel\", \"panel\", new Model<String>())\n+                .setChoices(actionClassNames).setNullValid(true).setRequired(true)));\n \n         container.add(new AjaxDropDownChoicePanel<>(\n                 \"createTraceLevel\","},{"sha":"1370bbe5c0eee691300029ed0353e8e783a1d21f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":57,"deletions":51,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -37,6 +36,7 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.SchemaTypePanel.SchemaProvider;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -53,13 +53,10 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -182,67 +179,76 @@ public String getCssClass() {\n             }\n         }\n \n-        columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new ActionColumn<AbstractSchemaTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = 906457126287899096L;\n \n             @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n+            public ActionLinksPanel<AbstractSchemaTO> getActions(\n+                    final String componentId, final IModel<AbstractSchemaTO> model) {\n \n-            @Override\n-            public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item, final String componentId,\n-                    final IModel<AbstractSchemaTO> model) {\n+                ActionLinksPanel<AbstractSchemaTO> panel = ActionLinksPanel.<AbstractSchemaTO>builder(pageRef).\n+                        add(new ActionLink<AbstractSchemaTO>() {\n \n-                final AbstractSchemaTO schemaTO = model.getObject();\n+                            private static final long serialVersionUID = -3722207913631435501L;\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.\n-                        getPageReference());\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignore) {\n+                                send(SchemaTypePanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.SCHEMA_UPDATE).\n+                        add(new ActionLink<AbstractSchemaTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignore) {\n+                                try {\n+                                    switch (schemaType) {\n+                                        case DERIVED:\n+                                            schemaRestClient.deleteDerSchema(model.getObject().getKey());\n+                                            break;\n+\n+                                        case VIRTUAL:\n+                                            schemaRestClient.deleteVirSchema(model.getObject().getKey());\n+                                            break;\n+\n+                                        default:\n+                                            schemaRestClient.deletePlainSchema(model.getObject().getKey());\n+                                            break;\n+                                    }\n+\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (Exception e) {\n+                                    LOG.error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                }\n+                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.SCHEMA_DELETE).\n+                        build(componentId);\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                return panel;\n+            }\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        send(SchemaTypePanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.SCHEMA_UPDATE).addWithRoles(\n-                        new ActionLink<Serializable>() {\n+            @Override\n+            public ActionLinksPanel<AbstractSchemaTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<AbstractSchemaTO> panel =\n+                        ActionLinksPanel.builder(page.getPageReference());\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                return panel.add(new ActionLink<AbstractSchemaTO>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        try {\n-                            switch (schemaType) {\n-                                case DERIVED:\n-                                    schemaRestClient.deleteDerSchema(schemaTO.getKey());\n-                                    break;\n-\n-                                case VIRTUAL:\n-                                    schemaRestClient.deleteVirSchema(schemaTO.getKey());\n-                                    break;\n-\n-                                default:\n-                                    schemaRestClient.deletePlainSchema(schemaTO.getKey());\n-                                    break;\n-                            }\n+                    private static final long serialVersionUID = -1140254463922516111L;\n \n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignore) {\n+                        if (target != null) {\n                             target.add(container);\n-                        } catch (Exception e) {\n-                            LOG.error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         }\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.SCHEMA_DELETE);\n-\n-                item.add(actionLinks.build(componentId));\n+                }, ActionLink.ActionType.RELOAD).build(componentId);\n             }\n         });\n "},{"sha":"487ff940a0793839ff0edb9b6753464b4b3606e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":33,"deletions":26,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.panels;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n-import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n@@ -35,6 +34,7 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel.SecurityQuestionsProvider;\n import org.apache.syncope.client.console.rest.SecurityQuestionRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -48,11 +48,8 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -149,58 +146,68 @@ public String getCssClass() {\n             }\n         }\n \n-        columns.add(new AbstractColumn<SecurityQuestionTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new ActionColumn<SecurityQuestionTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = -8089193528195091515L;\n \n             @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n-\n-            @Override\n-            public void populateItem(final Item<ICellPopulator<SecurityQuestionTO>> item, final String componentId,\n-                    final IModel<SecurityQuestionTO> model) {\n+            public ActionLinksPanel<SecurityQuestionTO> getActions(\n+                    final String componentId, final IModel<SecurityQuestionTO> model) {\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.\n-                        getPageReference());\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks\n-                        .addWithRoles(new ActionLink<Serializable>() {\n+                ActionLinksPanel<SecurityQuestionTO> panel = ActionLinksPanel.<SecurityQuestionTO>builder(pageRef).\n+                        add(new ActionLink<SecurityQuestionTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                            public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n                                 send(SecurityQuestionsPanel.this, Broadcast.EXACT,\n                                         new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n                             }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.SECURITY_QUESTION_UPDATE)\n-                        .addWithRoles(new ActionLink<Serializable>() {\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.SECURITY_QUESTION_UPDATE).\n+                        add(new ActionLink<SecurityQuestionTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                            public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n                                 try {\n                                     SyncopeConsoleSession.get().getService(\n                                             SecurityQuestionService.class).delete(model.getObject().getKey());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (Exception e) {\n-                                    LOG.error(\"While deleting SecutiryQuestionTO\", e);\n+                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n                                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.SECURITY_QUESTION_DELETE);\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE).\n+                        build(componentId);\n \n-                item.add(actionLinks.build(componentId));\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<SecurityQuestionTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<SecurityQuestionTO> panel =\n+                        ActionLinksPanel.builder(page.getPageReference());\n+\n+                return panel.add(new ActionLink<SecurityQuestionTO>() {\n+\n+                    private static final long serialVersionUID = -1140254463922516111L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD).build(componentId);\n             }\n         });\n \n         return columns;\n-\n     }\n \n     protected final class SecurityQuestionsProvider extends SearchableDataProvider<SecurityQuestionTO> {"},{"sha":"e976b16056e7580159f37d6fb737b7c725f49945","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/FilesystemResource.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -33,9 +33,6 @@ public class FilesystemResource extends AbstractResource {\n \n     private static final long serialVersionUID = -4791087117785935198L;\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(FilesystemResource.class);\n \n     private final String baseCtx;"},{"sha":"67d4d7bfeb93ba809bb68dede38c8aa3f58e50c6","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -45,7 +45,7 @@ public <T extends AnyTO> SchedTasks(final PageReference pageReference) {\n             protected void viewTask(final SchedTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n-                        new TaskExecutionDetails<SchedTaskTO>(taskTO, pageReference), target);\n+                        new TaskExecutionDetails<>(taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"3118157a300870dae85ffa9ba396297d05b422f1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionColumn.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -31,9 +31,6 @@\n \n     private static final long serialVersionUID = 7955560320949560725L;\n \n-    /**\n-     * Logger.\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(ActionColumn.class);\n \n     public ActionColumn(final IModel<String> displayModel) {\n@@ -55,5 +52,5 @@ public void populateItem(final Item<ICellPopulator<T>> item, final String compon\n         item.add(getActions(componentId, rowModel));\n     }\n \n-    public abstract ActionLinksPanel getActions(final String componentId, final IModel<T> rowModel);\n+    public abstract ActionLinksPanel<?> getActions(final String componentId, final IModel<T> rowModel);\n }"},{"sha":"ba2263ba43bf2c7b22e1a60970025fc5edbe805d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -31,19 +31,12 @@\n \n public abstract class AbstractFieldPanel<T> extends Panel {\n \n-    /**\n-     * Logger.\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractFieldPanel.class);\n \n     private static final long serialVersionUID = 5958017546318855690L;\n \n     private static final String LABEL = \"field-label\";\n \n-    private static final String EXTERNAL_ACTION = \"externalAction\";\n-\n-    private static final String EXTERNAL_ACTION_ICON = \"externalActionIcon\";\n-\n     protected boolean isRequiredLabelAdded = false;\n \n     protected String name;"},{"sha":"bfb194bf6e13dd00d634d0ee91b183fb3776bc1d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -52,10 +52,7 @@ public class StatusPanel extends Panel {\n \n     private static final long serialVersionUID = -4013796607157549641L;\n \n-    /**\n-     * Logger.\n-     */\n-    protected static final Logger LOG = LoggerFactory.getLogger(StatusPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(StatusPanel.class);\n \n     private final UserRestClient userRestClient = new UserRestClient();\n \n@@ -170,8 +167,8 @@ protected Component getValueComponent(final String key, final StatusBean bean) {\n \n             @Override\n             protected boolean statusCondition(final StatusBean bean) {\n-                final Pair<ConnObjectTO, ConnObjectTO> pair\n-                        = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n+                final Pair<ConnObjectTO, ConnObjectTO> pair =\n+                        getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n \n                 return pair != null && pair.getRight() != null;\n             }\n@@ -213,8 +210,8 @@ public class RemoteObjectPanel extends SecondLevel {\n         private static final long serialVersionUID = 4303365227411467563L;\n \n         public RemoteObjectPanel(final StatusBean bean, final List<Pair<ConnObjectTO, ConnObjectWrapper>> connObjects) {\n-            final Pair<ConnObjectTO, ConnObjectTO> res\n-                    = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n+            final Pair<ConnObjectTO, ConnObjectTO> res =\n+                    getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n             add(new ConnObjectPanel(\"remoteObject\", res == null ? null : res));\n         }\n     }"},{"sha":"66ad3afde422af2ce2bcde17109196a073f363a0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypesPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.properties?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypePanel.properties"},{"sha":"2882c374d603819b4eaa31a58e2b4a99bb6c8e75","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypesPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel_it.properties?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypePanel_it.properties"},{"sha":"f88432888d9323594881e51163df91808c0fa98c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypesPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel_pt_BR.properties?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypePanel_pt_BR.properties"},{"sha":"42cbfdaa9383283ef1b190094b05cf94f7ef6bc8","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -51,6 +51,7 @@\n import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.dao.MalformedPathException;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.identityconnectors.framework.common.exceptions.ConfigurationException;\n import org.identityconnectors.framework.common.exceptions.ConnectorException;\n@@ -230,6 +231,8 @@ private ResponseBuilder processInvalidEntityExceptions(final Exception ex) {\n         if (iee != null) {\n             ClientExceptionType exType = iee.getEntityClassSimpleName().endsWith(\"Policy\")\n                     ? ClientExceptionType.InvalidPolicy\n+                    : iee.getEntityClassSimpleName().equals(PlainAttr.class.getSimpleName())\n+                    ? ClientExceptionType.InvalidValues\n                     : ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\n \n             ResponseBuilder builder = Response.status(Response.Status.BAD_REQUEST);"},{"sha":"86fa45d59146dd66a70c4f4ee30e65416c4b0962","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesPanel.java","status":"modified","additions":32,"deletions":19,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.pages.CamelRoutes;\n import org.apache.syncope.client.console.panels.CamelRoutesPanel.CamelRoutesProvider;\n import org.apache.syncope.client.console.rest.CamelRoutesRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -44,12 +45,9 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -145,38 +143,53 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n     @Override\n     protected List<IColumn<CamelRouteTO, String>> getColumns() {\n         List<IColumn<CamelRouteTO, String>> columns = new ArrayList<>();\n+\n         columns.add(new PropertyColumn<CamelRouteTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n-        columns.add(new AbstractColumn<CamelRouteTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+        columns.add(new ActionColumn<CamelRouteTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 906457126287899096L;\n \n             @Override\n-            public String getCssClass() {\n-                return \"action\";\n+            public ActionLinksPanel<CamelRouteTO> getActions(\n+                    final String componentId, final IModel<CamelRouteTO> model) {\n+\n+                ActionLinksPanel<CamelRouteTO> panel = ActionLinksPanel.<CamelRouteTO>builder(pageRef).\n+                        add(new ActionLink<CamelRouteTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n+                                send(CamelRoutesPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, CamelEntitlement.ROUTE_UPDATE).\n+                        build(componentId);\n+\n+                return panel;\n             }\n \n             @Override\n-            public void populateItem(final Item<ICellPopulator<CamelRouteTO>> item, final String componentId,\n-                    final IModel<CamelRouteTO> model) {\n+            public ActionLinksPanel<CamelRouteTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<CamelRouteTO> panel =\n+                        ActionLinksPanel.builder(page.getPageReference());\n \n-                ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.getPageReference());\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+                return panel.add(new ActionLink<CamelRouteTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+                    private static final long serialVersionUID = -1140254463922516111L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        send(CamelRoutesPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n                     }\n-                }, ActionLink.ActionType.EDIT, CamelEntitlement.ROUTE_UPDATE);\n-                item.add(actionLinks.build(componentId));\n+                }, ActionLink.ActionType.RELOAD).build(componentId);\n             }\n         });\n \n         return columns;\n-\n     }\n \n     protected final class CamelRoutesProvider extends SearchableDataProvider<CamelRouteTO> {"},{"sha":"389a7be558fec57e7fded0c4c7aba8358bf90421","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d0ce572d644ccb66a1e172531b22bc922181e2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d0ce572d644ccb66a1e172531b22bc922181e2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=89d0ce572d644ccb66a1e172531b22bc922181e2","patch":"@@ -73,7 +73,7 @@ public void updateParameter() {\n \n         Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"token.expireTime\");\n         assertNotNull(result);\n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:5:cell:panelEdit:editLink\");\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n \n         FormTester formTester = wicketTester.newFormTester(\n                 \"body:content:parametersPanel:container:content:modalDetails:form\");\n@@ -112,7 +112,7 @@ public void deleteParameter() {\n \n         Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"deleteParam\");\n         assertNotNull(result);\n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:5:cell:panelDelete:deleteLink\");\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\");\n \n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n         wicketTester.cleanupFeedbackMessages();"}]}