{"sha":"d91e41e12e5fcb0fef9c10649fc09c568e944e74","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ5MWU0MWUxMmU1ZmNiMGZlZjljMTA2NDlmYzA5YzU2OGU5NDRlNzQ=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2017-08-11T09:48:13Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2017-08-11T09:51:14Z"},"message":"Revert \"[SYNCOPE-1190] Toggle menu header is now updated when elements get updated\"\n\nThis reverts commit 84a7b68e4f8a2ea9e3fd99f5b01266b16d99a3fd.","tree":{"sha":"04fafaf3ef487d20589e678128626f0bc7c0d2ab","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/04fafaf3ef487d20589e678128626f0bc7c0d2ab"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d91e41e12e5fcb0fef9c10649fc09c568e944e74","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d91e41e12e5fcb0fef9c10649fc09c568e944e74","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d91e41e12e5fcb0fef9c10649fc09c568e944e74","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d91e41e12e5fcb0fef9c10649fc09c568e944e74/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"8e73cd830305a5ed72fe3d57b225c2ed5a7a9280","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8e73cd830305a5ed72fe3d57b225c2ed5a7a9280","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8e73cd830305a5ed72fe3d57b225c2ed5a7a9280"}],"stats":{"total":216,"additions":64,"deletions":152},"files":[{"sha":"fef5be55b145241f8079499213d567a943683c82","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractLogsPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java?ref=d91e41e12e5fcb0fef9c10649fc09c568e944e74","patch":"@@ -74,7 +74,6 @@ protected Component getValueComponent(final String key, final LoggerTO loggerTO)\n \n                     loggerTOs.hideLabel();\n                     loggerTOs.setChoices(Arrays.asList(LoggerLevel.values()));\n-                    loggerTOs.setNullValid(false);\n                     loggerTOs.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                         private static final long serialVersionUID = -1107858522700306810L;"},{"sha":"a6390359671eaa70594a9e59d7984c364fdaf761","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsModalPanel.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java?ref=d91e41e12e5fcb0fef9c10649fc09c568e944e74","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.html.form.Form;\n \n public class SecurityQuestionsModalPanel extends AbstractModalPanel<SecurityQuestionTO> {\n@@ -63,11 +62,6 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             }\n \n             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-\n-            // [SYNCOPE-1190] - refresh toggle panel after update\n-            send(pageRef.getPage(), Broadcast.BREADTH,\n-                    new TogglePanel.ActionLinkToggleUpdateEventPayload<>(target, securityQuestionTO));\n-\n             modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating {}\", securityQuestionTO, e);"},{"sha":"62c2af4d9608c640f9f6d53f6f2af237d8f41640","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TogglePanel.java","status":"modified","additions":0,"deletions":105,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java?ref=d91e41e12e5fcb0fef9c10649fc09c568e944e74","patch":"@@ -21,37 +21,14 @@\n import java.io.Serializable;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.policies.PolicyRuleDirectoryPanel;\n-import org.apache.syncope.client.console.reports.ReportletDirectoryPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n-import org.apache.syncope.client.console.wizards.any.GroupWrapper;\n-import org.apache.syncope.client.console.wizards.any.UserWrapper;\n-import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n-import org.apache.syncope.common.lib.to.AccessTokenTO;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.AttrTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.to.ExecTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.apache.syncope.common.lib.to.ReportTO;\n-import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n-import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxEventBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.model.ResourceModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -175,86 +152,4 @@ public void toggle(final AjaxRequestTarget target, final boolean toggle) {\n             status = Status.INACTIVE;\n         }\n     }\n-\n-    protected String getHeader(final T modelObject) {\n-        final String headerValue;\n-        if (modelObject == null) {\n-            headerValue = new ResourceModel(\"actions\", StringUtils.EMPTY).getObject();\n-        } else if (modelObject instanceof UserTO) {\n-            headerValue = ((UserTO) modelObject).getUsername();\n-        } else if (modelObject instanceof GroupTO) {\n-            headerValue = ((GroupTO) modelObject).getName();\n-        } else if (modelObject instanceof UserWrapper) {\n-            headerValue = UserWrapper.class.cast(modelObject).getInnerObject().getUsername();\n-        } else if (modelObject instanceof GroupWrapper) {\n-            headerValue = GroupWrapper.class.cast(modelObject).getInnerObject().getName();\n-        } else if (modelObject instanceof AnyWrapper) {\n-            AnyTO anyWrapper = AnyWrapper.class.cast(modelObject).getInnerObject();\n-            if (anyWrapper instanceof AnyObjectTO) {\n-                headerValue = ((AnyObjectTO) anyWrapper).getName();\n-            } else {\n-                headerValue = new ResourceModel(\"actions\", StringUtils.EMPTY).getObject();\n-            }\n-        } else if (modelObject instanceof ConnInstanceTO) {\n-            headerValue = ConnInstanceTO.class.cast(modelObject).getDisplayName();\n-        } else if (modelObject instanceof ReportTO) {\n-            headerValue = ((ReportTO) modelObject).getName();\n-        } else if (modelObject instanceof AnyObjectTO) {\n-            headerValue = ((AnyObjectTO) modelObject).getName();\n-        } else if (modelObject instanceof AttrTO) {\n-            headerValue = ((AttrTO) modelObject).getSchema();\n-        } else if (modelObject instanceof AbstractPolicyTO) {\n-            headerValue = ((AbstractPolicyTO) modelObject).getDescription();\n-        } else if (modelObject instanceof SecurityQuestionTO) {\n-            headerValue = ((SecurityQuestionTO) modelObject).getContent();\n-        } else if (modelObject instanceof AccessTokenTO) {\n-            headerValue = ((AccessTokenTO) modelObject).getOwner();\n-        } else if (modelObject instanceof ExecTO) {\n-            headerValue = ((ExecTO) modelObject).getKey();\n-        } else if (modelObject instanceof WorkflowDefinitionTO) {\n-            headerValue = ((WorkflowDefinitionTO) modelObject).getName();\n-        } else if (modelObject instanceof SchedTaskTO) {\n-            headerValue = ((SchedTaskTO) modelObject).getName();\n-        } else if (modelObject instanceof WorkflowFormTO) {\n-            headerValue = ((WorkflowFormTO) modelObject).getKey();\n-        } else if (modelObject instanceof EntityTO) {\n-            headerValue = ((EntityTO) modelObject).getKey();\n-        } else if (modelObject instanceof StatusBean) {\n-            headerValue = ((StatusBean) modelObject).getResource();\n-        } else if (modelObject instanceof PolicyRuleDirectoryPanel.PolicyRuleWrapper) {\n-            headerValue = ((PolicyRuleDirectoryPanel.PolicyRuleWrapper) modelObject).getName();\n-        } else if (modelObject instanceof PolicyRuleDirectoryPanel.PolicyRuleWrapper) {\n-            headerValue = ((PolicyRuleDirectoryPanel.PolicyRuleWrapper) modelObject).getName();\n-        } else if (modelObject instanceof ReportletDirectoryPanel.ReportletWrapper) {\n-            headerValue = ((ReportletDirectoryPanel.ReportletWrapper) modelObject).getName();\n-        } else if (modelObject instanceof JobTO) {\n-            headerValue = ((JobTO) modelObject).getRefKey() == null\n-                    ? ((JobTO) modelObject).getRefDesc() : ((JobTO) modelObject).getRefKey();\n-        } else {\n-            headerValue = new ResourceModel(\"actions\", StringUtils.EMPTY).getObject();\n-        }\n-\n-        return headerValue;\n-    }\n-\n-    public static class ActionLinkToggleUpdateEventPayload<T> {\n-\n-        private final AjaxRequestTarget target;\n-\n-        private final T modelObj;\n-\n-        public ActionLinkToggleUpdateEventPayload(final AjaxRequestTarget target, final T modelObj) {\n-            this.target = target;\n-            this.modelObj = modelObj;\n-        }\n-\n-        public AjaxRequestTarget getTarget() {\n-            return target;\n-        }\n-\n-        public T getModelObj() {\n-            return modelObj;\n-        }\n-\n-    }\n }"},{"sha":"7507d0484d2da55526479b94a9547dd4f772baa9","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyModalPanelBuilder.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java?ref=d91e41e12e5fcb0fef9c10649fc09c568e944e74","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n@@ -46,7 +45,6 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -163,11 +161,6 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     restClient.updatePolicy(policyTO);\n                 }\n                 SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-\n-                // [SYNCOPE-1190] - refresh toggle panel after update\n-                send(pageRef.getPage(), Broadcast.BREADTH,\n-                        new TogglePanel.ActionLinkToggleUpdateEventPayload<>(target, policyTO));\n-\n                 Profile.this.modal.close(target);\n             } catch (Exception e) {\n                 LOG.error(\"While creating/updating policy\", e);"},{"sha":"606a32d4215903530136b1573b97c1e26ad3dde3","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=d91e41e12e5fcb0fef9c10649fc09c568e944e74","patch":"@@ -165,7 +165,7 @@ public void onClose(final AjaxRequestTarget target) {\n \n         body.add(new TopologyWebSocketBehavior());\n \n-        togglePanel = new TopologyTogglePanel<>(\"toggle\", getPageReference());\n+        togglePanel = new TopologyTogglePanel(\"toggle\", getPageReference());\n         body.add(togglePanel);\n \n         // -----------------------------------------"},{"sha":"8b6b1a5a684f85b6e34eec4286f4a8168cc251c5","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":1,"deletions":17,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=d91e41e12e5fcb0fef9c10649fc09c568e944e74","patch":"@@ -53,7 +53,6 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -64,7 +63,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class TopologyTogglePanel<T extends Serializable> extends TogglePanel<Serializable> {\n+public class TopologyTogglePanel extends TogglePanel<Serializable> {\n \n     private static final long serialVersionUID = -2025535531121434056L;\n \n@@ -649,19 +648,4 @@ public String getKey() {\n         }\n \n     }\n-\n-    @Override\n-    @SuppressWarnings(\"unchecked\")\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof ActionLinkToggleUpdateEventPayload) {\n-            String header = getHeader((T) ActionLinkToggleUpdateEventPayload.class.cast(event.\n-                    getPayload()).getModelObj());\n-            if (StringUtils.isNotBlank(header)) {\n-                setHeader(ActionLinkToggleUpdateEventPayload.class.cast(event.getPayload()).\n-                        getTarget(), StringUtils.abbreviate(header, 25));\n-            }\n-        }\n-\n-        super.onEvent(event);\n-    }\n }"},{"sha":"fb8ab83c25115ca39e051f0ffc05cc71976b2737","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksTogglePanel.java","status":"modified","additions":62,"deletions":10,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java?ref=d91e41e12e5fcb0fef9c10649fc09c568e944e74","patch":"@@ -22,13 +22,31 @@\n import java.io.Serializable;\n import java.util.UUID;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.panels.TogglePanel;\n+import org.apache.syncope.client.console.policies.PolicyRuleDirectoryPanel.PolicyRuleWrapper;\n+import org.apache.syncope.client.console.reports.ReportletDirectoryPanel.ReportletWrapper;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n+import org.apache.syncope.common.lib.to.AccessTokenTO;\n+import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.to.JobTO;\n+import org.apache.syncope.common.lib.to.SchedTaskTO;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n+import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.ResourceModel;\n \n public class ActionLinksTogglePanel<T extends Serializable> extends TogglePanel<Serializable> {\n \n@@ -51,8 +69,50 @@ public ActionLinksTogglePanel(final String id, final PageReference pageRef) {\n \n     public void toggleWithContent(\n             final AjaxRequestTarget target, final ActionsPanel<T> actionsPanel, final T modelObject) {\n-\n-        setHeader(target, StringUtils.abbreviate(getHeader(modelObject), 25));\n+        final String header;\n+        if (modelObject == null) {\n+            header = new ResourceModel(\"actions\", StringUtils.EMPTY).getObject();\n+        } else if (modelObject instanceof UserTO) {\n+            header = ((UserTO) modelObject).getUsername();\n+        } else if (modelObject instanceof GroupTO) {\n+            header = ((GroupTO) modelObject).getName();\n+        } else if (modelObject instanceof ReportTO) {\n+            header = ((ReportTO) modelObject).getName();\n+        } else if (modelObject instanceof AnyObjectTO) {\n+            header = ((AnyObjectTO) modelObject).getName();\n+        } else if (modelObject instanceof AttrTO) {\n+            header = ((AttrTO) modelObject).getSchema();\n+        } else if (modelObject instanceof AbstractPolicyTO) {\n+            header = ((AbstractPolicyTO) modelObject).getDescription();\n+        } else if (modelObject instanceof SecurityQuestionTO) {\n+            header = ((SecurityQuestionTO) modelObject).getContent();\n+        } else if (modelObject instanceof AccessTokenTO) {\n+            header = ((AccessTokenTO) modelObject).getOwner();\n+        } else if (modelObject instanceof ExecTO) {\n+            header = ((ExecTO) modelObject).getKey();\n+        } else if (modelObject instanceof WorkflowDefinitionTO) {\n+            header = ((WorkflowDefinitionTO) modelObject).getName();\n+        } else if (modelObject instanceof SchedTaskTO) {\n+            header = ((SchedTaskTO) modelObject).getName();\n+        } else if (modelObject instanceof WorkflowFormTO) {\n+            header = ((WorkflowFormTO) modelObject).getKey();\n+        } else if (modelObject instanceof EntityTO) {\n+            header = ((EntityTO) modelObject).getKey();\n+        } else if (modelObject instanceof StatusBean) {\n+            header = ((StatusBean) modelObject).getResource();\n+        } else if (modelObject instanceof PolicyRuleWrapper) {\n+            header = ((PolicyRuleWrapper) modelObject).getName();\n+        } else if (modelObject instanceof PolicyRuleWrapper) {\n+            header = ((PolicyRuleWrapper) modelObject).getName();\n+        } else if (modelObject instanceof ReportletWrapper) {\n+            header = ((ReportletWrapper) modelObject).getName();\n+        } else if (modelObject instanceof JobTO) {\n+            header = ((JobTO) modelObject).getRefKey() == null\n+                    ? ((JobTO) modelObject).getRefDesc() : ((JobTO) modelObject).getRefKey();\n+        } else {\n+            header = new ResourceModel(\"actions\", StringUtils.EMPTY).getObject();\n+        }\n+        setHeader(target, StringUtils.abbreviate(header, 25));\n \n         modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n@@ -79,17 +139,9 @@ private Fragment getEmptyFragment() {\n     }\n \n     @Override\n-    @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof ActionLinkToggleCloseEventPayload) {\n             close(ActionLinkToggleCloseEventPayload.class.cast(event.getPayload()).getTarget());\n-        } else if (event.getPayload() instanceof ActionLinkToggleUpdateEventPayload) {\n-            String header = getHeader((T) ActionLinkToggleUpdateEventPayload.class.cast(event.\n-                    getPayload()).getModelObj());\n-            if (StringUtils.isNotBlank(header)) {\n-                setHeader(ActionLinkToggleUpdateEventPayload.class.cast(event.getPayload()).getTarget(),\n-                        StringUtils.abbreviate(header, 25));\n-            }\n         }\n     }\n "},{"sha":"32514ad64a1738ac21e459022623cb137aefd8c6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d91e41e12e5fcb0fef9c10649fc09c568e944e74/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=d91e41e12e5fcb0fef9c10649fc09c568e944e74","patch":"@@ -22,7 +22,6 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n-import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -121,10 +120,6 @@ protected Serializable onApplyInternal(final AjaxRequestTarget target) {\n                     send(pageRef.getPage(), Broadcast.BUBBLE, payload);\n                 }\n \n-                // [SYNCOPE-1190] - refresh toggle panel after update\n-                send(pageRef.getPage(), Broadcast.BREADTH,\n-                        new TogglePanel.ActionLinkToggleUpdateEventPayload<>(target, modelObject));\n-\n                 return res;\n             }\n         }.setEventSink(eventSink).addOuterObject(outerObjects);"}]}