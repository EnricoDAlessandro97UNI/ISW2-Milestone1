{"sha":"5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjViNDdhYjIzNTRhMDI3MmFkOWM1ZDMyOThkOGExZmMyNTY1YTBjMWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-26T15:45:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-26T15:46:19Z"},"message":"[SYNCOPE-790] Now binding JSON configuration to role which allows to selectively enable user / group / anyObject wizard steps, customize plain / derived / virtual attributes appearance order and even providing custom class","tree":{"sha":"d32c9045304f15fa8a0a935f247f49e23d57bfe9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d32c9045304f15fa8a0a935f247f49e23d57bfe9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75"}],"stats":{"total":2207,"additions":1463,"deletions":744},"files":[{"sha":"d2d9c418a51dfd3fb139aad55f2c4fb93d04f563","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/ApprovalDetails.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -18,14 +18,12 @@\n  */\n package org.apache.syncope.client.console.approvals;\n \n-import java.util.List;\n+import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n-import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n@@ -37,12 +35,10 @@ public class ApprovalDetails extends MultilevelPanel.SecondLevel {\n     public ApprovalDetails(final PageReference pageRef, final WorkflowFormTO formTO) {\n         super(MultilevelPanel.SECOND_LEVEL_ID);\n \n-        final UserTO userTO = new UserRestClient().read(formTO.getUserKey());\n-        final List<String> anyTypeClasses = new AnyTypeRestClient().read(AnyTypeKind.USER.name()).getClasses();\n-\n-        final AjaxWizard<AnyHandler<UserTO>> wizard = new UserWizardBuilder(userTO, anyTypeClasses, pageRef).\n-                build(AjaxWizard.Mode.READONLY);\n-\n-        add(wizard);\n+        add(new UserWizardBuilder(new UserRestClient().read(formTO.getUsername()),\n+                new AnyTypeRestClient().read(AnyTypeKind.USER.name()).getClasses(),\n+                new UserFormLayoutInfo(),\n+                pageRef).\n+                build(AjaxWizard.Mode.READONLY));\n     }\n }"},{"sha":"b176205a3c8fed774bc1a7305cb5b48ac4bedf52","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/ApprovalDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -79,7 +79,7 @@ protected List<IColumn<WorkflowFormTO, String>> getColumns() {\n         columns.add(new PropertyColumn<WorkflowFormTO, String>(\n                 new ResourceModel(\"key\"), \"key\", \"key\"));\n         columns.add(new PropertyColumn<WorkflowFormTO, String>(\n-                new ResourceModel(\"description\"), \"description\", \"description\"));\n+                new ResourceModel(\"username\"), \"username\", \"username\"));\n         columns.add(new DatePropertyColumn<WorkflowFormTO>(\n                 new ResourceModel(\"createTime\"), \"createTime\", \"createTime\"));\n         columns.add(new DatePropertyColumn<WorkflowFormTO>("},{"sha":"9aefe4c7597e0a0fff50260e85a3238c3f5c5647","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AttrLayoutType.java","status":"removed","additions":0,"deletions":95,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java?ref=8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75","patch":"@@ -1,95 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.commons;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-\n-public enum AttrLayoutType {\n-\n-    ADMIN_USER(\"admin.user.layout\", Mode.ADMIN, AnyTypeKind.USER),\n-    SELF_USER(\"self.user.layout\", Mode.SELF, AnyTypeKind.USER),\n-    ADMIN_GROUP(\"admin.group.layout\", Mode.ADMIN, AnyTypeKind.GROUP),\n-    SELF_GROUP(\"self.group.layout\", Mode.SELF, AnyTypeKind.GROUP);\n-\n-    private final String confKey;\n-\n-    private final Mode mode;\n-\n-    private final AnyTypeKind anyTypeKind;\n-\n-    AttrLayoutType(final String confKey, final Mode mode, final AnyTypeKind anyTypeKind) {\n-        this.confKey = confKey;\n-        this.mode = mode;\n-        this.anyTypeKind = anyTypeKind;\n-    }\n-\n-    public String getConfKey() {\n-        return confKey;\n-    }\n-\n-    public Mode getMode() {\n-        return mode;\n-    }\n-\n-    public AnyTypeKind getAnyTypeKind() {\n-        return anyTypeKind;\n-    }\n-\n-    public static List<String> confKeys() {\n-        List<String> confKeys = new ArrayList<>();\n-        for (AttrLayoutType value : values()) {\n-            confKeys.add(value.getConfKey());\n-        }\n-\n-        return confKeys;\n-    }\n-\n-    public static AttrLayoutType valueOf(final Mode mode, final AnyTypeKind anyTypeKind) {\n-        AttrLayoutType result = null;\n-        if (mode == Mode.ADMIN) {\n-            switch (anyTypeKind) {\n-                case USER:\n-                    result = ADMIN_USER;\n-                    break;\n-\n-                case GROUP:\n-                    result = ADMIN_GROUP;\n-                    break;\n-\n-                default:\n-            }\n-        } else if (mode == Mode.SELF) {\n-            switch (anyTypeKind) {\n-                case USER:\n-                    result = SELF_USER;\n-                    break;\n-\n-                case GROUP:\n-                    result = SELF_GROUP;\n-                    break;\n-\n-                default:\n-            }\n-        }\n-\n-        return result;\n-    }\n-}"},{"sha":"3d4c956325cbd5e320966b556583f7737f681893","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Mode.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMode.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -21,7 +21,6 @@\n public enum Mode {\n \n     ADMIN,\n-    SELF,\n     TEMPLATE;\n \n }"},{"sha":"91c887a3f814df527b5e6b477bffe43a2a7a2dfb","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/AbstractAnyFormLayout.java","status":"added","additions":110,"deletions":0,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAbstractAnyFormLayout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAbstractAnyFormLayout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAbstractAnyFormLayout.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+\n+public abstract class AbstractAnyFormLayout<A extends AnyTO, F extends AnyForm<A>> implements Serializable {\n+\n+    private static final long serialVersionUID = -6061683026789976508L;\n+\n+    private Class<F> formClass;\n+\n+    private boolean auxClasses = true;\n+\n+    private boolean plainAttrs = true;\n+\n+    private final List<String> whichPlainAttrs = new ArrayList<>();\n+\n+    private boolean derAttrs = true;\n+\n+    private final List<String> whichDerAttrs = new ArrayList<>();\n+\n+    private boolean virAttrs = true;\n+\n+    private final List<String> whichVirAttrs = new ArrayList<>();\n+\n+    private boolean resources = true;\n+\n+    protected abstract Class<? extends F> getDefaultFormClass();\n+\n+    public Class<? extends F> getFormClass() {\n+        return formClass == null ? getDefaultFormClass() : formClass;\n+    }\n+\n+    public void setFormClass(final Class<F> formClass) {\n+        this.formClass = formClass;\n+    }\n+\n+    public boolean isAuxClasses() {\n+        return auxClasses;\n+    }\n+\n+    public void setAuxClasses(final boolean auxClasses) {\n+        this.auxClasses = auxClasses;\n+    }\n+\n+    public boolean isPlainAttrs() {\n+        return plainAttrs;\n+    }\n+\n+    public void setPlainAttrs(final boolean plainAttrs) {\n+        this.plainAttrs = plainAttrs;\n+    }\n+\n+    public List<String> getWhichPlainAttrs() {\n+        return whichPlainAttrs;\n+    }\n+\n+    public boolean isDerAttrs() {\n+        return derAttrs;\n+    }\n+\n+    public void setDerAttrs(final boolean derAttrs) {\n+        this.derAttrs = derAttrs;\n+    }\n+\n+    public List<String> getWhichDerAttrs() {\n+        return whichDerAttrs;\n+    }\n+\n+    public boolean isVirAttrs() {\n+        return virAttrs;\n+    }\n+\n+    public void setVirAttrs(final boolean virAttrs) {\n+        this.virAttrs = virAttrs;\n+    }\n+\n+    public List<String> getWhichVirAttrs() {\n+        return whichVirAttrs;\n+    }\n+\n+    public boolean isResources() {\n+        return resources;\n+    }\n+\n+    public void setResources(final boolean resources) {\n+        this.resources = resources;\n+    }\n+\n+}"},{"sha":"fc02efe199187ec2824a5f3ec1c216a82554b343","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/AnyForm.java","status":"renamed","additions":5,"deletions":11,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyForm.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -16,18 +16,12 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.pages;\n+package org.apache.syncope.client.console.layout;\n \n-import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n-import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.syncope.client.console.wizards.ModalPanelBuilder;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n+import org.apache.syncope.common.lib.to.AnyTO;\n \n-public class Layouts extends BasePage {\n+public interface AnyForm<A extends AnyTO> extends ModalPanelBuilder<AnyHandler<A>> {\n \n-    private static final long serialVersionUID = -1100228004207271271L;\n-\n-    public Layouts(final PageParameters parameters) {\n-        super(parameters);\n-\n-        body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n-    }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Layouts.java"},{"sha":"c8b7c0c3419534cab4b27f6a5ed9a27423356e0e","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/AnyObjectForm.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectForm.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+\n+public interface AnyObjectForm extends AnyForm<AnyObjectTO> {\n+\n+}"},{"sha":"211aa253e6e9acffdbdc726b74307bb2a56b743b","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/AnyObjectFormLayoutInfo.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectFormLayoutInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectFormLayoutInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectFormLayoutInfo.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+\n+public class AnyObjectFormLayoutInfo extends AbstractAnyFormLayout<AnyObjectTO, AnyObjectForm> {\n+\n+    private static final long serialVersionUID = -5573691733739618500L;\n+\n+    private boolean relationships = true;\n+\n+    @Override\n+    protected Class<? extends AnyObjectForm> getDefaultFormClass() {\n+        return AnyObjectWizardBuilder.class;\n+    }\n+\n+    public boolean isRelationships() {\n+        return relationships;\n+    }\n+\n+    public void setRelationships(final boolean relationships) {\n+        this.relationships = relationships;\n+    }\n+\n+}"},{"sha":"2b48d49892ff49254f15a35819a04861fb043954","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/ConsoleLayoutInfoModal.java","status":"added","additions":114,"deletions":0,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnLoadHeaderItem;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class ConsoleLayoutInfoModal extends AbstractModalPanel<Serializable> {\n+\n+    private static final long serialVersionUID = -5110368813584745668L;\n+\n+    private final ConsoleLayoutInfo consoleLayoutInfo;\n+\n+    public ConsoleLayoutInfoModal(\n+            final BaseModal<Serializable> modal,\n+            final ConsoleLayoutInfo consoleLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+        this.consoleLayoutInfo = consoleLayoutInfo;\n+\n+        TextArea<String> consoleLayoutInfoDefArea =\n+                new TextArea<>(\"consoleLayoutInfo\", new PropertyModel<String>(consoleLayoutInfo, \"content\"));\n+        consoleLayoutInfoDefArea.setMarkupId(\"consoleLayoutInfo\").setOutputMarkupPlaceholderTag(true);\n+        add(consoleLayoutInfoDefArea);\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        response.render(OnLoadHeaderItem.forScript(\n+                \"CodeMirror.fromTextArea(document.getElementById('consoleLayoutInfo'), {\"\n+                + \"  lineNumbers: true, \"\n+                + \"  lineWrapping: true, \"\n+                + \"  matchBrackets: true,\"\n+                + \"  autoCloseBrackets: true,\"\n+                + \"  autoRefresh: true\"\n+                + \"}).on('change', updateTextArea);\"));\n+    }\n+\n+    @Override\n+    public ConsoleLayoutInfo getItem() {\n+        return consoleLayoutInfo;\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        try {\n+            new RoleRestClient().setConsoleLayoutInfo(\n+                    consoleLayoutInfo.getKey(), consoleLayoutInfo.getContent());\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n+            modal.show(false);\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While updating onsole layout info for role {}\", consoleLayoutInfo.getKey(), e);\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+        }\n+        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+    }\n+\n+    public static class ConsoleLayoutInfo implements Serializable {\n+\n+        private static final long serialVersionUID = 961267717148831831L;\n+\n+        private final String key;\n+\n+        private String content;\n+\n+        public ConsoleLayoutInfo(final String key) {\n+            this.key = key;\n+        }\n+\n+        public String getKey() {\n+            return key;\n+        }\n+\n+        public String getContent() {\n+            return content;\n+        }\n+\n+        public void setContent(final String content) {\n+            this.content = FormLayoutInfoUtils.defaultConsoleLayoutInfoIfEmpty(content, new AnyTypeRestClient().list());\n+        }\n+    }\n+}"},{"sha":"a5caccbb5d322b083dd2ae6fc78487d6b1f9cf91","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/FormLayoutInfoUtils.java","status":"added","additions":144,"deletions":0,"changes":144,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.PageReference;\n+\n+/**\n+ * Utility methods for dealing with form layout information.\n+ */\n+public final class FormLayoutInfoUtils {\n+\n+    private static final RoleRestClient ROLE_REST_CLIENT = new RoleRestClient();\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    public static Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> fetch(\n+            final List<AnyTypeTO> anyTypeTOs) {\n+\n+        List<String> ownedRoles = SyncopeConsoleSession.get().getSelfTO().getRoles();\n+        try {\n+            JsonNode tree = null;\n+            for (int i = 0; i < ownedRoles.size() && tree == null; i++) {\n+                String consoleLayoutInfo = ROLE_REST_CLIENT.readConsoleLayoutInfo(ownedRoles.get(i));\n+                if (StringUtils.isNotBlank(consoleLayoutInfo)) {\n+                    tree = MAPPER.readTree(consoleLayoutInfo);\n+                }\n+            }\n+            if (tree == null) {\n+                tree = MAPPER.createObjectNode();\n+            }\n+\n+            UserFormLayoutInfo userFormLayoutInfo = tree.has(AnyTypeKind.USER.name())\n+                    ? MAPPER.treeToValue(tree.get(AnyTypeKind.USER.name()), UserFormLayoutInfo.class)\n+                    : new UserFormLayoutInfo();\n+\n+            GroupFormLayoutInfo groupFormLayoutInfo = tree.has(AnyTypeKind.USER.name())\n+                    ? MAPPER.treeToValue(tree.get(AnyTypeKind.GROUP.name()), GroupFormLayoutInfo.class)\n+                    : new GroupFormLayoutInfo();\n+\n+            Map<String, AnyObjectFormLayoutInfo> anyObjectFormLayoutInfos = new HashMap<>();\n+            for (AnyTypeTO anyTypeTO : anyTypeTOs) {\n+                if (!anyTypeTO.getKey().equals(AnyTypeKind.USER.name())\n+                        && !anyTypeTO.getKey().equals(AnyTypeKind.GROUP.name())) {\n+\n+                    anyObjectFormLayoutInfos.put(\n+                            anyTypeTO.getKey(),\n+                            tree.has(anyTypeTO.getKey())\n+                            ? MAPPER.treeToValue(tree.get(anyTypeTO.getKey()), AnyObjectFormLayoutInfo.class)\n+                            : new AnyObjectFormLayoutInfo());\n+                }\n+            }\n+\n+            return Triple.of(userFormLayoutInfo, groupFormLayoutInfo, anyObjectFormLayoutInfos);\n+        } catch (IOException e) {\n+            throw new IllegalArgumentException(\"While parsing console layout info for \"\n+                    + SyncopeConsoleSession.get().getSelfTO().getUsername(), e);\n+        }\n+    }\n+\n+    public static String defaultConsoleLayoutInfoIfEmpty(final String content, final List<AnyTypeTO> anyTypeTOs) {\n+        String result;\n+\n+        if (StringUtils.isBlank(content)) {\n+            try {\n+                ObjectNode tree = MAPPER.createObjectNode();\n+\n+                tree.set(AnyTypeKind.USER.name(), MAPPER.valueToTree(new UserFormLayoutInfo()));\n+                tree.set(AnyTypeKind.GROUP.name(), MAPPER.valueToTree(new GroupFormLayoutInfo()));\n+                for (AnyTypeTO anyTypeTO : anyTypeTOs) {\n+                    if (!anyTypeTO.getKey().equals(AnyTypeKind.USER.name())\n+                            && !anyTypeTO.getKey().equals(AnyTypeKind.GROUP.name())) {\n+\n+                        tree.set(anyTypeTO.getKey(), MAPPER.valueToTree(new AnyObjectFormLayoutInfo()));\n+                    }\n+                }\n+\n+                result = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(tree);\n+            } catch (IOException e) {\n+                throw new IllegalArgumentException(\"While generating default console layout info for \"\n+                        + SyncopeConsoleSession.get().getSelfTO().getUsername(), e);\n+            }\n+        } else {\n+            try {\n+                result = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(MAPPER.readTree(content));\n+            } catch (IOException e) {\n+                result = content;\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    public static <A extends AnyTO, F extends AnyForm<A>, FL extends AbstractAnyFormLayout<A, F>> F instantiate(\n+            final A anyTO,\n+            final List<String> anyTypeClasses,\n+            final FL anyFormLayout,\n+            final PageReference pageRef) {\n+\n+        try {\n+            return anyFormLayout.getFormClass().getConstructor(\n+                    anyTO.getClass(),\n+                    List.class,\n+                    anyFormLayout.getClass(),\n+                    pageRef.getClass()).\n+                    newInstance(anyTO, anyTypeClasses, anyFormLayout, pageRef);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(\"Could not instantiate \" + anyFormLayout.getFormClass().getName(), e);\n+        }\n+    }\n+\n+    private FormLayoutInfoUtils() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"7b8e27fcae83e8772342d29d6cf0f00b03f1c2b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/GroupForm.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupForm.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import org.apache.syncope.common.lib.to.GroupTO;\n+\n+public interface GroupForm extends AnyForm<GroupTO> {\n+\n+}"},{"sha":"9296300ac7b773ef47823a108b5a56948c4f7524","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/GroupFormLayoutInfo.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupFormLayoutInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupFormLayoutInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupFormLayoutInfo.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+\n+public class GroupFormLayoutInfo extends AbstractAnyFormLayout<GroupTO, GroupForm> {\n+\n+    private static final long serialVersionUID = -5573691733739618500L;\n+\n+    private boolean ownership = true;\n+\n+    private boolean dynamicMemberships = true;\n+\n+    private boolean typeExtension = true;\n+\n+    @Override\n+    protected Class<? extends GroupForm> getDefaultFormClass() {\n+        return GroupWizardBuilder.class;\n+    }\n+\n+    public boolean isOwnership() {\n+        return ownership;\n+    }\n+\n+    public void setOwnership(final boolean ownership) {\n+        this.ownership = ownership;\n+    }\n+\n+    public boolean isDynamicMemberships() {\n+        return dynamicMemberships;\n+    }\n+\n+    public void setDynamicMemberships(final boolean dynamicMemberships) {\n+        this.dynamicMemberships = dynamicMemberships;\n+    }\n+\n+    public boolean isTypeExtension() {\n+        return typeExtension;\n+    }\n+\n+    public void setTypeExtension(final boolean typeExtension) {\n+        this.typeExtension = typeExtension;\n+    }\n+\n+}"},{"sha":"04f5d9964bfddceb6adb68993de0e4f440226453","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/UserForm.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserForm.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public interface UserForm extends AnyForm<UserTO> {\n+\n+}"},{"sha":"c10014372297c7bac8133fb37d0802304366c4e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/UserFormLayoutInfo.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserFormLayoutInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserFormLayoutInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserFormLayoutInfo.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserFormLayoutInfo extends AbstractAnyFormLayout<UserTO, UserForm> {\n+\n+    private static final long serialVersionUID = -5573691733739618500L;\n+\n+    private boolean passwordManagement = true;\n+\n+    private boolean roles = true;\n+\n+    private boolean relationships = true;\n+\n+    @Override\n+    protected Class<? extends UserForm> getDefaultFormClass() {\n+        return UserWizardBuilder.class;\n+    }\n+\n+    public boolean isPasswordManagement() {\n+        return passwordManagement;\n+    }\n+\n+    public void setPasswordManagement(final boolean passwordManagement) {\n+        this.passwordManagement = passwordManagement;\n+    }\n+\n+    public boolean isRoles() {\n+        return roles;\n+    }\n+\n+    public void setRoles(final boolean roles) {\n+        this.roles = roles;\n+    }\n+\n+    public boolean isRelationships() {\n+        return relationships;\n+    }\n+\n+    public void setRelationships(final boolean relationships) {\n+        this.relationships = relationships;\n+    }\n+\n+}"},{"sha":"55804cbc7e702b74946187cfb612adc964b178bc","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateContentModal.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.MailTemplateFormat;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -39,12 +38,13 @@ public class MailTemplateContentModal extends AbstractModalPanel<Serializable> {\n \n     private static final long serialVersionUID = 2053048734388383021L;\n \n-    private final MailTemplateContentTO content;\n+    private final MailTemplateContent content;\n \n     public MailTemplateContentModal(\n             final BaseModal<Serializable> modal,\n-            final MailTemplateContentTO content,\n+            final MailTemplateContent content,\n             final PageReference pageRef) {\n+\n         super(modal, pageRef);\n         this.content = content;\n \n@@ -59,12 +59,15 @@ public void renderHead(final IHeaderResponse response) {\n         response.render(OnLoadHeaderItem.forScript(\n                 \"CodeMirror.fromTextArea(document.getElementById('template'), {\"\n                 + \"  lineNumbers: true, \"\n+                + \"  lineWrapping: true, \"\n+                + \"  autoCloseTags: true, \"\n+                + \"  mode: 'text/html', \"\n                 + \"  autoRefresh: true\"\n                 + \"}).on('change', updateTextArea);\"));\n     }\n \n     @Override\n-    public MailTemplateContentTO getItem() {\n+    public MailTemplateContent getItem() {\n         return this.content;\n     }\n \n@@ -83,7 +86,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n     }\n \n-    public static class MailTemplateContentTO extends AbstractBaseBean {\n+    public static class MailTemplateContent implements Serializable {\n \n         private static final long serialVersionUID = -1756961687134322845L;\n \n@@ -93,7 +96,7 @@ public static class MailTemplateContentTO extends AbstractBaseBean {\n \n         private final MailTemplateFormat format;\n \n-        public MailTemplateContentTO(final String key, final MailTemplateFormat format) {\n+        public MailTemplateContent(final String key, final MailTemplateFormat format) {\n             this.key = key;\n             this.format = format;\n         }"},{"sha":"b6fee1a464b5b37c706485c2e4baea9a093cc019","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -66,13 +66,12 @@ public MailTemplateDirectoryPanel(final String id, final PageReference pageRefer\n         super(id, pageReference, true);\n         disableCheckBoxes();\n \n-        addOuterObject(utilityModal);\n-        setWindowClosedReloadCallback(utilityModal);\n-\n         modal.size(Modal.Size.Small);\n         modal.addSumbitButton();\n         setFooterVisibility(true);\n \n+        addOuterObject(utilityModal);\n+        setWindowClosedReloadCallback(utilityModal);\n         utilityModal.size(Modal.Size.Large);\n         utilityModal.addSumbitButton();\n \n@@ -114,8 +113,8 @@ public ActionLinksPanel<MailTemplateTO> getActions(\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        MailTemplateContentModal.MailTemplateContentTO content =\n-                                new MailTemplateContentModal.MailTemplateContentTO(\n+                        MailTemplateContentModal.MailTemplateContent content =\n+                                new MailTemplateContentModal.MailTemplateContent(\n                                         model.getObject().getKey(), MailTemplateFormat.HTML);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.HTML));\n@@ -133,8 +132,8 @@ public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore)\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        MailTemplateContentModal.MailTemplateContentTO content =\n-                                new MailTemplateContentModal.MailTemplateContentTO(\n+                        MailTemplateContentModal.MailTemplateContent content =\n+                                new MailTemplateContentModal.MailTemplateContent(\n                                         model.getObject().getKey(), MailTemplateFormat.TEXT);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.TEXT));"},{"sha":"b0425a9b6da63b83bf0a1f6b22113f0799546584","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -188,12 +188,6 @@ protected void onConnect(final ConnectedMessage message) {\n         MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, StandardEntitlement.POLICY_LIST);\n         liContainer.add(link);\n \n-        liContainer = new WebMarkupContainer(getLIContainerId(\"layouts\"));\n-        confULContainer.add(liContainer);\n-        link = BookmarkablePageLinkBuilder.build(\"layouts\", Layouts.class);\n-        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, StandardEntitlement.CONFIGURATION_LIST);\n-        liContainer.add(link);\n-\n         liContainer = new WebMarkupContainer(getLIContainerId(\"notifications\"));\n         confULContainer.add(liContainer);\n         link = BookmarkablePageLinkBuilder.build(\"notifications\", Notifications.class);"},{"sha":"9a3d8c605018481fd71b32c9b83d33da1ababc4a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":39,"deletions":16,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -18,17 +18,23 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Map;\n+import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n+import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.panels.search.AbstractSearchPanel;\n+import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n import org.apache.syncope.client.console.panels.search.GroupSearchPanel;\n import org.apache.syncope.client.console.panels.search.SearchClause;\n import org.apache.syncope.client.console.panels.search.SearchClausePanel;\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n-import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n-import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -54,9 +60,6 @@\n import org.apache.wicket.model.util.ListModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n \n public class AnyPanel extends Panel {\n \n@@ -70,6 +73,8 @@ public class AnyPanel extends Panel {\n \n     private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n+    private final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo;\n+\n     private final PageReference pageRef;\n \n     private AbstractSearchPanel searchPanel;\n@@ -78,10 +83,16 @@ public class AnyPanel extends Panel {\n \n     @SuppressWarnings({ \"unchecked\", \"unchecked\" })\n     public AnyPanel(\n-            final String id, final AnyTypeTO anyTypeTO, final RealmTO realmTO, final PageReference pageRef) {\n+            final String id,\n+            final AnyTypeTO anyTypeTO,\n+            final RealmTO realmTO,\n+            final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo,\n+            final PageReference pageRef) {\n+\n         super(id);\n         this.anyTypeTO = anyTypeTO;\n         this.realmTO = realmTO;\n+        this.formLayoutInfo = formLayoutInfo;\n         this.pageRef = pageRef;\n \n         // ------------------------\n@@ -191,31 +202,39 @@ private Panel getDirectoryPanel(final String id) {\n         final String fiql;\n         switch (anyTypeTO.getKind()) {\n             case USER:\n-                fiql = SyncopeClient.getUserSearchConditionBuilder().is(\"key\").greaterThan(0).query();\n+                fiql = SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue().query();\n                 final UserTO userTO = new UserTO();\n                 userTO.setRealm(realmTO.getFullPath());\n                 panel = new UserDirectoryPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n-                        setFiql(fiql).addNewItemPanelBuilder(new UserWizardBuilder(\n-                        userTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                        setFiql(fiql).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                        userTO,\n+                        anyTypeTO.getClasses(),\n+                        formLayoutInfo.getLeft(),\n+                        pageRef)).build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n                 break;\n+\n             case GROUP:\n-                fiql = SyncopeClient.getGroupSearchConditionBuilder().is(\"key\").greaterThan(0).query();\n+                fiql = SyncopeClient.getGroupSearchConditionBuilder().is(\"key\").notNullValue().query();\n                 final GroupTO groupTO = new GroupTO();\n                 groupTO.setRealm(realmTO.getFullPath());\n                 panel = new GroupDirectoryPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n-                        setFiql(fiql).addNewItemPanelBuilder(new GroupWizardBuilder(\n-                        groupTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                        setFiql(fiql).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                        groupTO,\n+                        anyTypeTO.getClasses(),\n+                        formLayoutInfo.getMiddle(),\n+                        pageRef)).build(id);\n                 // list of group is available to all authenticated users\n                 break;\n+\n             case ANY_OBJECT:\n-                fiql = SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey()).is(\"key\").greaterThan(0).\n+                fiql = SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey()).is(\"key\").notNullValue().\n                         query();\n                 final AnyObjectTO anyObjectTO = new AnyObjectTO();\n                 anyObjectTO.setRealm(realmTO.getFullPath());\n@@ -224,11 +243,15 @@ private Panel getDirectoryPanel(final String id) {\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n-                        setFiql(fiql).addNewItemPanelBuilder(new AnyObjectWizardBuilder(\n-                        anyObjectTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                        setFiql(fiql).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                        anyObjectTO,\n+                        anyTypeTO.getClasses(),\n+                        formLayoutInfo.getRight().get(anyTypeTO.getKey()),\n+                        pageRef)).build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(\n                         panel, WebPage.RENDER, AnyEntitlement.LIST.getFor(anyTypeTO.getKey()));\n                 break;\n+\n             default:\n                 panel = new LabelPanel(id, null);\n         }"},{"sha":"9ffb4769173496f0f731c47e17720209df3fbeb1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -23,7 +23,13 @@\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n+import java.util.Map;\n import org.apache.commons.collections4.ComparatorUtils;\n+import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n+import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -52,7 +58,6 @@ public abstract class Realm extends Panel {\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n \n-    @SuppressWarnings({ \"unchecked\", \"unchecked\" })\n     public Realm(final String id, final RealmTO realmTO, final PageReference pageRef) {\n         super(id);\n         this.realmTO = realmTO;\n@@ -112,6 +117,9 @@ public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n             }\n         });\n \n+        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo =\n+                FormLayoutInfoUtils.fetch(anyTypeTOs);\n+\n         Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n             tabs.add(new AbstractTab(new Model<>(anyTypeTO.getKey())) {\n@@ -120,7 +128,7 @@ public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n \n                 @Override\n                 public Panel getPanel(final String panelId) {\n-                    return new AnyPanel(panelId, anyTypeTO, realmTO, pageRef);\n+                    return new AnyPanel(panelId, anyTypeTO, realmTO, formLayoutInfo, pageRef);\n                 }\n             });\n         }"},{"sha":"ba2d44ba92ff4e497cd03a43e806b96696bbc37c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -18,7 +18,9 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.syncope.client.console.layout.ConsoleLayoutInfoModal;\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n@@ -29,6 +31,7 @@\n import org.apache.syncope.client.console.commons.RoleDataProvider;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -51,13 +54,20 @@ public class RoleDirectoryPanel extends DirectoryPanel<RoleTO, RoleHandler, Role\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n+    protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"outer\");\n+\n     protected RoleDirectoryPanel(final String id, final Builder builder) {\n         super(id, builder);\n         setShowResultPage(true);\n \n         modal.size(Modal.Size.Large);\n         initResultTable();\n \n+        addOuterObject(utilityModal);\n+        setWindowClosedReloadCallback(utilityModal);\n+        utilityModal.size(Modal.Size.Large);\n+        utilityModal.addSumbitButton();\n+\n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.ROLE_CREATE);\n     }\n \n@@ -116,6 +126,21 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                        ConsoleLayoutInfoModal.ConsoleLayoutInfo info =\n+                                new ConsoleLayoutInfoModal.ConsoleLayoutInfo(model.getObject().getKey());\n+                        info.setContent(restClient.readConsoleLayoutInfo(model.getObject().getKey()));\n+\n+                        utilityModal.header(new ResourceModel(\"console.layout.info\", \"JSON Content\"));\n+                        utilityModal.setContent(new ConsoleLayoutInfoModal(utilityModal, info, pageRef));\n+                        utilityModal.show(true);\n+                        target.add(utilityModal);\n+                    }\n+                }, ActionLink.ActionType.LAYOUT_EDIT, StandardEntitlement.ROLE_UPDATE).add(new ActionLink<RoleTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                         try {"},{"sha":"fa73ec7e25392102e9b449e49cebfa50f578eb9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/XMLWorkflowEditorModalPanel.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -89,6 +89,9 @@ public void renderHead(final IHeaderResponse response) {\n         response.render(OnLoadHeaderItem.forScript(\n                 \"CodeMirror.fromTextArea(document.getElementById('workflowDefArea'), {\"\n                 + \"  lineNumbers: true, \"\n+                + \"  lineWrapping: true, \"\n+                + \"  autoCloseTags: true, \"\n+                + \"  mode: 'text/html', \"\n                 + \"  autoRefresh: true\"\n                 + \"}).on('change', updateTextArea);\"));\n     }"},{"sha":"f8e486312ffffb0b377066f74a3d8d612f45e539","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConfigurationRestClient.java","status":"modified","additions":1,"deletions":29,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.console.commons.AttrLayoutType;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.rest.api.service.ConfigurationService;\n@@ -32,17 +31,7 @@ public class ConfigurationRestClient extends BaseRestClient {\n     private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n     public List<AttrTO> list() {\n-        final List<AttrTO> attrTOs = getService(ConfigurationService.class).list();\n-\n-        for (AttrTO attrTO : attrTOs) {\n-            for (AttrLayoutType type : AttrLayoutType.values()) {\n-                if (type.getConfKey().equals(attrTO.getSchema())) {\n-                    attrTOs.remove(attrTO);\n-                }\n-            }\n-        }\n-\n-        return attrTOs;\n+        return getService(ConfigurationService.class).list();\n     }\n \n     public AttrTO get(final String key) {\n@@ -54,23 +43,6 @@ public AttrTO get(final String key) {\n         return null;\n     }\n \n-    public AttrTO readAttrLayout(final AttrLayoutType type) {\n-        if (type == null) {\n-            return null;\n-        }\n-\n-        AttrTO attrLayout = get(type.getConfKey());\n-        if (attrLayout == null) {\n-            attrLayout = new AttrTO();\n-            attrLayout.setSchema(type.getConfKey());\n-        }\n-        if (attrLayout.getValues().isEmpty()) {\n-            attrLayout.getValues().addAll(schemaRestClient.getPlainSchemaNames());\n-        }\n-\n-        return attrLayout;\n-    }\n-\n     public void set(final AttrTO attrTO) {\n         getService(ConfigurationService.class).set(attrTO);\n     }"},{"sha":"eb7d1601d8d7c7bf59183442166e8e74e69dc66e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -75,13 +75,13 @@ public String readTemplateFormat(final String key, final MailTemplateFormat form\n                     getService(MailTemplateService.class).getFormat(key, format).getEntity()),\n                     SyncopeConstants.DEFAULT_CHARSET);\n         } catch (Exception e) {\n-            LOG.info(\"Error retrieving mail tenplate content\");\n+            LOG.error(\"Error retrieving mail template {} as {}\", key, format, e);\n             return StringUtils.EMPTY;\n         }\n     }\n \n-    public void updateTemplateFormat(final String key, final String str, final MailTemplateFormat format) {\n+    public void updateTemplateFormat(final String key, final String content, final MailTemplateFormat format) {\n         getService(MailTemplateService.class).setFormat(\n-                key, format, IOUtils.toInputStream(str, SyncopeConstants.DEFAULT_CHARSET));\n+                key, format, IOUtils.toInputStream(content, SyncopeConstants.DEFAULT_CHARSET));\n     }\n }"},{"sha":"c5a93fbd83d975eb25c3bb02c6ec7c9e4e8ef837","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java","status":"modified","additions":25,"deletions":5,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -18,9 +18,13 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.rest.api.service.RoleService;\n \n@@ -29,7 +33,7 @@\n  */\n public class RoleRestClient extends BaseRestClient {\n \n-    private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = -3161863874876938094L;\n \n     public void delete(final String key) {\n         getService(RoleService.class).delete(key);\n@@ -47,10 +51,6 @@ public void create(final RoleTO roleTO) {\n         getService(RoleService.class).create(roleTO);\n     }\n \n-    public List<RoleTO> getAll() {\n-        return getService(RoleService.class).list();\n-    }\n-\n     public List<RoleTO> list() {\n         return getService(RoleService.class).list();\n     }\n@@ -59,6 +59,26 @@ public int count() {\n         return getService(RoleService.class).list().size();\n     }\n \n+    public String readConsoleLayoutInfo(final String roleKey) {\n+        try {\n+            return IOUtils.toString(InputStream.class.cast(\n+                    getService(RoleService.class).getConsoleLayoutInfo(roleKey).getEntity()),\n+                    SyncopeConstants.DEFAULT_CHARSET);\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving console layout info for role {}\", roleKey, e);\n+            return StringUtils.EMPTY;\n+        }\n+    }\n+\n+    public void setConsoleLayoutInfo(final String roleKey, final String content) {\n+        getService(RoleService.class).setConsoleLayoutInfo(\n+                roleKey, IOUtils.toInputStream(content, SyncopeConstants.DEFAULT_CHARSET));\n+    }\n+\n+    public void removeConsoleLayoutInfo(final String roleKey) {\n+        getService(RoleService.class).removeConsoleLayoutInfo(roleKey);\n+    }\n+\n     public List<String> getAllAvailableEntitlements() {\n         List<String> entitlements = new ArrayList<>(getSyncopeService().platform().getEntitlements());\n         Collections.sort(entitlements);"},{"sha":"b7b1b45ad29d90a34ae7101081c70850267c6d1d","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -19,9 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.ArrayList;\n-import java.util.Collection;\n import java.util.List;\n-import java.util.ListIterator;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.EntityTOUtils;\n@@ -40,21 +38,6 @@ public class SchemaRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -2479730152700312373L;\n \n-    public void filter(\n-            final List<? extends AbstractSchemaTO> schemaTOs, final Collection<String> allowed, final boolean exclude) {\n-\n-        for (ListIterator<? extends AbstractSchemaTO> itor = schemaTOs.listIterator(); itor.hasNext();) {\n-            AbstractSchemaTO schema = itor.next();\n-            if (exclude) {\n-                if (!allowed.contains(schema.getKey())) {\n-                    itor.remove();\n-                }\n-            } else if (allowed.contains(schema.getKey())) {\n-                itor.remove();\n-            }\n-        }\n-    }\n-\n     public <T extends AbstractSchemaTO> List<T> getSchemas(final SchemaType schemaType, final String... kind) {\n         List<T> schemas = new ArrayList<>();\n "},{"sha":"3d2007d39781598137965264404f18bfac3f0f88","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -48,6 +48,7 @@ public enum ActionType {\n         EDIT(\"read\"),\n         HTML_EDIT(\"read\"),\n         TEXT_EDIT(\"read\"),\n+        LAYOUT_EDIT(\"read\"),\n         RESET(\"update\"),\n         ENABLE(\"update\"),\n         NOT_FOND(\"read\"),"},{"sha":"3d6e4ee3e670b5e82c96a0137bddce0134daf24d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -63,6 +63,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelHtmlEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelTextEdit\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelLayoutEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelReset\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEnable\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelNotFound\", \"emptyFragment\", this));\n@@ -347,6 +348,25 @@ public String getAjaxIndicatorMarkupId() {\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n+            case LAYOUT_EDIT:\n+                fragment = new Fragment(\"panelLayoutEdit\", \"fragmentLayoutEdit\", this);\n+\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"layoutEditLink\") {\n+\n+                    private static final long serialVersionUID = -1876519166660008562L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n             case ENABLE:\n                 fragment = new Fragment(\"panelEnable\", \"fragmentEnable\", this);\n "},{"sha":"7a5022674777794514e036e367e4beb246c4c5b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ApprovalsWidget.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -22,7 +22,6 @@\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.pages.Approvals;\n@@ -142,9 +141,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     @Override\n                     protected void onComponentTag(final ComponentTag tag) {\n                         super.onComponentTag(tag);\n-                        if (StringUtils.isNotBlank(modelObject.getDescription())) {\n-                            tag.put(\"title\", modelObject.getDescription().trim());\n-                        }\n+                        tag.put(\"title\", modelObject.getUsername());\n                     }\n                 };\n "},{"sha":"7356e1ec7351c57e2eb9feaa32d3d338f814ca24","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractModalPanelBuilder.java","status":"modified","additions":4,"deletions":18,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -20,10 +20,9 @@\n \n import java.io.Serializable;\n import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.wicket.PageReference;\n \n-public abstract class AbstractModalPanelBuilder<T extends Serializable> implements Serializable {\n+public abstract class AbstractModalPanelBuilder<T extends Serializable> implements ModalPanelBuilder<T> {\n \n     private static final long serialVersionUID = 5241745929825564456L;\n \n@@ -44,16 +43,6 @@ public AbstractModalPanelBuilder(final T defaultItem, final PageReference pageRe\n         this.pageRef = pageRef;\n     }\n \n-    /**\n-     * Build the wizard.\n-     *\n-     * @param id component id.\n-     * @param index step index.\n-     * @param mode mode.\n-     * @return wizard.\n-     */\n-    public abstract ModalPanel<T> build(final String id, final int index, final AjaxWizard.Mode mode);\n-\n     protected void onCancelInternal(final T modelObject) {\n     }\n \n@@ -66,6 +55,7 @@ protected T getOriginalItem() {\n         return item;\n     }\n \n+    @Override\n     public T getDefaultItem() {\n         return defaultItem;\n     }\n@@ -80,17 +70,13 @@ protected T newModelObject() {\n         return SerializationUtils.clone(item);\n     }\n \n-    /**\n-     * Replaces the default value provided with the constructor and nullify working item object.\n-     *\n-     * @param item new value.\n-     * @return the current wizard factory instance.\n-     */\n+    @Override\n     public AbstractModalPanelBuilder<T> setItem(final T item) {\n         this.item = item;\n         return this;\n     }\n \n+    @Override\n     public PageReference getPageReference() {\n         return pageRef;\n     }"},{"sha":"62db09a470c7c711ec5604a56bdcd314feee81a1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/ModalPanelBuilder.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FModalPanelBuilder.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.wicket.PageReference;\n+\n+public interface ModalPanelBuilder<T extends Serializable> extends Serializable {\n+\n+    /**\n+     * Build the wizard.\n+     *\n+     * @param id component id.\n+     * @param index step index.\n+     * @param mode mode.\n+     * @return wizard.\n+     */\n+    ModalPanel<T> build(String id, int index, AjaxWizard.Mode mode);\n+\n+    T getDefaultItem();\n+\n+    PageReference getPageReference();\n+\n+    /**\n+     * Replaces the default value provided with the constructor and nullify working item object.\n+     *\n+     * @param item new value.\n+     * @return the current wizard factory instance.\n+     */\n+    ModalPanelBuilder<T> setItem(T item);\n+\n+}"},{"sha":"144e2f42d4ac892b8605fcf0bf4b3bc5d40003f8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -67,7 +67,7 @@\n \n     protected final AjaxLink<?> addAjaxLink;\n \n-    protected AbstractModalPanelBuilder<T> newItemPanelBuilder;\n+    protected ModalPanelBuilder<T> newItemPanelBuilder;\n \n     protected NotificationPanel notificationPanel;\n \n@@ -252,18 +252,19 @@ public final WizardMgtPanel<T> addOuterObject(final Component... childs) {\n         return this;\n     }\n \n-    public <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> setPageRef(final PageReference pageRef) {\n+    public <B extends ModalPanelBuilder<T>> WizardMgtPanel<T> setPageRef(final PageReference pageRef) {\n         this.pageRef = pageRef;\n         return this;\n     }\n \n-    public <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> setShowResultPage(final boolean showResultPage) {\n+    public <B extends ModalPanelBuilder<T>> WizardMgtPanel<T> setShowResultPage(final boolean showResultPage) {\n         this.showResultPage = showResultPage;\n         return this;\n     }\n \n-    protected <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> addNewItemPanelBuilder(\n+    protected <B extends ModalPanelBuilder<T>> WizardMgtPanel<T> addNewItemPanelBuilder(\n             final B panelBuilder, final boolean newItemDefaultButtonEnabled) {\n+\n         this.newItemPanelBuilder = panelBuilder;\n \n         if (this.newItemPanelBuilder != null) {\n@@ -321,7 +322,7 @@ protected void customActionOnCloseCallback(final AjaxRequestTarget target) {\n \n         protected final PageReference pageRef;\n \n-        private AbstractModalPanelBuilder<T> newItemPanelBuilder;\n+        private ModalPanelBuilder<T> newItemPanelBuilder;\n \n         private boolean newItemDefaultButtonEnabled = true;\n \n@@ -353,7 +354,7 @@ public void setShowResultPage(final boolean showResultPage) {\n             this.showResultPage = showResultPage;\n         }\n \n-        public Builder<T> addNewItemPanelBuilder(final AbstractModalPanelBuilder<T> panelBuilder) {\n+        public Builder<T> addNewItemPanelBuilder(final ModalPanelBuilder<T> panelBuilder) {\n             this.newItemPanelBuilder = panelBuilder;\n             return this;\n         }\n@@ -366,7 +367,8 @@ public Builder<T> addNewItemPanelBuilder(final AbstractModalPanelBuilder<T> pane\n          * @return the current builder.\n          */\n         public Builder<T> addNewItemPanelBuilder(\n-                final AbstractModalPanelBuilder<T> panelBuilder, final boolean newItemDefaultButtonEnabled) {\n+                final ModalPanelBuilder<T> panelBuilder, final boolean newItemDefaultButtonEnabled) {\n+\n             this.newItemDefaultButtonEnabled = newItemDefaultButtonEnabled;\n             return addNewItemPanelBuilder(panelBuilder);\n         }"},{"sha":"dc58bf1fe44ebca7ae969c6beb5344f8fe866260","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":102,"deletions":14,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -20,52 +20,140 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashMap;\n import java.util.HashSet;\n+import java.util.LinkedHashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.LoadableDetachableModel;\n \n-public abstract class AbstractAttrs extends WizardStep {\n+public abstract class AbstractAttrs<S extends AbstractSchemaTO> extends WizardStep {\n \n     private static final long serialVersionUID = -5387344116983102292L;\n \n-    protected final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n-    protected final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n+    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n     private final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    protected final AnyTO entityTO;\n+    protected final AnyTO anyTO;\n \n-    public AbstractAttrs(final AnyTO entityTO) {\n-        this.entityTO = entityTO;\n+    private final List<String> whichAttrs;\n+\n+    protected final Map<String, S> schemas = new LinkedHashMap<>();\n+\n+    protected final LoadableDetachableModel<List<AttrTO>> attrTOs;\n+\n+    public AbstractAttrs(final AnyTO anyTO, final List<String> anyTypeClasses, final List<String> whichAttrs) {\n+        super();\n+        this.setOutputMarkupId(true);\n+\n+        this.anyTO = anyTO;\n+        this.whichAttrs = whichAttrs;\n+\n+        this.attrTOs = new LoadableDetachableModel<List<AttrTO>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<AttrTO> load() {\n+                setSchemas(CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n+                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(anyTypeClasses)));\n+                setAttrs();\n+                return new ArrayList<>(getAttrsFromAnyTO());\n+            }\n+        };\n+    }\n+\n+    protected boolean reoderSchemas() {\n+        return !whichAttrs.isEmpty();\n     }\n \n+    protected abstract SchemaType getSchemaType();\n+\n+    private void setSchemas(final List<String> anyTypeClasses) {\n+        List<S> allSchemas = Collections.emptyList();\n+        if (!anyTypeClasses.isEmpty()) {\n+            allSchemas = schemaRestClient.getSchemas(getSchemaType(), anyTypeClasses.toArray(new String[] {}));\n+        }\n+\n+        schemas.clear();\n+\n+        if (reoderSchemas()) {\n+            // 1. remove attributes not selected for display\n+            CollectionUtils.filter(allSchemas, new Predicate<S>() {\n+\n+                @Override\n+                public boolean evaluate(final S schemaTO) {\n+                    return whichAttrs.contains(schemaTO.getKey());\n+                }\n+            });\n+\n+            // 2. sort remainig attributes according to configuration, e.g. attrLayout\n+            final Map<String, Integer> attrLayoutMap = new HashMap<>(whichAttrs.size());\n+            for (int i = 0; i < whichAttrs.size(); i++) {\n+                attrLayoutMap.put(whichAttrs.get(i), i);\n+            }\n+            Collections.sort(allSchemas, new Comparator<S>() {\n+\n+                @Override\n+                public int compare(final S schema1, final S schema2) {\n+                    int value = 0;\n+\n+                    if (attrLayoutMap.get(schema1.getKey()) > attrLayoutMap.get(schema2.getKey())) {\n+                        value = 1;\n+                    } else if (attrLayoutMap.get(schema1.getKey()) < attrLayoutMap.get(schema2.getKey())) {\n+                        value = -1;\n+                    }\n+\n+                    return value;\n+                }\n+            });\n+        }\n+        for (S schemaTO : allSchemas) {\n+            schemas.put(schemaTO.getKey(), schemaTO);\n+        }\n+    }\n+\n+    protected abstract void setAttrs();\n+\n+    protected abstract Set<AttrTO> getAttrsFromAnyTO();\n+\n     protected Set<String> getAllAuxClasses() {\n         final List<MembershipTO> memberships;\n         final List<String> dyngroups;\n-        if (entityTO instanceof UserTO) {\n-            memberships = UserTO.class.cast(entityTO).getMemberships();\n-            dyngroups = UserTO.class.cast(entityTO).getDynGroups();\n-        } else if (entityTO instanceof AnyObjectTO) {\n-            memberships = AnyObjectTO.class.cast(entityTO).getMemberships();\n-            dyngroups = AnyObjectTO.class.cast(entityTO).getDynGroups();\n+        if (anyTO instanceof UserTO) {\n+            memberships = UserTO.class.cast(anyTO).getMemberships();\n+            dyngroups = UserTO.class.cast(anyTO).getDynGroups();\n+        } else if (anyTO instanceof AnyObjectTO) {\n+            memberships = AnyObjectTO.class.cast(anyTO).getMemberships();\n+            dyngroups = AnyObjectTO.class.cast(anyTO).getDynGroups();\n         } else {\n             memberships = Collections.<MembershipTO>emptyList();\n             dyngroups = Collections.<String>emptyList();\n         }\n \n-        final List<GroupTO> groups = new ArrayList<>();\n+        List<GroupTO> groups = new ArrayList<>();\n         CollectionUtils.collect(memberships, new Transformer<MembershipTO, GroupTO>() {\n \n             @Override\n@@ -83,7 +171,7 @@ public GroupTO transform(final String input) {\n             }\n         }, groups);\n \n-        final Set<String> auxClasses = new HashSet<>(entityTO.getAuxClasses());\n+        Set<String> auxClasses = new HashSet<>(anyTO.getAuxClasses());\n         for (GroupTO groupTO : groups) {\n             auxClasses.addAll(groupTO.getAuxClasses());\n         }"},{"sha":"8a50f86848075d1aba5c6f122d42f8961c980597","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":12,"deletions":17,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -21,48 +21,43 @@\n import java.io.Serializable;\n \n import java.util.List;\n-\n+import org.apache.syncope.client.console.layout.AnyObjectForm;\n+import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.wicket.PageReference;\n \n-public class AnyObjectWizardBuilder extends AnyWizardBuilder<AnyObjectTO> implements Serializable {\n+public class AnyObjectWizardBuilder extends AnyWizardBuilder<AnyObjectTO> implements AnyObjectForm {\n \n     private static final long serialVersionUID = -2480279868319546243L;\n \n-    /**\n-     * Construct.\n-     *\n-     * @param anyObjectTO any object TO.\n-     * @param anyTypeClasses any type classes\n-     * @param pageRef Caller page reference.\n-     */\n     public AnyObjectWizardBuilder(\n             final AnyObjectTO anyObjectTO,\n             final List<String> anyTypeClasses,\n+            final AnyObjectFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n-        super(anyObjectTO, anyTypeClasses, pageRef);\n+\n+        super(anyObjectTO, anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     @Override\n     protected Serializable onApplyInternal(final AnyHandler<AnyObjectTO> modelObject) {\n         final AnyObjectTO inner = modelObject.getInnerObject();\n \n-        final ProvisioningResult<AnyObjectTO> actual;\n-\n+        ProvisioningResult<AnyObjectTO> actual;\n         if (inner.getKey() == null) {\n             actual = anyObjectRestClient.create(AnyObjectTO.class.cast(inner));\n         } else {\n-            final AnyObjectPatch patch = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n+            AnyObjectPatch patch = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n \n-            // update user just if it is changed\n-            if (!patch.isEmpty()) {\n-                actual = anyObjectRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n-            } else {\n+            // update just if it is changed\n+            if (patch.isEmpty()) {\n                 actual = new ProvisioningResult<>();\n                 actual.setAny(inner);\n+            } else {\n+                actual = anyObjectRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n             }\n         }\n "},{"sha":"624b3f2cea791d655ce6dfa1139a5db70a5e0238","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":74,"deletions":26,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -18,13 +18,15 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import java.io.Serializable;\n-\n import java.util.Collections;\n import java.util.List;\n-\n import org.apache.syncope.client.console.commons.Mode;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.layout.AbstractAnyFormLayout;\n+import org.apache.syncope.client.console.layout.AnyForm;\n+import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -34,80 +36,126 @@\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public abstract class AnyWizardBuilder<T extends AnyTO> extends AjaxWizardBuilder<AnyHandler<T>>\n-        implements Serializable {\n+public abstract class AnyWizardBuilder<A extends AnyTO> extends AjaxWizardBuilder<AnyHandler<A>> {\n \n     private static final long serialVersionUID = -2480279868319546243L;\n \n     protected final AnyObjectRestClient anyObjectRestClient = new AnyObjectRestClient();\n \n     protected final List<String> anyTypeClasses;\n \n+    protected AbstractAnyFormLayout<A, ? extends AnyForm<A>> formLayoutInfo;\n+\n     /**\n      * Construct.\n      *\n      * @param anyTO any\n      * @param anyTypeClasses any type classes\n-     * @param pageRef Caller page reference.\n+     * @param formLayoutInfo form layout info\n+     * @param pageRef caller page reference.\n      */\n-    public AnyWizardBuilder(final T anyTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n+    public AnyWizardBuilder(\n+            final A anyTO,\n+            final List<String> anyTypeClasses,\n+            final AbstractAnyFormLayout<A, ? extends AnyForm<A>> formLayoutInfo,\n+            final PageReference pageRef) {\n+\n         super(new AnyHandler<>(anyTO), pageRef);\n         this.anyTypeClasses = anyTypeClasses;\n+        this.formLayoutInfo = formLayoutInfo;\n     }\n \n     /**\n      * Construct.\n      *\n      * @param handler any handler\n      * @param anyTypeClasses any type classes\n-     * @param pageRef Caller page reference.\n+     * @param formLayoutInfo form layout info\n+     * @param pageRef caller page reference.\n      */\n     public AnyWizardBuilder(\n-            final AnyHandler<T> handler,\n+            final AnyHandler<A> handler,\n             final List<String> anyTypeClasses,\n+            final AbstractAnyFormLayout<A, ? extends AnyForm<A>> formLayoutInfo,\n             final PageReference pageRef) {\n+\n         super(handler, pageRef);\n         this.anyTypeClasses = anyTypeClasses;\n+        this.formLayoutInfo = formLayoutInfo;\n     }\n \n     @Override\n-    protected WizardModel buildModelSteps(final AnyHandler<T> modelObject, final WizardModel wizardModel) {\n-        final String[] clazzes = anyTypeClasses.toArray(new String[] {});\n+    protected WizardModel buildModelSteps(final AnyHandler<A> modelObject, final WizardModel wizardModel) {\n         // optional details panel step\n         addOptionalDetailsPanel(modelObject, wizardModel);\n \n-        if ((this instanceof GroupWizardBuilder) && (modelObject.getInnerObject() instanceof GroupTO)) {\n-            wizardModel.add(new Ownership(GroupHandler.class.cast(modelObject), pageRef));\n-            wizardModel.add(new DynamicMemberships(GroupHandler.class.cast(modelObject)));\n+        if ((this instanceof GroupWizardBuilder)\n+                && (modelObject.getInnerObject() instanceof GroupTO)\n+                && (formLayoutInfo instanceof GroupFormLayoutInfo)) {\n+\n+            GroupFormLayoutInfo groupFormLayoutInfo = GroupFormLayoutInfo.class.cast(formLayoutInfo);\n+            if (groupFormLayoutInfo.isOwnership()) {\n+                wizardModel.add(new Ownership(GroupHandler.class.cast(modelObject), pageRef));\n+            }\n+            if (groupFormLayoutInfo.isDynamicMemberships()) {\n+                wizardModel.add(new DynamicMemberships(GroupHandler.class.cast(modelObject)));\n+            }\n         }\n \n-        wizardModel.add(new AuxClasses(modelObject.getInnerObject(), clazzes));\n+        if (formLayoutInfo.isAuxClasses()) {\n+            wizardModel.add(new AuxClasses(modelObject.getInnerObject(), anyTypeClasses));\n+        }\n \n         // attributes panel steps\n-        wizardModel.add(new PlainAttrs(modelObject.getInnerObject(), null, Mode.ADMIN, clazzes));\n-        wizardModel.add(new DerAttrs(modelObject.getInnerObject(), clazzes));\n-        wizardModel.add(new VirAttrs(modelObject.getInnerObject(), clazzes));\n+        if (formLayoutInfo.isPlainAttrs()) {\n+            wizardModel.add(new PlainAttrs(\n+                    modelObject.getInnerObject(),\n+                    null,\n+                    Mode.ADMIN,\n+                    anyTypeClasses,\n+                    formLayoutInfo.getWhichPlainAttrs()));\n+        }\n+        if (formLayoutInfo.isDerAttrs()) {\n+            wizardModel.add(new DerAttrs(\n+                    modelObject.getInnerObject(), anyTypeClasses, formLayoutInfo.getWhichDerAttrs()));\n+        }\n+        if (formLayoutInfo.isVirAttrs()) {\n+            wizardModel.add(new VirAttrs(\n+                    modelObject.getInnerObject(), anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n+        }\n+\n+        // role panel step (just available for users)\n+        if ((this instanceof UserWizardBuilder)\n+                && (modelObject.getInnerObject() instanceof UserTO)\n+                && (formLayoutInfo instanceof UserFormLayoutInfo)\n+                && UserFormLayoutInfo.class.cast(formLayoutInfo).isRoles()) {\n \n-        // role panel step (jst available for users)\n-        if ((this instanceof UserWizardBuilder) && (modelObject.getInnerObject() instanceof UserTO)) {\n             wizardModel.add(new Roles(UserTO.class.cast(modelObject.getInnerObject())));\n         }\n \n-        // relationship panel step (jst available for users)\n-        if (!(this instanceof GroupWizardBuilder)) {\n+        // relationship panel step (available for users and any objects)\n+        if (((formLayoutInfo instanceof UserFormLayoutInfo)\n+                && UserFormLayoutInfo.class.cast(formLayoutInfo).isRelationships())\n+                || ((formLayoutInfo instanceof AnyObjectFormLayoutInfo)\n+                && AnyObjectFormLayoutInfo.class.cast(formLayoutInfo).isRelationships())) {\n+\n             wizardModel.add(new Relationships(modelObject.getInnerObject(), pageRef));\n         }\n \n         // resource panel step\n-        wizardModel.add(new Resources(modelObject.getInnerObject()));\n+        if (formLayoutInfo.isResources()) {\n+            wizardModel.add(new Resources(modelObject.getInnerObject()));\n+        }\n+\n         return wizardModel;\n     }\n \n-    protected AnyWizardBuilder<T> addOptionalDetailsPanel(\n-            final AnyHandler<T> modelObject, final WizardModel wizardModel) {\n+    protected AnyWizardBuilder<A> addOptionalDetailsPanel(\n+            final AnyHandler<A> modelObject, final WizardModel wizardModel) {\n+\n         if (modelObject.getInnerObject().getKey() != null) {\n             wizardModel.add(new Details<>(\n-                    modelObject, new ListModel<>(Collections.<StatusBean>emptyList()), pageRef, true));\n+                    modelObject, new ListModel<>(Collections.<StatusBean>emptyList()), true, pageRef));\n         }\n         return this;\n     }"},{"sha":"b70a1c03788c77b4a611f50893003e1e6f0c8391","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -47,7 +46,7 @@ public class AuxClasses extends WizardStep {\n \n     private final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    public <T extends AnyTO> AuxClasses(final T entityTO, final String... anyTypeClass) {\n+    public <T extends AnyTO> AuxClasses(final T entityTO, final List<String> anyTypeClasses) {\n         this.setOutputMarkupId(true);\n \n         final Fragment fragment;\n@@ -98,7 +97,7 @@ public MembershipTO getObject(\n                     \"groups\", new ListModel<>(memberships),\n                     new AjaxPalettePanel.Builder.Query<MembershipTO>() {\n \n-                private static final long serialVersionUID = 1L;\n+                private static final long serialVersionUID = -7223078772249308813L;\n \n                 @Override\n                 public List<MembershipTO> execute(final String filter) {\n@@ -142,11 +141,9 @@ public String transform(final String input) {\n         }\n         add(fragment);\n \n-        final List<String> current = Arrays.asList(anyTypeClass);\n-\n         final List<String> choices = new ArrayList<>();\n         for (AnyTypeClassTO aux : new AnyTypeClassRestClient().list()) {\n-            if (!current.contains(aux.getKey())) {\n+            if (!anyTypeClasses.contains(aux.getKey())) {\n                 choices.add(aux.getKey());\n             }\n         }"},{"sha":"c8ccfee72283d1359283402cd92c183d00493651","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":44,"deletions":61,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -19,88 +19,44 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Transformer;\n+import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.MarkupStream;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n \n-public class DerAttrs extends AbstractAttrs {\n+public class DerAttrs extends AbstractAttrs<DerSchemaTO> {\n \n     private static final long serialVersionUID = -5387344116983102292L;\n \n-    public <T extends AnyTO> DerAttrs(final T entityTO, final String... anyTypeClass) {\n-        super(entityTO);\n-        setOutputMarkupId(true);\n+    public <T extends AnyTO> DerAttrs(\n+            final T anyTO,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichDerAttrs) {\n \n-        final LoadableDetachableModel<List<AttrTO>> derAttrTOs = new LoadableDetachableModel<List<AttrTO>>() {\n+        super(anyTO, anyTypeClasses, whichDerAttrs);\n \n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<AttrTO> load() {\n-                List<String> anyTypeClasses = CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n-                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(Arrays.asList(anyTypeClass)));\n-\n-                List<DerSchemaTO> derSchemas = Collections.emptyList();\n-                if (!anyTypeClasses.isEmpty()) {\n-                    derSchemas =\n-                            schemaRestClient.getSchemas(SchemaType.DERIVED, anyTypeClasses.toArray(new String[] {}));\n-                }\n-\n-                final Map<String, AttrTO> currents = entityTO.getDerAttrMap();\n-                entityTO.getDerAttrs().clear();\n-\n-                // This conversion from set to lis is required by the ListView.\n-                // Not performed by using collect parameter because entityTO change is required.\n-                return new ArrayList<>(\n-                        CollectionUtils.collect(derSchemas, new Transformer<DerSchemaTO, AttrTO>() {\n-\n-                            @Override\n-                            public AttrTO transform(final DerSchemaTO input) {\n-                                AttrTO attrTO = currents.get(input.getKey());\n-                                if (attrTO == null) {\n-                                    attrTO = new AttrTO();\n-                                    attrTO.setSchema(input.getKey());\n-                                }\n-                                return attrTO;\n-                            }\n-                        }, entityTO.getDerAttrs()));\n-            }\n-        };\n-\n-        final WebMarkupContainer attributesContainer = new WebMarkupContainer(\"derAttrContainer\");\n-        attributesContainer.setOutputMarkupId(true);\n-        add(attributesContainer);\n-\n-        ListView<AttrTO> attributes = new ListView<AttrTO>(\"attrs\", derAttrTOs) {\n+        add(new ListView<AttrTO>(\"schemas\", attrTOs) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             public void renderHead(final IHeaderResponse response) {\n                 super.renderHead(response);\n-                if (derAttrTOs.getObject().isEmpty()) {\n+                if (attrTOs.getObject().isEmpty()) {\n                     response.render(OnDomReadyHeaderItem.forScript(\n                             String.format(\"$('#emptyPlaceholder').append(\\\"%s\\\")\", getString(\"attribute.empty.list\"))));\n                 }\n@@ -114,26 +70,53 @@ public void onComponentTagBody(final MarkupStream markupStream, final ComponentT\n \n             @Override\n             protected void populateItem(final ListItem<AttrTO> item) {\n-                final AttrTO attrTO = item.getModelObject();\n+                AttrTO attrTO = item.getModelObject();\n \n-                final IModel<String> model;\n-                final List<String> values = attrTO.getValues();\n+                IModel<String> model;\n+                List<String> values = attrTO.getValues();\n                 if (values == null || values.isEmpty()) {\n                     model = new ResourceModel(\"derived.emptyvalue.message\", StringUtils.EMPTY);\n                 } else {\n                     model = new Model<>(values.get(0));\n                 }\n \n-                final AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n-                        \"panel\", attrTO.getSchema(), model, false);\n-\n+                AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), model, false);\n                 panel.setEnabled(false);\n                 panel.setRequired(true);\n                 panel.setOutputMarkupId(true);\n                 item.add(panel);\n+            }\n+        });\n+    }\n \n+    @Override\n+    protected SchemaType getSchemaType() {\n+        return SchemaType.DERIVED;\n+    }\n+\n+    @Override\n+    protected Set<AttrTO> getAttrsFromAnyTO() {\n+        return anyTO.getDerAttrs();\n+    }\n+\n+    @Override\n+    protected void setAttrs() {\n+        List<AttrTO> attrs = new ArrayList<>();\n+\n+        Map<String, AttrTO> attrMap = anyTO.getDerAttrMap();\n+\n+        for (DerSchemaTO schema : schemas.values()) {\n+            AttrTO attrTO = new AttrTO();\n+            attrTO.setSchema(schema.getKey());\n+            if (attrMap.containsKey(schema.getKey())) {\n+                attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n             }\n-        };\n-        attributesContainer.add(attributes);\n+\n+            attrs.add(attrTO);\n+        }\n+\n+        anyTO.getDerAttrs().clear();\n+        anyTO.getDerAttrs().addAll(attrs);\n     }\n+\n }"},{"sha":"41a557302ea4299385e0f52a50a4f68339c4c122","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Details.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -40,8 +40,9 @@\n     public Details(\n             final AnyHandler<T> handler,\n             final IModel<List<StatusBean>> statusModel,\n-            final PageReference pageRef,\n-            final boolean includeStatusPanel) {\n+            final boolean includeStatusPanel,\n+            final PageReference pageRef) {\n+\n         this.pageRef = pageRef;\n \n         T anyTO = handler.getInnerObject();"},{"sha":"610f2b8a951e37581c0836d2419fcf3a9f4e8ba7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupDetails.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -34,15 +34,15 @@ public GroupDetails(\n             final GroupHandler groupHandler,\n             final IModel<List<StatusBean>> statusModel,\n             final boolean templateMode,\n-            final PageReference pageRef,\n-            final boolean includeStatusPanel) {\n-        super(groupHandler, statusModel, pageRef, includeStatusPanel);\n+            final boolean includeStatusPanel,\n+            final PageReference pageRef) {\n+\n+        super(groupHandler, statusModel, includeStatusPanel, pageRef);\n \n         final GroupTO groupTO = GroupHandler.class.cast(groupHandler).getInnerObject();\n \n         final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", \"name\",\n                 new PropertyModel<String>(groupTO, \"name\"), false);\n-\n         if (!templateMode) {\n             name.addRequiredLabel();\n         }"},{"sha":"e9fe94b938bf2ba8f271a867879be6730ac43d0a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":22,"deletions":23,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -22,6 +22,8 @@\n import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.layout.GroupForm;\n+import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.AnyOperations;\n@@ -32,21 +34,19 @@\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> {\n+public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> implements GroupForm {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n \n     private final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    /**\n-     * Construct.\n-     *\n-     * @param groupTO any\n-     * @param anyTypeClasses any type classes\n-     * @param pageRef Caller page reference.\n-     */\n-    public GroupWizardBuilder(final GroupTO groupTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n-        super(new GroupHandler(groupTO), anyTypeClasses, pageRef);\n+    public GroupWizardBuilder(\n+            final GroupTO groupTO,\n+            final List<String> anyTypeClasses,\n+            final GroupFormLayoutInfo formLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(new GroupHandler(groupTO), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     /**\n@@ -65,22 +65,21 @@ public AjaxWizardBuilder<AnyHandler<GroupTO>> setItem(final AnyHandler<GroupTO>\n \n     @Override\n     protected Serializable onApplyInternal(final AnyHandler<GroupTO> modelObject) {\n-        final ProvisioningResult<GroupTO> actual;\n-\n-        GroupTO toBeProcessed = modelObject instanceof GroupHandler\n+        GroupTO inner = modelObject instanceof GroupHandler\n                 ? GroupHandler.class.cast(modelObject).fillDynamicConditions()\n                 : modelObject.getInnerObject();\n \n-        if (toBeProcessed.getKey() == null) {\n-            actual = groupRestClient.create(toBeProcessed);\n+        ProvisioningResult<GroupTO> actual;\n+        if (inner.getKey() == null) {\n+            actual = groupRestClient.create(inner);\n         } else {\n-            final GroupPatch patch = AnyOperations.diff(toBeProcessed, getOriginalItem().getInnerObject(), false);\n-            // update user just if it is changed\n-            if (!patch.isEmpty()) {\n-                actual = groupRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n-            } else {\n+            GroupPatch patch = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n+            // update just if it is changed\n+            if (patch.isEmpty()) {\n                 actual = new ProvisioningResult<>();\n-                actual.setAny(toBeProcessed);\n+                actual.setAny(inner);\n+            } else {\n+                actual = groupRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n             }\n         }\n \n@@ -93,8 +92,8 @@ protected GroupWizardBuilder addOptionalDetailsPanel(\n         wizardModel.add(new GroupDetails(\n                 GroupHandler.class.cast(modelObject),\n                 new ListModel<>(Collections.<StatusBean>emptyList()),\n-                false, pageRef,\n-                modelObject.getInnerObject().getKey() != null));\n+                false,\n+                modelObject.getInnerObject().getKey() != null, pageRef));\n         return this;\n     }\n }"},{"sha":"dc2b5c243c2e11fd400bcce289ddaf8c3ba16be1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":46,"deletions":88,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -19,15 +19,10 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Comparator;\n import java.util.Date;\n-import java.util.HashMap;\n-import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.collections4.CollectionUtils;\n+import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Mode;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n@@ -40,10 +35,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n@@ -55,46 +48,33 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n \n-public class PlainAttrs extends AbstractAttrs {\n+public class PlainAttrs extends AbstractAttrs<PlainSchemaTO> {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n     private final Mode mode;\n \n-    private Map<String, PlainSchemaTO> schemas = new LinkedHashMap<>();\n-\n     public <T extends AnyTO> PlainAttrs(\n-            final T entityTO, final Form<?> form, final Mode mode, final String... anyTypeClass) {\n-        super(entityTO);\n-        this.setOutputMarkupId(true);\n+            final T anyTO,\n+            final Form<?> form,\n+            final Mode mode,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichPlainAttrs) {\n \n+        super(anyTO, anyTypeClasses, whichPlainAttrs);\n         this.mode = mode;\n \n-        final LoadableDetachableModel<List<AttrTO>> plainAttrTOs = new LoadableDetachableModel<List<AttrTO>>() {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected List<AttrTO> load() {\n-                setPlainSchemas(CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n-                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(Arrays.asList(anyTypeClass))));\n-                setAttrs();\n-                return new ArrayList<>(entityTO.getPlainAttrs());\n-            }\n-        };\n-\n-        add(new ListView<AttrTO>(\"schemas\", plainAttrTOs) {\n+        add(new ListView<AttrTO>(\"schemas\", attrTOs) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             public void renderHead(final IHeaderResponse response) {\n                 super.renderHead(response);\n-                if (plainAttrTOs.getObject().isEmpty()) {\n+                if (attrTOs.getObject().isEmpty()) {\n                     response.render(OnDomReadyHeaderItem.forScript(\n                             String.format(\"$('#emptyPlaceholder').append(\\\"%s\\\")\", getString(\"attribute.empty.list\"))));\n                 }\n@@ -103,105 +83,82 @@ public void renderHead(final IHeaderResponse response) {\n             @Override\n             @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n             protected void populateItem(final ListItem<AttrTO> item) {\n-                final AttrTO attributeTO = (AttrTO) item.getDefaultModelObject();\n-\n-                final FieldPanel panel = getFieldPanel(schemas.get(attributeTO.getSchema()));\n+                AttrTO attrTO = item.getModelObject();\n \n-                if (mode == Mode.TEMPLATE || !schemas.get(attributeTO.getSchema()).isMultivalue()) {\n+                FieldPanel panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n+                if (mode == Mode.TEMPLATE || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n                     item.add(panel);\n-                    panel.setNewModel(attributeTO.getValues());\n+                    panel.setNewModel(attrTO.getValues());\n                 } else {\n                     item.add(new MultiFieldPanel.Builder<>(\n-                            new PropertyModel<List<String>>(attributeTO, \"values\")).build(\n+                            new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                             \"panel\",\n-                            attributeTO.getSchema(),\n+                            attrTO.getSchema(),\n                             panel));\n                 }\n             }\n         });\n     }\n \n-    private void setPlainSchemas(final List<String> anyTypeClasses) {\n-        List<PlainSchemaTO> plainSchemas = Collections.emptyList();\n-        if (!anyTypeClasses.isEmpty()) {\n-            plainSchemas = schemaRestClient.getSchemas(SchemaType.PLAIN, anyTypeClasses.toArray(new String[] {}));\n-        }\n-\n-        schemas.clear();\n-\n-        // SYNCOPE-790\n-        AttrTO attrLayout = null;\n-        if (attrLayout != null && mode != Mode.TEMPLATE) {\n-            // 1. remove attributes not selected for display\n-            schemaRestClient.filter(plainSchemas, attrLayout.getValues(), true);\n-            // 2. sort remainig attributes according to configuration, e.g. attrLayout\n-            final Map<String, Integer> attrLayoutMap = new HashMap<>(attrLayout.getValues().size());\n-            for (int i = 0; i < attrLayout.getValues().size(); i++) {\n-                attrLayoutMap.put(attrLayout.getValues().get(i), i);\n-            }\n-            Collections.sort(plainSchemas, new Comparator<PlainSchemaTO>() {\n-\n-                @Override\n-                public int compare(final PlainSchemaTO schema1, final PlainSchemaTO schema2) {\n-                    int value = 0;\n+    @Override\n+    protected SchemaType getSchemaType() {\n+        return SchemaType.PLAIN;\n+    }\n \n-                    if (attrLayoutMap.get(schema1.getKey()) > attrLayoutMap.get(schema2.getKey())) {\n-                        value = 1;\n-                    } else if (attrLayoutMap.get(schema1.getKey()) < attrLayoutMap.get(schema2.getKey())) {\n-                        value = -1;\n-                    }\n+    @Override\n+    protected boolean reoderSchemas() {\n+        return super.reoderSchemas() && mode != Mode.TEMPLATE;\n+    }\n \n-                    return value;\n-                }\n-            });\n-        }\n-        for (PlainSchemaTO schemaTO : plainSchemas) {\n-            schemas.put(schemaTO.getKey(), schemaTO);\n-        }\n+    @Override\n+    protected Set<AttrTO> getAttrsFromAnyTO() {\n+        return anyTO.getPlainAttrs();\n     }\n \n-    private void setAttrs() {\n-        final List<AttrTO> entityData = new ArrayList<>();\n+    @Override\n+    protected void setAttrs() {\n+        List<AttrTO> attrs = new ArrayList<>();\n \n-        final Map<String, AttrTO> attrMap = entityTO.getPlainAttrMap();\n+        Map<String, AttrTO> attrMap = anyTO.getPlainAttrMap();\n \n         for (PlainSchemaTO schema : schemas.values()) {\n-            final AttrTO attributeTO = new AttrTO();\n-            attributeTO.setSchema(schema.getKey());\n+            AttrTO attrTO = new AttrTO();\n+            attrTO.setSchema(schema.getKey());\n \n             if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n-                attributeTO.getValues().add(\"\");\n+                attrTO.getValues().add(\"\");\n \n                 // is important to set readonly only after values setting\n-                attributeTO.setReadonly(schema.isReadonly());\n+                attrTO.setReadonly(schema.isReadonly());\n             } else {\n-                attributeTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+                attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n             }\n-            entityData.add(attributeTO);\n+            attrs.add(attrTO);\n         }\n \n-        entityTO.getPlainAttrs().clear();\n-        entityTO.getPlainAttrs().addAll(entityData);\n+        anyTO.getPlainAttrs().clear();\n+        anyTO.getPlainAttrs().addAll(attrs);\n     }\n \n     @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n-        final boolean required = mode == Mode.TEMPLATE\n+        boolean required = mode == Mode.TEMPLATE\n                 ? false\n                 : schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n \n-        final boolean readOnly = mode == Mode.TEMPLATE ? false : schemaTO.isReadonly();\n+        boolean readOnly = mode == Mode.TEMPLATE ? false : schemaTO.isReadonly();\n \n-        final AttrSchemaType type = mode == Mode.TEMPLATE ? AttrSchemaType.String : schemaTO.getType();\n+        AttrSchemaType type = mode == Mode.TEMPLATE ? AttrSchemaType.String : schemaTO.getType();\n \n-        final FieldPanel panel;\n+        FieldPanel panel;\n         switch (type) {\n             case Boolean:\n                 panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getKey(), new Model<Boolean>(), false);\n                 panel.setRequired(required);\n                 break;\n+\n             case Date:\n-                final String dataPattern = schemaTO.getConversionPattern() == null\n+                String dataPattern = schemaTO.getConversionPattern() == null\n                         ? SyncopeConstants.DEFAULT_DATE_PATTERN\n                         : schemaTO.getConversionPattern();\n \n@@ -216,6 +173,7 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n                 }\n \n                 break;\n+\n             case Enum:\n                 panel = new AjaxDropDownChoicePanel<>(\"panel\", schemaTO.getKey(), new Model<String>(), false);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));"},{"sha":"c80247ee71fbc12f14b59c8596426548dddd1913","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -38,7 +38,7 @@ public class Roles extends WizardStep {\n     public <T extends AnyTO> Roles(final UserTO entityTO) {\n         this.setOutputMarkupId(true);\n \n-        final ArrayList<String> allRoles = CollectionUtils.collect(new RoleRestClient().getAll(),\n+        final ArrayList<String> allRoles = CollectionUtils.collect(new RoleRestClient().list(),\n                 EntityTOUtils.<RoleTO>keyTransformer(), new ArrayList<String>());\n \n         add(new AjaxPalettePanel.Builder<String>().build(\"roles\","},{"sha":"28a7d911e5ae4a50564a3cbe83510457e7a240d1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserDetails.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -50,9 +50,11 @@ public UserDetails(\n             final IModel<List<StatusBean>> statusModel,\n             final boolean resetPassword,\n             final boolean templateMode,\n-            final PageReference pageRef,\n-            final boolean includeStatusPanel) {\n-        super(handler, statusModel, pageRef, includeStatusPanel);\n+            final boolean includeStatusPanel,\n+            final boolean showPasswordManagement,\n+            final PageReference pageRef) {\n+\n+        super(handler, statusModel, includeStatusPanel, pageRef);\n \n         final UserTO userTO = handler.getInnerObject();\n         // ------------------------\n@@ -86,7 +88,7 @@ public Panel getPanel(final String panelId) {\n         }\n         ), model) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = -2898628183677758699L;\n \n             @Override\n             protected Component newTitle(final String markupId, final ITab tab, final Accordion.State state) {\n@@ -119,6 +121,7 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n \n         accordion.setOutputMarkupId(true);\n+        accordion.setVisible(showPasswordManagement);\n         add(accordion);\n         // ------------------------        \n     }"},{"sha":"192a74ec5b87569b352dfe9eef0624b43b0b80f0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserInformationPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserInformationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserInformationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserInformationPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -35,37 +35,37 @@ public <T extends AnyTO> UserInformationPanel(final String id, final UserTO user\n         // ------------------------\n         // Change password date\n         // ------------------------\n-        add(new Label(\"changePwdDate\", new Model<String>(userTO.getChangePwdDate() == null\n+        add(new Label(\"changePwdDate\", new Model<>(userTO.getChangePwdDate() == null\n                 ? StringUtils.EMPTY\n                 : SyncopeConsoleSession.get().getDateFormat().format(userTO.getChangePwdDate()))));\n         // ------------------------\n \n         // ------------------------\n         // Last login date\n         // ------------------------\n-        add(new Label(\"lastLoginDate\", new Model<String>(userTO.getLastLoginDate() == null\n+        add(new Label(\"lastLoginDate\", new Model<>(userTO.getLastLoginDate() == null\n                 ? StringUtils.EMPTY\n                 : SyncopeConsoleSession.get().getDateFormat().format(userTO.getLastLoginDate()))));\n         // ------------------------\n \n         // ------------------------\n         // Failed logins\n         // ------------------------\n-        add(new Label(\"failedLogins\", new Model<Integer>(userTO.getFailedLogins())));\n+        add(new Label(\"failedLogins\", new Model<>(userTO.getFailedLogins())));\n         // ------------------------\n \n         // ------------------------\n         // Token\n         // ------------------------\n-        add(new Label(\"token\", new Model<String>(userTO.getToken() == null\n+        add(new Label(\"token\", new Model<>(userTO.getToken() == null\n                 ? StringUtils.EMPTY\n                 : userTO.getToken())));\n         // ------------------------\n \n         // ------------------------\n         // Token expire time\n         // ------------------------\n-        add(new Label(\"tokenExpireTime\", new Model<String>(userTO.getTokenExpireTime() == null\n+        add(new Label(\"tokenExpireTime\", new Model<>(userTO.getTokenExpireTime() == null\n                 ? StringUtils.EMPTY\n                 : SyncopeConsoleSession.get().getDateFormat().format(userTO.getTokenExpireTime()))));\n         // ------------------------"},{"sha":"2f8b5f61833e4d234fbeac48b2653af364bd071a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":16,"deletions":18,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -24,6 +24,8 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.console.layout.UserForm;\n+import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.UserPatch;\n@@ -34,35 +36,29 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class UserWizardBuilder extends AnyWizardBuilder<UserTO> {\n+public class UserWizardBuilder extends AnyWizardBuilder<UserTO> implements UserForm {\n \n     private static final long serialVersionUID = 6716803168859873877L;\n \n     private final UserRestClient userRestClient = new UserRestClient();\n \n     private final IModel<List<StatusBean>> statusModel;\n \n-    /**\n-     * Construct.\n-     *\n-     * @param userTO any\n-     * @param anyTypeClasses any type classes\n-     * @param pageRef Caller page reference.\n-     */\n     public UserWizardBuilder(\n             final UserTO userTO,\n             final List<String> anyTypeClasses,\n+            final UserFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n-        super(userTO, anyTypeClasses, pageRef);\n+\n+        super(userTO, anyTypeClasses, formLayoutInfo, pageRef);\n         statusModel = new ListModel<>(new ArrayList<StatusBean>());\n     }\n \n     @Override\n     protected Serializable onApplyInternal(final AnyHandler<UserTO> modelObject) {\n-        final ProvisioningResult<UserTO> actual;\n-\n-        final UserTO inner = modelObject.getInnerObject();\n+        UserTO inner = modelObject.getInnerObject();\n \n+        ProvisioningResult<UserTO> actual;\n         if (inner.getKey() == null) {\n             actual = userRestClient.create(inner, StringUtils.isNotBlank(inner.getPassword()));\n         } else {\n@@ -71,12 +67,12 @@ protected Serializable onApplyInternal(final AnyHandler<UserTO> modelObject) {\n                 patch.setPassword(StatusUtils.buildPasswordPatch(inner.getPassword(), statusModel.getObject()));\n             }\n \n-            // update user just if it is changed\n-            if (!patch.isEmpty()) {\n-                actual = userRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n-            } else {\n+            // update just if it is changed\n+            if (patch.isEmpty()) {\n                 actual = new ProvisioningResult<>();\n                 actual.setAny(inner);\n+            } else {\n+                actual = userRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n             }\n         }\n \n@@ -88,8 +84,10 @@ protected UserWizardBuilder addOptionalDetailsPanel(\n             final AnyHandler<UserTO> modelObject, final WizardModel wizardModel) {\n \n         wizardModel.add(new UserDetails(\n-                modelObject, statusModel, false, false, pageRef,\n-                modelObject.getInnerObject().getKey() != null));\n+                modelObject, statusModel, false, false,\n+                modelObject.getInnerObject().getKey() != null,\n+                UserFormLayoutInfo.class.cast(formLayoutInfo).isPasswordManagement(),\n+                pageRef));\n         return this;\n     }\n "},{"sha":"21b7b9a9bb9cd5653ab2b1fa0c8e4d32dd67922c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":42,"deletions":61,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -19,90 +19,42 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Transformer;\n+import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n \n-public class VirAttrs extends AbstractAttrs {\n+public class VirAttrs extends AbstractAttrs<VirSchemaTO> {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    public <T extends AnyTO> VirAttrs(final T entityTO, final String... anyTypeClass) {\n-        super(entityTO);\n-        this.setOutputMarkupId(true);\n+    public <T extends AnyTO> VirAttrs(\n+            final T anyTO,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichVirAttrs) {\n \n-        final LoadableDetachableModel<List<AttrTO>> virAttrTOs = new LoadableDetachableModel<List<AttrTO>>() {\n+        super(anyTO, anyTypeClasses, whichVirAttrs);\n \n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected List<AttrTO> load() {\n-                List<String> anyTypeClasses = CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n-                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(Arrays.asList(anyTypeClass)));\n-\n-                List<VirSchemaTO> virSchemas = Collections.emptyList();\n-                if (!anyTypeClasses.isEmpty()) {\n-                    virSchemas =\n-                            schemaRestClient.getSchemas(SchemaType.VIRTUAL, anyTypeClasses.toArray(new String[] {}));\n-                }\n-\n-                final Map<String, AttrTO> currents = entityTO.getVirAttrMap();\n-                entityTO.getVirAttrs().clear();\n-\n-                // This conversion from set to lis is required by the ListView.\n-                // Not performed by using collect parameter because entityTO change is required.\n-                return new ArrayList<>(CollectionUtils.collect(virSchemas, new Transformer<VirSchemaTO, AttrTO>() {\n-\n-                    @Override\n-                    public AttrTO transform(final VirSchemaTO input) {\n-                        AttrTO attrTO = currents.get(input.getKey());\n-                        if (attrTO == null) {\n-                            attrTO = new AttrTO();\n-                            attrTO.setSchema(input.getKey());\n-                            attrTO.getValues().add(StringUtils.EMPTY);\n-                        } else if (attrTO.getValues().isEmpty()) {\n-                            attrTO.getValues().add(\"\");\n-                        }\n-\n-                        attrTO.setReadonly(input.isReadonly());\n-                        return attrTO;\n-                    }\n-                }, entityTO.getVirAttrs()));\n-            }\n-        };\n-\n-        final WebMarkupContainer attributesContainer = new WebMarkupContainer(\"virAttrContainer\");\n-        attributesContainer.setOutputMarkupId(true);\n-        add(attributesContainer);\n-\n-        ListView<AttrTO> attributes = new ListView<AttrTO>(\"attrs\", virAttrTOs) {\n+        add(new ListView<AttrTO>(\"schemas\", attrTOs) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             public void renderHead(final IHeaderResponse response) {\n                 super.renderHead(response);\n-                if (virAttrTOs.getObject().isEmpty()) {\n+                if (attrTOs.getObject().isEmpty()) {\n                     response.render(OnDomReadyHeaderItem.forScript(\n                             String.format(\"$('#emptyPlaceholder').append(\\\"%s\\\")\", getString(\"attribute.empty.list\"))));\n                 }\n@@ -115,17 +67,46 @@ protected void populateItem(final ListItem<AttrTO> item) {\n \n                 attrTO.setReadonly(attrTO.isReadonly());\n \n-                final AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n+                AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n                         \"panel\", attrTO.getSchema(), new Model<String>(), false);\n-\n                 item.add(new MultiFieldPanel.Builder<>(\n                         new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                         \"panel\",\n                         attrTO.getSchema(),\n                         panel).setEnabled(!attrTO.isReadonly()));\n             }\n-        };\n+        });\n+    }\n+\n+    @Override\n+    protected SchemaType getSchemaType() {\n+        return SchemaType.VIRTUAL;\n+    }\n+\n+    @Override\n+    protected Set<AttrTO> getAttrsFromAnyTO() {\n+        return anyTO.getVirAttrs();\n+    }\n+\n+    @Override\n+    protected void setAttrs() {\n+        List<AttrTO> attrs = new ArrayList<>();\n+\n+        Map<String, AttrTO> attrMap = anyTO.getVirAttrMap();\n+\n+        for (VirSchemaTO schema : schemas.values()) {\n+            AttrTO attrTO = new AttrTO();\n+            attrTO.setSchema(schema.getKey());\n+            if (attrMap.containsKey(schema.getKey())) {\n+                attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+            } else {\n+                attrTO.getValues().add(StringUtils.EMPTY);\n+            }\n+\n+            attrs.add(attrTO);\n+        }\n \n-        attributesContainer.add(attributes);\n+        anyTO.getVirAttrs().clear();\n+        anyTO.getVirAttrs().addAll(attrs);\n     }\n }"},{"sha":"c969faa6bbe18c1cb3c43026924795e1a498db4b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/layout/ConsoleLayoutInfoModal.html","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.html?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -0,0 +1,54 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n+\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/javascript/javascript.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/matchbrackets.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closebrackets.js\"></script>\n+    <script type=\"text/javascript\">\n+      function updateTextArea(editor) {\n+        document.getElementById(\"consoleLayoutInfoDefForm\").children[\"consoleLayoutInfo\"].value = editor.getValue();\n+      }\n+    </script>\n+    <style>\n+      .w_content_3 {\n+        padding: 0;\n+        color: #333333;\n+        font-family: Verdana,Tahoma,sans-serif;\n+        font-size: 100%;\n+        border: 1px solid #BBBBBB;\n+        padding: 1%;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <div style=\"padding: 1%;\">\n+      <div class=\"w_content_3\" id=\"consoleLayoutInfoDefForm\">\n+        <textarea wicket:id=\"consoleLayoutInfo\" id=\"consoleLayoutInfo\" name=\"consoleLayoutInfo\" style=\"width: 100%; height: 350px;\">\n+        </textarea>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"2f30d1f21ecb0706d315cdf956728ae861441fde","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/MailTemplateContentModal.html","status":"modified","additions":31,"deletions":33,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.html?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -17,39 +17,37 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title></title></head>\n-  <body>\n-    <wicket:head>\n-      <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n \n-      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n-      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/xml/xml.js\"></script>\n-      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n-      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n-      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n-      <script type=\"text/javascript\">\n-        function updateTextArea(editor) {\n-          document.getElementById(\"templateDefForm\").children[\"template\"].value = editor.getValue();\n-        }\n-      </script>\n-      <style>\n-        .w_content_3 {\n-          padding: 0;\n-          color: #333333;\n-          font-family: Verdana,Tahoma,sans-serif;\n-          font-size: 100%;\n-          border: 1px solid #BBBBBB;\n-          padding: 1%;\n-        }\n-      </style>\n-    </wicket:head>\n-    <wicket:panel>\n-      <div style=\"padding: 1%;\">\n-        <div class=\"w_content_3\" id=\"templateDefForm\">\n-          <textarea wicket:id=\"template\" id=\"template\" name=\"template\" style=\"width: 100%; height: 350px;\">\n-          </textarea>\n-        </div>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/xml/xml.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closetag.js\"></script>\n+    <script type=\"text/javascript\">\n+      function updateTextArea(editor) {\n+        document.getElementById(\"templateDefForm\").children[\"template\"].value = editor.getValue();\n+      }\n+    </script>\n+    <style>\n+      .w_content_3 {\n+        padding: 0;\n+        color: #333333;\n+        font-family: Verdana,Tahoma,sans-serif;\n+        font-size: 100%;\n+        border: 1px solid #BBBBBB;\n+        padding: 1%;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <div style=\"padding: 1%;\">\n+      <div class=\"w_content_3\" id=\"templateDefForm\">\n+        <textarea wicket:id=\"template\" id=\"template\" name=\"template\" style=\"width: 100%; height: 350px;\">\n+        </textarea>\n       </div>\n-    </wicket:panel>\n-  </body>\n+    </div>\n+  </wicket:panel>\n </html>\n\\ No newline at end of file"},{"sha":"6c705a957bcece1b8990be0f34f3c1ef0b3a2907","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -107,7 +107,6 @@\n                 <li wicket:id=\"securityquestionsLI\"><a href=\"#\" wicket:id=\"securityquestions\"><i class=\"fa fa-question\"></i><wicket:message key=\"securityQuestions\"/></a></li>\n                 <li wicket:id=\"workflowLI\"><a href=\"#\" wicket:id=\"workflow\"><i class=\"fa fa-share-alt\"></i><wicket:message key=\"workflow\"/></a></li>\n                 <li wicket:id=\"logsLI\"><a href=\"#\" wicket:id=\"logs\"><i class=\"fa fa-file-text-o\"></i><wicket:message key=\"logs\"/></a></li>\n-                <li wicket:id=\"layoutsLI\"><a href=\"#\" wicket:id=\"layouts\"><i class=\"fa fa-object-ungroup\"></i><wicket:message key=\"layouts\"/></a></li>\n                 <li wicket:id=\"typesLI\"><a href=\"#\" wicket:id=\"types\"><i class=\"fa fa-wrench\"></i><wicket:message key=\"types\"/></a></li>\n                 <li wicket:id=\"notificationsLI\"><a href=\"#\" wicket:id=\"notifications\"><i class=\"fa fa-envelope-o\"></i><wicket:message key=\"notifications\"/></a></li>\n                 <li wicket:id=\"parametersLI\"><a href=\"#\" wicket:id=\"parameters\"><i class=\"fa fa-cog\"></i><wicket:message key=\"parameters\"/></a></li>"},{"sha":"a5e0c549fde750308e99d2a2149b458910163f75","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Layouts.html","status":"removed","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLayouts.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLayouts.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLayouts.html?ref=8dc9ec5f75af0bfbd67f7daf897ee1d80bf5ef75","patch":"@@ -1,43 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-\n-    <section class=\"content-header\">\n-      <h1>\n-        &nbsp;\n-        <small>Work in progress</small>\n-      </h1>\n-      <ol class=\"breadcrumb\">\n-        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"/></a></li>\n-        <li class=\"active\"><wicket:message key=\"configuration\"/></li>\n-        <li class=\"active\"><wicket:message key=\"layouts\"/></li>\n-      </ol>\n-    </section>\n-\n-    <section class=\"content\">\n-      <div class=\"progress progress active\" style=\"margin:100px\">\n-        <div style=\"width: 70%\" aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"20\" role=\"progressbar\" class=\"progress-bar progress-bar-success progress-bar-striped\">\n-          <span class=\"sr-only\">20% Complete</span>\n-        </div>\n-      </div>\n-    </section>\n-\n-  </wicket:extend>\n-</html>\n\\ No newline at end of file"},{"sha":"0b51d5e6fe26781d4a1125700e4999e00cc9e282","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/XMLWorkflowEditorModalPanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.html?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -25,6 +25,7 @@\n     <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closetag.js\"></script>\n     <script type=\"text/javascript\">\n       function updateTextArea(editor) {\n         document.getElementById(\"workflowDefArea\").value = editor.getValue();"},{"sha":"a90a79091c87e74b3d495cc5ff2c8f8eed28ce2d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -45,6 +45,7 @@\n     <span wicket:id=\"panelEdit\">[plus]</span>\n     <span wicket:id=\"panelHtmlEdit\">[plus]</span>\n     <span wicket:id=\"panelTextEdit\">[plus]</span>\n+    <span wicket:id=\"panelLayoutEdit\">[plus]</span>\n     <span wicket:id=\"panelExport\">[plus]</span>\n     <span wicket:id=\"panelPropagationTasks\">[plus]</span>\n     <span wicket:id=\"panelNotificationTasks\">[plus]</span>\n@@ -69,7 +70,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentClaim\">\n-      <a href=\"#\" wicket:id=\"claimLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-thumbs-o-up\" alt=\"claim icon\" title=\"Claim\"></i></a>\n+      <a href=\"#\" wicket:id=\"claimLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-ticket\" alt=\"claim icon\" title=\"Claim\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentManageResources\">\n@@ -128,6 +129,10 @@\n       <a href=\"#\" wicket:id=\"textEditLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-file-text-o\" alt=\"text edit icon\" title=\"TEXT Edit\"></i></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentLayoutEdit\">\n+      <a href=\"#\" wicket:id=\"layoutEditLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-object-ungroup\" alt=\"layout edit icon\" title=\"Layout Edit\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentReset\">\n       <a href=\"#\" wicket:id=\"resetLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/reset.png\" alt=\"reset icon\" title=\"Reset sync token\"/></a>\n     </wicket:fragment>"},{"sha":"1ec59d54003edbded415ab10ecc81628beb6f61c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DerAttrs.html","status":"modified","additions":11,"deletions":14,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.html?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -16,18 +16,15 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\" >\n-  <head><title></title></head>\n-  <body>\n-    <wicket:panel>\n-      <div id=\"emptyPlaceholder\"/>\n-      <div wicket:id=\"derAttrContainer\">\n-        <div class=\"form-group\" wicket:id=\"attrs\">\n-          <span wicket:id=\"panel\">\n-            [panel for dynamic input type markup]\n-          </span>\n-        </div>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div id=\"emptyPlaceholder\"/>\n+    <div wicket:id=\"schemas\">\n+      <div class=\"form-group\">\n+        <span wicket:id=\"panel\">\n+          [panel for dynamic input type markup]\n+        </span>\n       </div>\n-    </wicket:panel>\n-  </body>\n-</html>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"1ec59d54003edbded415ab10ecc81628beb6f61c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/VirAttrs.html","status":"modified","additions":11,"deletions":14,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.html?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -16,18 +16,15 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\" >\n-  <head><title></title></head>\n-  <body>\n-    <wicket:panel>\n-      <div id=\"emptyPlaceholder\"/>\n-      <div wicket:id=\"virAttrContainer\">\n-        <div class=\"form-group\" wicket:id=\"attrs\">\n-          <span wicket:id=\"panel\">\n-            [panel for dynamic input type markup]\n-          </span>\n-        </div>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div id=\"emptyPlaceholder\"/>\n+    <div wicket:id=\"schemas\">\n+      <div class=\"form-group\">\n+        <span wicket:id=\"panel\">\n+          [panel for dynamic input type markup]\n+        </span>\n       </div>\n-    </wicket:panel>\n-  </body>\n-</html>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"e6027f1a2368b03e82d4579c0e8564601f69313e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowFormTO.java","status":"modified","additions":5,"deletions":15,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -38,14 +38,12 @@ public class WorkflowFormTO extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -7044543391316529128L;\n \n-    private String userKey;\n+    private String username;\n \n     private String taskId;\n \n     private String key;\n \n-    private String description;\n-\n     private Date createTime;\n \n     private Date dueDate;\n@@ -54,12 +52,12 @@ public class WorkflowFormTO extends AbstractBaseBean {\n \n     private final List<WorkflowFormPropertyTO> properties = new ArrayList<>();\n \n-    public String getUserKey() {\n-        return userKey;\n+    public String getUsername() {\n+        return username;\n     }\n \n-    public void setUserKey(final String userKey) {\n-        this.userKey = userKey;\n+    public void setUsername(final String username) {\n+        this.username = username;\n     }\n \n     public String getTaskId() {\n@@ -86,14 +84,6 @@ public void setCreateTime(final Date createTime) {\n         this.createTime = createTime;\n     }\n \n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    public void setDescription(final String description) {\n-        this.description = description;\n-    }\n-\n     public Date getDueDate() {\n         return dueDate;\n     }"},{"sha":"782a3d26cbde6350366c24164dbf0dbd1fda2e5d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import java.io.InputStream;\n import java.util.List;\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.Consumes;\n@@ -86,4 +87,35 @@ public interface RoleService extends JAXRSService {\n     @DELETE\n     @Path(\"{key}\")\n     void delete(@NotNull @PathParam(\"key\") String key);\n+\n+    /**\n+     * Gets the console layout information as JSON string for the role with the given key, if available.\n+     *\n+     * @param key role key\n+     * @return console layout information as JSON string for the role with the given key, if available\n+     */\n+    @GET\n+    @Path(\"{key}/consoleLayout\")\n+    @Produces({ MediaType.APPLICATION_JSON })\n+    Response getConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key);\n+\n+    /**\n+     * Sets the console layout information as JSON string for the role with the given key, if available.\n+     *\n+     * @param key role key\n+     * @param consoleLayoutInfoIn console layout information to be set\n+     */\n+    @PUT\n+    @Path(\"{key}/consoleLayout\")\n+    @Consumes({ MediaType.APPLICATION_JSON })\n+    void setConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key, InputStream consoleLayoutInfoIn);\n+\n+    /**\n+     * Removes the console layout information for the role with the given key, if available.\n+     *\n+     * @param key role key\n+     */\n+    @DELETE\n+    @Path(\"{key}/consoleLayout\")\n+    void removeConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"ced5dc70ecc59ccbefae8eb2da8d39667d91cb4b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RoleLogic.java","status":"modified","additions":34,"deletions":1,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -24,6 +24,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -99,6 +100,38 @@ public RoleTO delete(final String key) {\n         return deleted;\n     }\n \n+    @PreAuthorize(\"isAuthenticated()\")\n+    public String getConsoleLayoutInfo(final String key) {\n+        Role role = roleDAO.find(key);\n+        if (role == null) {\n+            LOG.error(\"Could not find role '\" + key + \"'\");\n+\n+            throw new NotFoundException(key);\n+        }\n+\n+        String consoleLayout = role.getConsoleLayoutInfo();\n+        if (StringUtils.isBlank(consoleLayout)) {\n+            LOG.error(\"Could not find console layout for Role '\" + key + \"'\");\n+\n+            throw new NotFoundException(\"Console layout for role \" + key);\n+        }\n+\n+        return consoleLayout;\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.ROLE_UPDATE + \"')\")\n+    public void setConsoleLayoutInfo(final String key, final String consoleLayout) {\n+        Role role = roleDAO.find(key);\n+        if (role == null) {\n+            LOG.error(\"Could not find role '\" + key + \"'\");\n+\n+            throw new NotFoundException(key);\n+        }\n+\n+        role.setConsoleLayoutInfo(consoleLayout);\n+        roleDAO.save(role);\n+    }\n+\n     @Override\n     protected RoleTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n@@ -115,7 +148,7 @@ protected RoleTO resolveReference(final Method method, final Object... args)\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 return binder.getRoleTO(roleDAO.find(key));\n             } catch (Throwable ignore) {"},{"sha":"441f87a0a977c4d538bffb601dafbb0f1dfa39cd","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Role.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -33,4 +33,8 @@ public interface Role extends ProvidedKeyEntity {\n     DynRoleMembership getDynMembership();\n \n     void setDynMembership(DynRoleMembership dynMembership);\n+\n+    String getConsoleLayoutInfo();\n+\n+    void setConsoleLayoutInfo(String consoleLayoutInfo);\n }"},{"sha":"919c3cb29154e474883970e9d76dbd1f5f4d8efe","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPARole.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -31,6 +31,7 @@\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n import javax.persistence.JoinTable;\n+import javax.persistence.Lob;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n@@ -70,6 +71,9 @@ public class JPARole extends AbstractProvidedKeyEntity implements Role {\n     @Valid\n     private JPADynRoleMembership dynMembership;\n \n+    @Lob\n+    private String consoleLayoutInfo;\n+\n     @Override\n     public Set<String> getEntitlements() {\n         return entitlements;\n@@ -96,4 +100,15 @@ public void setDynMembership(final DynRoleMembership dynMembership) {\n         checkType(dynMembership, JPADynRoleMembership.class);\n         this.dynMembership = (JPADynRoleMembership) dynMembership;\n     }\n+\n+    @Override\n+    public String getConsoleLayoutInfo() {\n+        return consoleLayoutInfo;\n+    }\n+\n+    @Override\n+    public void setConsoleLayoutInfo(final String consoleLayoutInfo) {\n+        this.consoleLayoutInfo = consoleLayoutInfo;\n+    }\n+\n }"},{"sha":"b5b4c9addcc85f1203d6300109e23dafb572c4e0","filename":"core/persistence-jpa/src/main/resources/domains/MasterContent.xml","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -112,20 +112,6 @@ under the License.\n               owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"return.password.value\"/>\n   <CPlainAttrValue id=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n                    attribute_id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n-  \n-  <!-- For usage with admin console -->\n-  <PlainSchema id=\"admin.user.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.user.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"admin.group.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.group.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"admin.membership.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.membership.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n \n   <AnyType id=\"USER\" kind=\"USER\"/>\n   <AnyTypeClass id=\"BaseUser\"/>"},{"sha":"e82efa61a1f786a91844f31d02346be288b9828f","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -83,7 +83,7 @@ public static void unsetAuthContext() {\n \n     @Test\n     public void readPlainSchemas() {\n-        assertEquals(17, plainSchemaDAO.findAll().size());\n+        assertEquals(11, plainSchemaDAO.findAll().size());\n     }\n \n     @Test"},{"sha":"8ded61864a7588f819e3ddbcbf3a15894b3af29e","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PlainSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -47,7 +47,7 @@ public class PlainSchemaTest extends AbstractTest {\n     @Test\n     public void findAll() {\n         List<PlainSchema> schemas = plainSchemaDAO.findAll();\n-        assertEquals(44, schemas.size());\n+        assertEquals(38, schemas.size());\n     }\n \n     @Test"},{"sha":"f1a88a0bd70d506041c3149db440f34158dc84e2","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":15,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -113,20 +113,6 @@ under the License.\n   <CPlainAttrValue id=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n                    attribute_id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n   \n-  <!-- For usage with admin console -->\n-  <PlainSchema id=\"admin.user.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.user.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"admin.group.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.group.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"admin.membership.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.membership.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n   <!-- sample policies -->\n   <PullPolicy id=\"66691e96-285f-4464-bc19-e68384ea4c85\" description=\"a pull policy\"\n               specification='{\"conflictResolutionAction\":\"IGNORE\"}'/>\n@@ -1139,7 +1125,7 @@ we are happy to inform you that the password request was execute successfully fo\n Best regards.\"\n                 htmlTemplate=\"&lt;html&gt;\n &lt;body&gt;\n-&lt;p&gt;Hi,&lt;/br&gt;\n+&lt;p&gt;Hi,&lt;br/&gt;\n we are happy to inform you that the password request was execute successfully for your account.&lt;/p&gt;\n \n &lt;p&gt;Best regards.&lt;/p&gt;"},{"sha":"a24431e4d674f2a53ab82d6d0bad7ab10cf07a56","filename":"core/persistence-jpa/src/test/resources/domains/TwoContent.xml","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -100,20 +100,6 @@ under the License.\n   <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>\n \n   <AnyType id=\"GROUP\" kind=\"GROUP\"/>\n-  \n-  <!-- For usage with admin console -->\n-  <PlainSchema id=\"admin.user.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.user.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"admin.group.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.group.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"admin.membership.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema id=\"self.membership.layout\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n         \n   <PlainSchema id=\"email\" type=\"String\" anyTypeClass_id=\"BaseUser\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\""},{"sha":"5e47078a0541a881abf4d8bac18580d8b7c28b8c","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RoleServiceImpl.java","status":"modified","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -18,9 +18,17 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n import java.net.URI;\n import java.util.List;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.StreamingOutput;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.RoleService;\n@@ -63,4 +71,34 @@ public void delete(final String key) {\n         logic.delete(key);\n     }\n \n+    @Override\n+    public Response getConsoleLayoutInfo(final String key) {\n+        final String template = logic.getConsoleLayoutInfo(key);\n+        StreamingOutput sout = new StreamingOutput() {\n+\n+            @Override\n+            public void write(final OutputStream os) throws IOException {\n+                os.write(template.getBytes());\n+            }\n+        };\n+        return Response.ok(sout).\n+                type(MediaType.APPLICATION_JSON_TYPE).\n+                build();\n+    }\n+\n+    @Override\n+    public void setConsoleLayoutInfo(final String key, final InputStream consoleLayoutIn) {\n+        try {\n+            logic.setConsoleLayoutInfo(key, IOUtils.toString(consoleLayoutIn, SyncopeConstants.DEFAULT_CHARSET));\n+        } catch (final IOException e) {\n+            LOG.error(\"While setting console layout info for role {}\", key, e);\n+            throw new InternalServerErrorException(\"Could not read entity\", e);\n+        }\n+    }\n+\n+    @Override\n+    public void removeConsoleLayoutInfo(final String key) {\n+        logic.setConsoleLayoutInfo(key, null);\n+    }\n+\n }"},{"sha":"bbfa9adc5cd97ae44eb24d66039b57eb3e88e701","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -616,7 +616,7 @@ protected WorkflowFormTO getHistoricFormTO(\n         if (user == null) {\n             throw new NotFoundException(\"User with workflow id \" + processInstanceId);\n         }\n-        formTO.setUserKey(user.getKey());\n+        formTO.setUsername(user.getUsername());\n \n         formTO.setTaskId(taskId);\n         formTO.setKey(formKey);\n@@ -645,7 +645,7 @@ protected WorkflowFormTO getFormTO(\n         if (user == null) {\n             throw new NotFoundException(\"User with workflow id \" + processInstanceId);\n         }\n-        formTO.setUserKey(user.getKey());\n+        formTO.setUsername(user.getUsername());\n \n         formTO.setTaskId(taskId);\n         formTO.setKey(formKey);"},{"sha":"a25d49d33de16313fd99ef8d3852c8d546cc3622","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesDetailsPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -48,6 +48,8 @@ public void renderHead(final IHeaderResponse response) {\n         response.render(OnLoadHeaderItem.forScript(\n                 \"CodeMirror.fromTextArea(document.getElementById('route'), {\"\n                 + \"  lineNumbers: true, \"\n+                + \"  autoCloseTags: true, \"\n+                + \"  mode: 'text/html', \"\n                 + \"  autoRefresh: true\"\n                 + \"}).on('change', updateTextArea);\"));\n     }"},{"sha":"8edd764d47db3292ccaedfaf115ebb92c0b23f57","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/panels/CamelRoutesDetailsPanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.html?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -25,6 +25,7 @@\n     <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closetag.js\"></script>\n     <script type=\"text/javascript\">\n       function updateTextArea(editor) {\n         document.getElementById(\"routeDefForm\").elements[\"route\"].value = editor.getValue();"},{"sha":"20c7a3d94b323aa540c1a176acc1e1723ea23d0e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BaseITCase.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.fit.console;\n \n import org.apache.syncope.client.console.pages.Dashboard;\n-import org.apache.syncope.client.console.pages.Layouts;\n import org.apache.syncope.client.console.pages.Login;\n import org.apache.syncope.client.console.pages.Logs;\n import org.apache.syncope.client.console.pages.Notifications;\n@@ -88,9 +87,6 @@ public void browsingBookmarkablePageLink() {\n         wicketTester.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n         wicketTester.assertRenderedPage(Policies.class);\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:layoutsLI:layouts\");\n-        wicketTester.assertRenderedPage(Layouts.class);\n-\n         wicketTester.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n         wicketTester.assertRenderedPage(Notifications.class);\n     }"},{"sha":"97745c33e27628c7486bb12809c5c7e14f30d784","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -104,7 +104,7 @@ public void masterOnly() {\n \n     @Test\n     public void readPlainSchemas() {\n-        assertEquals(17, adminClient.getService(SchemaService.class).\n+        assertEquals(11, adminClient.getService(SchemaService.class).\n                 list(new SchemaQuery.Builder().type(SchemaType.PLAIN).build()).size());\n     }\n "},{"sha":"3df0b3ef7cbb76e969cb7c20e2c7fbd73b3e18ad","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserWorkflowITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java?ref=5b47ab2354a0272ad9c5d3298d8a1fc2565a0c1f","patch":"@@ -74,8 +74,8 @@ public void createWithReject() {\n         // 2. request if there is any pending task for user just created\n         WorkflowFormTO form = userWorkflowService.getFormForUser(userTO.getKey());\n         assertNotNull(form);\n-        assertNotNull(form.getUserKey());\n-        assertEquals(userTO.getKey(), form.getUserKey());\n+        assertNotNull(form.getUsername());\n+        assertEquals(userTO.getUsername(), form.getUsername());\n         assertNotNull(form.getTaskId());\n         assertNull(form.getOwner());\n "}]}