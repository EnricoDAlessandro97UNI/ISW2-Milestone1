{"sha":"542636390a6aed248b008277b26eae683eb4538b","node_id":"C_kwDOJfYA1toAKDU0MjYzNjM5MGE2YWVkMjQ4YjAwODI3N2IyNmVhZTY4M2ViNDUzOGI","commit":{"author":{"name":"Fabio Martelli","email":"fabio.martelli@tirasa.net","date":"2023-03-20T12:27:46Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2023-03-20T12:29:05Z"},"message":"[SYNCOPE-1709] Provides job status truncate due to varchar length constraints (#429)","tree":{"sha":"d54b0c82124843dda501084d60a8d2fea9b7ae31","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d54b0c82124843dda501084d60a8d2fea9b7ae31"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/542636390a6aed248b008277b26eae683eb4538b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/542636390a6aed248b008277b26eae683eb4538b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/542636390a6aed248b008277b26eae683eb4538b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/542636390a6aed248b008277b26eae683eb4538b/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"767bdf5074b70b07ee086981925ef285b150afce","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/767bdf5074b70b07ee086981925ef285b150afce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/767bdf5074b70b07ee086981925ef285b150afce"}],"stats":{"total":43,"additions":25,"deletions":18},"files":[{"sha":"0a24b6bfb43b2055a11452d756445a5515f3fe07","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAJobStatus.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/542636390a6aed248b008277b26eae683eb4538b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJobStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/542636390a6aed248b008277b26eae683eb4538b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJobStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJobStatus.java?ref=542636390a6aed248b008277b26eae683eb4538b","patch":"@@ -20,6 +20,7 @@\n \n import jakarta.persistence.Entity;\n import jakarta.persistence.Table;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.persistence.api.entity.JobStatus;\n \n @Entity\n@@ -30,6 +31,8 @@ public class JPAJobStatus extends AbstractProvidedKeyEntity implements JobStatus\n \n     public static final String TABLE = \"JobStatus\";\n \n+    private static final int STATUS_MAX_LENGTH = 255;\n+\n     private String jobStatus;\n \n     @Override\n@@ -39,6 +42,6 @@ public String getStatus() {\n \n     @Override\n     public void setStatus(final String status) {\n-        jobStatus = status;\n+        jobStatus = StringUtils.abbreviate(status, STATUS_MAX_LENGTH);\n     }\n }"},{"sha":"f73649b02e18b0453803493c5e7a1c13a63c362e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/InboundMatcher.java","status":"modified","additions":21,"deletions":17,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/542636390a6aed248b008277b26eae683eb4538b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/542636390a6aed248b008277b26eae683eb4538b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java?ref=542636390a6aed248b008277b26eae683eb4538b","patch":"@@ -151,24 +151,28 @@ public Optional<PullMatch> match(\n \n         List<ConnectorObject> found = new ArrayList<>();\n \n-        Name nameAttr = new Name(nameValue);\n-        connector.search(\n-                new ObjectClass(provision.get().getObjectClass()),\n-                provision.get().isIgnoreCaseMatch()\n-                ? FilterBuilder.equalsIgnoreCase(nameAttr)\n-                : FilterBuilder.equalTo(nameAttr),\n-                new SearchResultsHandler() {\n-\n-            @Override\n-            public void handleResult(final SearchResult result) {\n-                // nothing to do\n-            }\n+        try {\n+            Name nameAttr = new Name(nameValue);\n+            connector.search(\n+                    new ObjectClass(provision.get().getObjectClass()),\n+                    provision.get().isIgnoreCaseMatch()\n+                    ? FilterBuilder.equalsIgnoreCase(nameAttr)\n+                    : FilterBuilder.equalTo(nameAttr),\n+                    new SearchResultsHandler() {\n+\n+                @Override\n+                public void handleResult(final SearchResult result) {\n+                    // nothing to do\n+                }\n \n-            @Override\n-            public boolean handle(final ConnectorObject connectorObject) {\n-                return found.add(connectorObject);\n-            }\n-        }, MappingUtils.buildOperationOptions(mapItems));\n+                @Override\n+                public boolean handle(final ConnectorObject connectorObject) {\n+                    return found.add(connectorObject);\n+                }\n+            }, MappingUtils.buildOperationOptions(mapItems));\n+        } catch (Throwable t) {\n+            LOG.warn(\"While searching for {} ...\", nameValue, t);\n+        }\n \n         Optional<PullMatch> result = Optional.empty();\n "}]}