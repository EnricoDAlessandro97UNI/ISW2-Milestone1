{"sha":"e9d42f4ab157538001c90ab15df6416ba38f7538","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU5ZDQyZjRhYjE1NzUzODAwMWM5MGFiMTVkZjY0MTZiYTM4Zjc1Mzg=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-06-23T15:52:32Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-06-23T15:52:39Z"},"message":"[SYNCOPE-863] fixes + provides password management for new resources selected during user editing","tree":{"sha":"f72b24e94a9989468e9180a66a47ba56db97310a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f72b24e94a9989468e9180a66a47ba56db97310a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e9d42f4ab157538001c90ab15df6416ba38f7538","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9d42f4ab157538001c90ab15df6416ba38f7538","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e9d42f4ab157538001c90ab15df6416ba38f7538","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9d42f4ab157538001c90ab15df6416ba38f7538/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"6dae3c089c51b4aa2767095ec19fed5c20bb5f49","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6dae3c089c51b4aa2767095ec19fed5c20bb5f49","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6dae3c089c51b4aa2767095ec19fed5c20bb5f49"}],"stats":{"total":66,"additions":39,"deletions":27},"files":[{"sha":"f8dfcb5e33df7a9f9db5d681c8c13e684a1bd002","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicySpecModalPanel.java","status":"modified","additions":24,"deletions":27,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9d42f4ab157538001c90ab15df6416ba38f7538/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9d42f4ab157538001c90ab15df6416ba38f7538/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java?ref=e9d42f4ab157538001c90ab15df6416ba38f7538","patch":"@@ -53,7 +53,7 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n \n public class PolicySpecModalPanel extends AbstractModalPanel<PullPolicyTO> {\n@@ -120,7 +120,7 @@ protected CorrelationRule newModelObject() {\n \n             @Override\n             protected CorrelationRulePanel getItemPanel(final ListItem<CorrelationRule> item) {\n-                return new CorrelationRulePanel(\"panel\", item.getModelObject());\n+                return new CorrelationRulePanel(\"panel\", Model.of(item.getModelObject()));\n             }\n         });\n     }\n@@ -147,11 +147,11 @@ public static class CorrelationRulePanel extends Panel {\n \n         private static final long serialVersionUID = -4708008994320210839L;\n \n-        public CorrelationRulePanel(final String id, final CorrelationRule rule) {\n+        public CorrelationRulePanel(final String id, final IModel<CorrelationRule> rule) {\n             super(id);\n \n             final AjaxDropDownChoicePanel<String> anyType = new AjaxDropDownChoicePanel<>(\n-                    \"anyType\", \"any.type\", new PropertyModel<String>(rule, \"any\")).\n+                    \"anyType\", \"any.type\", new PropertyModel<String>(rule.getObject(), \"any\")).\n                     setNullValid(true).\n                     setChoices(CollectionUtils.collect(\n                             new AnyTypeRestClient().list(),\n@@ -165,7 +165,7 @@ public String transform(final AnyTypeTO input) {\n             add(anyType);\n \n             final AjaxDropDownChoicePanel<String> ruleType = new AjaxDropDownChoicePanel<>(\n-                    \"ruleType\", \"rule.type\", new PropertyModel<String>(rule, \"type\"), false).\n+                    \"ruleType\", \"rule.type\", new PropertyModel<String>(rule.getObject(), \"type\"), false).\n                     setNullValid(true).\n                     setChoices(Arrays.asList(\"PLAIN\", \"JAVA\"));\n             add(ruleType);\n@@ -174,37 +174,28 @@ public String transform(final AnyTypeTO input) {\n             // Java rule palette\n             // ---------------------------------------------------------------\n             final AjaxDropDownChoicePanel<String> javaRule = new AjaxDropDownChoicePanel<>(\n-                    \"javaRule\", \"rule.java\", new PropertyModel<String>(rule, \"rule\")).setChoices(\n+                    \"javaRule\", \"rule.java\", new PropertyModel<String>(rule.getObject(), \"rule\")).setChoices(\n                     new ArrayList<>(SyncopeConsoleSession.get().getPlatformInfo().getPullCorrelationRules()));\n             javaRule.setOutputMarkupPlaceholderTag(true);\n-            add(javaRule.setVisible(\"JAVA\".equals(rule.getType())));\n+            add(javaRule.setVisible(\"JAVA\".equals(rule.getObject().getType())));\n             // ---------------------------------------------------------------\n \n             // ---------------------------------------------------------------\n             // Json rule palette\n             // ---------------------------------------------------------------\n-            final LoadableDetachableModel<List<String>> plainSchemas = new LoadableDetachableModel<List<String>>() {\n-\n-                private static final long serialVersionUID = 5275935387613157437L;\n-\n-                @Override\n-                protected List<String> load() {\n-                    return getPlainSchemas(rule);\n-                }\n-            };\n-\n             final AjaxPalettePanel.Builder<String> jsonRuleBuilder\n                     = new AjaxPalettePanel.Builder<String>().setName(\"rule.json\");\n \n-            final PropertyModel<List<String>> jsonRuleModel = new PropertyModel<List<String>>(rule, \"rule\") {\n+            final PropertyModel<List<String>> jsonRuleModel\n+                    = new PropertyModel<List<String>>(rule.getObject(), \"rule\") {\n \n                 private static final long serialVersionUID = 3799387950428254072L;\n \n                 @Override\n                 public List<String> getObject() {\n                     final List<String> res = new ArrayList<>();\n                     try {\n-                        JsonNode obj = OBJECT_MAPPER.readTree(rule.getRule());\n+                        JsonNode obj = OBJECT_MAPPER.readTree(rule.getObject().getRule());\n                         if (obj.isArray()) {\n                             for (final JsonNode objNode : obj) {\n                                 res.add(objNode.asText());\n@@ -231,12 +222,20 @@ public void setObject(final List<String> object) {\n                         bld.append(\"\\\"\").append(obj).append(\"\\\"\");\n                     }\n                     bld.append(\"]\");\n-                    rule.setRule(bld.toString());\n+                    rule.getObject().setRule(bld.toString());\n                 }\n             };\n \n-            final AjaxPalettePanel<String> jsonRule = jsonRuleBuilder.build(\"jsonRule\", jsonRuleModel, plainSchemas);\n+            final AjaxPalettePanel<String> jsonRule\n+                    = jsonRuleBuilder.build(\"jsonRule\", jsonRuleModel, new AjaxPalettePanel.Builder.Query<String>() {\n+\n+                        private static final long serialVersionUID = -7223078772249308813L;\n \n+                        @Override\n+                        public List<String> execute(final String filter) {\n+                            return getPlainSchemas(rule.getObject());\n+                        }\n+                    });\n             jsonRule.setOutputMarkupPlaceholderTag(true);\n \n             anyType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -246,13 +245,14 @@ public void setObject(final List<String> object) {\n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n                     if (jsonRule.isVisibleInHierarchy()) {\n-                        jsonRule.getChoicesModel().setObject(getPlainSchemas(rule));\n+                        rule.getObject().setRule(\"[]\");\n                         jsonRule.reload(target);\n+                        target.add(jsonRule);\n                     }\n                 }\n             });\n \n-            add(jsonRule.setVisible(\"PLAIN\".equals(rule.getType())));\n+            add(jsonRule.setVisible(\"PLAIN\".equals(rule.getObject().getType())));\n             // ---------------------------------------------------------------\n \n             ruleType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -264,11 +264,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     switch (ruleType.getModelObject() == null ? StringUtils.EMPTY : ruleType.getModelObject()) {\n                         case \"PLAIN\":\n                             jsonRule.setVisible(true);\n-                            jsonRule.getChoicesModel().setObject(getPlainSchemas(rule));\n-                            jsonRule.reload(target);\n-\n                             javaRule.setVisible(false);\n-\n+                            jsonRule.reload(target);\n                             break;\n                         case \"JAVA\":\n                             jsonRule.setVisible(false);"},{"sha":"8d4d7584d7ce98773660ee2dc2ba43d811476aa9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9d42f4ab157538001c90ab15df6416ba38f7538/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9d42f4ab157538001c90ab15df6416ba38f7538/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=e9d42f4ab157538001c90ab15df6416ba38f7538","patch":"@@ -20,7 +20,9 @@\n \n import java.io.Serializable;\n import java.util.ArrayList;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n@@ -66,6 +68,19 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n                     : StringUtils.isNotBlank(inner.getPassword()));\n         } else {\n             UserPatch patch = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n+\n+            Set<String> origResourceSet = getOriginalItem().getInnerObject().getResources();\n+            Set<String> newResourceSet = new HashSet<>(inner.getResources());\n+\n+            newResourceSet.removeAll(origResourceSet);\n+            for (StatusBean sb : statusModel.getObject()) {\n+                newResourceSet.remove(sb.getResourceName());\n+            }\n+\n+            for (String res : newResourceSet) {\n+                statusModel.getObject().add(new StatusBean(inner, res));\n+            }\n+\n             if (!statusModel.getObject().isEmpty()) {\n                 patch.setPassword(StatusUtils.buildPasswordPatch(inner.getPassword(), statusModel.getObject()));\n             }"}]}