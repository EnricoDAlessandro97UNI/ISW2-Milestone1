{"sha":"2dd80d4e78944f8f57841fec34069b69492ea4d9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJkZDgwZDRlNzg5NDRmOGY1Nzg0MWZlYzM0MDY5YjY5NDkyZWE0ZDk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-06T12:23:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-06T12:23:11Z"},"message":"White noise","tree":{"sha":"dd363b2cba2ea907d46b5f7aadff2ebd3fc0af2a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dd363b2cba2ea907d46b5f7aadff2ebd3fc0af2a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2dd80d4e78944f8f57841fec34069b69492ea4d9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2dd80d4e78944f8f57841fec34069b69492ea4d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2dd80d4e78944f8f57841fec34069b69492ea4d9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2dd80d4e78944f8f57841fec34069b69492ea4d9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d852fca2573b08808e65790b5c3da0e462856cc3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d852fca2573b08808e65790b5c3da0e462856cc3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d852fca2573b08808e65790b5c3da0e462856cc3"}],"stats":{"total":18,"additions":8,"deletions":10},"files":[{"sha":"b5a1ce912d72a0afcafe0811cb5f4d82e00a7792","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":8,"deletions":10,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dd80d4e78944f8f57841fec34069b69492ea4d9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dd80d4e78944f8f57841fec34069b69492ea4d9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=2dd80d4e78944f8f57841fec34069b69492ea4d9","patch":"@@ -234,11 +234,11 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n \n                         AnyTypeClass anyTypeClass = itor.next();\n                         allowedSchemas.getPlainSchemas().addAll(anyTypeClass.getPlainSchemas().stream().\n-                                map(s -> s.getKey()).collect(Collectors.toList()));\n+                                map(Entity::getKey).collect(Collectors.toList()));\n                         allowedSchemas.getDerSchemas().addAll(anyTypeClass.getDerSchemas().stream().\n-                                map(s -> s.getKey()).collect(Collectors.toList()));\n+                                map(Entity::getKey).collect(Collectors.toList()));\n                         allowedSchemas.getVirSchemas().addAll(anyTypeClass.getVirSchemas().stream().\n-                                map(s -> s.getKey()).collect(Collectors.toList()));\n+                                map(Entity::getKey).collect(Collectors.toList()));\n                     }\n \n                     populateMapping(\n@@ -589,9 +589,8 @@ private void populateItems(final List<? extends Item> items, final ItemContainer\n                 containerTO.add(itemTO);\n             }\n \n-            item.getTransformers().forEach(transformer -> {\n-                itemTO.getTransformers().add(transformer.getKey());\n-            });\n+            itemTO.getTransformers().addAll(item.getTransformers().stream().\n+                    map(Entity::getKey).collect(Collectors.toSet()));\n         });\n     }\n \n@@ -609,13 +608,13 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n         resourceTO.setConnectorDisplayName(connector == null ? null : connector.getDisplayName());\n \n         // set the provision information\n-        resource.getProvisions().stream().map(provision -> {\n+        resource.getProvisions().forEach(provision -> {\n             ProvisionTO provisionTO = new ProvisionTO();\n             provisionTO.setKey(provision.getKey());\n             provisionTO.setAnyType(provision.getAnyType().getKey());\n             provisionTO.setObjectClass(provision.getObjectClass().getObjectClassValue());\n             provisionTO.getAuxClasses().addAll(provision.getAuxClasses().stream().\n-                    map(cls -> cls.getKey()).collect(Collectors.toList()));\n+                    map(Entity::getKey).collect(Collectors.toList()));\n             provisionTO.setSyncToken(provision.getSerializedSyncToken());\n             provisionTO.setIgnoreCaseMatch(provision.isIgnoreCaseMatch());\n             if (provision.getUidOnCreate() != null) {\n@@ -640,8 +639,7 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n \n                 provisionTO.getMapping().getLinkingItems().add(itemTO);\n             });\n-            return provisionTO;\n-        }).forEachOrdered(provisionTO -> {\n+\n             resourceTO.getProvisions().add(provisionTO);\n         });\n "}]}