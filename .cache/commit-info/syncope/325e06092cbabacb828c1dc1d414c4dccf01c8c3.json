{"sha":"325e06092cbabacb828c1dc1d414c4dccf01c8c3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMyNWUwNjA5MmNiYWJhY2I4MjhjMWRjMWQ0MTRjNGRjY2YwMWM4YzM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-31T15:23:53Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-31T15:24:04Z"},"message":"Fixing ErrorTO schema with OpenAPI","tree":{"sha":"67f6ac1d6c0e39fc089437931a15d6cbcdcf4038","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/67f6ac1d6c0e39fc089437931a15d6cbcdcf4038"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/325e06092cbabacb828c1dc1d414c4dccf01c8c3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/325e06092cbabacb828c1dc1d414c4dccf01c8c3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/325e06092cbabacb828c1dc1d414c4dccf01c8c3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/325e06092cbabacb828c1dc1d414c4dccf01c8c3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1ff32c0c07e8b95368f971cca5fedbc393ce3e56","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1ff32c0c07e8b95368f971cca5fedbc393ce3e56","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1ff32c0c07e8b95368f971cca5fedbc393ce3e56"}],"stats":{"total":24,"additions":19,"deletions":5},"files":[{"sha":"c0ec487a7a78bfec646a35682a1a737803924d10","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":19,"deletions":5,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/325e06092cbabacb828c1dc1d414c4dccf01c8c3/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/325e06092cbabacb828c1dc1d414c4dccf01c8c3/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=325e06092cbabacb828c1dc1d414c4dccf01c8c3","patch":"@@ -21,9 +21,12 @@\n import io.swagger.v3.oas.integration.api.OpenAPIConfiguration;\n import io.swagger.v3.oas.models.Operation;\n import io.swagger.v3.oas.models.headers.Header;\n+import io.swagger.v3.oas.models.media.ArraySchema;\n import io.swagger.v3.oas.models.media.Content;\n+import io.swagger.v3.oas.models.media.IntegerSchema;\n import io.swagger.v3.oas.models.media.MediaType;\n import io.swagger.v3.oas.models.media.Schema;\n+import io.swagger.v3.oas.models.media.StringSchema;\n import io.swagger.v3.oas.models.parameters.HeaderParameter;\n import io.swagger.v3.oas.models.parameters.Parameter;\n import io.swagger.v3.oas.models.responses.ApiResponse;\n@@ -35,6 +38,8 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.ext.MessageContext;\n@@ -150,22 +155,31 @@ protected void customizeResponses(final Operation operation, final OperationReso\n                 new Header().schema(new Schema<>().type(\"string\")).description(\"Error code\"));\n         headers.put(\n                 RESTHeaders.ERROR_INFO,\n-                new Header().schema(new Schema<>().type(\"string\")).description(\"Error message\"));\n+                new Header().schema(new Schema<>().type(\"string\")).description(\"Error message(s)\"));\n \n         ErrorTO sampleError = new ErrorTO();\n         sampleError.setStatus(Response.Status.BAD_REQUEST.getStatusCode());\n         sampleError.setType(ClientExceptionType.InvalidEntity);\n-        sampleError.getElements().add(\"additional information\");\n+        sampleError.getElements().add(\"error message\");\n+\n+        Schema<ErrorTO> errorSchema = new Schema<>();\n+        errorSchema.example(sampleError).\n+                addProperties(\"status\", new IntegerSchema().description(\"HTTP status code\")).\n+                addProperties(\"type\", new StringSchema().\n+                        _enum(Stream.of(ClientExceptionType.values()).map(Enum::name).collect(Collectors.toList())).\n+                        description(\"Error code\")).\n+                addProperties(\"elements\", new ArraySchema().type(\"string\").description(\"Error message(s)\"));\n+\n         Content content = new Content();\n         content.addMediaType(\n                 javax.ws.rs.core.MediaType.APPLICATION_JSON,\n-                new MediaType().schema(new Schema<ErrorTO>().example(sampleError)));\n+                new MediaType().schema(errorSchema));\n         content.addMediaType(\n                 RESTHeaders.APPLICATION_YAML,\n-                new MediaType().schema(new Schema<ErrorTO>().example(sampleError)));\n+                new MediaType().schema(errorSchema));\n         content.addMediaType(\n                 javax.ws.rs.core.MediaType.APPLICATION_XML,\n-                new MediaType().schema(new Schema<ErrorTO>().example(sampleError)));\n+                new MediaType().schema(errorSchema));\n \n         responses.addApiResponse(\"400\", new ApiResponse().\n                 description(\"An error occurred; HTTP status code can vary depending on the actual error: \""}]}