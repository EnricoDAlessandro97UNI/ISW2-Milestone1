{"sha":"fbd79f7b7f34f632e99407a6b6c59c776fa68380","node_id":"C_kwDOJfYA1toAKGZiZDc5ZjdiN2YzNGY2MzJlOTk0MDdhNmI2YzU5Yzc3NmZhNjgzODA","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-01-23T15:12:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-01-23T15:12:33Z"},"message":"Keeping up with latest pac4j changes","tree":{"sha":"bc3370ede089b1d1f9a78e72543363442f6ee6e2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bc3370ede089b1d1f9a78e72543363442f6ee6e2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fbd79f7b7f34f632e99407a6b6c59c776fa68380","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fbd79f7b7f34f632e99407a6b6c59c776fa68380","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fbd79f7b7f34f632e99407a6b6c59c776fa68380","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fbd79f7b7f34f632e99407a6b6c59c776fa68380/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"086617475c46a089043c763122d2e0b49fb72821","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/086617475c46a089043c763122d2e0b49fb72821","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/086617475c46a089043c763122d2e0b49fb72821"}],"stats":{"total":195,"additions":38,"deletions":157},"files":[{"sha":"24fe4b0ee70f7b7d08e6d634d54487797b8d154e","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/OIDCC4UILogic.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fbd79f7b7f34f632e99407a6b6c59c776fa68380/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fbd79f7b7f34f632e99407a6b6c59c776fa68380/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java?ref=fbd79f7b7f34f632e99407a6b6c59c776fa68380","patch":"@@ -40,7 +40,6 @@\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.apache.syncope.core.logic.oidc.BaseProfileManagerFactory;\n import org.apache.syncope.core.logic.oidc.NoOpSessionStore;\n import org.apache.syncope.core.logic.oidc.OIDC4UIContext;\n import org.apache.syncope.core.logic.oidc.OIDCClientCache;\n@@ -53,7 +52,9 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.AuthDataAccessor;\n import org.apache.syncope.core.spring.security.Encryptor;\n+import org.pac4j.core.context.CallContext;\n import org.pac4j.core.exception.http.WithLocationAction;\n+import org.pac4j.core.profile.factory.ProfileManagerFactory;\n import org.pac4j.oidc.client.OidcClient;\n import org.pac4j.oidc.credentials.OidcCredentials;\n import org.pac4j.oidc.profile.OidcProfile;\n@@ -112,7 +113,7 @@ public OIDCRequest createLoginRequest(final String redirectURI, final String opN\n \n         // 2. create OIDCRequest\n         WithLocationAction action = oidcClient.getRedirectionAction(\n-                new OIDC4UIContext(), NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE).\n+                new CallContext(new OIDC4UIContext(), NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT)).\n                 map(WithLocationAction.class::cast).\n                 orElseThrow(() -> {\n                     SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n@@ -146,7 +147,7 @@ public OIDCLoginResponse login(final String redirectURI, final String authorizat\n \n             OIDC4UIContext ctx = new OIDC4UIContext();\n \n-            oidcClient.getAuthenticator().validate(credentials, ctx, NoOpSessionStore.INSTANCE);\n+            oidcClient.getAuthenticator().validate(new CallContext(ctx, NoOpSessionStore.INSTANCE), credentials);\n \n             idToken = credentials.getIdToken().getJWTClaimsSet();\n             idTokenHint = credentials.getIdToken().serialize();\n@@ -274,9 +275,7 @@ public OIDCRequest createLogoutRequest(final String accessToken, final String re\n         profile.setIdTokenString((String) claimsSet.getClaim(JWT_CLAIM_ID_TOKEN));\n \n         WithLocationAction action = oidcClient.getLogoutAction(\n-                new OIDC4UIContext(),\n-                NoOpSessionStore.INSTANCE,\n-                BaseProfileManagerFactory.INSTANCE,\n+                new CallContext(new OIDC4UIContext(), NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT),\n                 profile,\n                 redirectURI).\n                 map(WithLocationAction.class::cast)."},{"sha":"08d34b9824a89b2b695a29a2f197dd4462d3428c","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/oidc/BaseProfileManagerFactory.java","status":"removed","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/086617475c46a089043c763122d2e0b49fb72821/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FBaseProfileManagerFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/086617475c46a089043c763122d2e0b49fb72821/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FBaseProfileManagerFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FBaseProfileManagerFactory.java?ref=086617475c46a089043c763122d2e0b49fb72821","patch":"@@ -1,38 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic.oidc;\n-\n-import org.pac4j.core.context.WebContext;\n-import org.pac4j.core.context.session.SessionStore;\n-import org.pac4j.core.profile.ProfileManager;\n-import org.pac4j.core.profile.factory.ProfileManagerFactory;\n-\n-public final class BaseProfileManagerFactory implements ProfileManagerFactory {\n-\n-    public static final BaseProfileManagerFactory INSTANCE = new BaseProfileManagerFactory();\n-\n-    private BaseProfileManagerFactory() {\n-        // private constructor for singleton\n-    }\n-\n-    @Override\n-    public ProfileManager apply(final WebContext wc, final SessionStore ss) {\n-        return new ProfileManager(wc, ss);\n-    }\n-}"},{"sha":"264574b521aba3005a1b022f9538f54b3ebd9ddd","filename":"ext/saml2sp4ui/logic/src/main/java/org/apache/syncope/core/logic/SAML2SP4UILogic.java","status":"modified","additions":9,"deletions":17,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fbd79f7b7f34f632e99407a6b6c59c776fa68380/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fbd79f7b7f34f632e99407a6b6c59c776fa68380/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java?ref=fbd79f7b7f34f632e99407a6b6c59c776fa68380","patch":"@@ -47,7 +47,6 @@\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n import org.apache.syncope.core.logic.init.SAML2SP4UILoader;\n-import org.apache.syncope.core.logic.saml2.BaseProfileManagerFactory;\n import org.apache.syncope.core.logic.saml2.NoOpSessionStore;\n import org.apache.syncope.core.logic.saml2.SAML2ClientCache;\n import org.apache.syncope.core.logic.saml2.SAML2SP4UIContext;\n@@ -72,8 +71,7 @@\n import org.opensaml.saml.saml2.metadata.AssertionConsumerService;\n import org.opensaml.saml.saml2.metadata.EntityDescriptor;\n import org.opensaml.saml.saml2.metadata.impl.AssertionConsumerServiceBuilder;\n-import org.pac4j.core.context.WebContext;\n-import org.pac4j.core.context.session.SessionStore;\n+import org.pac4j.core.context.CallContext;\n import org.pac4j.core.exception.http.RedirectionAction;\n import org.pac4j.core.exception.http.WithContentAction;\n import org.pac4j.core.exception.http.WithLocationAction;\n@@ -276,11 +274,7 @@ public SAML2Request createLoginRequest(\n             saml2Client.setRedirectionActionBuilder(new SAML2RedirectionActionBuilder(saml2Client) {\n \n                 @Override\n-                public Optional<RedirectionAction> getRedirectionAction(\n-                        final WebContext wc,\n-                        final SessionStore sessionStore,\n-                        final ProfileManagerFactory profileManagerFactory) {\n-\n+                public Optional<RedirectionAction> getRedirectionAction(final CallContext ctx) {\n                     this.saml2ObjectBuilder = new SAML2AuthnRequestBuilder() {\n \n                         @Override\n@@ -290,7 +284,7 @@ public AuthnRequest build(final SAML2MessageContext context) {\n                             return authnRequest;\n                         }\n                     };\n-                    return super.getRedirectionAction(wc, sessionStore, profileManagerFactory);\n+                    return super.getRedirectionAction(ctx);\n                 }\n             });\n         });\n@@ -300,7 +294,7 @@ public AuthnRequest build(final SAML2MessageContext context) {\n                 saml2Client.getConfiguration().getAuthnRequestBindingType(),\n                 null);\n         RedirectionAction action = saml2Client.getRedirectionAction(\n-                ctx, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE).\n+                new CallContext(ctx, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT)).\n                 orElseThrow(() -> {\n                     SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n                     sce.getElements().add(\"No RedirectionAction generated for AuthnRequest\");\n@@ -328,10 +322,10 @@ public SAML2LoginResponse validateLoginResponse(final SAML2Response saml2Respons\n                     saml2Response);\n \n             credentials = (SAML2Credentials) saml2Client.getCredentialsExtractor().\n-                    extract(ctx, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE).\n+                    extract(new CallContext(ctx, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT)).\n                     orElseThrow(() -> new IllegalStateException(\"No AuthnResponse found\"));\n \n-            saml2Client.getAuthenticator().validate(credentials, ctx, NoOpSessionStore.INSTANCE);\n+            saml2Client.getAuthenticator().validate(new CallContext(ctx, NoOpSessionStore.INSTANCE), credentials);\n         } catch (Exception e) {\n             LOG.error(\"While validating AuthnResponse\", e);\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n@@ -483,9 +477,7 @@ public SAML2Request createLogoutRequest(\n         SAML2SP4UIContext ctx = new SAML2SP4UIContext(\n                 saml2Client.getConfiguration().getSpLogoutRequestBindingType(), null);\n         RedirectionAction action = saml2Client.getLogoutAction(\n-                ctx,\n-                NoOpSessionStore.INSTANCE,\n-                BaseProfileManagerFactory.INSTANCE,\n+                new CallContext(ctx, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT),\n                 saml2Profile,\n                 null).\n                 orElseThrow(() -> {\n@@ -518,8 +510,8 @@ public void validateLogoutResponse(final SAML2Response saml2Response) {\n \n         LogoutResponse logoutResponse;\n         try {\n-            SAML2MessageContext saml2Ctx = saml2Client.getContextProvider().\n-                    buildContext(saml2Client, ctx, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE);\n+            SAML2MessageContext saml2Ctx = saml2Client.getContextProvider().buildContext(\n+                    new CallContext(ctx, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT), saml2Client);\n             saml2Client.getLogoutProfileHandler().receive(saml2Ctx);\n \n             logoutResponse = (LogoutResponse) saml2Ctx.getMessageContext().getMessage();"},{"sha":"0aa17777e6941ffd5e85b7d99e1317d7a336316a","filename":"ext/saml2sp4ui/logic/src/main/java/org/apache/syncope/core/logic/saml2/BaseProfileManagerFactory.java","status":"removed","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/086617475c46a089043c763122d2e0b49fb72821/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FBaseProfileManagerFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/086617475c46a089043c763122d2e0b49fb72821/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FBaseProfileManagerFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FBaseProfileManagerFactory.java?ref=086617475c46a089043c763122d2e0b49fb72821","patch":"@@ -1,38 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic.saml2;\n-\n-import org.pac4j.core.context.WebContext;\n-import org.pac4j.core.context.session.SessionStore;\n-import org.pac4j.core.profile.ProfileManager;\n-import org.pac4j.core.profile.factory.ProfileManagerFactory;\n-\n-public final class BaseProfileManagerFactory implements ProfileManagerFactory {\n-\n-    public static final BaseProfileManagerFactory INSTANCE = new BaseProfileManagerFactory();\n-\n-    private BaseProfileManagerFactory() {\n-        // private constructor for singleton\n-    }\n-\n-    @Override\n-    public ProfileManager apply(final WebContext wc, final SessionStore ss) {\n-        return new ProfileManager(wc, ss);\n-    }\n-}"},{"sha":"5ad2ab44dd6719262547b1c3b4e6ad96f3ca7cc2","filename":"sra/src/main/java/org/apache/syncope/sra/security/pac4j/BaseProfileManagerFactory.java","status":"removed","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/086617475c46a089043c763122d2e0b49fb72821/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fpac4j%2FBaseProfileManagerFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/086617475c46a089043c763122d2e0b49fb72821/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fpac4j%2FBaseProfileManagerFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fpac4j%2FBaseProfileManagerFactory.java?ref=086617475c46a089043c763122d2e0b49fb72821","patch":"@@ -1,38 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.sra.security.pac4j;\n-\n-import org.pac4j.core.context.WebContext;\n-import org.pac4j.core.context.session.SessionStore;\n-import org.pac4j.core.profile.ProfileManager;\n-import org.pac4j.core.profile.factory.ProfileManagerFactory;\n-\n-public final class BaseProfileManagerFactory implements ProfileManagerFactory {\n-\n-    public static final BaseProfileManagerFactory INSTANCE = new BaseProfileManagerFactory();\n-\n-    private BaseProfileManagerFactory() {\n-        // private constructor for singleton\n-    }\n-\n-    @Override\n-    public ProfileManager apply(final WebContext wc, final SessionStore ss) {\n-        return new ProfileManager(wc, ss);\n-    }\n-}"},{"sha":"8d543159af10f66dc14705e5c9d7a2627054e6fe","filename":"sra/src/main/java/org/apache/syncope/sra/security/saml2/SAML2LogoutResponseWebFilter.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fbd79f7b7f34f632e99407a6b6c59c776fa68380/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2LogoutResponseWebFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fbd79f7b7f34f632e99407a6b6c59c776fa68380/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2LogoutResponseWebFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2LogoutResponseWebFilter.java?ref=fbd79f7b7f34f632e99407a6b6c59c776fa68380","patch":"@@ -20,12 +20,13 @@\n \n import java.util.Optional;\n import org.apache.syncope.sra.SessionConfig;\n-import org.apache.syncope.sra.security.pac4j.BaseProfileManagerFactory;\n import org.apache.syncope.sra.security.pac4j.NoOpSessionStore;\n import org.apache.syncope.sra.security.pac4j.RedirectionActionUtils;\n import org.apache.syncope.sra.security.pac4j.ServerWebExchangeContext;\n+import org.pac4j.core.context.CallContext;\n import org.pac4j.core.exception.http.OkAction;\n import org.pac4j.core.exception.http.RedirectionAction;\n+import org.pac4j.core.profile.factory.ProfileManagerFactory;\n import org.pac4j.core.util.Pac4jConstants;\n import org.pac4j.saml.client.SAML2Client;\n import org.pac4j.saml.context.SAML2MessageContext;\n@@ -84,8 +85,9 @@ private Mono<Void> handleLogoutResponse(\n             final ServerWebExchange exchange, final WebFilterChain chain, final ServerWebExchangeContext swec) {\n \n         try {\n-            SAML2MessageContext ctx = saml2Client.getContextProvider().\n-                    buildContext(this.saml2Client, swec, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE);\n+            SAML2MessageContext ctx = saml2Client.getContextProvider().buildContext(\n+                    new CallContext(swec, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT),\n+                    this.saml2Client);\n             saml2Client.getLogoutProfileHandler().receive(ctx);\n         } catch (OkAction e) {\n             LOG.debug(\"LogoutResponse was actually validated but no postLogoutURL was set\", e);\n@@ -106,8 +108,8 @@ private Mono<Void> handleLogoutRequest(\n \n                     return session.invalidate().then(Mono.defer(() -> {\n                         try {\n-                            saml2Client.getCredentialsExtractor().\n-                                    extract(swec, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE);\n+                            saml2Client.getCredentialsExtractor().extract(new CallContext(\n+                                    swec, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT));\n                         } catch (RedirectionAction action) {\n                             return RedirectionActionUtils.handle(action, swec);\n                         }"},{"sha":"6854acb90cb008de54ac1bef6865be3e51f2f1e0","filename":"sra/src/main/java/org/apache/syncope/sra/security/saml2/SAML2RequestServerLogoutHandler.java","status":"modified","additions":8,"deletions":10,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fbd79f7b7f34f632e99407a6b6c59c776fa68380/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2RequestServerLogoutHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fbd79f7b7f34f632e99407a6b6c59c776fa68380/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2RequestServerLogoutHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2RequestServerLogoutHandler.java?ref=fbd79f7b7f34f632e99407a6b6c59c776fa68380","patch":"@@ -19,10 +19,11 @@\n package org.apache.syncope.sra.security.saml2;\n \n import org.apache.syncope.sra.SessionConfig;\n-import org.apache.syncope.sra.security.pac4j.BaseProfileManagerFactory;\n import org.apache.syncope.sra.security.pac4j.NoOpSessionStore;\n import org.apache.syncope.sra.security.pac4j.RedirectionActionUtils;\n import org.apache.syncope.sra.security.pac4j.ServerWebExchangeContext;\n+import org.pac4j.core.context.CallContext;\n+import org.pac4j.core.profile.factory.ProfileManagerFactory;\n import org.pac4j.saml.client.SAML2Client;\n import org.pac4j.saml.credentials.SAML2Credentials;\n import org.slf4j.Logger;\n@@ -58,15 +59,12 @@ public Mono<Void> logout(final WebFilterExchange exchange, final Authentication\n                     ServerWebExchangeContext swec = new ServerWebExchangeContext(exchange.getExchange());\n \n                     cacheManager.getCache(SessionConfig.DEFAULT_CACHE).evictIfPresent(session.getId());\n-                    return session.invalidate().then(\n-                            saml2Client.getLogoutAction(\n-                                    swec,\n-                                    NoOpSessionStore.INSTANCE,\n-                                    BaseProfileManagerFactory.INSTANCE,\n-                                    credentials.getUserProfile(),\n-                                    null).\n-                                    map(action -> RedirectionActionUtils.handle(action, swec)).\n-                                    orElseThrow(() -> new IllegalStateException(\"No action generated\")));\n+                    return session.invalidate().then(saml2Client.getLogoutAction(\n+                            new CallContext(swec, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT),\n+                            credentials.getUserProfile(),\n+                            null).\n+                            map(action -> RedirectionActionUtils.handle(action, swec)).\n+                            orElseThrow(() -> new IllegalStateException(\"No action generated\")));\n                 }).onErrorResume(Mono::error);\n     }\n }"},{"sha":"a895ff299cd1836472271b5d3271c83734916d31","filename":"sra/src/main/java/org/apache/syncope/sra/security/saml2/SAML2WebSsoAuthenticationRequestWebFilter.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fbd79f7b7f34f632e99407a6b6c59c776fa68380/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationRequestWebFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fbd79f7b7f34f632e99407a6b6c59c776fa68380/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationRequestWebFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationRequestWebFilter.java?ref=fbd79f7b7f34f632e99407a6b6c59c776fa68380","patch":"@@ -18,10 +18,11 @@\n  */\n package org.apache.syncope.sra.security.saml2;\n \n-import org.apache.syncope.sra.security.pac4j.BaseProfileManagerFactory;\n import org.apache.syncope.sra.security.pac4j.NoOpSessionStore;\n import org.apache.syncope.sra.security.pac4j.RedirectionActionUtils;\n import org.apache.syncope.sra.security.pac4j.ServerWebExchangeContext;\n+import org.pac4j.core.context.CallContext;\n+import org.pac4j.core.profile.factory.ProfileManagerFactory;\n import org.pac4j.saml.client.SAML2Client;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -60,7 +61,7 @@ public Mono<Void> filter(final ServerWebExchange exchange, final WebFilterChain\n                     ServerWebExchangeContext swec = new ServerWebExchangeContext(exchange);\n \n                     return saml2Client.getRedirectionAction(\n-                            swec, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE).\n+                            new CallContext(swec, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT)).\n                             map(action -> RedirectionActionUtils.handle(action, swec)).\n                             orElseThrow(() -> new IllegalStateException(\"No action generated\"));\n                 }).onErrorResume(Mono::error);"},{"sha":"a35e436f1167191d89886c013641cb23c1be47b2","filename":"sra/src/main/java/org/apache/syncope/sra/security/saml2/SAML2WebSsoAuthenticationWebFilter.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fbd79f7b7f34f632e99407a6b6c59c776fa68380/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationWebFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fbd79f7b7f34f632e99407a6b6c59c776fa68380/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationWebFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationWebFilter.java?ref=fbd79f7b7f34f632e99407a6b6c59c776fa68380","patch":"@@ -19,11 +19,12 @@\n package org.apache.syncope.sra.security.saml2;\n \n import java.net.URI;\n-import org.apache.syncope.sra.security.pac4j.BaseProfileManagerFactory;\n import org.apache.syncope.sra.security.pac4j.NoOpSessionStore;\n import org.apache.syncope.sra.security.pac4j.ServerWebExchangeContext;\n import org.apache.syncope.sra.security.web.server.DoNothingIfCommittedServerRedirectStrategy;\n import org.apache.syncope.sra.session.SessionUtils;\n+import org.pac4j.core.context.CallContext;\n+import org.pac4j.core.profile.factory.ProfileManagerFactory;\n import org.pac4j.saml.client.SAML2Client;\n import org.pac4j.saml.credentials.SAML2Credentials;\n import org.springframework.security.authentication.ReactiveAuthenticationManager;\n@@ -82,10 +83,12 @@ private ServerAuthenticationConverter convertSamlResponse() {\n                     ServerWebExchangeContext swec = new ServerWebExchangeContext(exchange).setForm(form);\n \n                     SAML2Credentials credentials = (SAML2Credentials) saml2Client.getCredentialsExtractor().\n-                            extract(swec, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE).\n+                            extract(new CallContext(\n+                                    swec, NoOpSessionStore.INSTANCE, ProfileManagerFactory.DEFAULT)).\n                             orElseThrow(() -> new IllegalStateException(\"No AuthnResponse found\"));\n \n-                    saml2Client.getAuthenticator().validate(credentials, swec, NoOpSessionStore.INSTANCE);\n+                    saml2Client.getAuthenticator().validate(\n+                            new CallContext(swec, NoOpSessionStore.INSTANCE), credentials);\n \n                     return Mono.just(new SAML2AuthenticationToken(credentials));\n                 }));"}]}