{"sha":"d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ0MWRhZmQwYWNiZjRhMTM0OTlkNGNkNTgzNWM0YThlYmQ0OTExZjA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-11T14:27:12Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-11T14:27:12Z"},"message":"[SYNCOPE-132] Introducing a special 'anonymous' user, with only fixed capabilities to perform self-registration via web console, distinct from actual unauthenticated user that cannot now access any REST resource\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1531307 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0c755cc6d6d9d8e06ea8aa6944c26e7d927d5f1c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0c755cc6d6d9d8e06ea8aa6944c26e7d927d5f1c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3abddfcc2f959140f04b520a40886228eac9f98b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3abddfcc2f959140f04b520a40886228eac9f98b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3abddfcc2f959140f04b520a40886228eac9f98b"}],"stats":{"total":733,"additions":473,"deletions":260},"files":[{"sha":"44f3cfbf0d22194cab9367ede9612c0858bf4d81","filename":"archetype/src/main/resources/META-INF/maven/archetype-metadata.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/archetype%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fmaven%2Farchetype-metadata.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/archetype%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fmaven%2Farchetype-metadata.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fmaven%2Farchetype-metadata.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -22,6 +22,7 @@ under the License.\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   <requiredProperties>\n     <requiredProperty key=\"secretKey\"/>\n+    <requiredProperty key=\"anonymousKey\"/>\n   </requiredProperties>\n   \n   <modules>"},{"sha":"23fe1763f1ff624e1cad29e9342aed504f1dc8a2","filename":"archetype/src/main/resources/meta-pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -34,6 +34,7 @@ under the License.\n   <properties>\r\n     <syncope.version></syncope.version>\r\n     <secretKey>${secretKey}</secretKey>\r\n+    <anonymousKey>${anonymousKey}</anonymousKey>\r\n   </properties>\r\n \r\n   <name>Apache Syncope sample project</name>\r"},{"sha":"e8b1aeebc886413714988c3753a9fe53acc6601d","filename":"archetype/src/test/resources/projects/default/archetype.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/archetype%2Fsrc%2Ftest%2Fresources%2Fprojects%2Fdefault%2Farchetype.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/archetype%2Fsrc%2Ftest%2Fresources%2Fprojects%2Fdefault%2Farchetype.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Ftest%2Fresources%2Fprojects%2Fdefault%2Farchetype.properties?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -18,3 +18,4 @@ groupId=org.apache.syncope.test\n artifactId=syncope-test\n version=1.0-SNAPSHOT\n secretKey=testSecretKey\n+anonymousKey=testAnonymousKey"},{"sha":"ef8278d0b4a8b95d63664f6045ef20a1e1fdca5a","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -20,7 +20,9 @@\n \r\n public class SyncopeConstants {\r\n \r\n-    public static final String ANONYMOUS_USER = \"anonymous\";\r\n+    public static final String UNAUTHENTICATED = \"unauthenticated\";\r\n+\r\n+    public static final String ANONYMOUS_ENTITLEMENT = \"anonymous\";\r\n \r\n     public static final String ENUM_VALUES_SEPARATOR = \";\";\r\n \r"},{"sha":"3651b0ddc33192e4e85013d9ae6be81a5010d786","filename":"console/src/main/java/org/apache/syncope/console/SyncopeApplication.java","status":"modified","additions":69,"deletions":14,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.console;\n \n import java.io.Serializable;\n+import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.Configuration;\n@@ -31,8 +32,11 @@\n import org.apache.syncope.console.pages.Schema;\n import org.apache.syncope.console.pages.Tasks;\n import org.apache.syncope.console.pages.Todo;\n+import org.apache.syncope.console.pages.UserModalPage;\n+import org.apache.syncope.console.pages.UserRequestModalPage;\n import org.apache.syncope.console.pages.Users;\n import org.apache.syncope.console.pages.WelcomePage;\n+import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.RestartResponseAtInterceptPageException;\n@@ -46,6 +50,7 @@\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.image.Image;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n import org.apache.wicket.protocol.http.WebApplication;\n@@ -61,11 +66,15 @@\n         extends WebApplication\n         implements IUnauthorizedComponentInstantiationListener, IRoleCheckingStrategy, Serializable {\n \n+    private static final long serialVersionUID = -2920378752291913495L;\n+\n     public static final String IMG_PREFIX = \"/img/menu/\";\n \n     public static final String IMG_NOTSEL = \"notsel/\";\n \n-    private static final long serialVersionUID = -2920378752291913495L;\n+    private final static int EDIT_PROFILE_WIN_HEIGHT = 550;\n+\n+    private final static int EDIT_PROFILE_WIN_WIDTH = 800;\n \n     @Override\n     protected void init() {\n@@ -113,62 +122,65 @@ public void onClick(final AjaxRequestTarget target) {\n         page.add(infoLink);\n \n         BookmarkablePageLink<Void> schemaLink = new BookmarkablePageLink<Void>(\"schema\", Schema.class);\n-        MetaDataRoleAuthorizationStrategy.authorizeAll(schemaLink, WebPage.ENABLE);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                schemaLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Schema\", \"list\"));\n         page.add(schemaLink);\n         schemaLink.add(new Image(\"schemaIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"schema\" + Constants.PNG_EXT)));\n \n         BookmarkablePageLink<Void> usersLink = new BookmarkablePageLink<Void>(\"users\", Users.class);\n-        String allowedUsersRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"list\");\n-        MetaDataRoleAuthorizationStrategy.authorize(usersLink, WebPage.ENABLE, allowedUsersRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                usersLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Users\", \"list\"));\n         page.add(usersLink);\n         usersLink.add(new Image(\"usersIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"users\" + Constants.PNG_EXT)));\n \n         BookmarkablePageLink<Void> rolesLink = new BookmarkablePageLink<Void>(\"roles\", Roles.class);\n-        MetaDataRoleAuthorizationStrategy.authorizeAll(rolesLink, WebPage.ENABLE);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                rolesLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Roles\", \"list\"));\n         page.add(rolesLink);\n         rolesLink.add(new Image(\"rolesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"roles\" + Constants.PNG_EXT)));\n \n         BookmarkablePageLink<Void> resourcesLink = new BookmarkablePageLink<Void>(\"resources\", Resources.class);\n-        MetaDataRoleAuthorizationStrategy.authorizeAll(resourcesLink, WebPage.ENABLE);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                resourcesLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Resources\", \"list\"));\n         page.add(resourcesLink);\n         resourcesLink.add(new Image(\"resourcesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"resources\" + Constants.PNG_EXT)));\n \n         BookmarkablePageLink<Void> todoLink = new BookmarkablePageLink<Void>(\"todo\", Todo.class);\n-        MetaDataRoleAuthorizationStrategy.authorize(todoLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                \"Approval\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                todoLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Approval\", \"list\"));\n         page.add(todoLink);\n         todoLink.add(new Image(\"todoIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"todo\" + Constants.PNG_EXT)));\n \n         BookmarkablePageLink<Void> reportLink = new BookmarkablePageLink<Void>(\"reports\", Reports.class);\n-        String allowedReportRoles = xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\");\n-        MetaDataRoleAuthorizationStrategy.authorize(reportLink, WebPage.ENABLE, allowedReportRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                reportLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\"));\n         page.add(reportLink);\n         reportLink.add(new Image(\"reportsIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"reports\" + Constants.PNG_EXT)));\n \n         BookmarkablePageLink<Void> configurationLink = new BookmarkablePageLink<Void>(\"configuration\",\n                 Configuration.class);\n-        String allowedConfigurationRoles = xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"list\");\n-        MetaDataRoleAuthorizationStrategy.authorize(configurationLink, WebPage.ENABLE, allowedConfigurationRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                configurationLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"list\"));\n         page.add(configurationLink);\n         configurationLink.add(new Image(\"configurationIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"configuration\" + Constants.PNG_EXT)));\n \n         BookmarkablePageLink<Void> taskLink = new BookmarkablePageLink<Void>(\"tasks\", Tasks.class);\n-        String allowedTasksRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"list\");\n-        MetaDataRoleAuthorizationStrategy.authorize(taskLink, WebPage.ENABLE, allowedTasksRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                taskLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"list\"));\n         page.add(taskLink);\n         taskLink.add(new Image(\"tasksIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n@@ -177,6 +189,49 @@ public void onClick(final AjaxRequestTarget target) {\n         page.add(new BookmarkablePageLink<Void>(\"logout\", Logout.class));\n     }\n \n+    public void setupEditProfileModal(final WebPage page, final UserRestClient userRestClient) {\n+        // Modal window for editing user profile\n+        final ModalWindow editProfileModalWin = new ModalWindow(\"editProfileModal\");\n+        editProfileModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editProfileModalWin.setInitialHeight(EDIT_PROFILE_WIN_HEIGHT);\n+        editProfileModalWin.setInitialWidth(EDIT_PROFILE_WIN_WIDTH);\n+        editProfileModalWin.setCookieName(\"edit-profile-modal\");\n+        page.add(editProfileModalWin);\n+\n+        final AjaxLink<Void> editProfileLink = new AjaxLink<Void>(\"editProfileLink\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                final UserTO userTO = SyncopeSession.get().isAuthenticated()\n+                        ? userRestClient.readSelf()\n+                        : new UserTO();\n+\n+                editProfileModalWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690940L;\n+\n+                    @Override\n+                    public Page createPage() {\n+                        return new UserRequestModalPage(page.getPageReference(), editProfileModalWin,\n+                                userTO, UserModalPage.Mode.SELF);\n+                    }\n+                });\n+\n+                editProfileModalWin.show(target);\n+            }\n+        };\n+\n+        editProfileLink.add(new Label(\"username\", SyncopeSession.get().getUsername()));\n+\n+        if (\"admin\".equals(SyncopeSession.get().getUsername())) {\n+            editProfileLink.setEnabled(false);\n+        }\n+\n+        page.add(editProfileLink);\n+    }\n+\n     @Override\n     public Session newSession(final Request request, final Response response) {\n         return new SyncopeSession(request);"},{"sha":"21e1b0843368d5626dcc3e54341711a005daa88e","filename":"console/src/main/java/org/apache/syncope/console/SyncopeRequestCycleListener.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -18,6 +18,10 @@\n  */\n package org.apache.syncope.console;\n \n+import java.security.AccessControlException;\n+import javax.ws.rs.BadRequestException;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.console.pages.ErrorPage;\n import org.apache.wicket.Page;\n import org.apache.wicket.authorization.UnauthorizedInstantiationException;\n@@ -31,8 +35,6 @@\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.web.client.HttpClientErrorException;\n-import org.springframework.web.client.RestClientException;\n \n public class SyncopeRequestCycleListener extends AbstractRequestCycleListener {\n \n@@ -46,29 +48,27 @@ public class SyncopeRequestCycleListener extends AbstractRequestCycleListener {\n      */\n     @Override\n     public IRequestHandler onException(final RequestCycle cycle, final Exception e) {\n-\n         LOG.error(\"Exception found\", e);\n \n         final Page errorPage;\n         PageParameters errorParameters = new PageParameters();\n         errorParameters.add(\"errorTitle\", new StringResourceModel(\"alert\", null).getString());\n \n         if (e instanceof UnauthorizedInstantiationException) {\n-            errorParameters.add(\"errorMessage\", new StringResourceModel(\"unauthorizedInstantiationException\", null)\n-                    .getString());\n+            errorParameters.add(\"errorMessage\",\n+                    new StringResourceModel(\"unauthorizedInstantiationException\", null).getString());\n \n             errorPage = new ErrorPage(errorParameters);\n-        } else if (e instanceof HttpClientErrorException) {\n-            errorParameters.add(\"errorMessage\", new StringResourceModel(\"httpClientException\", null).getString());\n+        } else if (e.getCause() instanceof AccessControlException) {\n+            errorParameters.add(\"errorMessage\", new StringResourceModel(\"accessControlException\", null).getString());\n \n             errorPage = new ErrorPage(errorParameters);\n         } else if (e instanceof PageExpiredException || !(SyncopeSession.get()).isAuthenticated()) {\n-\n             errorParameters.add(\"errorMessage\", new StringResourceModel(\"pageExpiredException\", null).getString());\n \n             errorPage = new ErrorPage(errorParameters);\n-        } else if (e.getCause() != null && e.getCause().getCause() != null\n-                && e.getCause().getCause() instanceof RestClientException) {\n+        } else if (e.getCause() instanceof BadRequestException || e.getCause() instanceof WebServiceException\n+                || e.getCause() instanceof SyncopeClientCompositeException) {\n \n             errorParameters.add(\"errorMessage\", new StringResourceModel(\"restClientException\", null).getString());\n "},{"sha":"f7535ab9cef9634e75ab29ab033fcb1b3f1ff605","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":11,"deletions":12,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -24,7 +24,8 @@\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n-import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.client.SyncopeClientFactoryBean;\n import org.apache.wicket.Session;\n import org.apache.wicket.authroles.authorization.strategies.role.Roles;\n@@ -54,7 +55,7 @@ public class SyncopeSession extends WebSession {\n \n     private final SyncopeClientFactoryBean clientFactory;\n \n-    private final Map<Class<?>, Object> restServices = new HashMap<Class<?>, Object>();\n+    private final Map<Integer, SyncopeClient> clients = new HashMap<Integer, SyncopeClient>();\n \n     public static SyncopeSession get() {\n         return (SyncopeSession) Session.get();\n@@ -73,19 +74,17 @@ public <T> T getService(final Class<T> service) {\n         return getService(service, this.username, this.password);\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     public <T> T getService(final Class<T> serviceClass, final String username, final String password) {\n-        T res;\n-        if (restServices.containsKey(serviceClass)) {\n-            res = (T) restServices.get(serviceClass);\n-        } else {\n-            res = clientFactory.create(username, password).getService(serviceClass);\n-            if (StringUtils.isNotBlank(username) && StringUtils.isNotBlank(password)) {\n-                restServices.put(serviceClass, res);\n-            }\n+        final int clientKey = new HashCodeBuilder().\n+                append(username).\n+                append(password).\n+                toHashCode();\n+\n+        if (!clients.containsKey(clientKey)) {\n+            clients.put(clientKey, clientFactory.create(username, password));\n         }\n \n-        return res;\n+        return clients.get(clientKey).getService(serviceClass);\n     }\n \n     public String getUsername() {"},{"sha":"3de2787cd9295fce7a3c8c2ac7d2d717a3e418f4","filename":"console/src/main/java/org/apache/syncope/console/pages/BasePage.java","status":"modified","additions":1,"deletions":51,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -18,22 +18,17 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.console.SyncopeApplication;\n-import org.apache.syncope.console.SyncopeSession;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.wicket.Component;\n-import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.IAjaxIndicatorAware;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.PriorityHeaderItem;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n@@ -44,10 +39,6 @@ public class BasePage extends AbstractBasePage implements IAjaxIndicatorAware {\n \n     private static final long serialVersionUID = 1571997737305598502L;\n \n-    private final static int EDIT_PROFILE_WIN_HEIGHT = 550;\n-\n-    private final static int EDIT_PROFILE_WIN_WIDTH = 800;\n-\n     public BasePage() {\n         super();\n \n@@ -72,7 +63,6 @@ private void pageSetup() {\n \n                 @Override\n                 public void onComponentTag(final Component component, final ComponentTag tag) {\n-\n                     tag.put(\"class\", kind);\n                 }\n             });\n@@ -85,53 +75,13 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n \n                     @Override\n                     public void onComponentTag(final Component component, final ComponentTag tag) {\n-\n                         tag.put(\"src\", \"../..\" + SyncopeApplication.IMG_PREFIX + kind + Constants.PNG_EXT);\n                     }\n                 });\n             }\n         }\n \n-        // Modal window for editing user profile\n-        final ModalWindow editProfileModalWin = new ModalWindow(\"editProfileModal\");\n-        editProfileModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editProfileModalWin.setInitialHeight(EDIT_PROFILE_WIN_HEIGHT);\n-        editProfileModalWin.setInitialWidth(EDIT_PROFILE_WIN_WIDTH);\n-        editProfileModalWin.setCookieName(\"edit-profile-modal\");\n-        add(editProfileModalWin);\n-\n-        final AjaxLink editProfileLink = new AjaxLink(\"editProfileLink\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                final UserTO userTO = SyncopeSession.get().isAuthenticated()\n-                        ? userRestClient.readProfile()\n-                        : new UserTO();\n-\n-                editProfileModalWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    private static final long serialVersionUID = -7834632442532690940L;\n-\n-                    @Override\n-                    public Page createPage() {\n-                        return new UserRequestModalPage(BasePage.this.getPageReference(), editProfileModalWin,\n-                                userTO, UserModalPage.Mode.SELF);\n-                    }\n-                });\n-\n-                editProfileModalWin.show(target);\n-            }\n-        };\n-\n-        editProfileLink.add(new Label(\"username\", SyncopeSession.get().getUsername()));\n-\n-        if (\"admin\".equals(SyncopeSession.get().getUsername())) {\n-            editProfileLink.setEnabled(false);\n-        }\n-\n-        add(editProfileLink);\n+        ((SyncopeApplication) getApplication()).setupEditProfileModal(this, userRestClient);\n     }\n \n     @Override"},{"sha":"1f64a39e3ded506cf9b00412a0288062397ec49c","filename":"console/src/main/java/org/apache/syncope/console/pages/Login.java","status":"modified","additions":29,"deletions":7,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -77,6 +77,12 @@ public class Login extends WebPage {\n     @SpringBean(name = \"baseURL\")\n     private String baseURL;\n \n+    @SpringBean(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n+    @SpringBean(name = \"anonymousKey\")\n+    private String anonymousKey;\n+\n     private Form<Void> form;\n \n     private TextField<String> userIdField;\n@@ -109,12 +115,11 @@ public Login(final PageParameters parameters) {\n             @Override\n             public void onSubmit() {\n                 try {\n-                    String[] entitlements = authenticate(userIdField.getRawInput(), passwordField.getRawInput());\n+                    if (anonymousUser.equals(userIdField.getRawInput())) {\n+                        throw new AccessControlException(\"Illegal username\");\n+                    }\n \n-                    SyncopeSession.get().setUsername(userIdField.getRawInput());\n-                    SyncopeSession.get().setPassword(passwordField.getRawInput());\n-                    SyncopeSession.get().setEntitlements(entitlements);\n-                    SyncopeSession.get().setVersion(getSyncopeVersion());\n+                    authenticate(userIdField.getRawInput(), passwordField.getRawInput());\n \n                     setResponsePage(WelcomePage.class, parameters);\n                 } catch (AccessControlException e) {\n@@ -153,11 +158,24 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                         @Override\n                         public Page createPage() {\n+                            // anonymous authentication needed for self-registration\n+                            authenticate(anonymousUser, anonymousKey);\n+\n                             return new UserRequestModalPage(Login.this.getPageReference(), editProfileModalWin,\n                                     new UserTO(), UserModalPage.Mode.SELF);\n                         }\n                     });\n \n+                    editProfileModalWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+                        private static final long serialVersionUID = 251794406325329768L;\n+\n+                        @Override\n+                        public void onClose(final AjaxRequestTarget target) {\n+                            SyncopeSession.get().invalidate();\n+                        }\n+                    });\n+\n                     editProfileModalWin.show(target);\n                 }\n             };\n@@ -172,10 +190,14 @@ public Page createPage() {\n         add(selfRegFrag);\n     }\n \n-    private String[] authenticate(final String username, final String password) {\n+    private void authenticate(final String username, final String password) {\n         Set<EntitlementTO> entitlements = SyncopeSession.get().\n                 getService(EntitlementService.class, username, password).getMyEntitlements();\n-        return CollectionWrapper.unwrap(entitlements).toArray(new String[0]);\n+\n+        SyncopeSession.get().setUsername(username);\n+        SyncopeSession.get().setPassword(password);\n+        SyncopeSession.get().setEntitlements(CollectionWrapper.unwrap(entitlements).toArray(new String[0]));\n+        SyncopeSession.get().setVersion(getSyncopeVersion());\n     }\n \n     private boolean isSelfRegistrationAllowed() {"},{"sha":"aec3d5ed41c933b44019f80299b16c2f5ce8833d","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n+import org.apache.syncope.console.SyncopeSession;\n import org.apache.syncope.console.commons.ConnIdSpecialAttributeName;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.StatusUtils;\n@@ -55,6 +56,7 @@\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n \n /**\n  * Show user or role status after performing a successful operation.\n@@ -65,6 +67,9 @@ public class ResultStatusModalPage extends BaseModalPage {\n \n     private static final String IMG_STATUSES = \"statuses/\";\n \n+    @SpringBean(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n     private final AbstractAttributableTO attributable;\n \n     private final UserModalPage.Mode mode;\n@@ -227,7 +232,6 @@ public Page createPage() {\n                     });\n                     failureWindow.setCookieName(\"failureWindow\");\n                     failureWindow.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-                    //attrhead.add(image);\n                     failureWindowLink.add(image);\n                     attrhead.add(failureWindowLink);\n                     attrhead.add(failureWindow);\n@@ -242,6 +246,9 @@ public Page createPage() {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n+                if (mode == UserModalPage.Mode.SELF && anonymousUser.equals(SyncopeSession.get().getUsername())) {\n+                    SyncopeSession.get().invalidate();\n+                }\n                 builder.window.close(target);\n             }\n         };"},{"sha":"7de0568af1568d946d542a062ba8015bf6ecb3be","filename":"console/src/main/java/org/apache/syncope/console/pages/UserRequestModalPage.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -37,7 +37,7 @@ public class UserRequestModalPage extends UserModalPage {\n     private static final long serialVersionUID = 603212869211672852L;\n \n     @SpringBean\n-    private UserRequestRestClient requestRestClient;\n+    private UserRequestRestClient restClient;\n \n     private UserTO initialUserTO;\n \n@@ -83,31 +83,31 @@ protected void submitAction(final AjaxRequestTarget target, final Form form) {\n         if (updatedUserTO.getId() == 0) {\n             switch (mode) {\n                 case SELF:\n-                    requestRestClient.requestCreate(updatedUserTO);\n+                    restClient.requestCreate(updatedUserTO);\n                     break;\n \n                 case ADMIN:\n-                    requestRestClient.executeCreate(userRequestTO.getId(), userTO);\n+                    restClient.executeCreate(userRequestTO.getId(), userTO);\n                     break;\n \n                 default:\n                     LOG.warn(\"Invalid mode specified for {}: {}\", getClass().getName(), mode);\n             }\n         } else {\n             final UserTO originalUserTO = mode == Mode.SELF\n-                    ? userRestClient.read(updatedUserTO.getUsername())\n+                    ? userRestClient.readSelf()\n                     : userRestClient.read(updatedUserTO.getId());\n             final UserMod userMod = AttributableOperations.diff(updatedUserTO, originalUserTO);\n \n             // update user only if it has changed\n             if (!userMod.isEmpty()) {\n                 switch (mode) {\n                     case SELF:\n-                        requestRestClient.requestUpdate(userMod);\n+                        restClient.requestUpdate(userMod);\n                         break;\n \n                     case ADMIN:\n-                        requestRestClient.executeUpdate(userRequestTO.getId(), userMod);\n+                        restClient.executeUpdate(userRequestTO.getId(), userMod);\n                         break;\n \n                     default:"},{"sha":"df36af2ebbe944031365c19525da58b199f1e759","filename":"console/src/main/java/org/apache/syncope/console/pages/WelcomePage.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.console.SyncopeApplication;\n import org.apache.syncope.console.commons.XMLRolesReader;\n+import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n@@ -34,15 +35,21 @@ public class WelcomePage extends WebPage {\n     @SpringBean\n     private XMLRolesReader xmlRolesReader;\n \n+    @SpringBean\n+    protected UserRestClient userRestClient;\n+\n     public WelcomePage(final PageParameters parameters) {\n         super(parameters);\n         setupNavigationPanel();\n-\n-\n+        setupEditProfileModal();\n     }\n \n     //To prevent warning: \"leaking this in constructor java\" \n     private void setupNavigationPanel() {\n         ((SyncopeApplication) getApplication()).setupNavigationPanel(this, xmlRolesReader, false);\n     }\n+\n+    private void setupEditProfileModal() {\n+        ((SyncopeApplication) getApplication()).setupEditProfileModal(this, userRestClient);\n+    }\n }"},{"sha":"6283ba3203a6b479c6398205906ed3c20065b521","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -68,16 +68,15 @@ public UserDetailsPanel(final String id, final UserTO userTO, final Form form, f\n         // ------------------------\n         // Password\n         // ------------------------\n-        FieldPanel<String> password;\n-        Label confirmPasswordLabel = new Label(\"confirmPasswordLabel\", new ResourceModel(\"confirmPassword\"));\n-        FieldPanel<String> confirmPassword;\n-\n         final WebMarkupContainer pwdJexlHelp = JexlHelpUtil.getJexlHelpWebContainer(\"pwdJexlHelp\");\n         add(pwdJexlHelp);\n \n         final AjaxLink<?> pwdQuestionMarkJexlHelp = JexlHelpUtil.getAjaxLink(pwdJexlHelp, \"pwdQuestionMarkJexlHelp\");\n         add(pwdQuestionMarkJexlHelp);\n \n+        FieldPanel<String> password;\n+        Label confirmPasswordLabel = new Label(\"confirmPasswordLabel\", new ResourceModel(\"confirmPassword\"));\n+        FieldPanel<String> confirmPassword;\n         if (templateMode) {\n             password = new AjaxTextFieldPanel(\"password\", \"password\", new PropertyModel<String>(userTO, \"password\"));\n "},{"sha":"6006fdff307b6faf3176ed381eb01e5110f2b106","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -94,7 +94,7 @@ public UserTO read(final String username) {\n         return userTO;\n     }\n \n-    public UserTO readProfile() {\n+    public UserTO readSelf() {\n         return getService(UserService.class).readSelf();\n     }\n "},{"sha":"0e1a4b04ae77cc0d8a76f0cc322394df91b4ff7d","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -55,6 +55,13 @@ under the License.\n   <bean id=\"license\" class=\"java.lang.String\">\n     <constructor-arg value=\"${licenseUrl}\"/>\n   </bean>\n+  \n+  <bean id=\"anonymousUser\" class=\"java.lang.String\">\n+    <constructor-arg value=\"${anonymousUser}\"/>\n+  </bean>\n+  <bean id=\"anonymousKey\" class=\"java.lang.String\">\n+    <constructor-arg value=\"${anonymousKey}\"/>\n+  </bean>\n \n   <bean id=\"syncopeApplication\" class=\"org.apache.syncope.console.SyncopeApplication\"/>\n "},{"sha":"5d535009fd51be31666e02ebb11ffbfb6ec586a4","filename":"console/src/main/resources/authorizations.xml","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -16,10 +16,13 @@ software distributed under the License is distributed on an\n KIND, either express or implied.  See the License for the\n specific language governing permissions and limitations\n under the License.\n-\n -->\n <auth>\n   <page id=\"Schema\">\n+    <action id=\"list\">\n+      <entitlement>SCHEMA_LIST</entitlement>\n+    </action>\n+\n     <action id=\"create\">\n       <entitlement>SCHEMA_CREATE</entitlement>\n     </action>\n@@ -64,6 +67,10 @@ under the License.\n   </page>\n \n   <page id=\"Roles\">\n+    <action id=\"list\">\n+      <entitlement>ROLE_LIST</entitlement>\n+    </action>\n+\n     <action id=\"create\">\n       <entitlement>ROLE_CREATE</entitlement>\n     </action>\n@@ -82,6 +89,10 @@ under the License.\n   </page>\n \n   <page id=\"Resources\">\n+    <action id=\"list\">\n+      <entitlement>RESOURCE_LIST</entitlement>\n+    </action>\n+\n     <action id=\"create\">\n       <entitlement>RESOURCE_CREATE</entitlement>\n     </action>"},{"sha":"636b684b5e537ed722acb62fccee5684e85dc686","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -33,7 +33,7 @@ confirmDeprovision=Do you really want to de-provision user(s)?\n \n \n unauthorizedInstantiationException=Missing authorization.\n-httpClientException=Missing authorization while contacting Syncope core.\n+accessControlException=Missing authorization while contacting Syncope core.\n restClientException=Error while contacting Syncope core.\n pageExpiredException=Session expired: please login again.\n "},{"sha":"651dfb6d161d006617519b505a6af184e6f57106","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -32,7 +32,7 @@ confirmUnassign=Vuoi davvero procedere rimuovendo l'assegnamento tra utente/i e\n confirmDeprovision=Vuoi davvero procedere con il de-provisioning dell'utente?\n \n unauthorizedInstantiationException=Autorizzazione mancante.\n-httpClientException=Autorizzazione mancante durante la comunicazione con Syncope core.\n+accessControlException=Autorizzazione mancante durante la comunicazione con Syncope core.\n restClientException=Errore durante la comunicazione con Syncope core.\n pageExpiredException=Sessione scaduta: eseguire di nuovo l'accesso.\n "},{"sha":"94c7ebf702055713729f1c0ac79e8f4461cb9cce","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -23,7 +23,7 @@ reports=Relat\\u00f3rios\n tasks=Tarefas\n logout=Sair\n schema=Esquemas\n-operation_succeded=Opera\\u00e7\\u00e3o executada com sucesso\n+operation_succeeded=Opera\\u00e7\\u00e3o executada com sucesso\n operation_error=Um erro ocorreu ao executar esta opera\\u00e7\\u00e3o\n alert=Alerta:\n confirmDelete=Voc\\u00ea realmente deseja apagar este item selecionado?\n@@ -32,7 +32,7 @@ confirmUnassign=Voc\\u00ea realmente deseja apagar a atribui\\u00e7\\u00e3o entre o\n confirmDeprovision=Voc\\u00ea realmente de-provision usu\\u00e1rio?\n \n unauthorizedInstantiationException=Falta de autoriza\\u00e7\\u00e3o para concluir.\n-httpClientException=Falta de autoriza\\u00e7\\u00e3o ao comunicar-se com o Syncope core.\n+accessControlException=Falta de autoriza\\u00e7\\u00e3o ao comunicar-se com o Syncope core.\n restClientException=Erro ao comunicar-se com o Syncope core.\n pageExpiredException=Sess\\u00e3o encerrada, favor logar-se novamente.\n "},{"sha":"576acd284ca55d4270807abfd4d40548f765c367","filename":"console/src/main/resources/org/apache/syncope/console/pages/BasePage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -127,7 +127,7 @@\n           </div>\n         </li>\n       </ul>\n-      <div wicket:id=\"editProfileModal\" ></div>\n+      <div wicket:id=\"editProfileModal\"></div>\n     </div>\n \n     <div wicket:id=\"feedback\"/>"},{"sha":"7736fe4730ebab169484a1e562cd03e0cffbbe41","filename":"console/src/main/resources/org/apache/syncope/console/pages/WelcomePage.html","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -40,8 +40,19 @@\n   <body style=\"text-align:center\">\n     <div id=\"splash\">\n       <img src=\"img/logo.png\" alt=\"syncope\" title=\"syncope\" id=\"logo\" />\n-      <div wicket:id=\"infoModal\"/>\n-      <a style=\"position: relative; top: 20px; left: -103px;\" wicket:id=\"infoLink\"><img src=\"img/info.png\" alt=\"info\" title=\"info\"/></a>\n+      <div style=\"display: table-row;\">\n+        <div id=\"username\" style=\"padding-right: 5px;cursor: pointer;display: table-cell;\">          \n+          <a href=\"#\" wicket:id=\"editProfileLink\" style=\"font-family: monospace;padding-left: 130px;\">\n+            <span style=\"color: #B9CFB3;\"><wicket:message key=\"welcome\"/>,\n+              <span wicket:id=\"username\" style=\"color: #B9CFB3;text-decoration: underline;\"/>\n+            </span>\n+          </a>\n+        </div>\n+        <div>\n+          <div wicket:id=\"infoModal\"/>\n+          <a wicket:id=\"infoLink\"><img src=\"img/info.png\" alt=\"info\" style=\"padding-right: 10px;\"/></a>\n+        </div>\n+      </div>\n       <ul>\n         <li><a href=\"#\" wicket:id=\"todo\" class=\"todo\"><img wicket:id=\"todoIcon\" alt=\"TODO\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"todo\"/></a></li>\n         <li><a href=\"#\" wicket:id=\"schema\" class=\"schema\"><img wicket:id=\"schemaIcon\" alt=\"Schema\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"schema\"/></a></li>\n@@ -54,5 +65,6 @@\n         <li><a href=\"#\" wicket:id=\"logout\" class=\"logout\"><img src=\"img/menu/logout.png\" alt=\"Logout\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"logout\"/></a></li>\n       </ul>\n     </div>\n+    <div wicket:id=\"editProfileModal\"></div>\n   </body>\n </html>"},{"sha":"bd12937e86aa6900a3e6bd02b3292295d31f1c4c","filename":"console/src/test/java/org/apache/syncope/console/EditProfileTestITCase.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -40,10 +40,11 @@ public void selfRegistration() {\n         selenium.click(\"css=a.w_close\");\n \n         // only to have some \"Logout\" availabe for @After\n-        selenium.type(\"name=userId\", \"rossini\");\n-        selenium.type(\"name=password\", \"password\");\n+        selenium.open(\"/syncope-console/\");\n+        selenium.waitForPageToLoad(\"30000\");\n+        selenium.type(\"name=userId\", ADMIN);\n+        selenium.type(\"name=password\", PASSWORD);\n         selenium.click(\"name=:submit\");\n-\n         selenium.waitForPageToLoad(\"30000\");\n     }\n \n@@ -53,12 +54,9 @@ public void editUserProfile() {\n         selenium.type(\"name=userId\", \"rossini\");\n         selenium.type(\"name=password\", \"password\");\n         selenium.click(\"name=:submit\");\n-        selenium.waitForPageToLoad(\"30000\");\n-\n-        selenium.click(\"css=img[alt=\\\"Schema\\\"]\");\n-        selenium.waitForPageToLoad(\"30000\");\n \n-        selenium.click(\"//div/ul/li[10]/div/div/a/span\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='username']/a\\\");\", \"30000\");\n+        selenium.click(\"//div[@id='username']/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@value='rossini']\\\");\", \"30000\");"},{"sha":"c237e9a20b9f75314ff70a18a2ed9ad6c680ca19","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeUserValidator.java","status":"modified","additions":27,"deletions":15,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import javax.annotation.Resource;\n import javax.validation.ConstraintValidatorContext;\n import org.apache.syncope.common.types.AccountPolicySpec;\n import org.apache.syncope.common.types.EntityViolationType;\n@@ -32,12 +33,19 @@\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.PolicyDAO;\n import org.apache.syncope.core.policy.AccountPolicyEnforcer;\n+import org.apache.syncope.core.policy.AccountPolicyException;\n import org.apache.syncope.core.policy.PasswordPolicyEnforcer;\n import org.apache.syncope.core.policy.PolicyEvaluator;\n import org.springframework.beans.factory.annotation.Autowired;\n \n public class SyncopeUserValidator extends AbstractValidator<SyncopeUserCheck, SyncopeUser> {\n \n+    @Resource(name = \"adminUser\")\n+    private String adminUser;\n+\n+    @Resource(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n     @Autowired\n     private PolicyDAO policyDAO;\n \n@@ -51,36 +59,36 @@ public class SyncopeUserValidator extends AbstractValidator<SyncopeUserCheck, Sy\n     private AccountPolicyEnforcer apEnforcer;\n \n     @Override\n-    public boolean isValid(final SyncopeUser object, final ConstraintValidatorContext context) {\n+    public boolean isValid(final SyncopeUser user, final ConstraintValidatorContext context) {\n         context.disableDefaultConstraintViolation();\n \n         // ------------------------------\n         // Verify password policies\n         // ------------------------------\n         LOG.debug(\"Password Policy enforcement\");\n \n-        if (object.getClearPassword() != null) {\n+        if (user.getClearPassword() != null) {\n             try {\n                 int maxPPSpecHistory = 0;\n-                for (Policy policy : getPasswordPolicies(object)) {\n+                for (Policy policy : getPasswordPolicies(user)) {\n                     // evaluate policy\n-                    final PasswordPolicySpec ppSpec = evaluator.evaluate(policy, object);\n+                    final PasswordPolicySpec ppSpec = evaluator.evaluate(policy, user);\n                     // enforce policy\n-                    ppEnforcer.enforce(ppSpec, policy.getType(), object.getClearPassword());\n+                    ppEnforcer.enforce(ppSpec, policy.getType(), user.getClearPassword());\n \n                     if (ppSpec.getHistoryLength() > maxPPSpecHistory) {\n                         maxPPSpecHistory = ppSpec.getHistoryLength();\n                     }\n                 }\n \n                 // update user's password history with encrypted password\n-                if (maxPPSpecHistory > 0 && object.getPassword() != null) {\n-                    object.getPasswordHistory().add(object.getPassword());\n+                if (maxPPSpecHistory > 0 && user.getPassword() != null) {\n+                    user.getPasswordHistory().add(user.getPassword());\n                 }\n                 // keep only the last maxPPSpecHistory items in user's password history\n-                if (maxPPSpecHistory < object.getPasswordHistory().size()) {\n-                    for (int i = 0; i < object.getPasswordHistory().size() - maxPPSpecHistory; i++) {\n-                        object.getPasswordHistory().remove(i);\n+                if (maxPPSpecHistory < user.getPasswordHistory().size()) {\n+                    for (int i = 0; i < user.getPasswordHistory().size() - maxPPSpecHistory; i++) {\n+                        user.getPasswordHistory().remove(i);\n                     }\n                 }\n             } catch (Exception e) {\n@@ -93,7 +101,7 @@ public boolean isValid(final SyncopeUser object, final ConstraintValidatorContex\n                 return false;\n             } finally {\n                 // password has been validated, let's remove its clear version\n-                object.removeClearPassword();\n+                user.removeClearPassword();\n             }\n         }\n         // ------------------------------\n@@ -104,13 +112,17 @@ public boolean isValid(final SyncopeUser object, final ConstraintValidatorContex\n         LOG.debug(\"Account Policy enforcement\");\n \n         try {\n-            // missing username\n-            for (Policy policy : getAccountPolicies(object)) {\n+            if (adminUser.equals(user.getUsername()) || anonymousUser.equals(user.getUsername())) {\n+                throw new AccountPolicyException(\"Not allowed: \" + user.getUsername());\n+            }\n+\n+            // invalid username\n+            for (Policy policy : getAccountPolicies(user)) {\n                 // evaluate policy\n-                final AccountPolicySpec accountPolicy = evaluator.evaluate(policy, object);\n+                final AccountPolicySpec accountPolicy = evaluator.evaluate(policy, user);\n \n                 // enforce policy\n-                apEnforcer.enforce(accountPolicy, policy.getType(), object);\n+                apEnforcer.enforce(accountPolicy, policy.getType(), user);\n             }\n         } catch (Exception e) {\n             LOG.debug(\"Invalid username\");"},{"sha":"f0724a2e5154ce6bd2360d439be69ac264d1188a","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -192,6 +192,7 @@ public Set<String> getPropagationActionsClasses() {\n         return actionsClasses;\n     }\n \n+    @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     public List<ResourceTO> list(final Long connInstanceId) {\n         List<ExternalResource> resources;"},{"sha":"492a7e241185bfce5f96eb86402715e133950335","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -23,6 +23,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n+import javax.annotation.Resource;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n@@ -91,20 +92,21 @@ public class RoleController {\n     @Autowired\n     private PropagationTaskExecutor taskExecutor;\n \n-    /**\n-     * ConnectorObject util.\n-     */\n     @Autowired\n     private ConnObjectUtil connObjectUtil;\n \n-    @PreAuthorize(\"hasRole('ROLE_READ')\")\n+    @Resource(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n+    @PreAuthorize(\"hasAnyRole('ROLE_READ', T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n     @Transactional(readOnly = true)\n     public RoleTO read(final Long roleId) {\n-        SyncopeRole role = binder.getRoleFromId(roleId);\n-\n-        Set<Long> allowedRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-        if (!allowedRoleIds.contains(role.getId())) {\n-            throw new UnauthorizedRoleException(role.getId());\n+        SyncopeRole role;\n+        // bypass role entitlements check\n+        if (anonymousUser.equals(EntitlementUtil.getAuthenticatedUsername())) {\n+            role = roleDAO.find(roleId);\n+        } else {\n+            role = binder.getRoleFromId(roleId);\n         }\n \n         auditManager.audit(Category.role, RoleSubCategory.read, Result.success,\n@@ -113,7 +115,8 @@ public RoleTO read(final Long roleId) {\n         return binder.getRoleTO(role);\n     }\n \n-    @PreAuthorize(\"isAuthenticated()\")\n+    @PreAuthorize(\"isAuthenticated() \"\n+            + \"and not(hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n     @Transactional(readOnly = true)\n     public RoleTO selfRead(final Long roleId) {\n         // Explicit search instead of using binder.getRoleFromId() in order to bypass auth checks - will do here\n@@ -234,6 +237,7 @@ public int searchCount(final NodeCond searchCondition)\n         return searchDAO.count(adminRoleIds, searchCondition, AttributableUtil.getInstance(AttributableType.ROLE));\n     }\n \n+    @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     public List<RoleTO> list() {\n         List<SyncopeRole> roles = roleDAO.findAll();"},{"sha":"c3f9be993c964de803dc453a8f8da329d302586f","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/SchemaController.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -169,6 +169,7 @@ public void delete(final AttributableType attrType, final SchemaType schemaType,\n                 \"Successfully deleted schema: \" + schemaType + \"/\" + attrType + \"/\" + schemaName);\n     }\n \n+    @PreAuthorize(\"isAuthenticated()\")\n     @SuppressWarnings(\"unchecked\")\n     public <T extends AbstractSchemaTO> List<T> list(final AttributableType attrType, final SchemaType schemaType) {\n         final AttributableUtil attrUtil = AttributableUtil.getInstance(attrType);"},{"sha":"3ab1ce26c14f3d1739b1228ad4f813d15af06df2","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -191,7 +191,8 @@ public UserTO read(final String username) {\n         return result;\n     }\n \n-    @PreAuthorize(\"isAuthenticated()\")\n+    @PreAuthorize(\"isAuthenticated() \"\n+            + \"and not(hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n     @Transactional(readOnly = true)\n     public UserTO read() {\n         UserTO userTO = binder.getAuthenticatedUserTO();"},{"sha":"7065f6e5a166ed852976494bf27659b717981a91","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserRequestController.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -80,6 +80,7 @@ public boolean isCreateAllowed() {\n         return Boolean.valueOf(createRequestAllowed.getValue());\n     }\n \n+    @PreAuthorize(\"isAuthenticated()\")\n     public UserRequestTO create(final UserTO userTO) {\n         if (!isCreateAllowed()) {\n             LOG.error(\"Create requests are not allowed\");\n@@ -107,7 +108,8 @@ public UserRequestTO create(final UserTO userTO) {\n         return binder.getUserRequestTO(request);\n     }\n \n-    @PreAuthorize(\"isAuthenticated()\")\n+    @PreAuthorize(\"isAuthenticated() \"\n+            + \"and not(hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n     public UserRequestTO update(final UserMod userMod) {\n         LOG.debug(\"Request user update called with {}\", userMod);\n \n@@ -129,7 +131,8 @@ public UserRequestTO update(final UserMod userMod) {\n         return binder.getUserRequestTO(request);\n     }\n \n-    @PreAuthorize(\"isAuthenticated()\")\n+    @PreAuthorize(\"isAuthenticated() \"\n+            + \"and not(hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n     public UserRequestTO delete(final Long userId) {\n         LOG.debug(\"Request user delete called with {}\", userId);\n \n@@ -182,6 +185,8 @@ public List<UserRequestTO> list(final boolean executed) {\n         return result;\n     }\n \n+    @PreAuthorize(\"hasRole('USER_REQUEST_LIST')\")\n+    @Transactional(readOnly = true)\n     public List<UserRequestTO> listByUsername(final String username) {\n         List<UserRequestTO> result = new ArrayList<UserRequestTO>();\n "},{"sha":"dd476cb30876610855ffe2f13e3ab25367b1a3ba","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -74,6 +74,9 @@ public class UserDataBinder extends AbstractAttributableDataBinder {\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n+    @Resource(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n     @Transactional(readOnly = true)\n     public SyncopeUser getUserFromId(final Long userId) {\n         if (userId == null) {\n@@ -102,7 +105,11 @@ public UserTO getAuthenticatedUserTO() {\n         final UserTO authUserTO;\n \n         final String authUsername = SecurityContextHolder.getContext().getAuthentication().getName();\n-        if (adminUser.equals(authUsername)) {\n+        if (anonymousUser.equals(authUsername)) {\n+            authUserTO = new UserTO();\n+            authUserTO.setId(-2);\n+            authUserTO.setUsername(anonymousUser);\n+        } else if (adminUser.equals(authUsername)) {\n             authUserTO = new UserTO();\n             authUserTO.setId(-1);\n             authUserTO.setUsername(adminUser);"},{"sha":"4ee4004ff9e55807df8657ae99c8cd9c8c8bc2cd","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -57,10 +57,15 @@ public class SyncopeAuthenticationProvider implements AuthenticationProvider {\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n+    @Resource(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n     private String adminPassword;\n \n     private String adminPasswordAlgorithm;\n \n+    private String anonymousKey;\n+\n     private SyncopeUserDetailsService userDetailsService;\n \n     /**\n@@ -77,6 +82,13 @@ public void setAdminPasswordAlgorithm(final String adminPasswordAlgorithm) {\n         this.adminPasswordAlgorithm = adminPasswordAlgorithm;\n     }\n \n+    /**\n+     * @param anonymousKey the anonymousKey to set\n+     */\n+    public void setAnonymousKey(final String anonymousKey) {\n+        this.anonymousKey = anonymousKey;\n+    }\n+\n     public void setSyncopeUserDetailsService(final SyncopeUserDetailsService syncopeUserDetailsService) {\n         this.userDetailsService = syncopeUserDetailsService;\n     }\n@@ -90,7 +102,9 @@ public Authentication authenticate(final Authentication authentication)\n         SyncopeUser user = null;\n \n         String username = authentication.getName();\n-        if (adminUser.equals(username)) {\n+        if (anonymousUser.equals(username)) {\n+            authenticated = authentication.getCredentials().toString().equals(anonymousKey);\n+        } else if (adminUser.equals(username)) {\n             authenticated = authenticate(\n                     authentication.getCredentials().toString(),\n                     CipherAlgorithm.valueOf(adminPasswordAlgorithm),"},{"sha":"f4c835e4bcc78822271b4392348c1fb8eaeb44d7","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeUserDetailsService.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\n import java.util.Set;\n import javax.annotation.Resource;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -53,10 +54,15 @@ public class SyncopeUserDetailsService implements UserDetailsService {\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n+    @Resource(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n     @Override\n     public UserDetails loadUserByUsername(final String username) throws UsernameNotFoundException, DataAccessException {\n         final Set<SimpleGrantedAuthority> authorities = new HashSet<SimpleGrantedAuthority>();\n-        if (adminUser.equals(username)) {\n+        if (anonymousUser.equals(username)) {\n+            authorities.add(new SimpleGrantedAuthority(SyncopeConstants.ANONYMOUS_ENTITLEMENT));\n+        } else if (adminUser.equals(username)) {\n             for (Entitlement entitlement : entitlementDAO.findAll()) {\n                 authorities.add(new SimpleGrantedAuthority(entitlement.getName()));\n             }"},{"sha":"d5e0da2ca52484b9429dfe107fb9cccf28abdbf9","filename":"core/src/main/java/org/apache/syncope/core/util/EntitlementUtil.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -23,11 +23,13 @@\n import java.util.List;\n import java.util.Set;\n import java.util.regex.Pattern;\n-import org.apache.syncope.common.SyncopeConstants;\n \n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n+\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+\n import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.GrantedAuthority;\n@@ -46,7 +48,7 @@ public final class EntitlementUtil {\n \n     public static String getAuthenticatedUsername() {\n         Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n-        return authentication == null ? SyncopeConstants.ANONYMOUS_USER : authentication.getName();\n+        return authentication == null ? SyncopeConstants.UNAUTHENTICATED : authentication.getName();\n     }\n \n     public static Set<String> getOwnedEntitlementNames() {\n@@ -76,7 +78,7 @@ public static Long getRoleId(final String entitlementName) {\n \n         if (isRoleEntitlement(entitlementName)) {\n             try {\n-                result = Long.valueOf(entitlementName.substring(entitlementName.indexOf(\"_\") + 1));\n+                result = Long.valueOf(entitlementName.substring(entitlementName.indexOf('_') + 1));\n             } catch (Exception e) {\n                 LOG.error(\"unable to parse {} to Long\", entitlementName, e);\n             }"},{"sha":"ace0c01742257d9a813f1279532ed79563173001","filename":"core/src/main/resources/content.xml","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -32,6 +32,7 @@ under the License.\n   <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"0\"/>\n     \n   <!-- Authentication and authorization -->\n+  <Entitlement name=\"SCHEMA_LIST\"/>\n   <Entitlement name=\"SCHEMA_CREATE\"/>\n   <Entitlement name=\"SCHEMA_READ\"/>\n   <Entitlement name=\"SCHEMA_UPDATE\"/>\n@@ -42,10 +43,12 @@ under the License.\n   <Entitlement name=\"USER_UPDATE\"/>\n   <Entitlement name=\"USER_DELETE\"/>\n   <Entitlement name=\"USER_VIEW\"/>\n+  <Entitlement name=\"ROLE_LIST\"/>\n   <Entitlement name=\"ROLE_CREATE\"/>\n   <Entitlement name=\"ROLE_READ\"/>\n   <Entitlement name=\"ROLE_UPDATE\"/>\n   <Entitlement name=\"ROLE_DELETE\"/>\n+  <Entitlement name=\"RESOURCE_LIST\"/>\n   <Entitlement name=\"RESOURCE_CREATE\"/>\n   <Entitlement name=\"RESOURCE_READ\"/>\n   <Entitlement name=\"RESOURCE_UPDATE\"/>\n@@ -62,14 +65,14 @@ under the License.\n   <Entitlement name=\"CONFIGURATION_READ\"/>\n   <Entitlement name=\"CONFIGURATION_UPDATE\"/>\n   <Entitlement name=\"CONFIGURATION_DELETE\"/>\n-  <Entitlement name=\"TASK_CREATE\"/>\n   <Entitlement name=\"TASK_LIST\"/>\n-  <Entitlement name=\"TASK_EXECUTE\"/>\n+  <Entitlement name=\"TASK_CREATE\"/>\n   <Entitlement name=\"TASK_READ\"/>\n   <Entitlement name=\"TASK_UPDATE\"/>\n   <Entitlement name=\"TASK_DELETE\"/>\n-  <Entitlement name=\"POLICY_CREATE\"/>\n+  <Entitlement name=\"TASK_EXECUTE\"/>\n   <Entitlement name=\"POLICY_LIST\"/>\n+  <Entitlement name=\"POLICY_CREATE\"/>\n   <Entitlement name=\"POLICY_READ\"/>\n   <Entitlement name=\"POLICY_UPDATE\"/>\n   <Entitlement name=\"POLICY_DELETE\"/>"},{"sha":"eb23a969f7b729ba6e0dc26511007f4484de8fe6","filename":"core/src/main/resources/security.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fresources%2Fsecurity.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fresources%2Fsecurity.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fsecurity.properties?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -17,4 +17,6 @@\n adminUser=admin\n adminPassword=5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\n adminPasswordAlgorithm=SHA1\n+anonymousUser=${anonymousUser}\n+anonymousKey=${anonymousKey}\n secretKey=${secretKey}"},{"sha":"dcb0c5489a1f9875d1b6114138fed94554bdaa1e","filename":"core/src/main/resources/securityContext.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -52,6 +52,7 @@ under the License.\n         class=\"org.apache.syncope.core.security.SyncopeAuthenticationProvider\">\n     <property name=\"adminPassword\" value=\"${adminPassword}\"/>\n     <property name=\"adminPasswordAlgorithm\" value=\"${adminPasswordAlgorithm}\"/>\n+    <property name=\"anonymousKey\" value=\"anonymousKey\"/>\n     <property name=\"syncopeUserDetailsService\" ref=\"syncopeUserDetailsService\"/>\n   </bean>\n "},{"sha":"d3613edd3539a5b3fedb9200cf2649b47b7c1c64","filename":"core/src/main/resources/syncopeContext.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -43,6 +43,9 @@ under the License.\n   <bean id=\"adminUser\" class=\"java.lang.String\">\n     <constructor-arg value=\"${adminUser}\"/>\n   </bean>\n+  <bean id=\"anonymousUser\" class=\"java.lang.String\">\n+    <constructor-arg value=\"${anonymousUser}\"/>\n+  </bean>\n \n   <bean class=\"org.apache.syncope.core.util.ApplicationContextProvider\"/>\n "},{"sha":"ca8b638b4cba70db643033be5c2488ee45136422","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -41,7 +41,7 @@ public class EntitlementTest extends AbstractDAOTest {\n     @Test\n     public void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n-        assertEquals(\"did not get expected number of entitlements \", 86, list.size());\n+        assertEquals(\"did not get expected number of entitlements \", 89, list.size());\n     }\n \n     @Test"},{"sha":"b5c58c492073737d127e709381f18aa9291febc6","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":34,"deletions":5,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -18,13 +18,17 @@\n  */\n package org.apache.syncope.core.rest;\n \n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.fail;\n \n+import java.io.InputStream;\n+import java.util.Properties;\n import java.util.UUID;\n \n import javax.sql.DataSource;\n import javax.ws.rs.core.MultivaluedMap;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n \n import org.apache.http.HttpStatus;\n@@ -54,6 +58,7 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n+import org.apache.syncope.core.util.PasswordEncoder;\n import org.junit.BeforeClass;\n import org.junit.runner.RunWith;\n import org.slf4j.Logger;\n@@ -79,12 +84,13 @@ public abstract class AbstractTest {\n \n     private static final String ENV_KEY_CONTENT_TYPE = \"jaxrsContentType\";\n \n-    protected static SyncopeClientFactoryBean clientFactory = new SyncopeClientFactoryBean().setAddress(ADDRESS);\n+    protected static final SyncopeClientFactoryBean clientFactory = new SyncopeClientFactoryBean().setAddress(ADDRESS);\n \n-    protected static SyncopeClient adminClient;\n+    protected static String ANONYMOUS_UNAME;\n \n-    @Autowired\n-    protected DataSource testDataSource;\n+    protected static String ANONYMOUS_KEY;\n+\n+    protected static SyncopeClient adminClient;\n \n     protected static UserService userService;\n \n@@ -116,8 +122,31 @@ public abstract class AbstractTest {\n \n     protected static PolicyService policyService;\n \n+    @Autowired\n+    protected DataSource testDataSource;\n+\n+    @BeforeClass\n+    public static void securitySetup() {\n+        InputStream propStream = null;\n+        try {\n+            propStream = PasswordEncoder.class.getResourceAsStream(\"/security.properties\");\n+            Properties props = new Properties();\n+            props.load(propStream);\n+\n+            ANONYMOUS_UNAME = props.getProperty(\"anonymousUser\");\n+            ANONYMOUS_KEY = props.getProperty(\"anonymousKey\");\n+        } catch (Exception e) {\n+            LOG.error(\"Could not read secretKey\", e);\n+        } finally {\n+            IOUtils.closeQuietly(propStream);\n+        }\n+\n+        assertNotNull(ANONYMOUS_UNAME);\n+        assertNotNull(ANONYMOUS_KEY);\n+    }\n+\n     @BeforeClass\n-    public static void setup() {\n+    public static void restSetup() {\n         final String envContentType = System.getProperty(ENV_KEY_CONTENT_TYPE);\n         if (StringUtils.isNotBlank(envContentType)) {\n             clientFactory.getRestClientFactoryBean().setContentType(envContentType);"},{"sha":"b485a2404ebfc124a7e7ffdc6095ea0d0b1bf2b4","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":47,"deletions":31,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -25,6 +25,7 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.security.AccessControlException;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashSet;\n@@ -55,6 +56,40 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class ResourceTestITCase extends AbstractTest {\n \n+    private ResourceTO buildResourceTO(final String resourceName) {\n+        ResourceTO resourceTO = new ResourceTO();\n+\n+        resourceTO.setName(resourceName);\n+        resourceTO.setConnectorId(102L);\n+\n+        MappingTO mapping = new MappingTO();\n+\n+        MappingItemTO item = new MappingItemTO();\n+        item.setExtAttrName(\"uid\");\n+        item.setIntAttrName(\"userId\");\n+        item.setIntMappingType(IntMappingType.UserSchema);\n+        item.setPurpose(MappingPurpose.BOTH);\n+        mapping.addItem(item);\n+\n+        item = new MappingItemTO();\n+        item.setExtAttrName(\"username\");\n+        item.setIntAttrName(\"fullname\");\n+        item.setIntMappingType(IntMappingType.UserId);\n+        item.setPurpose(MappingPurpose.BOTH);\n+        mapping.setAccountIdItem(item);\n+\n+        item = new MappingItemTO();\n+        item.setExtAttrName(\"fullname\");\n+        item.setIntAttrName(\"cn\");\n+        item.setIntMappingType(IntMappingType.UserSchema);\n+        item.setAccountid(false);\n+        item.setPurpose(MappingPurpose.BOTH);\n+        mapping.addItem(item);\n+\n+        resourceTO.setUmapping(mapping);\n+        return resourceTO;\n+    }\n+\n     @Test\n     public void getPropagationActionsClasses() {\n         Set<PropagationActionClassTO> actions = resourceService.getPropagationActionsClasses();\n@@ -502,37 +537,18 @@ public void issueSYNCOPE418() {\n         }\n     }\n \n-    private ResourceTO buildResourceTO(final String resourceName) {\n-        ResourceTO resourceTO = new ResourceTO();\n-\n-        resourceTO.setName(resourceName);\n-        resourceTO.setConnectorId(102L);\n-\n-        MappingTO mapping = new MappingTO();\n-\n-        MappingItemTO item = new MappingItemTO();\n-        item.setExtAttrName(\"uid\");\n-        item.setIntAttrName(\"userId\");\n-        item.setIntMappingType(IntMappingType.UserSchema);\n-        item.setPurpose(MappingPurpose.BOTH);\n-        mapping.addItem(item);\n-\n-        item = new MappingItemTO();\n-        item.setExtAttrName(\"username\");\n-        item.setIntAttrName(\"fullname\");\n-        item.setIntMappingType(IntMappingType.UserId);\n-        item.setPurpose(MappingPurpose.BOTH);\n-        mapping.setAccountIdItem(item);\n-\n-        item = new MappingItemTO();\n-        item.setExtAttrName(\"fullname\");\n-        item.setIntAttrName(\"cn\");\n-        item.setIntMappingType(IntMappingType.UserSchema);\n-        item.setAccountid(false);\n-        item.setPurpose(MappingPurpose.BOTH);\n-        mapping.addItem(item);\n+    @Test\n+    public void anonymous() {\n+        ResourceService unauthenticated = clientFactory.create(null, null).getService(ResourceService.class);\n+        try {\n+            unauthenticated.list();\n+            fail();\n+        } catch (AccessControlException e) {\n+            assertNotNull(e);\n+        }\n \n-        resourceTO.setUmapping(mapping);\n-        return resourceTO;\n+        ResourceService anonymous = clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).\n+                getService(ResourceService.class);\n+        assertFalse(anonymous.list().isEmpty());\n     }\n }"},{"sha":"ffb1ee0d4c81770876b78f41ffa2c8d6aca9d899","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -507,4 +507,18 @@ public void createWithMandatorySchemaNotTemplate() {\n         assertNotNull(roleTO);\n         assertTrue(roleTO.getAttrMap().containsKey(badge.getName()));\n     }\n+\n+    @Test\n+    public void anonymous() {\n+        RoleService unauthenticated = clientFactory.create(null, null).getService(RoleService.class);\n+        try {\n+            unauthenticated.list();\n+            fail();\n+        } catch (AccessControlException e) {\n+            assertNotNull(e);\n+        }\n+\n+        RoleService anonymous = clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(RoleService.class);\n+        assertFalse(anonymous.list().isEmpty());\n+    }\n }"},{"sha":"99d07f8ffc50c1b8b0e87586095fe080ac0ca65d","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":21,"deletions":5,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -25,10 +25,12 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.security.AccessControlException;\n import java.util.List;\n import org.apache.http.HttpStatus;\n \n import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.services.SchemaService;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n@@ -47,6 +49,13 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class SchemaTestITCase extends AbstractTest {\n \n+    private SchemaTO buildSchemaTO(final String name, final AttributeSchemaType type) {\n+        SchemaTO schemaTO = new SchemaTO();\n+        schemaTO.setName(name + getUUIDString());\n+        schemaTO.setType(type);\n+        return schemaTO;\n+    }\n+\n     @Test\n     public void create() {\n         SchemaTO schemaTO = buildSchemaTO(\"testAttribute\", AttributeSchemaType.String);\n@@ -283,10 +292,17 @@ public void issueSYNCOPE418() {\n         }\n     }\n \n-    private SchemaTO buildSchemaTO(final String name, final AttributeSchemaType type) {\n-        SchemaTO schemaTO = new SchemaTO();\n-        schemaTO.setName(name + getUUIDString());\n-        schemaTO.setType(type);\n-        return schemaTO;\n+    @Test\n+    public void anonymous() {\n+        SchemaService unauthenticated = clientFactory.create(null, null).getService(SchemaService.class);\n+        try {\n+            unauthenticated.list(AttributableType.USER, SchemaType.VIRTUAL);\n+            fail();\n+        } catch (AccessControlException e) {\n+            assertNotNull(e);\n+        }\n+\n+        SchemaService anonymous = clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(SchemaService.class);\n+        assertFalse(anonymous.list(AttributableType.USER, SchemaType.VIRTUAL).isEmpty());\n     }\n }"},{"sha":"99fd60ee684c428472c8e54308e9b4b78a91826f","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":21,"deletions":22,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -51,6 +51,14 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class UserRequestTestITCase extends AbstractTest {\n \n+    private Response createUserRequest(final UserRequestService service, final UserRequestTO userRequestTO) {\n+        Response response = service.create(userRequestTO);\n+        if (response.getStatus() != HttpStatus.SC_CREATED) {\n+            throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n+        }\n+        return response;\n+    }\n+\n     @Test\n     public void create() throws InvalidSearchConditionException {\n         // 1. set create request not allowed\n@@ -68,8 +76,10 @@ public void create() throws InvalidSearchConditionException {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"selfcreate@syncope.apache.org\");\n \n         // 2. get unauthorized when trying to request user create\n+        UserRequestService anonymousUserRequestService =\n+                clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(UserRequestService.class);\n         try {\n-            createUserRequest(userRequestService, new UserRequestTO(userTO));\n+            createUserRequest(anonymousUserRequestService, new UserRequestTO(userTO));\n             fail();\n         } catch (SyncopeClientCompositeException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.UnauthorizedRole));\n@@ -86,9 +96,7 @@ public void create() throws InvalidSearchConditionException {\n         assertNotNull(configurationTO);\n \n         // 4. as anonymous, request user create works\n-        UserRequestService userRequestService2 =\n-                clientFactory.create(null, null).getService(UserRequestService.class);\n-        createUserRequest(userRequestService2, new UserRequestTO(userTO));\n+        createUserRequest(anonymousUserRequestService, new UserRequestTO(userTO));\n \n         // 5. try to find user\n         AttributeCond attrCond = new AttributeCond(AttributeCond.Type.EQ);\n@@ -212,7 +220,7 @@ public void execute() {\n         final String initialPassword = userTO.getPassword();\n \n         UserRequestService selfservice =\n-                clientFactory.create(null, null).getService(UserRequestService.class);\n+                clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(UserRequestService.class);\n         Response response = createUserRequest(selfservice, new UserRequestTO(userTO));\n \n         UserRequestTO userRequest =\n@@ -228,12 +236,12 @@ public void execute() {\n             userService.read(userTO.getUsername());\n             fail();\n         } catch (Exception ignore) {\n-            // ignore\n+            assertNotNull(ignore);\n         }\n \n         assertFalse(userRequestService.read(userRequest.getId()).isExecuted());\n         userRequest = userRequestService.claim(userRequest.getId());\n-        assertEquals(\"admin\", userRequest.getOwner());\n+        assertEquals(ADMIN_UNAME, userRequest.getOwner());\n         assertTrue(userRequest.getUsername().endsWith(USERNAME));\n         assertNotNull(userRequest.getCreationDate());\n         assertNotNull(userRequest.getClaimDate());\n@@ -258,8 +266,7 @@ public void execute() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n \n-        selfservice =\n-                clientFactory.create(userTO.getUsername(), initialPassword).getService(UserRequestService.class);\n+        selfservice = clientFactory.create(userTO.getUsername(), initialPassword).getService(UserRequestService.class);\n \n         userMod.setPassword(\"new\" + initialPassword);\n         response = createUserRequest(selfservice, new UserRequestTO(userMod));\n@@ -297,7 +304,7 @@ public void execute() {\n \n         assertNotNull(clientFactory.create(userTO.getUsername(), newpwd).getService(UserService.class).readSelf());\n \n-        selfservice = \n+        selfservice =\n                 clientFactory.create(userTO.getUsername(), newpwd).getService(UserRequestService.class);\n         response = createUserRequest(selfservice, new UserRequestTO(userTO.getId()));\n \n@@ -320,7 +327,7 @@ public void execute() {\n             userService.read(userTO.getUsername());\n             fail();\n         } catch (Exception ignore) {\n-            // ignore\n+            assertNotNull(ignore);\n         }\n \n         assertEquals(3, userRequestService.listByUsername(userTO.getUsername()).size());\n@@ -330,22 +337,14 @@ public void execute() {\n     public void executeNoClaim() {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"reqnoclaim@syncope.apache.org\");\n \n-        final UserRequestService selfservice = \n-                clientFactory.create(null, null).getService(UserRequestService.class);\n+        final UserRequestService selfservice =\n+                clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(UserRequestService.class);\n \n         final UserRequestTO userRequest = adminClient.getObject(\n-                createUserRequest(selfservice, new UserRequestTO(userTO)).getLocation(), \n+                createUserRequest(selfservice, new UserRequestTO(userTO)).getLocation(),\n                 UserRequestService.class, UserRequestTO.class);\n         assertNotNull(userRequest);\n \n         userRequestService.executeCreate(userRequest.getId(), userTO);\n     }\n-\n-    private Response createUserRequest(final UserRequestService service, final UserRequestTO userRequestTO) {\n-        Response response = service.create(userRequestTO);\n-        if (response.getStatus() != HttpStatus.SC_CREATED) {\n-            throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n-        }\n-        return response;\n-    }\n }"},{"sha":"32090df72096110b96be55d698bc789628f71fa2","filename":"core/src/test/resources/content.xml","status":"modified","additions":36,"deletions":33,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -831,13 +831,42 @@ under the License.\n         jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n   <Task DTYPE=\"SyncTask\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n         performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" fullReconciliation=\"1\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n-        \n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>        \n+      \n+  <Notification id=\"100\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n+                xmlAbout=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n+                xmlRecipients=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n+                recipientAttrType=\"UserSchema\" recipientAttrName=\"email\"/>\n+  <Notification_events Notification_id=\"100\" events=\"unexisting1\"/>\n+  <Notification_events Notification_id=\"100\" events=\"unexisting2\"/>\n+    \n   <NotificationTask_recipients notificationtask_id=\"8\" address=\"recipient@prova.org\"/>\n \n+  <Report id=\"1\" name=\"test\"/>\n+  <ReportletConfInstance id=\"1\" Report_id=\"1\" serializedInstance=\"%3Corg.apache.syncope.common.report.UserReportletConf%3E%0A++%3Cname%3EtestUserReportlet%3C%2Fname%3E%0A++%3Cattrs%3E%0A++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++%3Cstring%3Egender%3C%2Fstring%3E%0A++%3C%2Fattrs%3E%0A++%3CderAttrs+class%3D%22singleton-list%22%3E%0A++++%3Cstring%3Ecn%3C%2Fstring%3E%0A++%3C%2FderAttrs%3E%0A++%3CvirAttrs+class%3D%22singleton-list%22%3E%0A++++%3Cstring%3Evirtualdata%3C%2Fstring%3E%0A++%3C%2FvirAttrs%3E%0A++%3Cfeatures+class%3D%22java.util.Arrays%24ArrayList%22%3E%0A++++%3Ca+class%3D%22org.apache.syncope.common.report.UserReportletConf%24Feature-array%22%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eid%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eusername%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EworkflowId%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Estatus%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EcreationDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3ElastLoginDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EchangePwdDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EpasswordHistorySize%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EfailedLoginCount%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Ememberships%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eresources%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++%3C%2Fa%3E%0A++%3C%2Ffeatures%3E%0A%3C%2Forg.apache.syncope.common.report.UserReportletConf%3E\"/>\n+  <ReportExec Report_id=\"1\" id=\"1\" status=\"SUCCESS\" startDate=\"2012-02-26 15:40:04\" endDate=\"2012-02-26 15:41:04\"/>\n+  \n+  <SyncopeLogger logName=\"syncope.audit.authentication.getEntitlements.success\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n+\n+  <ACT_RU_EXECUTION ID_=\"4\" REV_=\"2\" PROC_INST_ID_=\"4\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n+  <ACT_RU_TASK ID_=\"5\" REV_=\"2\" EXECUTION_ID_=\"4\" PROC_INST_ID_=\"4\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n+ \n+  <ACT_RU_EXECUTION ID_=\"6\" REV_=\"2\" PROC_INST_ID_=\"6\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n+  <ACT_RU_TASK ID_=\"7\" REV_=\"2\" EXECUTION_ID_=\"6\" PROC_INST_ID_=\"6\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n+ \n+  <ACT_RU_EXECUTION ID_=\"8\" REV_=\"2\" PROC_INST_ID_=\"8\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n+  <ACT_RU_TASK ID_=\"9\" REV_=\"2\" EXECUTION_ID_=\"8\" PROC_INST_ID_=\"8\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n+ \n+  <ACT_RU_EXECUTION ID_=\"10\" REV_=\"2\" PROC_INST_ID_=\"10\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n+  <ACT_RU_TASK ID_=\"11\" REV_=\"2\" EXECUTION_ID_=\"10\" PROC_INST_ID_=\"10\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n+ \n+  <ACT_RU_EXECUTION ID_=\"12\" REV_=\"2\" PROC_INST_ID_=\"12\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n+  <ACT_RU_TASK ID_=\"13\" REV_=\"2\" EXECUTION_ID_=\"12\" PROC_INST_ID_=\"12\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n+\n   <!-- Authentication and authorization -->\n   <Entitlement name=\"base\"/>\n   <Entitlement name=\"advanced\" description=\"Advanced entitlement\"/>\n+  <Entitlement name=\"SCHEMA_LIST\"/>\n   <Entitlement name=\"SCHEMA_CREATE\"/>\n   <Entitlement name=\"SCHEMA_READ\"/>\n   <Entitlement name=\"SCHEMA_UPDATE\"/>\n@@ -848,10 +877,12 @@ under the License.\n   <Entitlement name=\"USER_UPDATE\"/>\n   <Entitlement name=\"USER_DELETE\"/>\n   <Entitlement name=\"USER_VIEW\"/>\n+  <Entitlement name=\"ROLE_LIST\"/>\n   <Entitlement name=\"ROLE_CREATE\"/>\n   <Entitlement name=\"ROLE_READ\"/>\n   <Entitlement name=\"ROLE_UPDATE\"/>\n   <Entitlement name=\"ROLE_DELETE\"/>\n+  <Entitlement name=\"RESOURCE_LIST\"/>\n   <Entitlement name=\"RESOURCE_CREATE\"/>\n   <Entitlement name=\"RESOURCE_READ\"/>\n   <Entitlement name=\"RESOURCE_UPDATE\"/>\n@@ -868,14 +899,14 @@ under the License.\n   <Entitlement name=\"CONFIGURATION_READ\"/>\n   <Entitlement name=\"CONFIGURATION_UPDATE\"/>\n   <Entitlement name=\"CONFIGURATION_DELETE\"/>\n-  <Entitlement name=\"TASK_CREATE\"/>\n   <Entitlement name=\"TASK_LIST\"/>\n-  <Entitlement name=\"TASK_EXECUTE\"/>\n+  <Entitlement name=\"TASK_CREATE\"/>\n   <Entitlement name=\"TASK_READ\"/>\n   <Entitlement name=\"TASK_UPDATE\"/>\n   <Entitlement name=\"TASK_DELETE\"/>\n-  <Entitlement name=\"POLICY_CREATE\"/>\n+  <Entitlement name=\"TASK_EXECUTE\"/>\n   <Entitlement name=\"POLICY_LIST\"/>\n+  <Entitlement name=\"POLICY_CREATE\"/>\n   <Entitlement name=\"POLICY_READ\"/>\n   <Entitlement name=\"POLICY_UPDATE\"/>\n   <Entitlement name=\"POLICY_DELETE\"/>\n@@ -939,33 +970,5 @@ under the License.\n   <SyncopeRole_Entitlement entitlement_name=\"SCHEMA_READ\" role_id=\"8\"/>\n   <SyncopeRole_Entitlement entitlement_name=\"ROLE_READ\" role_id=\"8\"/>\n   <SyncopeRole_Entitlement entitlement_name=\"WORKFLOW_FORM_CLAIM\" role_id=\"8\"/>\n-    \n-  <Notification id=\"100\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n-                xmlAbout=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n-                xmlRecipients=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n-                recipientAttrType=\"UserSchema\" recipientAttrName=\"email\"/>\n-  <Notification_events Notification_id=\"100\" events=\"unexisting1\"/>\n-  <Notification_events Notification_id=\"100\" events=\"unexisting2\"/>\n-    \n-  <Report id=\"1\" name=\"test\"/>\n-  <ReportletConfInstance id=\"1\" Report_id=\"1\" serializedInstance=\"%3Corg.apache.syncope.common.report.UserReportletConf%3E%0A++%3Cname%3EtestUserReportlet%3C%2Fname%3E%0A++%3Cattrs%3E%0A++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++%3Cstring%3Egender%3C%2Fstring%3E%0A++%3C%2Fattrs%3E%0A++%3CderAttrs+class%3D%22singleton-list%22%3E%0A++++%3Cstring%3Ecn%3C%2Fstring%3E%0A++%3C%2FderAttrs%3E%0A++%3CvirAttrs+class%3D%22singleton-list%22%3E%0A++++%3Cstring%3Evirtualdata%3C%2Fstring%3E%0A++%3C%2FvirAttrs%3E%0A++%3Cfeatures+class%3D%22java.util.Arrays%24ArrayList%22%3E%0A++++%3Ca+class%3D%22org.apache.syncope.common.report.UserReportletConf%24Feature-array%22%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eid%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eusername%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EworkflowId%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Estatus%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EcreationDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3ElastLoginDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EchangePwdDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EpasswordHistorySize%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EfailedLoginCount%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Ememberships%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eresources%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++%3C%2Fa%3E%0A++%3C%2Ffeatures%3E%0A%3C%2Forg.apache.syncope.common.report.UserReportletConf%3E\"/>\n-  <ReportExec Report_id=\"1\" id=\"1\" status=\"SUCCESS\" startDate=\"2012-02-26 15:40:04\" endDate=\"2012-02-26 15:41:04\"/>\n-  \n-  <SyncopeLogger logName=\"syncope.audit.authentication.getEntitlements.success\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n-\n-  <ACT_RU_EXECUTION ID_=\"4\" REV_=\"2\" PROC_INST_ID_=\"4\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n-  <ACT_RU_TASK ID_=\"5\" REV_=\"2\" EXECUTION_ID_=\"4\" PROC_INST_ID_=\"4\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n- \n-  <ACT_RU_EXECUTION ID_=\"6\" REV_=\"2\" PROC_INST_ID_=\"6\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n-  <ACT_RU_TASK ID_=\"7\" REV_=\"2\" EXECUTION_ID_=\"6\" PROC_INST_ID_=\"6\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n- \n-  <ACT_RU_EXECUTION ID_=\"8\" REV_=\"2\" PROC_INST_ID_=\"8\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n-  <ACT_RU_TASK ID_=\"9\" REV_=\"2\" EXECUTION_ID_=\"8\" PROC_INST_ID_=\"8\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n- \n-  <ACT_RU_EXECUTION ID_=\"10\" REV_=\"2\" PROC_INST_ID_=\"10\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n-  <ACT_RU_TASK ID_=\"11\" REV_=\"2\" EXECUTION_ID_=\"10\" PROC_INST_ID_=\"10\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n- \n-  <ACT_RU_EXECUTION ID_=\"12\" REV_=\"2\" PROC_INST_ID_=\"12\" PROC_DEF_ID_=\"userWorkflow:1:3\" ACT_ID_=\"active\" IS_ACTIVE_=\"1\" IS_CONCURRENT_=\"0\" IS_SCOPE_=\"1\" IS_EVENT_SCOPE_=\"0\" SUSPENSION_STATE_=\"1\"/>\n-  <ACT_RU_TASK ID_=\"13\" REV_=\"2\" EXECUTION_ID_=\"12\" PROC_INST_ID_=\"12\" PROC_DEF_ID_=\"userWorkflow:1:3\" NAME_=\"Active\" TASK_DEF_KEY_=\"active\" PRIORITY_=\"50\" CREATE_TIME_=\"2013-02-25T17:19:03+0100\"/>\n   \n </dataset>"},{"sha":"ffacbf94d3d2e399d26627a46be89efaa10ebc02","filename":"pom.xml","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=d41dafd0acbf4a13499d4cd5835c4a8ebd4911f0","patch":"@@ -369,7 +369,9 @@ under the License.\n         \n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n     \n-    <!-- static secret key, only used for build: generated overlays will override this during archetype:generate -->\n+    <anonymousUser>anonymous</anonymousUser>\n+    <!-- static keys, only used for build: generated overlays will override during archetype:generate -->\n+    <anonymousKey>anonymousKey</anonymousKey>\n     <secretKey>1abcdefghilmnopqrstuvz2!</secretKey>\n   </properties>\n "}]}