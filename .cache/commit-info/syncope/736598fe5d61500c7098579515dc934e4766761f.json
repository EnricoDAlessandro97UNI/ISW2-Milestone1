{"sha":"736598fe5d61500c7098579515dc934e4766761f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjczNjU5OGZlNWQ2MTUwMGM3MDk4NTc5NTE1ZGM5MzRlNDc2Njc2MWY=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"marco.disabatino@tirasa.net","date":"2017-05-24T13:11:36Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"marco.disabatino@tirasa.net","date":"2017-05-24T13:13:00Z"},"message":"[SYNCOPE-1095] Provide preview for json and xml binary field","tree":{"sha":"7d926048a9292cf7011e6d298d24a3392c0a3687","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7d926048a9292cf7011e6d298d24a3392c0a3687"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/736598fe5d61500c7098579515dc934e4766761f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/736598fe5d61500c7098579515dc934e4766761f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/736598fe5d61500c7098579515dc934e4766761f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/736598fe5d61500c7098579515dc934e4766761f/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"87ac9bccbb9fab9003f36c1301ac72fade05ab16","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/87ac9bccbb9fab9003f36c1301ac72fade05ab16","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/87ac9bccbb9fab9003f36c1301ac72fade05ab16"}],"stats":{"total":155,"additions":151,"deletions":4},"files":[{"sha":"c5504f5816af0e7a61754f88d2f64448c28ef651","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/736598fe5d61500c7098579515dc934e4766761f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/736598fe5d61500c7098579515dc934e4766761f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=736598fe5d61500c7098579515dc934e4766761f","patch":"@@ -61,6 +61,8 @@\n public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private static final long serialVersionUID = 6264462604183088931L;\n+    \n+    private static final PreviewUtils PREVIEW_UTILS = PreviewUtils.getInstance();\n \n     private final String mimeType;\n \n@@ -74,15 +76,13 @@ public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private final BootstrapFileInputField fileUpload;\n \n-    private final transient PreviewUtils previewUtils = PreviewUtils.getInstance();\n-\n     private final AbstractBinaryPreviewer previewer;\n \n     public BinaryFieldPanel(final String id, final String name, final IModel<String> model, final String mimeType) {\n         super(id, name, model);\n         this.mimeType = mimeType;\n \n-        previewer = previewUtils.getPreviewer(mimeType);\n+        previewer = PREVIEW_UTILS.getPreviewer(mimeType);\n \n         uploadForm = new StatelessForm<>(\"uploadForm\");\n         uploadForm.setMultiPart(true);\n@@ -227,7 +227,7 @@ public FieldPanel<String> setNewModel(final IModel<String> model) {\n         if (StringUtils.isNotBlank(model.getObject())) {\n             final Component panelPreview;\n             if (previewer == null) {\n-                panelPreview = previewUtils.getDefaultPreviewer(mimeType);\n+                panelPreview = PREVIEW_UTILS.getDefaultPreviewer(mimeType);\n             } else {\n                 panelPreview = previewer.preview(model.getObject());\n             }"},{"sha":"c3685d1c5758fcf4dd71cc4334cad8b7c79af052","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryTextPreviewer.java","status":"added","additions":95,"deletions":0,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/736598fe5d61500c7098579515dc934e4766761f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/736598fe5d61500c7098579515dc934e4766761f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java?ref=736598fe5d61500c7098579515dc934e4766761f","patch":"@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n+\n+import static org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer.LOG;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.syncope.client.console.annotations.BinaryPreview;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnLoadHeaderItem;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.util.io.IOUtils;\n+\n+@BinaryPreview(mimeTypes = { \"application/json\", \"application/xml\" })\n+public class BinaryTextPreviewer extends AbstractBinaryPreviewer {\n+\n+    private static final long serialVersionUID = 3808379310090668773L;\n+\n+    public BinaryTextPreviewer(final String id, final String mimeType) {\n+        super(id, mimeType);\n+    }\n+\n+    @Override\n+    public Component preview(final byte[] uploadedBytes) {\n+\n+        Fragment fragment = new Fragment(\"preview\", \"noPreviewFragment\", this);\n+        if (uploadedBytes.length > 0) {\n+            try {\n+                fragment = new Fragment(\"preview\", \"previewFragment\", this);\n+                InputStream stream = new ByteArrayInputStream(uploadedBytes);\n+                TextArea<String> jsonEditor =\n+                        new TextArea<>(\"jsonEditorInfo\", new Model<>(IOUtils.toString(stream)));\n+                jsonEditor.setMarkupId(\"jsonEditorInfo\").setOutputMarkupPlaceholderTag(true);\n+                fragment.add(jsonEditor);\n+            } catch (IOException e) {\n+                LOG.error(\"Error evaluating text file\", e);\n+            }\n+        }\n+\n+        WebMarkupContainer previewContainer = new WebMarkupContainer(\"previewContainer\");\n+        previewContainer.setOutputMarkupId(true);\n+        previewContainer.add(fragment);\n+\n+        return this.addOrReplace(previewContainer);\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        String options;\n+        switch (mimeType) {\n+            case MediaType.APPLICATION_JSON:\n+                options = \"matchBrackets: true, autoCloseBrackets: true,\";\n+                break;\n+            case MediaType.APPLICATION_XML:\n+                options = \"autoCloseTags: true, mode: 'text/html',\";\n+                break;\n+            default:\n+                options = \"mode: 'text/html',\";\n+        }\n+\n+        response.render(OnLoadHeaderItem.forScript(\n+                \"var editor = CodeMirror.fromTextArea(document.getElementById('jsonEditorInfo'), {\"\n+                + \"  readOnly: true, \"\n+                + \"  lineNumbers: true, \"\n+                + \"  lineWrapping: true, \"\n+                + options\n+                + \"  autoRefresh: true\"\n+                + \"});\"\n+                + \"editor.setSize('100%', 100)\"));\n+    }\n+}"},{"sha":"63e71c7877e9be27f4ae6003910da7e47fcd9c2e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryTextPreviewer.html","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/736598fe5d61500c7098579515dc934e4766761f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/736598fe5d61500c7098579515dc934e4766761f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.html?ref=736598fe5d61500c7098579515dc934e4766761f","patch":"@@ -0,0 +1,52 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/javascript/javascript.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/matchbrackets.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closebrackets.js\"></script>\n+    <style>\n+      .w_content_3 {\n+        padding: 0;\n+        color: #333333;\n+        font-family: Verdana,Tahoma,sans-serif;\n+        font-size: 100%;\n+        border: 1px solid #BBBBBB;\n+        padding: 1%;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <div wicket:id=\"previewContainer\">\n+      <span wicket:id=\"preview\"/>\n+    </div>\n+    <wicket:fragment wicket:id=\"previewFragment\">\n+      <div>\n+        <textarea wicket:id=\"jsonEditorInfo\" id=\"consoleLayoutInfo\" name=\"jsonEditorInfo\" style=\"width: 100%; height: 100px;\"></textarea>\n+      </div>\n+    </wicket:fragment>\n+    <wicket:fragment wicket:id=\"noPreviewFragment\">\n+    </wicket:fragment>\n+  </wicket:extend>\n+</html>"}]}