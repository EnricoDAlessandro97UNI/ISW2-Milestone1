{"sha":"ea5ed5207988bfcc968a51af0a672d5f0890a846","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVhNWVkNTIwNzk4OGJmY2M5NjhhNTFhZjBhNjcyZDVmMDg5MGE4NDY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-23T13:42:29Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-23T13:42:29Z"},"message":"Custom paginator added to users' search as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246710 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"01c8b1bf63b55b793f9bca0e582bc0032d2a0e06","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/01c8b1bf63b55b793f9bca0e582bc0032d2a0e06"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ea5ed5207988bfcc968a51af0a672d5f0890a846","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ea5ed5207988bfcc968a51af0a672d5f0890a846","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ea5ed5207988bfcc968a51af0a672d5f0890a846","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ea5ed5207988bfcc968a51af0a672d5f0890a846/comments","author":null,"committer":null,"parents":[{"sha":"3dd329a4f7efa52a0afe9e37ab5c26374281f70f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3dd329a4f7efa52a0afe9e37ab5c26374281f70f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3dd329a4f7efa52a0afe9e37ab5c26374281f70f"}],"stats":{"total":416,"additions":343,"deletions":73},"files":[{"sha":"5f17a0110a7fc76b8e343a2330a5e39a1b9b5b90","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":301,"deletions":52,"changes":353,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea5ed5207988bfcc968a51af0a672d5f0890a846/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea5ed5207988bfcc968a51af0a672d5f0890a846/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=ea5ed5207988bfcc968a51af0a672d5f0890a846","patch":"@@ -30,6 +30,7 @@\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authorization.strategies.role.metadata\n         .MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -97,6 +98,7 @@ public class Users extends BasePage {\n     final int WIN_USER_WIDTH = 1133;\n \n     WebMarkupContainer usersTableSearchContainer;\n+    WebMarkupContainer searchResultsContainer;\n     WebMarkupContainer usersTableContainer;\n \n     /*\n@@ -115,27 +117,37 @@ public class Users extends BasePage {\n     int currentViewPage = 1;\n     int currentSearchPage = 1;\n \n-    /** Ajax Links for paginator**/\n+    /** Ajax Links for User's view paginator**/\n     AjaxLink incrementUserViewLink;\n-    AjaxLink firstPageLink;\n     AjaxLink decrementUserViewLink;\n+    AjaxLink firstPageLink;\n     AjaxLink lastPageLink;\n-    AjaxLink incrementUserSearchLink;\n-    AjaxLink decrementUserSearchLink;\n     \n-    /** Labels for paginator */\n-    Label currentPageUserSearchLabel;\n+    /** Labels for Users' view paginator*/\n     Label pageRecordFrom;\n     Label pageRecordTo;\n     Label totalRecords;\n \n+    /** Ajax Links for Users' search paginator */\n+    AjaxLink incrementUserLinkSearch;\n+    AjaxLink decrementUserLinkSearch;\n+    AjaxLink firstPageLinkSearch;\n+    AjaxLink lastPageLinkSearch;\n+\n+    /** Labels for Users' search paginator */\n+    Label pageRecordFromSearch;\n+    Label pageRecordToSearch;\n+    Label totalRecordsSearch;\n+\n     List<String> columnsList;\n \n     NodeCond nodeCond;\n \n     PaginatedResult paginatedUsers;\n+    PaginatedResult paginatedSearchUsers;\n \n     ListView pageLinksView;\n+    ListView pageLinksSearchView;\n \n     public Users(PageParameters parameters) {\n         super(parameters);\n@@ -482,6 +494,12 @@ protected void populateItem(ListItem item) {\n                 @Override\n                 public void onClick(AjaxRequestTarget target) {\n                     currentViewPage = pageId;\n+\n+                    //Update pageLinks on paginator\n+                    List<Integer> pageIdList = getPaginatorSearchIndexes();\n+                    pageLinksSearchView.setList(pageIdList);\n+                    target.addChildren(pageLinksSearchView, AjaxLink.class);\n+\n                     target.addComponent(usersTableContainer);\n                 }\n             };\n@@ -824,46 +842,84 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n         form.add(usersTableSearchContainer);\n \n-       currentPageUserSearchLabel = new Label(\"currentSearchPage\",\n-                new Model<String>(String.valueOf(currentSearchPage)));\n-\n         IModel resultsModel = new LoadableDetachableModel() {\n \n             @Override\n             protected Object load() {\n \n                 if(nodeCond != null) {\n \n-                 searchMatchedUsers = usersRestClient.paginatedSearchUsers(\n-                                 nodeCond, currentSearchPage, \n-                                 paginatorSearchRows);\n+                 paginatedSearchUsers = usersRestClient.paginatedSearchUser(\n+                         nodeCond, currentSearchPage, paginatorSearchRows);\n \n-                List<UserTO> nextList = usersRestClient.paginatedSearchUsers(\n-                                 nodeCond, currentSearchPage + 1, \n-                                 paginatorSearchRows);\n+                //Refresh links just after the selecting page click\n+                if(incrementUserLinkSearch != null && decrementUserLinkSearch != null\n+                        && firstPageLinkSearch != null && lastPageLinkSearch != null) {\n+                    int totalPages =  (int) Math.ceil(\n+                            paginatedSearchUsers.getTotalRecords().doubleValue()/\n+                        new Double(paginatedSearchUsers.getPageSize()));\n \n-                if(nextList.size() == 0)\n-                    incrementUserSearchLink.setVisible(false);\n-                else\n-                    incrementUserSearchLink.setVisible(true);\n+                    if (currentSearchPage == totalPages) {\n+                        incrementUserLinkSearch.setEnabled(false);\n+                        lastPageLinkSearch.setEnabled(false);\n+                    } else {\n+                        incrementUserLinkSearch.setEnabled(true);\n+                        lastPageLinkSearch.setEnabled(true);\n+                    }\n \n-                if(currentSearchPage <= 1)\n-                    decrementUserSearchLink.setVisible(false);\n-                else\n-                    decrementUserSearchLink.setVisible(true);\n+                    if( currentSearchPage > 1 ){\n+                        decrementUserLinkSearch.setEnabled(true);\n+                    } else\n+                         decrementUserLinkSearch.setEnabled(false);\n \n-                currentPageUserSearchLabel.setVisible(true);\n+                    if (totalPages == 1 || currentSearchPage == 1) {\n+                        firstPageLinkSearch.setEnabled(false);\n+                    } else\n+                        firstPageLinkSearch.setEnabled(true);\n                 }\n \n-                else {\n+                if(pageRecordFromSearch != null && pageRecordToSearch != null\n+                        && totalRecordsSearch != null) {\n \n-                currentPageUserSearchLabel.setVisible(false);\n-                incrementUserSearchLink.setVisible(false);\n-                decrementUserSearchLink.setVisible(false);\n-                \n+                    //Records indexes for paginator's labels\n+                    int firstPageRecord = 1;\n+                    int lastPageRecord = paginatedSearchUsers.getRecordsInPage();\n+\n+                    if (paginatedSearchUsers.getPageNumber() > 1) {\n+                        firstPageRecord = (paginatedSearchUsers.getPageSize() *\n+                                (paginatedSearchUsers.getPageNumber() - 1)) + 1;\n+\n+                        lastPageRecord = (paginatedSearchUsers.getPageSize() *\n+                                (paginatedSearchUsers.getPageNumber() - 1)) +\n+                                paginatedSearchUsers.getRecordsInPage();\n+                    }\n+\n+                    if(paginatedSearchUsers.getRecordsInPage() == 0) {\n+                        lastPageRecord = 0;\n+                        firstPageRecord = 0;\n+\n+                        firstPageLinkSearch.setEnabled(false);\n+                        incrementUserLinkSearch.setEnabled(false);\n+                        lastPageLinkSearch.setEnabled(false);\n+                        incrementUserLinkSearch.setEnabled(false);\n+                    }\n+\n+                    pageRecordFromSearch.setDefaultModelObject(\n+                            String.valueOf(firstPageRecord));\n+\n+                    pageRecordToSearch.setDefaultModelObject(\n+                            String.valueOf(lastPageRecord));\n+\n+                    totalRecordsSearch.setDefaultModelObject(String.valueOf(\n+                            paginatedSearchUsers.getTotalRecords()));\n+\n+                    }\n+                    return paginatedSearchUsers.getRecords();\n                 }\n+\n+                 else\n+                    return new ArrayList();\n                 \n-                return searchMatchedUsers;\n             }\n         };\n \n@@ -925,46 +981,185 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-        final WebMarkupContainer searchResultsContainer =\n+        searchResultsContainer =\n                 new WebMarkupContainer(\"searchResultsContainer\");\n         searchResultsContainer.setOutputMarkupId(true);\n         searchResultsContainer.add(resultsView);\n \n-        incrementUserSearchLink = new AjaxLink(\"incrementLink\"){\n+        /** SEARCH PAGiNATOR START */\n+\n+         incrementUserLinkSearch = new AjaxLink(\"incrementLink\"){\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n                 currentSearchPage++;\n-                currentPageUserSearchLabel.setDefaultModelObject(\n-                        String.valueOf(currentSearchPage));\n+\n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorIndexes();\n+                pageLinksSearchView.setList(pageIdList);\n+                target.addChildren(pageLinksSearchView, AjaxLink.class);\n+\n+                target.addComponent(searchResultsContainer);\n+            }\n+        };\n+\n+        //Check if it is not null\n+        int totalSearchPages = 0;\n+        if(paginatedSearchUsers != null)\n+            totalSearchPages =  (int) Math.ceil(paginatedSearchUsers.getTotalRecords()\n+                    .doubleValue()/new Double(paginatedSearchUsers.getPageSize()));\n+\n+        firstPageLinkSearch = new AjaxLink(\"firstPageLink\"){\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                currentSearchPage = 1;\n+\n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorSearchIndexes();\n+                pageLinksSearchView.setList(pageIdList);\n+                target.addChildren(pageLinksSearchView, AjaxLink.class);\n+\n+                target.addComponent(searchResultsContainer);\n+            }\n+        };\n+\n+        lastPageLinkSearch = new AjaxLink(\"lastPageLink\"){\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                int totalPages =  (int) Math.ceil(paginatedSearchUsers\n+                        .getTotalRecords().doubleValue()/ new Double(\n+                        paginatedSearchUsers.getPageSize()));\n+                currentSearchPage = totalPages;\n+\n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorSearchIndexes();\n+                pageLinksSearchView.setList(pageIdList);\n+                target.addChildren(pageLinksSearchView, AjaxLink.class);\n+\n                 target.addComponent(searchResultsContainer);\n             }\n         };\n \n-       decrementUserSearchLink = new AjaxLink(\"decrementLink\"){\n+       decrementUserLinkSearch = new AjaxLink(\"decrementLink\"){\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n                 currentSearchPage--;\n-                currentPageUserSearchLabel.setDefaultModelObject(\n-                        String.valueOf(currentSearchPage));\n+\n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorSearchIndexes();\n+                pageLinksSearchView.setList(pageIdList);\n+                target.addChildren(pageLinksSearchView, AjaxLink.class);\n+\n                 target.addComponent(searchResultsContainer);\n             }\n         };\n \n-        //Add to usersTableSearchContainer users'search list navigation controls\n-        searchResultsContainer.add(incrementUserSearchLink);\n-        searchResultsContainer.add(currentPageUserSearchLabel);\n-        searchResultsContainer.add(decrementUserSearchLink);\n+         if(currentSearchPage <= totalSearchPages) {\n+            incrementUserLinkSearch.setEnabled(false);\n+            lastPageLinkSearch.setEnabled(false);\n+        }\n+\n+        if(currentSearchPage <= 1)\n+            decrementUserLinkSearch.setEnabled(false);\n+\n+        if(totalPages == 1 || currentSearchPage == 1)\n+            firstPageLinkSearch.setEnabled(false);\n+\n+        if(currentSearchPage <= 1 && paginatedSearchUsers == null) {\n+            incrementUserLinkSearch.setEnabled(false);\n+            lastPageLinkSearch.setEnabled(false);\n+            firstPageLinkSearch.setEnabled(false);\n+            decrementUserLinkSearch.setEnabled(false);\n+        }\n+        else if (currentSearchPage > 1 && currentSearchPage <= totalPages)\n+            decrementUserLinkSearch.setEnabled(true);\n+\n+        searchResultsContainer.add(incrementUserLinkSearch);\n+        searchResultsContainer.add(firstPageLinkSearch);\n+        searchResultsContainer.add(lastPageLinkSearch);\n+\n+        //Records indexes for paginator's labels\n+        int firstPageRecordSearch = 1;\n+        int lastPageRecordSearch = 1;\n+\n+        if(paginatedSearchUsers != null){\n+        lastPageRecordSearch = paginatedSearchUsers.getRecordsInPage();\n+\n+        if(paginatedSearchUsers.getPageNumber() > 1) {\n+          firstPageRecordSearch = (paginatedSearchUsers.getPageSize() *\n+                             (paginatedSearchUsers.getPageNumber()-1) ) + 1;\n \n-        //Display warning message if no serach matches have been found\n-        final Label noResults = new Label(\"noResults\",new Model<String>(\"\"));\n+          lastPageRecordSearch = (paginatedSearchUsers.getPageSize() *\n+                             (paginatedSearchUsers.getPageNumber()-1) ) +\n+                             paginatedSearchUsers.getRecordsInPage();\n+        }\n+        }\n+        else {\n+         firstPageRecordSearch = 0;\n+         lastPageRecordSearch = 0;\n+        }\n+\n+        searchResultsContainer.add(pageRecordFromSearch = new Label(\"pageRecordFrom\",\n+                new Model<String>(String.valueOf(firstPageRecordSearch))));\n+\n+        searchResultsContainer.add(pageRecordToSearch = new Label(\"pageRecordTo\",\n+                new Model<String>(String.valueOf(lastPageRecordSearch))));\n+\n+        if(paginatedSearchUsers != null)\n+            searchResultsContainer.add(totalRecordsSearch = new Label(\"totalRecords\",\n+                    new Model<String>(String.valueOf(paginatedSearchUsers\n+                    .getTotalRecords()))));\n+        else\n+            searchResultsContainer.add(totalRecordsSearch = new Label(\"totalRecords\",\n+                    new Model<String>(\"0\")));\n+\n+        searchResultsContainer.add(decrementUserLinkSearch);\n+\n+        //Build pages link for paginator\n+        List<Integer> pageIdListSearch = getPaginatorSearchIndexes();\n+\n+        pageLinksSearchView = new ListView(\"pageLinksView\", pageIdListSearch) {\n+\n+            @Override\n+            protected void populateItem(ListItem item) {\n+                final int pageId = (Integer) item.getDefaultModelObject();\n+\n+                AjaxLink pageLink = new AjaxLink(\"pageLink\"){\n+\n+                @Override\n+                public void onClick(AjaxRequestTarget target) {\n+                    currentSearchPage = pageId;\n+                    target.addComponent(searchResultsContainer);\n+                }\n+            };\n+\n+            if(currentSearchPage == pageId)\n+                pageLink.setEnabled(false);\n+            else\n+                pageLink.setEnabled(true);\n+\n+            pageLink.add(new Label(\"name\",new Model<String>(\n+                    String.valueOf(pageId))));\n+\n+            item.add(pageLink);\n+            }\n+        };\n+\n+        searchResultsContainer.add(pageLinksSearchView);\n+\n+        /** SEARCH PAGiNATOR END */\n+\n+        //Display warning message if no search matches have been found\n+        final Label noResults = new Label(\"noResults\", new Model<String>(\"\"));\n         noResults.setOutputMarkupId(true);\n         searchResultsContainer.add(noResults);\n \n         setWindowClosedCallback(editUserWin, searchResultsContainer);\n \n-        form.add(new AjaxButton(\"search\", new Model(getString(\"search\"))) {\n+        form.add(new IndicatingAjaxButton(\"search\", new Model(getString(\"search\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -974,12 +1169,16 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n                 if (nodeCond != null) {\n \n                     try {\n-                        \n-                         searchMatchedUsers =  usersRestClient.paginatedSearchUsers(\n-                                 nodeCond, currentViewPage = 1, paginatorSearchRows);\n+                        paginatedSearchUsers = usersRestClient.paginatedSearchUser(\n+                                 nodeCond, currentSearchPage = 1, paginatorSearchRows);\n \n                         //Clean the feedback panel if the operation succedes\n                         target.addComponent(form.get(\"feedback\"));\n+\n+                        //Update pageLinks on paginator\n+                        List<Integer> pageIdList = getPaginatorSearchIndexes();\n+                        pageLinksSearchView.setList(pageIdList);\n+                        target.addChildren(pageLinksSearchView, AjaxLink.class);\n                     } catch (HttpServerErrorException e) {\n                         e.printStackTrace();\n                         error(e.getMessage());\n@@ -989,7 +1188,7 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n                     error(getString(\"search_error\"));\n                 }\n \n-                if(searchMatchedUsers.isEmpty())\n+                if(paginatedSearchUsers.getRecords().isEmpty())\n                     noResults.setDefaultModel(new Model<String>(\n                             getString(\"search_noResults\")));\n                 else\n@@ -1016,12 +1215,21 @@ protected void onError(AjaxRequestTarget target, Form form) {\n         rowsSearchChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n           protected void onUpdate( AjaxRequestTarget target )\n             {\n-             utility.updatePaginatorRows(Constants.CONF_USERS_SEARCH_PAGINATOR_ROWS,\n-                      paginatorSearchRows);\n+                utility.updatePaginatorRows(Constants.CONF_USERS_SEARCH_PAGINATOR_ROWS,\n+                        paginatorSearchRows);\n+\n+                resultsView.setRowsPerPage(paginatorSearchRows);\n \n-              resultsView.setRowsPerPage(paginatorSearchRows);\n+                //Re-execute the query\n+                paginatedSearchUsers = usersRestClient.paginatedSearchUser(\n+                        nodeCond, currentSearchPage = 1, paginatorSearchRows);\n \n-              target.addComponent(searchResultsContainer);\n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorSearchIndexes();\n+                pageLinksSearchView.setList(pageIdList);\n+                target.addChildren(pageLinksSearchView, AjaxLink.class);\n+\n+                target.addComponent(searchResultsContainer);\n             }\n           });\n \n@@ -1294,6 +1502,47 @@ public void setupPaginatedUsers() {\n                         .getPaginatedUser(currentViewPage, paginatorRows);\n     }\n \n+    /**\n+     * Refresh paginator search after page link click.\n+     */\n+    public List<Integer> getPaginatorSearchIndexes(){\n+        int totalPages;\n+\n+        if(paginatedSearchUsers != null)\n+         totalPages =  (int) Math.ceil(paginatedSearchUsers.getTotalRecords()\n+                .doubleValue()/new Double(paginatedSearchUsers.getPageSize()));\n+        else\n+            totalPages =  0;\n+\n+        //Build pages link for paginator\n+        List<Integer> pageIdList = new ArrayList<Integer>();\n+\n+        int startIndex = 1;\n+\n+        if(totalPages > 10) {\n+            if (currentSearchPage < 10)\n+                startIndex = 1;\n+            else\n+                startIndex = currentSearchPage - 2;\n+        }\n+\n+        int endIndex = totalPages;\n+\n+        if(totalPages > 10) {\n+\n+            if(startIndex +9 <= totalPages)\n+                endIndex = startIndex +9;\n+            else\n+                endIndex = startIndex + (totalPages - startIndex);\n+        }\n+\n+        for(int i = startIndex; i <= endIndex; i++ ) {\n+            pageIdList.add(i);\n+        }\n+\n+        return pageIdList;\n+    }\n+\n     /**\n      * Wrapper class for displaying attribute\n      */"},{"sha":"57ee42eadb0512d3c9ea5bbd08e3a9b2070b6ea7","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":42,"deletions":21,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea5ed5207988bfcc968a51af0a672d5f0890a846/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea5ed5207988bfcc968a51af0a672d5f0890a846/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=ea5ed5207988bfcc968a51af0a672d5f0890a846","patch":"@@ -297,32 +297,53 @@ <h1><wicket:message key=\"search_title\"/></h1>\n                         </p>\n                         <img src=\"img/search.png\" alt=\"search\"/>\n                         <h1 style=\"display:inline\"><wicket:message key=\"search_results_title\"/></h1>\n+                        <div> &nbsp;</div>\n                         <span wicket:id=\"searchResultsContainer\">\n-                            <table id=\"search-users\" class=\"ui-widget ui-widget-content table-hover\">\n-                                <thead>\n-                                    <tr>\n-                                        <td style=\"border-color:transparent\">\n-                                            <div style=\"font-style:oblique\">\n-                                                <!--wicket:message key=\"navigation\"/-->\n-                                                <a wicket:id=\"decrementLink\">\n-                                                     &lt;\n-                                                </a>\n+                        <div id=\"pageNavigator\" style=\"font-style:oblique\">\n+                                <span style=\"float:left\">\n+                                    <wicket:message key=\"showingFrom\"/>\n+                                        <span wicket:id=\"pageRecordFrom\"/>\n+                                    <wicket:message key=\"showingTo\"/>\n+                                        <span wicket:id=\"pageRecordTo\"/>\n+                                    <wicket:message key=\"showingOf\"/>\n+                                        <span wicket:id=\"totalRecords\"/>\n+                                </span>\n \n-                                                <span wicket:id=\"currentSearchPage\"/>\n+                                <span style=\"float:right\">\n+                                    <a wicket:id=\"firstPageLink\">\n+                                         &lt;&lt;\n+                                    </a>\n \n-                                                <a wicket:id=\"incrementLink\">\n-                                                     &gt;\n-                                                </a>\n-                                            </div>\n-                                        </td>\n-                                    </tr>\n+                                    <a wicket:id=\"decrementLink\">\n+                                         &lt;\n+                                    </a>\n+\n+                                    <span wicket:id=\"pageLinksView\">\n+                                        <a wicket:id=\"pageLink\">\n+                                            <span wicket:id=\"name\"/>\n+                                        </a>\n+                                    </span>\n+\n+                                    <a wicket:id=\"incrementLink\">\n+                                         &gt;\n+                                    </a>\n+                                    <a wicket:id=\"lastPageLink\">\n+                                         &gt;&gt;\n+                                    </a>\n+                                </span>\n+                            </div>\n+\n+                        <div> &nbsp;</div>\n+\n+                            <table id=\"search-users\" class=\"ui-widget ui-widget-content table-hover\">\n+                                <thead>\n                                     <tr class=\"ui-widget-header\">\n                                         <th><wicket:message key=\"id\"/></th>\n-                                <th><wicket:message key=\"status\"/></th>\n-                                <th><wicket:message key=\"token\"/></th>\n-                                <th><wicket:message key=\"edit\"/></th>\n-                                <th><wicket:message key=\"delete\"/></th>\n-                                </tr>\n+                                        <th><wicket:message key=\"status\"/></th>\n+                                        <th><wicket:message key=\"token\"/></th>\n+                                        <th><wicket:message key=\"edit\"/></th>\n+                                        <th><wicket:message key=\"delete\"/></th>\n+                                    </tr>\n                                 </thead>\n                                 <tbody>\n                                     <tr wicket:id=\"results\">"}]}