{"sha":"edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVkYzliMGE3NWYyZmEzYTdlYjUzMTNlMDk3MThlM2UwZjdmOTJjMGU=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-29T08:28:59Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-29T08:28:59Z"},"message":"[SYNCOPE-231]\n* Added missing URLEncoder.encode()\n* Code cleanup\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1439782 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7be9eda7854843dfa7779bfe3b248d7c9aa880f7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7be9eda7854843dfa7779bfe3b248d7c9aa880f7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/comments","author":null,"committer":null,"parents":[{"sha":"f746e555fc43e114639210512d217c7620a7ee7e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f746e555fc43e114639210512d217c7620a7ee7e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f746e555fc43e114639210512d217c7620a7ee7e"}],"stats":{"total":93,"additions":68,"deletions":25},"files":[{"sha":"ddb21e2ae905a37d53991676ec467ffdbf909c9e","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/ConfigurationServiceProxy.java","status":"modified","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConfigurationServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConfigurationServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConfigurationServiceProxy.java?ref=edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","patch":"@@ -19,14 +19,18 @@\n package org.apache.syncope.client.services.proxy;\r\n \r\n import java.io.InputStream;\r\n+import java.io.UnsupportedEncodingException;\r\n import java.net.URI;\r\n+import java.net.URLEncoder;\r\n import java.util.Arrays;\r\n import java.util.HashSet;\r\n import java.util.List;\r\n import java.util.Set;\r\n \r\n+import javax.ws.rs.InternalServerErrorException;\r\n import javax.ws.rs.core.Response;\r\n \r\n+import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ConfigurationService;\r\n import org.apache.syncope.common.to.ConfigurationTO;\r\n import org.apache.syncope.common.to.MailTemplateTO;\r\n@@ -42,10 +46,19 @@ public ConfigurationServiceProxy(final String baseUrl, final RestTemplate restTe\n \r\n     @Override\r\n     public Response create(final ConfigurationTO configurationTO) {\r\n-        ConfigurationTO created = getRestTemplate().postForObject(baseUrl + \"configuration/create\",\r\n-                configurationTO, ConfigurationTO.class);\r\n-        URI location = URI.create(baseUrl + \"configuration/read/\" + created.getKey() + \".json\");\r\n-        return Response.created(location).build();\r\n+        ConfigurationTO created = getRestTemplate().postForObject(baseUrl + \"configuration/create\", configurationTO,\r\n+                ConfigurationTO.class);\r\n+        try {\r\n+            URI location = URI.create(baseUrl\r\n+                    + \"configuration/read/\"\r\n+                    + URLEncoder.encode(created.getKey(), SyncopeConstants.DEFAULT_ENCODING)\r\n+                    + \".json\");\r\n+            return Response.created(location)\r\n+                    .header(SyncopeConstants.REST_HEADER_ID, created.getKey())\r\n+                    .build();\r\n+        } catch (UnsupportedEncodingException e) {\r\n+            throw new InternalServerErrorException(e);\r\n+        }\r\n     }\r\n \r\n     @Override\r\n@@ -66,8 +79,7 @@ public ConfigurationTO read(final String key) {\n \r\n     @Override\r\n     public void update(final String key, final ConfigurationTO configurationTO) {\r\n-        getRestTemplate().postForObject(baseUrl + \"configuration/update\", configurationTO,\r\n-                ConfigurationTO.class);\r\n+        getRestTemplate().postForObject(baseUrl + \"configuration/update\", configurationTO, ConfigurationTO.class);\r\n     }\r\n \r\n     @Override\r"},{"sha":"1096c3352cd7b626fe39c370fba0ff7e54f96f19","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/NotificationServiceProxy.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java?ref=edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","patch":"@@ -36,34 +36,34 @@ public NotificationServiceProxy(final String baseUrl, final RestTemplate restTem\n     }\r\n \r\n     @Override\r\n-    public NotificationTO read(final Long notificationId) {\r\n-        return getRestTemplate().getForObject(baseUrl + \"notification/read/{notificationId}.json\",\r\n+    public Response create(final NotificationTO notificationTO) {\r\n+        NotificationTO notification = getRestTemplate().postForObject(baseUrl + \"notification/create.json\",\r\n+                notificationTO, NotificationTO.class);\r\n+        URI location = URI.create(baseUrl + \"notification/read/\" + notification.getId() + \".json\");\r\n+        return Response.created(location).header(SyncopeConstants.REST_HEADER_ID, notification.getId()).build();\r\n+    }\r\n+\r\n+    @Override\r\n+    public NotificationTO delete(final Long notificationId) {\r\n+        return getRestTemplate().getForObject(baseUrl + \"notification/delete/{notificationId}.json\",\r\n                 NotificationTO.class, notificationId);\r\n     }\r\n \r\n     @Override\r\n     public List<NotificationTO> list() {\r\n-        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"notification/list.json\",\r\n-                NotificationTO[].class));\r\n+        return Arrays\r\n+                .asList(getRestTemplate().getForObject(baseUrl + \"notification/list.json\", NotificationTO[].class));\r\n     }\r\n \r\n     @Override\r\n-    public Response create(final NotificationTO notificationTO) {\r\n-        NotificationTO notification = getRestTemplate().postForObject(baseUrl + \"notification/create.json\", notificationTO,\r\n-                NotificationTO.class);\r\n-        URI location = URI.create(baseUrl + \"notification/read/\" + notification.getId() + \".json\");\r\n-        return Response.created(location).header(SyncopeConstants.REST_HEADER_ID, notification.getId()).build();\r\n+    public NotificationTO read(final Long notificationId) {\r\n+        return getRestTemplate().getForObject(baseUrl + \"notification/read/{notificationId}.json\",\r\n+                NotificationTO.class, notificationId);\r\n     }\r\n \r\n     @Override\r\n     public NotificationTO update(final Long notificationId, final NotificationTO notificationTO) {\r\n         return getRestTemplate().postForObject(baseUrl + \"notification/update.json\", notificationTO,\r\n                 NotificationTO.class);\r\n     }\r\n-\r\n-    @Override\r\n-    public NotificationTO delete(final Long notificationId) {\r\n-        return getRestTemplate().getForObject(baseUrl + \"notification/delete/{notificationId}.json\",\r\n-                NotificationTO.class, notificationId);\r\n-    }\r\n }\r"},{"sha":"aa279ae3a4bb115cc4bc440f86adb6e1e3f680d1","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/ResourceServiceProxy.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java?ref=edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","patch":"@@ -18,14 +18,18 @@\n  */\r\n package org.apache.syncope.client.services.proxy;\r\n \r\n+import java.io.UnsupportedEncodingException;\r\n import java.net.URI;\r\n+import java.net.URLEncoder;\r\n import java.util.Arrays;\r\n import java.util.HashSet;\r\n import java.util.List;\r\n import java.util.Set;\r\n \r\n+import javax.ws.rs.InternalServerErrorException;\r\n import javax.ws.rs.core.Response;\r\n \r\n+import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ResourceService;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.to.PropagationActionClassTO;\r\n@@ -45,7 +49,17 @@ public Response create(final ResourceTO resourceTO) {\n         ResourceTO resource = getRestTemplate().postForObject(baseUrl + \"resource/create.json\", resourceTO,\r\n                 ResourceTO.class);\r\n \r\n-        return Response.created(URI.create(baseUrl + \"resource/read/\" + resource.getName() + \".json\")).build();\r\n+        try {\r\n+            URI location = URI.create(baseUrl\r\n+                    + \"resource/read/\"\r\n+                    + URLEncoder.encode(resource.getName(), SyncopeConstants.DEFAULT_ENCODING)\r\n+                    + \".json\");\r\n+            return Response.created(location)\r\n+                    .header(SyncopeConstants.REST_HEADER_ID, resource.getName())\r\n+                    .build();\r\n+        } catch (UnsupportedEncodingException e) {\r\n+            throw new InternalServerErrorException(e);\r\n+        }\r\n     }\r\n \r\n     @Override\r"},{"sha":"f5bc35583152533241b7ee279133748d0d514d15","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/SchemaServiceProxy.java","status":"modified","additions":18,"deletions":3,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FSchemaServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FSchemaServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FSchemaServiceProxy.java?ref=edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","patch":"@@ -18,12 +18,16 @@\n  */\r\n package org.apache.syncope.client.services.proxy;\r\n \r\n+import java.io.UnsupportedEncodingException;\r\n import java.net.URI;\r\n+import java.net.URLEncoder;\r\n import java.util.Arrays;\r\n import java.util.List;\r\n \r\n+import javax.ws.rs.InternalServerErrorException;\r\n import javax.ws.rs.core.Response;\r\n \r\n+import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.SchemaService;\r\n import org.apache.syncope.common.to.AbstractSchemaTO;\r\n import org.apache.syncope.common.to.DerivedSchemaTO;\r\n@@ -44,8 +48,18 @@ public <T extends AbstractSchemaTO> Response create(final AttributableType kind,\n             final T schemaTO) {\r\n         AbstractSchemaTO schema = getRestTemplate().postForObject(baseUrl + type.toSpringURL() + \"/{kind}/create\",\r\n                 schemaTO, getTOClass(type), kind);\r\n-        return Response.created(\r\n-                URI.create(baseUrl + type.toSpringURL() + \"/\" + kind + \"/read/\" + schema.getName() + \".json\")).build();\r\n+\r\n+        try {\r\n+            URI location = URI.create(baseUrl\r\n+                    + type.toSpringURL() + \"/\" + kind + \"/read/\"\r\n+                    + URLEncoder.encode(schema.getName(), SyncopeConstants.DEFAULT_ENCODING)\r\n+                    + \".json\");\r\n+            return Response.created(location)\r\n+                    .header(SyncopeConstants.REST_HEADER_ID, schema.getName())\r\n+                    .build();\r\n+        } catch (UnsupportedEncodingException e) {\r\n+            throw new InternalServerErrorException(e);\r\n+        }\r\n     }\r\n \r\n     @Override\r\n@@ -87,7 +101,8 @@ public <T extends AbstractSchemaTO> T read(final AttributableType kind, final Sc\n     public <T extends AbstractSchemaTO> void update(final AttributableType kind, final SchemaType type,\r\n             final String schemaName, final T schemaTO) {\r\n \r\n-        getRestTemplate().postForObject(baseUrl + type.toSpringURL() + \"/{kind}/update\", schemaTO, getTOClass(type), kind);\r\n+        getRestTemplate().postForObject(baseUrl + type.toSpringURL() + \"/{kind}/update\", schemaTO, getTOClass(type),\r\n+                kind);\r\n     }\r\n \r\n     private Class<? extends AbstractSchemaTO> getTOClass(final SchemaType type) {\r"},{"sha":"21c336a3d0f67398282937d7d94c70fc52d98c20","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=edc9b0a75f2fa3a7eb5313e09718e3e0f7f92c0e","patch":"@@ -38,4 +38,6 @@ public class SyncopeConstants {\n      */\r\n     public static final String REST_HEADER_ID = \"org.apache.syncope.id\";\r\n \r\n+    public static final String DEFAULT_ENCODING = \"UTF-8\";\r\n+\r\n }\r"}]}