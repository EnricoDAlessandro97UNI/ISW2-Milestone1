{"sha":"e9b8d95a6823da542d6c41f9b979a4c4c88cab21","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU5YjhkOTVhNjgyM2RhNTQyZDZjNDFmOWI5NzlhNGM0Yzg4Y2FiMjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-15T17:53:58Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-15T17:54:11Z"},"message":"Upgrading Flowable","tree":{"sha":"ca1c97fc1eaad1d071a4bea493b437bfab59c239","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ca1c97fc1eaad1d071a4bea493b437bfab59c239"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e9b8d95a6823da542d6c41f9b979a4c4c88cab21","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9b8d95a6823da542d6c41f9b979a4c4c88cab21","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e9b8d95a6823da542d6c41f9b979a4c4c88cab21","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"eaf70b1fbec40958ab917da88ff0797bd4abe09f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eaf70b1fbec40958ab917da88ff0797bd4abe09f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eaf70b1fbec40958ab917da88ff0797bd4abe09f"}],"stats":{"total":1603,"additions":20,"deletions":1583},"files":[{"sha":"bd59f5d99eaca9aaffbfc8a659ec23c9e64ba08f","filename":"ext/flowable/flowable-bpmn/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/ext%2Fflowable%2Fflowable-bpmn%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/ext%2Fflowable%2Fflowable-bpmn%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fpom.xml?ref=e9b8d95a6823da542d6c41f9b979a4c4c88cab21","patch":"@@ -51,6 +51,11 @@ under the License.\n       <artifactId>geronimo-javamail_1.4_mail</artifactId>\n     </dependency>\n  \n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-beans</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.flowable</groupId>\n       <artifactId>flowable-engine</artifactId>"},{"sha":"2a68a46a697db4752eee59a1533004edc63b6fc7","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableRuntimeUtils.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java?ref=e9b8d95a6823da542d6c41f9b979a4c4c88cab21","patch":"@@ -26,15 +26,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.core.flowable.support.DomainProcessEngine;\n-import org.apache.syncope.core.flowable.support.SyncopeTaskQueryImpl;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.flowable.common.engine.api.FlowableException;\n import org.flowable.engine.history.HistoricActivityInstance;\n-import org.flowable.engine.impl.RuntimeServiceImpl;\n import org.flowable.engine.repository.ProcessDefinition;\n import org.flowable.engine.runtime.ProcessInstance;\n import org.flowable.task.api.Task;\n@@ -140,8 +138,7 @@ public static void updateStatus(final DomainProcessEngine engine, final String p\n     }\n \n     public static TaskQuery createTaskQuery(final DomainProcessEngine engine, final boolean onlyFormTasks) {\n-        SyncopeTaskQueryImpl taskQuery = new SyncopeTaskQueryImpl(\n-                ((RuntimeServiceImpl) engine.getRuntimeService()).getCommandExecutor());\n+        TaskQuery taskQuery = engine.getTaskService().createTaskQuery();\n         if (onlyFormTasks) {\n             taskQuery.taskWithFormKey();\n         }"},{"sha":"d1c3299b60ad3cd57f67a116e47a86d03afbb1ba","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/support/DomainProcessEngineConfiguration.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eaf70b1fbec40958ab917da88ff0797bd4abe09f/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eaf70b1fbec40958ab917da88ff0797bd4abe09f/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineConfiguration.java?ref=eaf70b1fbec40958ab917da88ff0797bd4abe09f","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.flowable.support;\n-\n-import java.io.InputStream;\n-import org.flowable.spring.SpringProcessEngineConfiguration;\n-\n-public class DomainProcessEngineConfiguration extends SpringProcessEngineConfiguration {\n-\n-    private static final String SYNCOPE_MYBATIS_MAPPING_FILE = \"org/apache/syncope/ext/flowable/mappings.xml\";\n-\n-    @Override\n-    public InputStream getMyBatisXmlConfigurationStream() {\n-        return getResourceAsStream(SYNCOPE_MYBATIS_MAPPING_FILE);\n-    }\n-}"},{"sha":"a330a1fabcdd740154f1ea032ce366b3c0377141","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/support/DomainProcessEngineFactoryBean.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java?ref=e9b8d95a6823da542d6c41f9b979a4c4c88cab21","patch":"@@ -29,6 +29,7 @@\n import org.flowable.engine.impl.util.EngineServiceUtil;\n import org.flowable.idm.spring.SpringIdmEngineConfiguration;\n import org.flowable.spring.SpringExpressionManager;\n+import org.flowable.spring.SpringProcessEngineConfiguration;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.DisposableBean;\n import org.springframework.beans.factory.FactoryBean;\n@@ -38,7 +39,7 @@\n import org.springframework.transaction.PlatformTransactionManager;\n \n /**\n- * Spring factory for {@link DomainProcessEngine} which takes the provided {@link DomainProcessEngineConfiguration} as\n+ * Spring factory for {@link DomainProcessEngine} which takes the provided {@link SpringProcessEngineConfiguration} as\n  * template for each of the configured Syncope domains.\n  */\n @Component\n@@ -66,7 +67,7 @@ public DomainProcessEngine getObject() throws Exception {\n                             domain + \"TransactionManager\", PlatformTransactionManager.class);\n                     Object entityManagerFactory = ctx.getBean(domain + \"EntityManagerFactory\");\n \n-                    DomainProcessEngineConfiguration conf = ctx.getBean(DomainProcessEngineConfiguration.class);\n+                    SpringProcessEngineConfiguration conf = ctx.getBean(SpringProcessEngineConfiguration.class);\n                     conf.setDataSource(dataSource);\n                     conf.setTransactionManager(transactionManager);\n                     conf.setTransactionsExternallyManaged(true);"},{"sha":"833fe6bcf3a735efd0c06a3856432f3a4b91513f","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/support/SyncopeTaskQueryImpl.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eaf70b1fbec40958ab917da88ff0797bd4abe09f/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FSyncopeTaskQueryImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eaf70b1fbec40958ab917da88ff0797bd4abe09f/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FSyncopeTaskQueryImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FSyncopeTaskQueryImpl.java?ref=eaf70b1fbec40958ab917da88ff0797bd4abe09f","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.flowable.support;\n-\n-import org.flowable.common.engine.impl.interceptor.CommandExecutor;\n-import org.flowable.task.api.TaskQuery;\n-import org.flowable.task.service.impl.TaskQueryImpl;\n-\n-public class SyncopeTaskQueryImpl extends TaskQueryImpl {\n-\n-    private static final long serialVersionUID = 734215641378485689L;\n-\n-    protected boolean withFormKey;\n-\n-    protected SyncopeTaskQueryImpl currentOrQueryObject;\n-\n-    public SyncopeTaskQueryImpl(final CommandExecutor commandExecutor) {\n-        super(commandExecutor);\n-    }\n-\n-    public TaskQuery taskWithFormKey() {\n-        if (orActive) {\n-            currentOrQueryObject.withFormKey = true;\n-        } else {\n-            this.withFormKey = true;\n-        }\n-        return this;\n-    }\n-\n-    public boolean isWithFormKey() {\n-        return withFormKey;\n-    }\n-}"},{"sha":"bf5c06f707a4415c4f4048ce3a746dcac4b6403f","filename":"ext/flowable/flowable-bpmn/src/main/resources/org/apache/syncope/ext/flowable/Task.xml","status":"removed","additions":0,"deletions":1421,"changes":1421,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eaf70b1fbec40958ab917da88ff0797bd4abe09f/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fflowable%2FTask.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eaf70b1fbec40958ab917da88ff0797bd4abe09f/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fflowable%2FTask.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fflowable%2FTask.xml?ref=eaf70b1fbec40958ab917da88ff0797bd4abe09f","patch":"@@ -1,1421 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> \n-\n-<mapper namespace=\"org.flowable.task.service.impl.persistence.entity.TaskEntityImpl\">\n-\n-  <!-- TASK INSERT -->\n-  \n-  <insert id=\"insertTask\" parameterType=\"org.flowable.task.service.impl.persistence.entity.TaskEntityImpl\">\n-    insert into ${prefix}ACT_RU_TASK (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_, ASSIGNEE_, DELEGATION_, \n-                      EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_ID_, SCOPE_ID_, SUB_SCOPE_ID_, SCOPE_TYPE_, SCOPE_DEFINITION_ID_,\n-                      TASK_DEF_KEY_, DUE_DATE_, CATEGORY_, SUSPENSION_STATE_, TENANT_ID_, FORM_KEY_, CLAIM_TIME_, \n-                      IS_COUNT_ENABLED_, VAR_COUNT_, ID_LINK_COUNT_, SUB_TASK_COUNT_)\n-    values (#{id, jdbcType=VARCHAR},\n-            1,\n-            #{name, jdbcType=VARCHAR},\n-            #{parentTaskId, jdbcType=VARCHAR},\n-            #{description, jdbcType=VARCHAR},\n-            #{priority, jdbcType=INTEGER},\n-            #{createTime, jdbcType=TIMESTAMP},\n-            #{owner, jdbcType=VARCHAR},\n-            #{assignee, jdbcType=VARCHAR},\n-            #{delegationStateString, jdbcType=VARCHAR},\n-            #{executionId, jdbcType=VARCHAR},\n-            #{processInstanceId, jdbcType=VARCHAR},\n-            #{processDefinitionId, jdbcType=VARCHAR},\n-            #{taskDefinitionId, jdbcType=VARCHAR},\n-            #{scopeId, jdbcType=VARCHAR},\n-            #{subScopeId, jdbcType=VARCHAR},\n-            #{scopeType, jdbcType=VARCHAR},\n-            #{scopeDefinitionId, jdbcType=VARCHAR},\n-            #{taskDefinitionKey, jdbcType=VARCHAR},\n-            #{dueDate, jdbcType=TIMESTAMP},\n-            #{category, jdbcType=VARCHAR},\n-            #{suspensionState, jdbcType=INTEGER},\n-            #{tenantId, jdbcType=VARCHAR},\n-            #{formKey, jdbcType=VARCHAR},\n-            #{claimTime, jdbcType=TIMESTAMP},\n-            #{isCountEnabled, jdbcType=BOOLEAN},\n-            #{variableCount, jdbcType=INTEGER},\n-            #{identityLinkCount, jdbcType=INTEGER},\n-            #{subTaskCount, jdbcType=INTEGER}\n-           )\n-  </insert>\n-\n-  <insert id=\"bulkInsertTask\" parameterType=\"java.util.List\">\n-    INSERT INTO ${prefix}ACT_RU_TASK (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_, ASSIGNEE_, DELEGATION_, \n-        EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_ID_, SCOPE_ID_, SUB_SCOPE_ID_, SCOPE_TYPE_, SCOPE_DEFINITION_ID_, \n-        TASK_DEF_KEY_, DUE_DATE_, CATEGORY_, SUSPENSION_STATE_, TENANT_ID_, FORM_KEY_, CLAIM_TIME_, \n-        IS_COUNT_ENABLED_, VAR_COUNT_, ID_LINK_COUNT_, SUB_TASK_COUNT_)\n-    VALUES \n-      <foreach collection=\"list\" item=\"task\" index=\"index\" separator=\",\"> \n-        (#{task.id, jdbcType=VARCHAR},\n-         1,\n-         #{task.name, jdbcType=VARCHAR},\n-         #{task.parentTaskId, jdbcType=VARCHAR},\n-         #{task.description, jdbcType=VARCHAR},\n-         #{task.priority, jdbcType=INTEGER},\n-         #{task.createTime, jdbcType=TIMESTAMP},\n-         #{task.owner, jdbcType=VARCHAR},\n-         #{task.assignee, jdbcType=VARCHAR},\n-         #{task.delegationStateString, jdbcType=VARCHAR},\n-         #{task.executionId, jdbcType=VARCHAR},\n-         #{task.processInstanceId, jdbcType=VARCHAR},\n-         #{task.processDefinitionId, jdbcType=VARCHAR},\n-         #{task.taskDefinitionId, jdbcType=VARCHAR},\n-         #{task.scopeId, jdbcType=VARCHAR},\n-         #{task.subScopeId, jdbcType=VARCHAR},\n-         #{task.scopeType, jdbcType=VARCHAR},\n-         #{task.scopeDefinitionId, jdbcType=VARCHAR},\n-         #{task.taskDefinitionKey, jdbcType=VARCHAR},\n-         #{task.dueDate, jdbcType=TIMESTAMP},\n-         #{task.category, jdbcType=VARCHAR},\n-         #{task.suspensionState, jdbcType=INTEGER},\n-         #{task.tenantId, jdbcType=VARCHAR},\n-         #{task.formKey, jdbcType=VARCHAR},\n-         #{task.claimTime, jdbcType=TIMESTAMP},\n-         #{task.isCountEnabled, jdbcType=BOOLEAN},\n-         #{task.variableCount, jdbcType=INTEGER},\n-         #{task.identityLinkCount, jdbcType=INTEGER},\n-         #{task.subTaskCount, jdbcType=INTEGER}\n-         )\n-    </foreach>\n-  </insert>\n-\n-  <insert id=\"bulkInsertTask\" databaseId=\"oracle\" parameterType=\"java.util.List\">\n-    INSERT ALL \n-      <foreach collection=\"list\" item=\"task\" index=\"index\">\n-        INTO ${prefix}ACT_RU_TASK (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_, ASSIGNEE_, DELEGATION_, \n-              EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_ID_, SCOPE_ID_, SUB_SCOPE_ID_, SCOPE_TYPE_, SCOPE_DEFINITION_ID_, TASK_DEF_KEY_, \n-              DUE_DATE_, CATEGORY_, SUSPENSION_STATE_, TENANT_ID_, FORM_KEY_, CLAIM_TIME_, \n-              IS_COUNT_ENABLED_, VAR_COUNT_, ID_LINK_COUNT_, SUB_TASK_COUNT_) VALUES\n-        (#{task.id, jdbcType=VARCHAR},\n-         1,\n-         #{task.name, jdbcType=VARCHAR},\n-         #{task.parentTaskId, jdbcType=VARCHAR},\n-         #{task.description, jdbcType=VARCHAR},\n-         #{task.priority, jdbcType=INTEGER},\n-         #{task.createTime, jdbcType=TIMESTAMP},\n-         #{task.owner, jdbcType=VARCHAR},\n-         #{task.assignee, jdbcType=VARCHAR},\n-         #{task.delegationStateString, jdbcType=VARCHAR},\n-         #{task.executionId, jdbcType=VARCHAR},\n-         #{task.processInstanceId, jdbcType=VARCHAR},\n-         #{task.processDefinitionId, jdbcType=VARCHAR},\n-         #{task.taskDefinitionId, jdbcType=VARCHAR},\n-         #{task.scopeId, jdbcType=VARCHAR},\n-         #{task.subScopeId, jdbcType=VARCHAR},\n-         #{task.scopeType, jdbcType=VARCHAR},\n-         #{task.scopeDefinitionId, jdbcType=VARCHAR},\n-         #{task.taskDefinitionKey, jdbcType=VARCHAR},\n-         #{task.dueDate, jdbcType=TIMESTAMP},\n-         #{task.category, jdbcType=VARCHAR},\n-         #{task.suspensionState, jdbcType=INTEGER},\n-         #{task.tenantId, jdbcType=VARCHAR},\n-         #{task.formKey, jdbcType=VARCHAR},\n-         #{task.claimTime, jdbcType=TIMESTAMP},\n-         #{task.isCountEnabled, jdbcType=BOOLEAN},\n-         #{task.variableCount, jdbcType=INTEGER},\n-         #{task.identityLinkCount, jdbcType=INTEGER},\n-         #{task.subTaskCount, jdbcType=INTEGER}\n-         )\n-    </foreach>\n-    SELECT * FROM dual\n-  </insert>\n-  \n-  <!-- TASK UPDATE -->\n-  \n-  <update id=\"updateTask\" parameterType=\"org.flowable.task.service.impl.persistence.entity.TaskEntityImpl\">\n-    update ${prefix}ACT_RU_TASK\n-    <set>\n-      REV_ = #{revisionNext, jdbcType=INTEGER},\n-      <if test=\"originalPersistentState.name != name\">\n-          NAME_ = #{name, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.parentTaskId != parentTaskId\">\n-          PARENT_TASK_ID_ = #{parentTaskId, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.priority != priority\">\n-          PRIORITY_ = #{priority, jdbcType=INTEGER},\n-      </if>\n-      <if test=\"originalPersistentState.createTime != createTime\">\n-          CREATE_TIME_ = #{createTime, jdbcType=TIMESTAMP},\n-      </if>\n-      <if test=\"originalPersistentState.owner != owner\">\n-          OWNER_ = #{owner, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.assignee != assignee\">\n-          ASSIGNEE_ = #{assignee, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.delegationStateString != delegationStateString\">\n-          DELEGATION_ = #{delegationStateString, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.executionId != executionId\">\n-          EXECUTION_ID_ = #{executionId, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.processDefinitionId != processDefinitionId\">\n-          PROC_DEF_ID_ = #{processDefinitionId, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.taskDefinitionId != taskDefinitionId\">\n-          TASK_DEF_ID_ = #{taskDefinitionId, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.taskDefinitionKey != taskDefinitionKey\">\n-          TASK_DEF_KEY_ = #{taskDefinitionKey, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.scopeId != scopeId\">\n-          SCOPE_ID_ = #{scopeId, jdbcType=VARCHAR}\n-      </if>\n-      <if test=\"originalPersistentState.subScopeId != subScopeId\">\n-          SUB_SCOPE_ID_ = #{subScopeId, jdbcType=VARCHAR}\n-      </if>\n-      <if test=\"originalPersistentState.scopeType != scopeType\">\n-          SCOPE_TYPE_ = #{scopeType, jdbcType=VARCHAR}\n-      </if>\n-       <if test=\"originalPersistentState.scopeDefinitionId != scopeDefinitionId\">\n-          SCOPE_DEFINITION_ID_ = #{scopeDefinitionId, jdbcType=VARCHAR}\n-      </if>\n-      <if test=\"originalPersistentState.description != description\">\n-          DESCRIPTION_ = #{description, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.dueDate != dueDate\">\n-          DUE_DATE_ = #{dueDate, jdbcType=TIMESTAMP},\n-      </if>\n-      <if test=\"originalPersistentState.category != category\">\n-          CATEGORY_ = #{category, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.suspensionState != suspensionState\">\n-          SUSPENSION_STATE_ = #{suspensionState, jdbcType=INTEGER},\n-      </if>\n-      <if test=\"originalPersistentState.formKey != formKey\">\n-          FORM_KEY_ = #{formKey, jdbcType=VARCHAR},\n-      </if>\n-      <if test=\"originalPersistentState.claimTime != claimTime\">\n-          CLAIM_TIME_ = #{claimTime, jdbcType=TIMESTAMP},\n-      </if>\n-      <if test=\"originalPersistentState.isCountEnabled != isCountEnabled\">\n-          IS_COUNT_ENABLED_ = #{isCountEnabled, jdbcType=BOOLEAN},\n-      </if>\n-      <if test=\"originalPersistentState.variableCount != variableCount\">\n-          VAR_COUNT_ = #{variableCount, jdbcType=INTEGER},\n-      </if>\n-      <if test=\"originalPersistentState.identityLinkCount != identityLinkCount\">\n-          ID_LINK_COUNT_ = #{identityLinkCount, jdbcType=INTEGER},\n-      </if>\n-      <if test=\"originalPersistentState.subTaskCount != subTaskCount\">\n-          SUB_TASK_COUNT_ = #{subTaskCount, jdbcType=INTEGER}\n-      </if>\n-    </set>\n-    where ID_= #{id, jdbcType=VARCHAR}\n-      and REV_ = #{revision, jdbcType=INTEGER}\n-  </update>\n-  \n-  <update id=\"updateTaskTenantIdForDeployment\" parameterType=\"java.util.Map\">\n-    update ${prefix}ACT_RU_TASK set\n-      TENANT_ID_ = #{tenantId, jdbcType=VARCHAR}\n-    where\n-      ID_ in (\n-        SELECT T.ID_ from ${prefix}ACT_RU_TASK T\n-        inner join ${prefix}ACT_RE_PROCDEF P on T.PROC_DEF_ID_  = P.ID_\n-        inner join ${prefix}ACT_RE_DEPLOYMENT D on P.DEPLOYMENT_ID_ = D.ID_ \n-        where D.ID_ = #{deploymentId, jdbcType=VARCHAR}\n-      ) \n-  </update>\n-  \n-    <!-- See http://stackoverflow.com/questions/4429319/you-cant-specify-target-table-for-update-in-from-clause\n-       Tested this on MySQL 5.6: does NOT use a temporary table (so good, performance0 -->\n-  <update id=\"updateTaskTenantIdForDeployment\" databaseId=\"mysql\" parameterType=\"java.util.Map\">\n-    update ${prefix}ACT_RU_TASK set\n-      TENANT_ID_ = #{tenantId, jdbcType=VARCHAR}\n-    where\n-      ID_ in (\n-\n-          SELECT tempTask.tempId\n-          FROM (\n-                SELECT T.ID_ as tempId\n-                FROM  ${prefix}ACT_RU_TASK T\n-                inner join ${prefix}ACT_RE_PROCDEF P on T.PROC_DEF_ID_  = P.ID_\n-                inner join ${prefix}ACT_RE_DEPLOYMENT D on P.DEPLOYMENT_ID_ = D.ID_ \n-                where D.ID_ = #{deploymentId, jdbcType=VARCHAR}\n-                \n-        ) AS tempTask \n-\n-    )\n-  </update>\n-  \n-    \n-  <update id=\"updateTaskRelatedEntityCountEnabled\" parameterType=\"boolean\">\n-    update ${prefix}ACT_RU_TASK \n-    set IS_COUNT_ENABLED_ = #{parameter, jdbcType=BOOLEAN}\n-  </update>\n-  \n-  <!-- TASK DELETE -->\n-  <delete id=\"deleteTask\" parameterType=\"org.flowable.task.service.impl.persistence.entity.TaskEntityImpl\">\n-    delete from ${prefix}ACT_RU_TASK where ID_ = #{id} and REV_ = #{revision}\n-  </delete>\n-  \n-  <delete id=\"deleteTasksByExecutionId\" parameterType=\"string\">\n-    delete from ${prefix}ACT_RU_TASK where EXECUTION_ID_ = #{id}\n-  </delete>\n-  \n-  <delete id=\"bulkDeleteTask\" parameterType=\"java.util.Collection\">\n-    delete from ${prefix}ACT_RU_TASK where \n-    <foreach item=\"task\" collection=\"list\" index=\"index\" separator=\" or \">\n-        ID_ = #{task.id, jdbcType=VARCHAR}\n-    </foreach>\n-  </delete>\n-  \n-  <!-- TASK RESULTMAP -->\n-  \n-  <resultMap id=\"taskResultMap\" type=\"org.flowable.task.service.impl.persistence.entity.TaskEntityImpl\">\n-    <id property=\"id\" column=\"ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"revision\" column=\"REV_\" jdbcType=\"INTEGER\"/>\n-    <result property=\"name\" column=\"NAME_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"parentTaskId\" column=\"PARENT_TASK_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"description\" column=\"DESCRIPTION_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"priority\" column=\"PRIORITY_\" jdbcType=\"INTEGER\"/>\n-    <result property=\"createTime\" column=\"CREATE_TIME_\" jdbcType=\"TIMESTAMP\" />\n-    <result property=\"owner\" column=\"OWNER_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"assignee\" column=\"ASSIGNEE_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"delegationStateString\" column=\"DELEGATION_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"executionId\" column=\"EXECUTION_ID_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"processInstanceId\" column=\"PROC_INST_ID_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"processDefinitionId\" column=\"PROC_DEF_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"taskDefinitionId\" column=\"TASK_DEF_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"scopeId\" column=\"SCOPE_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"subScopeId\" column=\"SUB_SCOPE_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"scopeType\" column=\"SCOPE_TYPE_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"scopeDefinitionId\" column=\"SCOPE_DEFINITION_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"taskDefinitionKey\" column=\"TASK_DEF_KEY_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"dueDate\" column=\"DUE_DATE_\" jdbcType=\"TIMESTAMP\"/>\n-    <result property=\"category\" column=\"CATEGORY_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"suspensionState\" column=\"SUSPENSION_STATE_\" jdbcType=\"INTEGER\" />\n-    <result property=\"tenantId\" column=\"TENANT_ID_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"formKey\" column=\"FORM_KEY_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"claimTime\" column=\"CLAIM_TIME_\" jdbcType=\"TIMESTAMP\" />\n-    <result property=\"isCountEnabled\" column=\"IS_COUNT_ENABLED_\" jdbcType=\"BOOLEAN\" />\n-    <result property=\"variableCount\" column=\"VAR_COUNT_\" jdbcType=\"INTEGER\" />\n-    <result property=\"identityLinkCount\" column=\"ID_LINK_COUNT_\" jdbcType=\"INTEGER\" />\n-    <result property=\"subTaskCount\" column=\"SUB_TASK_COUNT_\" jdbcType=\"INTEGER\" />\n-  </resultMap>\n-  \n-  <resultMap id=\"taskAndRelatedEntitiesResultMap\" type=\"org.flowable.task.service.impl.persistence.entity.TaskEntityImpl\">\n-    <id property=\"id\" column=\"ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"revision\" column=\"REV_\" jdbcType=\"INTEGER\"/>\n-    <result property=\"name\" column=\"NAME_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"parentTaskId\" column=\"PARENT_TASK_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"description\" column=\"DESCRIPTION_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"priority\" column=\"PRIORITY_\" jdbcType=\"INTEGER\"/>\n-    <result property=\"createTime\" column=\"CREATE_TIME_\" jdbcType=\"TIMESTAMP\" />\n-    <result property=\"owner\" column=\"OWNER_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"assignee\" column=\"ASSIGNEE_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"delegationStateString\" column=\"DELEGATION_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"executionId\" column=\"EXECUTION_ID_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"processInstanceId\" column=\"PROC_INST_ID_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"processDefinitionId\" column=\"PROC_DEF_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"taskDefinitionId\" column=\"TASK_DEF_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"scopeId\" column=\"SCOPE_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"subScopeId\" column=\"SUB_SCOPE_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"scopeType\" column=\"SCOPE_TYPE_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"scopeDefinitionId\" column=\"SCOPE_DEFINITION_ID_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"taskDefinitionKey\" column=\"TASK_DEF_KEY_\" jdbcType=\"VARCHAR\"/>\n-    <result property=\"dueDate\" column=\"DUE_DATE_\" jdbcType=\"TIMESTAMP\"/>\n-    <result property=\"category\" column=\"CATEGORY_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"suspensionState\" column=\"SUSPENSION_STATE_\" jdbcType=\"INTEGER\" />\n-    <result property=\"tenantId\" column=\"TENANT_ID_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"formKey\" column=\"FORM_KEY_\" jdbcType=\"VARCHAR\" />\n-    <result property=\"claimTime\" column=\"CLAIM_TIME_\" jdbcType=\"TIMESTAMP\" />\n-    <result property=\"isCountEnabled\" column=\"IS_COUNT_ENABLED_\" jdbcType=\"BOOLEAN\" />\n-    <result property=\"variableCount\" column=\"VAR_COUNT_\" jdbcType=\"INTEGER\" />\n-    <result property=\"identityLinkCount\" column=\"ID_LINK_COUNT_\" jdbcType=\"INTEGER\" />\n-    <result property=\"subTaskCount\" column=\"SUB_TASK_COUNT_\" jdbcType=\"INTEGER\" />\n-    <collection property=\"queryVariables\" column=\"TASK_ID_\" javaType=\"ArrayList\" ofType=\"org.flowable.variable.service.impl.persistence.entity.VariableInstanceEntityImpl\">\n-      <id property=\"id\" column=\"VAR_ID_\"/>\n-      <result property=\"name\" column=\"VAR_NAME_\" javaType=\"String\" jdbcType=\"VARCHAR\" />\n-      <result property=\"type\" column=\"VAR_TYPE_\" javaType=\"org.flowable.variable.api.types.VariableType\" jdbcType=\"VARCHAR\" />\n-      <result property=\"revision\" column=\"VAR_REV_\" jdbcType=\"INTEGER\" />\n-      <result property=\"processInstanceId\" column=\"VAR_PROC_INST_ID_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"executionId\" column=\"VAR_EXECUTION_ID_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"taskId\" column=\"VAR_TASK_ID_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"byteArrayRef\" column=\"VAR_BYTEARRAY_ID_\" typeHandler=\"VariableByteArrayRefTypeHandler\"/>\n-      <result property=\"doubleValue\" column=\"VAR_DOUBLE_\" jdbcType=\"DOUBLE\" />\n-      <result property=\"textValue\" column=\"VAR_TEXT_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"textValue2\" column=\"VAR_TEXT2_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"longValue\" column=\"VAR_LONG_\" jdbcType=\"BIGINT\" />\n-    </collection>\n-    <collection property=\"queryIdentityLinks\" column=\"TASK_ID_\" javaType=\"ArrayList\" ofType=\"org.flowable.identitylink.service.impl.persistence.entity.IdentityLinkEntityImpl\">\n-      <id property=\"id\" column=\"ILINK_ID_\"/>\n-      <result property=\"type\" column=\"ILINK_TYPE_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"userId\" column=\"ILINK_USER_ID_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"groupId\" column=\"ILINK_GROUP_ID_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"taskId\" column=\"ILINK_TASK_ID_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"processInstanceId\" column=\"ILINK_PROC_INST_ID_\" jdbcType=\"VARCHAR\" />\n-      <result property=\"processDefId\" column=\"ILINK_PROC_DEF_ID_\" jdbcType=\"VARCHAR\" />\n-    </collection>\n-  </resultMap>\n-\n-  <!-- TASK SELECT -->  \n-\n-  <select id=\"selectTask\" parameterType=\"string\" resultMap=\"taskResultMap\">\n-   select * from ${prefix}ACT_RU_TASK where ID_ = #{id, jdbcType=VARCHAR}\n-  </select>\n-  \n-  <select id=\"selectTasksByParentTaskId\" parameterType=\"org.flowable.common.engine.impl.db.ListQueryParameterObject\" resultMap=\"taskResultMap\">\n-    select * from ${prefix}ACT_RU_TASK where PARENT_TASK_ID_ = #{parameter}\n-  </select>\n-\n-  <select id=\"selectTasksByExecutionId\" parameterType=\"org.flowable.common.engine.impl.db.ListQueryParameterObject\" resultMap=\"taskResultMap\">\n-    select distinct T.*\n-    from ${prefix}ACT_RU_TASK T\n-    where T.EXECUTION_ID_ = #{parameter}\n-  </select>\n-  \n-  <select id=\"selectTasksByProcessInstanceId\" parameterType=\"org.flowable.common.engine.impl.db.ListQueryParameterObject\" resultMap=\"taskResultMap\">\n-    select T.*\n-    from ${prefix}ACT_RU_TASK T\n-    where T.PROC_INST_ID_ = #{parameter}\n-  </select>\n-  \n-  <select id=\"selectTasksBySubScopeIdAndScopeType\" parameterType=\"org.flowable.common.engine.impl.db.ListQueryParameterObject\" resultMap=\"taskResultMap\">\n-    select T.*\n-    from ${prefix}ACT_RU_TASK T\n-    where T.SUB_SCOPE_ID_ = #{parameter.subScopeId, jdbcType=VARCHAR} and T.SCOPE_TYPE_ = #{parameter.scopeType, jdbcType=VARCHAR}\n-  </select>\n-  \n-  <select id=\"selectTasksByScopeIdAndScopeType\" parameterType=\"org.flowable.common.engine.impl.db.ListQueryParameterObject\" resultMap=\"taskResultMap\">\n-    select T.*\n-    from ${prefix}ACT_RU_TASK T\n-    where T.SCOPE_ID_ = #{parameter.scopeId, jdbcType=VARCHAR} and T.SCOPE_TYPE_ = #{parameter.scopeType, jdbcType=VARCHAR}\n-  </select>\n-  \n-  <!-- Using distinct here because a task can appear multiple times in a resultset when -->\n-  <select id=\"selectTaskByQueryCriteria\" parameterType=\"org.apache.syncope.core.flowable.support.SyncopeTaskQueryImpl\" resultMap=\"taskResultMap\">\n-    <if test=\"firstResult != null and firstResult &gt;= 0\">${limitBefore}</if>\n-    select distinct RES.* <if test=\"nullHandlingColumn != null\">, ${nullHandlingColumn}</if> <if test=\"firstResult != null and firstResult &gt;= 0\">${limitBetween}</if>\n-    <include refid=\"selectTaskByQueryCriteriaSql\"/> \n-    ${orderBy}\n-    <if test=\"firstResult != null and firstResult &gt;= 0\">${limitAfter}</if>\n-  </select>\n-\n-  <select id=\"selectTaskCountByQueryCriteria\" parameterType=\"org.apache.syncope.core.flowable.support.SyncopeTaskQueryImpl\" resultType=\"long\">\n-    select count(distinct RES.ID_)\n-    <include refid=\"selectTaskByQueryCriteriaSql\"/>\n-  </select>\n-  \n-  <sql id=\"selectTaskByQueryCriteriaSql\">  \n-    from ${prefix}ACT_RU_TASK RES\n-    <include refid=\"commonSelectTaskByQueryCriteriaSql\"/>\n-  </sql>\n-  \n-  <select id=\"selectTasksWithRelatedEntitiesByQueryCriteria\" parameterType=\"org.apache.syncope.core.flowable.support.SyncopeTaskQueryImpl\" resultMap=\"taskAndRelatedEntitiesResultMap\">\n-    <include refid=\"selectTasksWithRelatedEntitiesByQueryCriteriaColumns\"/>\n-    <include refid=\"selectTasksWithRelatedEntitiesByQueryCriteriaSql\"/>\n-    ${orderBy}\n-    <if test=\"firstResult != null and firstResult &gt;= 0\">${limitAfter}</if>\n-  </select>\n-\n-  <sql id=\"selectTasksWithRelatedEntitiesByQueryCriteriaColumns\">\n-    <if test=\"firstResult != null and firstResult &gt;= 0\">${limitBefore}</if>\n-  \t<if test=\"_databaseId != 'db2' and _databaseId != 'mssql'\">\n-    select RES.*,\n-      <if test=\"includeTaskLocalVariables or includeProcessVariables\">\n-        VAR.ID_ as VAR_ID_, VAR.NAME_ as VAR_NAME_, VAR.TYPE_ as VAR_TYPE_, VAR.REV_ as VAR_REV_,\n-        VAR.PROC_INST_ID_ as VAR_PROC_INST_ID_, VAR.EXECUTION_ID_ as VAR_EXECUTION_ID_, VAR.TASK_ID_ as VAR_TASK_ID_,\n-        VAR.BYTEARRAY_ID_ as VAR_BYTEARRAY_ID_, VAR.DOUBLE_ as VAR_DOUBLE_,\n-        VAR.TEXT_ as VAR_TEXT_, VAR.TEXT2_ as VAR_TEXT2_, VAR.LONG_ as VAR_LONG_\n-      </if>\n-      <if test=\"(includeTaskLocalVariables or includeProcessVariables) and includeIdentityLinks\">\n-        ,\n-      </if>\n-      <if test=\"includeIdentityLinks\">\n-        ILINK.ID_ as ILINK_ID_, ILINK.TYPE_ as ILINK_TYPE_, ILINK.USER_ID_ as ILINK_USER_ID_,\n-        ILINK.GROUP_ID_ as ILINK_GROUP_ID_, ILINK.TASK_ID_ as ILINK_TASK_ID_,\n-        ILINK.PROC_INST_ID_ as ILINK_PROC_INST_ID_, ILINK.PROC_DEF_ID_ as ILINK_PROC_DEF_ID_\n-      </if>\n-    <if test=\"firstResult != null and firstResult &gt;= 0\">${limitBetween}</if>\n-    </if>\n-    <if test=\"_databaseId == 'db2' || _databaseId == 'mssql'\">\n-      select distinct TEMPRES_ID_ as ID_, TEMPRES_REV_ as REV_, TEMPRES_NAME_ as NAME_,\n-      TEMPRES_PARENT_TASK_ID_ as PARENT_TASK_ID_, TEMPRES_DESCRIPTION_ as DESCRIPTION_,\n-      TEMPRES_PRIORITY_ as PRIORITY_, TEMPRES_CREATE_TIME_ as CREATE_TIME_,\n-      TEMPRES_OWNER_ as OWNER_, TEMPRES_ASSIGNEE_ as ASSIGNEE_, TEMPRES_DELEGATION_ as DELEGATION_,\n-      TEMPRES_FORM_KEY_ as FORM_KEY_, TEMPRES_CLAIM_TIME_ as CLAIM_TIME_, TEMPRES_EXECUTION_ID_ as EXECUTION_ID_,\n-      TEMPRES_PROC_INST_ID_ as PROC_INST_ID_, TEMPRES_PROC_DEF_ID_ as PROC_DEF_ID_,\n-      TEMPRES_TASK_DEF_ID_ as TASK_DEF_ID_, TEMPRES_TASK_DEF_KEY_ as TASK_DEF_KEY_,\n-      TEMPRES_DUE_DATE_ as DUE_DATE_, TEMPRES_SUSPENSION_STATE_ as SUSPENSION_STATE_, TEMPRES_CATEGORY_ as CATEGORY_,\n-      TEMPRES_IS_COUNT_ENABLED_ as IS_COUNT_ENABLED_,\tTEMPRES_VAR_COUNT_ as VAR_COUNT_, TEMPRES_ID_LINK_COUNT_ as ID_LINK_COUNT_, TEMPRES_ID_SUB_TASK_COUNT_ as SUB_TASK_COUNT_\n-      <if test=\"includeTaskLocalVariables or includeProcessVariables\">\n-        ,\n-        TEMPVAR_ID_ as VAR_ID_, TEMPVAR_NAME_ as VAR_NAME_, TEMPVAR_TYPE_ as VAR_TYPE_, TEMPVAR_REV_ as VAR_REV_,\n-        TEMPVAR_PROC_INST_ID_ as VAR_PROC_INST_ID_, TEMPVAR_EXECUTION_ID_ as VAR_EXECUTION_ID_, TEMPVAR_TASK_ID_ as VAR_TASK_ID_,\n-        TEMPVAR_BYTEARRAY_ID_ as VAR_BYTEARRAY_ID_, TEMPVAR_DOUBLE_ as VAR_DOUBLE_,\n-        TEMPVAR_TEXT_ as VAR_TEXT_, TEMPVAR_TEXT2_ as VAR_TEXT2_, TEMPVAR_LONG_ as VAR_LONG_\n-      </if>\n-      <if test=\"includeIdentityLinks\">\n-        ,\n-        TEMPILINK_ID_ as ILINK_ID_, TEMPILINK_TYPE_ as ILINK_TYPE_, TEMPILINK_USER_ID_ as ILINK_USER_ID_,\n-        TEMPILINK_GROUP_ID_ as ILINK_GROUP_ID_, TEMPILINK_TASK_ID_ as ILINK_TASK_ID_,\n-        TEMPILINK_PROC_INST_ID_ as ILINK_PROC_INST_ID_, TEMPILINK_PROC_DEF_ID_ as ILINK_PROC_DEF_ID_\n-      </if>\n-      <if test=\"firstResult != null and firstResult &gt;= 0\">${limitOuterJoinBetween}</if>\n-      RES.ID_ as TEMPRES_ID_, RES.REV_ as TEMPRES_REV_, RES.NAME_ as TEMPRES_NAME_,\n-      RES.PARENT_TASK_ID_ as TEMPRES_PARENT_TASK_ID_, RES.DESCRIPTION_ as TEMPRES_DESCRIPTION_,\n-      RES.PRIORITY_ as TEMPRES_PRIORITY_, RES.CREATE_TIME_ as TEMPRES_CREATE_TIME_,\n-      RES.OWNER_ as TEMPRES_OWNER_, RES.ASSIGNEE_ as TEMPRES_ASSIGNEE_, RES.DELEGATION_ as TEMPRES_DELEGATION_,\n-      RES.FORM_KEY_ as TEMPRES_FORM_KEY_, RES.CLAIM_TIME_ as TEMPRES_CLAIM_TIME_, RES.EXECUTION_ID_ as TEMPRES_EXECUTION_ID_,\n-      RES.PROC_INST_ID_ as TEMPRES_PROC_INST_ID_, RES.PROC_DEF_ID_ as TEMPRES_PROC_DEF_ID_,\n-      RES.TASK_DEF_ID_ as TEMPRES_TASK_DEF_ID_, RES.TASK_DEF_KEY_ as TEMPRES_TASK_DEF_KEY_,\n-      RES.DUE_DATE_ as TEMPRES_DUE_DATE_, RES.SUSPENSION_STATE_ as TEMPRES_SUSPENSION_STATE_, RES.CATEGORY_ as TEMPRES_CATEGORY_,\n-      RES.IS_COUNT_ENABLED_ as TEMPRES_IS_COUNT_ENABLED_, RES.VAR_COUNT_ as TEMPRES_VAR_COUNT_, RES.ID_LINK_COUNT_ as TEMPRES_ID_LINK_COUNT_, RES.SUB_TASK_COUNT_ as TEMPRES_ID_SUB_TASK_COUNT_\n-      <if test=\"includeTaskLocalVariables or includeProcessVariables\">\n-        ,\n-        VAR.ID_ as TEMPVAR_ID_, VAR.NAME_ as TEMPVAR_NAME_, VAR.TYPE_ as TEMPVAR_TYPE_, VAR.REV_ as TEMPVAR_REV_,\n-        VAR.PROC_INST_ID_ as TEMPVAR_PROC_INST_ID_, VAR.EXECUTION_ID_ as TEMPVAR_EXECUTION_ID_, VAR.TASK_ID_ as TEMPVAR_TASK_ID_,\n-        VAR.BYTEARRAY_ID_ as TEMPVAR_BYTEARRAY_ID_, VAR.DOUBLE_ as TEMPVAR_DOUBLE_,\n-        VAR.TEXT_ as TEMPVAR_TEXT_, VAR.TEXT2_ as TEMPVAR_TEXT2_, VAR.LONG_ as TEMPVAR_LONG_\n-      </if>\n-      <if test=\"includeIdentityLinks\">\n-        ,\n-        ILINK.ID_ as TEMPILINK_ID_, ILINK.TYPE_ as TEMPILINK_TYPE_, ILINK.USER_ID_ as TEMPILINK_USER_ID_,\n-        ILINK.GROUP_ID_ as TEMPILINK_GROUP_ID_, ILINK.TASK_ID_ as TEMPILINK_TASK_ID_,\n-        ILINK.PROC_INST_ID_ as TEMPILINK_PROC_INST_ID_, ILINK.PROC_DEF_ID_ as TEMPILINK_PROC_DEF_ID_\n-      </if>\n-    </if>\n-  </sql>\n-  \n-  <sql id=\"selectTasksWithRelatedEntitiesByQueryCriteriaSql\">\n-    from ${prefix}ACT_RU_TASK RES\n-    <choose>\n-      <when test=\"includeTaskLocalVariables &amp;&amp; includeProcessVariables\">\n-        left outer join ${prefix}ACT_RU_VARIABLE VAR ON RES.ID_ = VAR.TASK_ID_ or RES.PROC_INST_ID_ = VAR.EXECUTION_ID_\n-      </when>\n-      <otherwise>\n-        <if test=\"includeTaskLocalVariables\">\n-          left outer join ${prefix}ACT_RU_VARIABLE VAR ON RES.ID_ = VAR.TASK_ID_\n-        </if>\n-        <if test=\"includeProcessVariables\">\n-          left outer join ${prefix}ACT_RU_VARIABLE VAR ON RES.PROC_INST_ID_ = VAR.EXECUTION_ID_ and VAR.TASK_ID_ is null\n-        </if>\n-      </otherwise>\n-    </choose>\n-    <if test=\"includeIdentityLinks\">\n-      left outer join ${prefix}ACT_RU_IDENTITYLINK ILINK on RES.ID_ = ILINK.TASK_ID_\n-    </if>\n-    <include refid=\"commonSelectTaskByQueryCriteriaSql\"/>\n-  </sql>\n-\n-  <sql id=\"commonSelectTaskByQueryCriteriaSql\">\n-    <foreach collection=\"queryVariableValues\" index=\"index\" item=\"var\">\n-      <if test=\"!var.operator.equals('EXISTS') &amp;&amp; !var.operator.equals('NOT_EXISTS')\">\n-          <choose>\n-            <when test=\"var.local\">\n-              inner join ${prefix}ACT_RU_VARIABLE A${index} on RES.ID_ = A${index}.TASK_ID_ \n-            </when>\n-            <otherwise>\n-              inner join ${prefix}ACT_RU_VARIABLE A${index} on RES.PROC_INST_ID_ = A${index}.PROC_INST_ID_ \n-            </otherwise>\n-          </choose>\n-      </if>       \n-    </foreach>\n-    <foreach collection=\"orQueryObjects\" index=\"orIndex\" item=\"orQueryObject\">\n-      <if test=\"orQueryObject.queryVariableValues.size() &gt; 0\">\n-        <if test=\"orQueryObject.hasValueComparisonQueryVariables()\">\n-            <if test=\"orQueryObject.hasLocalQueryVariableValue()\">\n-              left outer join ${prefix}ACT_RU_VARIABLE A_L_OR${orIndex} on RES.ID_ = A_L_OR${orIndex}.TASK_ID_\n-            </if>\n-            <if test=\"orQueryObject.hasNonLocalQueryVariableValue()\">\n-              left outer join ${prefix}ACT_RU_VARIABLE A_OR${orIndex} on RES.PROC_INST_ID_ = A_OR${orIndex}.PROC_INST_ID_\n-            </if>\n-        </if>\n-      </if>\n-      \n-      <if test=\"orQueryObject.processDefinitionKey != null || orQueryObject.processDefinitionKeyLike != null || orQueryObject.processDefinitionKeyLikeIgnoreCase != null || orQueryObject.processDefinitionName != null || orQueryObject.processDefinitionNameLike != null || (orQueryObject.processCategoryInList != null &amp;&amp; orQueryObject.processCategoryInList.size() &gt; 0) || (orQueryObject.processCategoryNotInList != null &amp;&amp; orQueryObject.processCategoryNotInList.size() &gt; 0) || (orQueryObject.processDefinitionKeys != null &amp;&amp; orQueryObject.processDefinitionKeys.size() &gt; 0)\">\n-        left outer join ${prefix}ACT_RE_PROCDEF D_OR${orIndex} on RES.PROC_DEF_ID_ = D_OR${orIndex}.ID_\n-      </if>\n-      \n-      <if test=\"orQueryObject.processInstanceBusinessKey != null || orQueryObject.processInstanceBusinessKeyLike != null || orQueryObject.processInstanceBusinessKeyLikeIgnoreCase != null\">\n-        inner join ${prefix}ACT_RU_EXECUTION E_OR${orIndex} on RES.PROC_INST_ID_ = E_OR${orIndex}.ID_\n-      </if>\n-      \n-      <if test=\"orQueryObject.deploymentId != null || (orQueryObject.deploymentIds != null &amp;&amp; orQueryObject.deploymentIds.size() &gt; 0)\">\n-        left outer join ${prefix}ACT_RE_PROCDEF DEPLOY_P_OR${orIndex} ON RES.PROC_DEF_ID_ = DEPLOY_P_OR${orIndex}.ID_\n-      </if>\n-      <if test=\"orQueryObject.cmmnDeploymentId != null || (orQueryObject.cmmnDeploymentIds != null &amp;&amp; orQueryObject.cmmnDeploymentIds.size() &gt; 0)\">\n-        left outer join ${prefix}ACT_CMMN_CASEDEF DEPLOY_C_OR${orIndex} ON RES.SCOPE_DEFINITION_ID_ = DEPLOY_C_OR${orIndex}.ID_\n-      </if>\n-    </foreach>\n-    \n-    <if test=\"processDefinitionKey != null || processDefinitionKeyLike != null ||  processDefinitionKeyLikeIgnoreCase != null || processDefinitionName != null || processDefinitionNameLike != null || (processCategoryInList != null &amp;&amp; processCategoryInList.size() &gt; 0) || (processCategoryNotInList != null &amp;&amp; processCategoryNotInList.size() &gt; 0) || (processDefinitionKeys != null &amp;&amp; processDefinitionKeys.size() &gt; 0)\">\n-      inner join ${prefix}ACT_RE_PROCDEF D on RES.PROC_DEF_ID_ = D.ID_\n-    </if>\n-    <if test=\"processInstanceBusinessKey != null || processInstanceBusinessKeyLike != null  || processInstanceBusinessKeyLikeIgnoreCase != null\">\n-      inner join ${prefix}ACT_RU_EXECUTION E on RES.PROC_INST_ID_ = E.ID_\n-    </if>\n-    <if test=\"deploymentId != null || (deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0)\">\n-      left outer join ${prefix}ACT_RE_PROCDEF DEPLOY_P ON RES.PROC_DEF_ID_ = DEPLOY_P.ID_\n-    </if>\n-    <if test=\"cmmnDeploymentId != null || (cmmnDeploymentIds != null &amp;&amp; cmmnDeploymentIds.size() &gt; 0)\">\n-      left outer join ${prefix}ACT_CMMN_CASEDEF DEPLOY_C ON RES.SCOPE_DEFINITION_ID_ = DEPLOY_C.ID_\n-    </if>\n-    <where> \n-      <if test=\"taskId != null\">\n-        RES.ID_ = #{taskId}\n-      </if>\n-      <if test=\"name != null\">\n-        and RES.NAME_ = #{name}\n-      </if>\n-      <if test=\"nameLike != null\">\n-        and RES.NAME_ like #{nameLike}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"nameLikeIgnoreCase != null\">\n-        and lower(RES.NAME_) like #{nameLikeIgnoreCase}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"nameList != null &amp;&amp; nameList.size() &gt; 0\">\n-        and RES.NAME_ IN\n-        <foreach item=\"name\" index=\"index\" collection=\"nameList\"\n-                 open=\"(\" separator=\",\" close=\")\">\n-          #{name}\n-        </foreach>\n-      </if>\n-      <if test=\"nameListIgnoreCase != null &amp;&amp; nameListIgnoreCase.size() &gt; 0\">\n-        and lower(RES.NAME_) IN\n-        <foreach item=\"name\" index=\"index\" collection=\"nameListIgnoreCase\"\n-                 open=\"(\" separator=\",\" close=\")\">\n-          #{name}\n-        </foreach>\n-      </if>\n-      <if test=\"description != null\">\n-        and RES.DESCRIPTION_ = #{description}\n-      </if>\n-      <if test=\"descriptionLike != null\">\n-        and RES.DESCRIPTION_ like #{descriptionLike}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"descriptionLikeIgnoreCase != null\">\n-        and lower(RES.DESCRIPTION_) like #{descriptionLikeIgnoreCase}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"priority != null\">\n-        and RES.PRIORITY_ = #{priority}\n-      </if> \n-      <if test=\"minPriority != null\">\n-        and RES.PRIORITY_ &gt;= #{minPriority}\n-      </if> \n-      <if test=\"maxPriority != null\">\n-        and RES.PRIORITY_ &lt;= #{maxPriority}\n-      </if> \n-      <if test=\"assignee != null\">\n-        and RES.ASSIGNEE_ = #{assignee}\n-      </if>\n-      <if test=\"assigneeLike != null\">\n-        and RES.ASSIGNEE_ like #{assigneeLike}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"assigneeLikeIgnoreCase != null\">\n-        and lower(RES.ASSIGNEE_) like #{assigneeLikeIgnoreCase}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"assigneeIds != null &amp;&amp; assigneeIds.size() &gt; 0\">\n-        and RES.ASSIGNEE_ IN\n-        <foreach item=\"assigneeId\" index=\"index\" collection=\"assigneeIds\" \n-                 open=\"(\" separator=\",\" close=\")\">\n-          #{assigneeId}\n-        </foreach>\n-      </if>\n-      <if test=\"owner != null\">\n-        and RES.OWNER_ = #{owner}\n-      </if>\n-      <if test=\"ownerLike != null\">\n-        and RES.OWNER_ like #{ownerLike}${wildcardEscapeClause}\n-      </if>\n-       <if test=\"ownerLikeIgnoreCase != null\">\n-        and lower(RES.OWNER_) like #{ownerLikeIgnoreCase}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"unassigned\">\n-        and RES.ASSIGNEE_ IS NULL\n-      </if>\n-      <if test=\"noDelegationState\">\n-        and RES.DELEGATION_ IS NULL\n-      </if>\n-      <if test=\"delegationState != null\">\n-        and RES.DELEGATION_ = #{delegationStateString}\n-      </if>\n-      <if test=\"processInstanceId != null\">\n-        and RES.PROC_INST_ID_ = #{processInstanceId}\n-      </if>\n-      <if test=\"processInstanceIds != null &amp;&amp; processInstanceIds.size() &gt; 0\">\n-        and RES.PROC_INST_ID_ IN\n-        <foreach item=\"processInstance\" index=\"index\" collection=\"processInstanceIds\" \n-                 open=\"(\" separator=\",\" close=\")\">\n-          #{processInstance}\n-        </foreach>\n-      </if>\n-      <if test=\"processInstanceBusinessKey != null\">\n-        and E.BUSINESS_KEY_ = #{processInstanceBusinessKey}\n-      </if>\n-      <if test=\"processInstanceBusinessKeyLike != null\">\n-        and E.BUSINESS_KEY_ like #{processInstanceBusinessKeyLike}${wildcardEscapeClause}\n-      </if>      \n-      <if test=\"processInstanceBusinessKeyLikeIgnoreCase != null\">\n-        and lower(E.BUSINESS_KEY_) like #{processInstanceBusinessKeyLikeIgnoreCase}${wildcardEscapeClause}\n-      </if>         \n-      <if test=\"executionId != null\">\n-        and RES.EXECUTION_ID_ = #{executionId}\n-      </if>\n-      <if test=\"scopeId != null\">\n-        and RES.SCOPE_ID_ = #{scopeId}\n-      </if>\n-      <if test=\"subScopeId != null\">\n-        and RES.SUB_SCOPE_ID_ = #{subScopeId}\n-      </if>\n-      <if test=\"scopeType != null\">\n-        and RES.SCOPE_TYPE_ = #{scopeType}\n-      </if>\n-      <if test=\"scopeDefinitionId != null\">\n-        and RES.SCOPE_DEFINITION_ID_ = #{scopeDefinitionId}\n-      </if>\n-      <if test=\"createTime != null\">\n-        and RES.CREATE_TIME_ = #{createTime}\n-      </if>\n-      <if test=\"createTimeBefore != null\">\n-        and RES.CREATE_TIME_ &lt; #{createTimeBefore}\n-      </if>\n-      <if test=\"createTimeAfter != null\">\n-        and RES.CREATE_TIME_ &gt; #{createTimeAfter}\n-      </if>\n-      <if test=\"key != null\">\n-        and RES.TASK_DEF_KEY_ = #{key}\n-      </if>\n-      <if test=\"keyLike != null\">\n-        and RES.TASK_DEF_KEY_ like #{keyLike}\n-      </if>\n-      <if test=\"processDefinitionId != null\">\n-        and RES.PROC_DEF_ID_ = #{processDefinitionId}\n-      </if>\n-      <if test=\"taskDefinitionId != null\">\n-        and RES.TASK_DEF_ID_ = #{taskDefinitionId}\n-      </if>\n-      <if test=\"processDefinitionKey != null\">\n-        and D.KEY_ = #{processDefinitionKey}\n-      </if>\n-      <if test=\"processDefinitionKeyLike != null\">\n-        and D.KEY_ like #{processDefinitionKeyLike}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"processDefinitionKeyLikeIgnoreCase != null\">\n-        and lower(D.KEY_) like #{processDefinitionKeyLikeIgnoreCase}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"processDefinitionKeys != null &amp;&amp; processDefinitionKeys.size() &gt; 0\">\n-        and D.KEY_ in\n-        <foreach item=\"item\" index=\"index\" collection=\"processDefinitionKeys\" open=\"(\" separator=\",\" close=\")\">\n-          #{item}\n-        </foreach>\n-      </if>\n-      <if test=\"processDefinitionName != null\">\n-        and D.NAME_ = #{processDefinitionName}\n-      </if>\n-      <if test=\"processDefinitionNameLike != null\">\n-        and D.NAME_ like #{processDefinitionNameLike}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"processCategoryInList != null &amp;&amp; processCategoryInList.size() &gt; 0\">\n-        and D.CATEGORY_ IN\n-        <foreach item=\"processCategory\" index=\"index\" collection=\"processCategoryInList\"\n-                 open=\"(\" separator=\",\" close=\")\">\n-          #{processCategory}\n-        </foreach>\n-      </if>\n-      <if test=\"processCategoryNotInList != null &amp;&amp; processCategoryNotInList.size() &gt; 0\">\n-        and D.CATEGORY_ NOT IN\n-        <foreach item=\"processCategory\" index=\"index\" collection=\"processCategoryNotInList\"\n-                 open=\"(\" separator=\",\" close=\")\">\n-          #{processCategory}\n-        </foreach>\n-      </if>\n-      <if test=\"deploymentId != null &amp;&amp; cmmnDeploymentId == null\">\n-        and DEPLOY_P.DEPLOYMENT_ID_ = #{deploymentId}\n-      </if>\n-      <if test=\"deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0 &amp;&amp; cmmnDeploymentIds == null\">\n-        and DEPLOY_P.DEPLOYMENT_ID_ IN\n-        <foreach item=\"deployment\" index=\"index\" collection=\"deploymentIds\" \n-                 open=\"(\" separator=\",\" close=\")\">\n-          #{deployment}\n-        </foreach>\n-      </if>\n-      <if test=\"cmmnDeploymentId != null &amp;&amp; deploymentId == null\">\n-        and DEPLOY_C.DEPLOYMENT_ID_ = #{cmmnDeploymentId}\n-      </if>\n-      <if test=\"cmmnDeploymentIds != null &amp;&amp; cmmnDeploymentIds.size() &gt; 0 &amp;&amp; deploymentIds == null\">\n-        and DEPLOY_C.DEPLOYMENT_ID_ IN\n-        <foreach item=\"deployment\" index=\"index\" collection=\"cmmnDeploymentIds\" \n-                 open=\"(\" separator=\",\" close=\")\">\n-          #{deployment}\n-        </foreach>\n-      </if>\n-      <if test=\"deploymentId != null &amp;&amp; cmmnDeploymentId != null\">\n-        and (DEPLOY_P.DEPLOYMENT_ID_ = #{deploymentId} or DEPLOY_C.DEPLOYMENT_ID = #{cmmnDeploymentId})\n-      </if>\n-      <if test=\"cmmnDeploymentIds != null &amp;&amp; cmmnDeploymentIds.size() &gt; 0 &amp;&amp; deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0\">\n-        and (\n-            DEPLOY_P.DEPLOYMENT_ID_ IN\n-            <foreach item=\"deployment\" index=\"index\" collection=\"deploymentIds\" open=\"(\" separator=\",\" close=\")\">\n-                #{deployment}\n-            </foreach>\n-            or\n-            DEPLOY_C.DEPLOYMENT_ID_ IN\n-            <foreach item=\"cmmnDeployment\" index=\"index\" collection=\"cmmnDeploymentIds\" open=\"(\" separator=\",\" close=\")\">\n-                #{cmmnDeployment}\n-            </foreach>\n-        )\n-      </if>\n-      <if test=\"dueDate != null\">\n-        and RES.DUE_DATE_ = #{dueDate}\n-      </if>\n-      <if test=\"dueBefore != null\">\n-        and RES.DUE_DATE_ &lt; #{dueBefore}\n-      </if>\n-      <if test=\"dueAfter != null\">\n-        and RES.DUE_DATE_ &gt; #{dueAfter}\n-      </if>\n-      <if test=\"withoutDueDate\">\n-        and RES.DUE_DATE_ is null\n-      </if>\n-      <if test=\"dueDate != null || dueBefore != null || dueAfter != null\">\n-        and RES.DUE_DATE_ is not null\n-      </if>\n-      <if test=\"category != null\">\n-        and RES.CATEGORY_ = #{category}\n-      </if>\n-      <!-- Syncope -->\n-      <if test=\"withFormKey\">\n-        and RES.FORM_KEY_ IS NOT NULL\n-      </if>\n-      <!-- /Syncope -->\n-      <if test=\"excludeSubtasks\">\n-        and RES.PARENT_TASK_ID_ IS NULL\n-      </if>\n-      <if test=\"!bothCandidateAndAssigned &amp;&amp; (candidateUser != null || candidateGroups != null)\">\n-        <if test=\"!ignoreAssigneeValue\">\n-            and RES.ASSIGNEE_ is null\n-        </if>\n-        and exists(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.TYPE_ = 'candidate' and LINK.TASK_ID_ = RES.ID_\n-            and \n-            ( \n-              <if test=\"candidateUser != null\">\n-                LINK.USER_ID_ = #{candidateUser}          \n-              </if>\n-              <if test=\"candidateUser != null &amp;&amp; candidateGroups != null &amp;&amp; candidateGroups.size() &gt; 0\">\n-                or\n-              </if>\n-              <if test=\"candidateGroups != null &amp;&amp; candidateGroups.size() &gt; 0\">\n-                LINK.GROUP_ID_ IN\n-                <foreach item=\"group\" index=\"index\" collection=\"candidateGroups\" \n-                         open=\"(\" separator=\",\" close=\")\">\n-                  #{group}\n-                </foreach>\n-              </if>\n-            )\n-        )\n-      </if>\n-      <if test=\"involvedUser != null\">\n-        and (\n-          exists(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.USER_ID_ = #{involvedUser} and LINK.TASK_ID_ = RES.ID_)\n-          or RES.ASSIGNEE_ = #{involvedUser}\n-          or RES.OWNER_ = #{involvedUser}\n-          )\n-      </if>\n-      <if test=\"involvedGroups != null\">\n-        and EXISTS(\n-          select ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.TASK_ID_ = RES.ID_ and LINK.GROUP_ID_ in\n-          <foreach item=\"involvedGroup\" index=\"index\" collection=\"involvedGroups\" open=\"(\" separator=\",\" close=\")\">\n-              #{involvedGroup}\n-          </foreach>\n-        )\n-      </if>\n-      <foreach item=\"var\" collection=\"queryVariableValues\" index=\"index\">\n-        <choose>\n-            <when test=\"var.operator.equals('EXISTS')\">\n-              and EXISTS (\n-                select ID_ from ${prefix}ACT_RU_VARIABLE where NAME_ = #{var.name}\n-                <if test=\"!var.local\">\n-                    and RES.PROC_INST_ID_ = PROC_INST_ID_ and TASK_ID_ is null\n-                </if>\n-                <if test=\"var.local\">\n-                    and RES.ID_ = TASK_ID_ \n-                </if>\n-              )\n-            </when>\n-            <when test=\"var.operator.equals('NOT_EXISTS')\">\n-              and NOT EXISTS (\n-                select ID_ from ${prefix}ACT_RU_VARIABLE where NAME_ = #{var.name}\n-                <if test=\"!var.local\">\n-                    and RES.PROC_INST_ID_ = PROC_INST_ID_ and TASK_ID_ is null\n-                </if>\n-                <if test=\"var.local\">\n-                    and RES.ID_ = TASK_ID_ \n-                </if>\n-              )\n-            </when>\n-            <otherwise>\n-                <if test=\"!var.local\">\n-                  <!-- When process instance variable is queried for, taskId should be null -->\n-                  and A${index}.TASK_ID_ is null\n-                </if>\n-                <if test=\"var.name != null\">\n-                  <!-- Match-all variable-names when name is null -->\n-                  and A${index}.NAME_= #{var.name}\n-                </if>\n-                <if test=\"var.name == null\">\n-                  and A${index}.NAME_ is not null\n-                </if>\n-                <if test=\"!var.type.equals('null')\">\n-                  and A${index}.TYPE_ = #{var.type}\n-                </if>\n-                \n-                <!-- Variable value -->\n-                <if test=\"var.textValue != null &amp;&amp; var.longValue == null &amp;&amp; var.doubleValue == null\">\n-                  <choose>\n-                    <when test=\"var.operator.equals('EQUALS_IGNORE_CASE') || var.operator.equals('NOT_EQUALS_IGNORE_CASE') || var.operator.equals('LIKE_IGNORE_CASE')\">\n-                      and lower(A${index}.TEXT_)\n-                    </when>\n-                    <otherwise>\n-                      and A${index}.TEXT_\n-                    </otherwise>\n-                  </choose> \n-                  <choose>\n-                      <when test=\"var.operator.equals('LIKE') || var.operator.equals('LIKE_IGNORE_CASE')\">LIKE</when>\n-                      <otherwise><include refid=\"executionVariableOperator\" /></otherwise>\n-                  </choose>          \n-                  #{var.textValue}\n-                  <choose>\n-        \t\t\t<when test=\"var.operator.equals('LIKE') || var.operator.equals('LIKE_IGNORE_CASE')\">${wildcardEscapeClause}</when>\n-        \t\t  </choose>\n-                </if>\n-                <if test=\"var.textValue2 != null\">\n-                  and A${index}.TEXT2_ \n-                  <choose>\n-                    <when test=\"var.operator.equals('LIKE')\">LIKE</when>\n-                    <otherwise><include refid=\"executionVariableOperator\" /></otherwise>\n-                  </choose>          \n-                  #{var.textValue2}\n-                  <choose>\n-        \t\t\t<when test=\"var.operator.equals('LIKE')\">${wildcardEscapeClause}</when>\n-        \t\t  </choose>\n-                </if>\n-                <if test=\"var.longValue != null\">\n-                  and A${index}.LONG_\n-                  <include refid=\"executionVariableOperator\" />\n-                  #{var.longValue}\n-                </if>\n-                <if test=\"var.doubleValue != null\">\n-                  and A${index}.DOUBLE_ \n-                  <include refid=\"executionVariableOperator\" />\n-                  #{var.doubleValue}\n-                </if>\n-                <!-- Null variable type -->\n-                <if test=\"var.textValue == null &amp;&amp; var.textValue2 == null &amp;&amp; var.longValue == null &amp;&amp; var.doubleValue == null\">\n-                  <choose>\n-                    <when test=\"var.operator.equals('NOT_EQUALS')\">\n-                      and (A${index}.TEXT_ is not null or A${index}.TEXT2_ is not null or A${index}.LONG_ is not null or A${index}.DOUBLE_ is not null or A${index}.BYTEARRAY_ID_ is not null)\n-                    </when>\n-                    <otherwise>\n-                      and A${index}.TEXT_ is null and A${index}.TEXT2_ is null and A${index}.LONG_ is null and A${index}.DOUBLE_ is null and A${index}.BYTEARRAY_ID_ is null\n-                    </otherwise>\n-                  </choose>          \n-                </if>\n-            </otherwise>\n-        </choose>\n-      </foreach>\n-      <if test=\"suspensionState != null\">\n-        <if test=\"suspensionState.stateCode == 1\">\n-            and RES.SUSPENSION_STATE_ = 1\n-        </if>\n-        <if test=\"suspensionState.stateCode == 2\">\n-            and RES.SUSPENSION_STATE_ = 2\n-        </if>\n-      </if>\n-      <if test=\"tenantId != null\">\n-        and RES.TENANT_ID_ = #{tenantId}\n-      </if>\n-      <if test=\"tenantIdLike != null\">\n-        and RES.TENANT_ID_ like #{tenantIdLike}${wildcardEscapeClause}\n-      </if>\n-      <if test=\"withoutTenantId\">\n-        and (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)\n-      </if>\n-      <choose>\n-        <when test=\"bothCandidateAndAssigned\">\n-          <!-- if dbIdentityUsed set true in process engine configuration -->\n-          <if test=\"userIdForCandidateAndAssignee != null\">\n-            <if test=\"candidateGroups == null\">\n-              and (RES.ASSIGNEE_ = #{userIdForCandidateAndAssignee}\n-                or (\n-                <if test=\"!ignoreAssigneeValue\">\n-                    RES.ASSIGNEE_ is null and\n-                </if>\n-                exists(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.TASK_ID_ = RES.ID_\n-                and (LINK.USER_ID_ = #{userIdForCandidateAndAssignee}\n-                or LINK.GROUP_ID_ IN (select g.GROUP_ID_ from ${prefix}ACT_ID_MEMBERSHIP g where g.USER_ID_ = #{userIdForCandidateAndAssignee} )))))\n-            </if>\n-          </if>\n-          <!-- if dbIdentityUsed set false in process engine configuration of using custom session factory of GroupIdentityManager -->\n-          <if test=\"candidateGroups != null\">\n-            and (RES.ASSIGNEE_ = #{userIdForCandidateAndAssignee}\n-              or (\n-              <if test=\"!ignoreAssigneeValue\">\n-                RES.ASSIGNEE_ is null and\n-              </if>\n-                exists(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.TASK_ID_ = RES.ID_\n-                and LINK.TYPE_ = 'candidate' and (LINK.USER_ID_ = #{userIdForCandidateAndAssignee}\n-                <if test=\"candidateGroups.size() &gt; 0\">\n-                    or LINK.GROUP_ID_ IN\n-                    <foreach item=\"group\" index=\"index\" collection=\"candidateGroups\" open=\"(\" separator=\",\" close=\")\">\n-                        #{group}\n-                    </foreach>\n-                </if>\n-                ))))\n-          </if>\n-        </when>\n-      </choose>\n-      <foreach item=\"orQueryObject\" index=\"orIndex\" collection=\"orQueryObjects\">\n-        and \n-        <trim prefix=\"(\" prefixOverrides=\"OR\" suffix=\")\">\n-            <if test=\"orQueryObject.taskId != null\">\n-              RES.ID_ = #{orQueryObject.taskId}\n-            </if>\n-            <if test=\"orQueryObject.name != null\">\n-              or RES.NAME_ = #{orQueryObject.name}\n-            </if>\n-            <if test=\"orQueryObject.nameLike != null\">\n-              or RES.NAME_ like #{orQueryObject.nameLike}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.nameLikeIgnoreCase != null\">\n-              or lower(RES.NAME_) like #{orQueryObject.nameLikeIgnoreCase}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.nameList != null &amp;&amp; orQueryObject.nameList.size() &gt; 0\">\n-              or RES.NAME_ IN\n-              <foreach item=\"name\" index=\"index\" collection=\"orQueryObject.nameList\"\n-                      open=\"(\" separator=\",\" close=\")\">\n-                #{name}\n-              </foreach>\n-            </if>\n-            <if test=\"orQueryObject.nameListIgnoreCase != null &amp;&amp; orQueryObject.nameListIgnoreCase.size() &gt; 0\">\n-              or lower(RES.NAME_) IN\n-              <foreach item=\"name\" index=\"index\" collection=\"orQueryObject.nameListIgnoreCase\"\n-                       open=\"(\" separator=\",\" close=\")\">\n-                #{name}\n-              </foreach>\n-            </if>\n-            <if test=\"orQueryObject.description != null\">\n-              or RES.DESCRIPTION_ = #{orQueryObject.description}\n-            </if>\n-            <if test=\"orQueryObject.descriptionLike != null\">\n-              or RES.DESCRIPTION_ like #{orQueryObject.descriptionLike}${wildcardEscapeClause}\n-            </if>\n-             <if test=\"orQueryObject.descriptionLikeIgnoreCase != null\">\n-              or lower(RES.DESCRIPTION_) like #{orQueryObject.descriptionLikeIgnoreCase}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.priority != null\">\n-              or RES.PRIORITY_ = #{orQueryObject.priority}\n-            </if> \n-            <if test=\"orQueryObject.minPriority != null\">\n-              or RES.PRIORITY_ &gt;= #{orQueryObject.minPriority}\n-            </if> \n-            <if test=\"orQueryObject.maxPriority != null\">\n-              or RES.PRIORITY_ &lt;= #{orQueryObject.maxPriority}\n-            </if> \n-            <if test=\"orQueryObject.assignee != null\">\n-              or RES.ASSIGNEE_ = #{orQueryObject.assignee}\n-            </if>\n-            <if test=\"orQueryObject.assigneeLike != null\">\n-              or RES.ASSIGNEE_ like #{orQueryObject.assigneeLike}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.assigneeLikeIgnoreCase != null\">\n-              or lower(RES.ASSIGNEE_) like #{orQueryObject.assigneeLikeIgnoreCase}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.assigneeIds != null &amp;&amp; orQueryObject.assigneeIds.size() &gt; 0\">\n-\t\t      or RES.ASSIGNEE_ IN\n-\t\t      <foreach item=\"assigneeId\" index=\"index\" collection=\"orQueryObject.assigneeIds\" \n-\t\t               open=\"(\" separator=\",\" close=\")\">\n-\t\t        #{assigneeId}\n-\t\t      </foreach>\n-\t\t    </if>\n-            <if test=\"orQueryObject.owner != null\">\n-              or RES.OWNER_ = #{orQueryObject.owner}\n-            </if>\n-            <if test=\"orQueryObject.ownerLike != null\">\n-              or RES.OWNER_ like #{orQueryObject.ownerLike}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.ownerLikeIgnoreCase != null\">\n-              or RES.OWNER_ like #{orQueryObject.ownerLikeIgnoreCase}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.unassigned\">\n-              or RES.ASSIGNEE_ IS NULL\n-            </if>\n-            <if test=\"orQueryObject.noDelegationState\">\n-              or RES.DELEGATION_ IS NULL\n-            </if>\n-            <if test=\"orQueryObject.delegationState != null\">\n-              or RES.DELEGATION_ = #{orQueryObject.delegationStateString}\n-            </if>\n-            <if test=\"orQueryObject.processInstanceId != null\">\n-              or RES.PROC_INST_ID_ = #{orQueryObject.processInstanceId}\n-            </if>\n-            <if test=\"orQueryObject.processInstanceIds != null &amp;&amp; orQueryObject.processInstanceIds.size() &gt; 0\">\n-              or RES.PROC_INST_ID_ IN\n-              <foreach item=\"processInstance\" index=\"index\" collection=\"orQueryObject.processInstanceIds\" \n-                       open=\"(\" separator=\",\" close=\")\">\n-                #{processInstance}\n-              </foreach>\n-            </if>\n-            <if test=\"orQueryObject.processInstanceBusinessKey != null\">\n-              or E_OR${orIndex}.BUSINESS_KEY_ = #{orQueryObject.processInstanceBusinessKey}\n-            </if>\n-            <if test=\"orQueryObject.processInstanceBusinessKeyLike != null\">\n-              or E_OR${orIndex}.BUSINESS_KEY_ like #{orQueryObject.processInstanceBusinessKeyLike}${wildcardEscapeClause}\n-            </if>      \n-            <if test=\"orQueryObject.processInstanceBusinessKeyLikeIgnoreCase != null\">\n-              or lower(E.BUSINESS_KEY_) like #{orQueryObject.processInstanceBusinessKeyLikeIgnoreCase}${wildcardEscapeClause}\n-            </if>         \n-            <if test=\"orQueryObject.executionId != null\">\n-              or RES.EXECUTION_ID_ = #{orQueryObject.executionId}\n-            </if>\n-            <if test=\"orQueryObject.scopeId != null\">\n-              and RES.SCOPE_ID_ = #{orQueryObject.scopeId}\n-            </if>\n-            <if test=\"orQueryObject.subScopeId != null\">\n-              and RES.SUB_SCOPE_ID_ = #{orQueryObject.subScopeId}\n-            </if>\n-            <if test=\"orQueryObject.scopeType != null\">\n-              and RES.SCOPE_TYPE_ = #{orQueryObject.scopeType}\n-            </if>\n-            <if test=\"orQueryObject.scopeDefinitionId != null\">\n-              and RES.SCOPE_DEFINITION_ID_ = #{orQueryObject.scopeDefinitionId}\n-            </if>\n-            <if test=\"orQueryObject.createTime != null\">\n-              or RES.CREATE_TIME_ = #{orQueryObject.createTime}\n-            </if>\n-            <if test=\"orQueryObject.createTimeBefore != null\">\n-              or RES.CREATE_TIME_ &lt; #{orQueryObject.createTimeBefore}\n-            </if>\n-            <if test=\"orQueryObject.createTimeAfter != null\">\n-              or RES.CREATE_TIME_ &gt; #{orQueryObject.createTimeAfter}\n-            </if>\n-            <if test=\"orQueryObject.key != null\">\n-              or RES.TASK_DEF_KEY_ = #{orQueryObject.key}\n-            </if>\n-            <if test=\"orQueryObject.keyLike != null\">\n-              or RES.TASK_DEF_KEY_ like #{orQueryObject.keyLike}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.processDefinitionId != null\">\n-              or RES.PROC_DEF_ID_ = #{orQueryObject.processDefinitionId}\n-            </if>\n-            <if test=\"orQueryObject.taskDefinitionId != null\">\n-              or RES.TASK_DEF_ID_ = #{orQueryObject.taskDefinitionId}\n-            </if>\n-            <if test=\"orQueryObject.processDefinitionKey != null\">\n-              or D_OR${orIndex}.KEY_ = #{orQueryObject.processDefinitionKey}\n-            </if>\n-            <if test=\"orQueryObject.processDefinitionKeyLike != null\">\n-              or D_OR${orIndex}.KEY_ like #{orQueryObject.processDefinitionKeyLike}${wildcardEscapeClause}\n-            </if>\n-             <if test=\"orQueryObject.processDefinitionKeyLikeIgnoreCase != null\">\n-              or lower(D_OR${orIndex}.KEY_) like #{orQueryObject.processDefinitionKeyLikeIgnoreCase}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.processDefinitionKeys != null &amp;&amp; orQueryObject.processDefinitionKeys.size() &gt; 0\">\n-              or D_OR${orIndex}.KEY_ in\n-              <foreach item=\"item\" index=\"index\" collection=\"orQueryObject.processDefinitionKeys\" open=\"(\" separator=\",\" close=\")\">\n-                #{item}\n-              </foreach>\n-            </if>\n-            <if test=\"orQueryObject.processDefinitionName != null\">\n-              or D_OR${orIndex}.NAME_ = #{orQueryObject.processDefinitionName}\n-            </if>\n-            <if test=\"orQueryObject.processDefinitionNameLike != null\">\n-              or D_OR${orIndex}.NAME_ like #{orQueryObject.processDefinitionNameLike}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.processCategoryInList != null &amp;&amp; orQueryObject.processCategoryInList.size() &gt; 0\">\n-              or D_OR${orIndex}.CATEGORY_ IN\n-              <foreach item=\"processCategory\" index=\"index\" collection=\"orQueryObject.processCategoryInList\"\n-                       open=\"(\" separator=\",\" close=\")\">\n-                #{processCategory}\n-              </foreach>\n-            </if>\n-            <if test=\"orQueryObject.processCategoryNotInList != null &amp;&amp; orQueryObject.processCategoryNotInList.size() &gt; 0\">\n-              or D_OR${orIndex}.CATEGORY_ NOT IN\n-              <foreach item=\"processCategory\" index=\"index\" collection=\"orQueryObject.processCategoryNotInList\"\n-                       open=\"(\" separator=\",\" close=\")\">\n-                #{processCategory}\n-              </foreach>\n-            </if>\n-            <if test=\"orQueryObject.deploymentId != null\">\n-              or DEPLOY_P_OR${orIndex}.DEPLOYMENT_ID_ = #{orQueryObject.deploymentId}\n-            </if>\n-            <if test=\"orQueryObject.deploymentIds != null &amp;&amp; orQueryObject.deploymentIds.size() &gt; 0\">\n-              or DEPLOY_P_OR${orIndex}.DEPLOYMENT_ID_ IN\n-              <foreach item=\"deployment\" index=\"index\" collection=\"orQueryObject.deploymentIds\" \n-                       open=\"(\" separator=\",\" close=\")\">\n-                #{deployment}\n-              </foreach>\n-            </if>\n-            <if test=\"orQueryObject.cmmnDeploymentId != null\">\n-              or DEPLOY_C_OR${orIndex}.DEPLOYMENT_ID_ = #{orQueryObject.cmmnDeploymentId}\n-            </if>\n-            <if test=\"orQueryObject.cmmnDeploymentIds != null &amp;&amp; orQueryObject.cmmnDeploymentIds.size() &gt; 0\">\n-              or DEPLOY_C_OR${orIndex}.DEPLOYMENT_ID_ IN\n-              <foreach item=\"deployment\" index=\"index\" collection=\"orQueryObject.cmmnDeploymentIds\" \n-                       open=\"(\" separator=\",\" close=\")\">\n-                #{deployment}\n-              </foreach>\n-            </if>\n-            <if test=\"orQueryObject.dueDate != null\">\n-              or RES.DUE_DATE_ = #{orQueryObject.dueDate}\n-            </if>\n-            <if test=\"orQueryObject.dueBefore != null\">\n-              or (RES.DUE_DATE_ &lt; #{orQueryObject.dueBefore} and RES.DUE_DATE_ is not null)\n-            </if>\n-            <if test=\"orQueryObject.dueAfter != null\">\n-              or (RES.DUE_DATE_ &gt; #{orQueryObject.dueAfter} and RES.DUE_DATE_ is not null)\n-            </if>\n-            <if test=\"orQueryObject.withoutDueDate\">\n-              or RES.DUE_DATE_ is null\n-            </if>\n-            <if test=\"orQueryObject.category != null\">\n-              or RES.CATEGORY_ = #{orQueryObject.category}\n-            </if>\n-            <if test=\"orQueryObject.excludeSubtasks\">\n-              or RES.PARENT_TASK_ID_ IS NULL\n-            </if>\n-            \n-            <if test=\"!orQueryObject.bothCandidateAndAssigned &amp;&amp; (orQueryObject.candidateUser != null || orQueryObject.candidateGroups != null)\">\n-              or (\n-                <if test=\"!orQueryObject.ignoreAssigneeValue\">\n-                    RES.ASSIGNEE_ is null and\n-                </if>\n-                exists(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.TYPE_ = 'candidate' and LINK.TASK_ID_ = RES.ID_\n-                    and \n-                    ( \n-                    <if test=\"orQueryObject.candidateUser != null\">\n-                      LINK.USER_ID_ = #{orQueryObject.candidateUser}          \n-                    </if>\n-                    <if test=\"orQueryObject.candidateUser != null &amp;&amp; orQueryObject.candidateGroups != null &amp;&amp; orQueryObject.candidateGroups.size() &gt; 0\">\n-                      or\n-                    </if>\n-                    <if test=\"orQueryObject.candidateGroups != null &amp;&amp; orQueryObject.candidateGroups.size() &gt; 0\">\n-                      LINK.GROUP_ID_ IN\n-                      <foreach item=\"group\" index=\"index\" collection=\"orQueryObject.candidateGroups\" \n-                               open=\"(\" separator=\",\" close=\")\">\n-                        #{group}\n-                      </foreach>\n-                    </if>\n-                    )\n-                )\n-              )\n-            </if>\n-            <if test=\"orQueryObject.involvedUser != null\">\n-              or (\n-                exists(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.USER_ID_ = #{orQueryObject.involvedUser} and LINK.TASK_ID_ = RES.ID_)\n-                or RES.ASSIGNEE_ = #{orQueryObject.involvedUser}\n-                or RES.OWNER_ = #{orQueryObject.involvedUser}\n-                )\n-            </if>\n-            <if test=\"orQueryObject.involvedGroups != null\">\n-              or (\n-                EXISTS(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.TASK_ID_ = RES.ID_ and LINK.GROUP_ID_ in\n-                <foreach item=\"involvedGroup\" index=\"index\" collection=\"orQueryObject.involvedGroups\" open=\"(\" separator=\",\" close=\")\">\n-                    #{involvedGroup}\n-                </foreach>\n-                )\n-              )\n-            </if>\n-            <foreach item=\"var\" collection=\"orQueryObject.queryVariableValues\" index=\"index\">\n-              or \n-              <trim prefix=\"(\" prefixOverrides=\"AND\" suffix=\")\">\n-                <choose>\n-                    <when test=\"var.operator.equals('EXISTS')\">\n-                        and EXISTS (\n-                            select ID_ from ${prefix}ACT_RU_VARIABLE where NAME_ = #{var.name}\n-                        <if test=\"!var.local\">\n-                            and RES.PROC_INST_ID_ = PROC_INST_ID_ and TASK_ID_ is null\n-                        </if>\n-                        <if test=\"var.local\">\n-                            and RES.ID_ = TASK_ID_ \n-                        </if>\n-                        )\n-                    </when>\n-                    <when test=\"var.operator.equals('NOT_EXISTS')\">\n-                        and NOT EXISTS (\n-                            select ID_ from ${prefix}ACT_RU_VARIABLE where NAME_ = #{var.name}\n-                        <if test=\"!var.local\">\n-                            and RES.PROC_INST_ID_ = PROC_INST_ID_ and TASK_ID_ is null\n-                        </if>\n-                        <if test=\"var.local\">\n-                            and RES.ID_ = TASK_ID_ \n-                        </if>\n-                        )\n-                    </when>\n-                    <otherwise>\n-                      <choose>\n-                        <when test=\"!var.local\">\n-                          <bind name=\"orLocal\" value=\"''\" />\n-                          <!-- When process instance variable is queried for, taskId should be null -->\n-                          and A_OR${orIndex}.TASK_ID_ is null\n-                        </when>\n-                        <otherwise>\n-                          <bind name=\"orLocal\" value=\"'L_'\" />\n-                        </otherwise>\n-                      </choose>\n-                      <if test=\"var.name != null\">\n-                        <!-- Match-all variable-names when name is null -->\n-                        and A_${orLocal}OR${orIndex}.NAME_= #{var.name}\n-                      </if>\n-                      <if test=\"var.name == null\">\n-                        and A_${orLocal}OR${orIndex}.NAME_ is not null\n-                      </if>\n-                      <if test=\"!var.type.equals('null')\">\n-                        and A_${orLocal}OR${orIndex}.TYPE_ = #{var.type}\n-                      </if>\n-                      <!-- Variable value -->\n-                      <if test=\"var.textValue != null &amp;&amp; var.longValue == null &amp;&amp; var.doubleValue == null\">\n-                        <choose>\n-                          <when test=\"var.operator.equals('EQUALS_IGNORE_CASE') || var.operator.equals('NOT_EQUALS_IGNORE_CASE') || var.operator.equals('LIKE_IGNORE_CASE')\">\n-                            and lower(A_${orLocal}OR${orIndex}.TEXT_)\n-                          </when>\n-                          <otherwise>\n-                            and A_${orLocal}OR${orIndex}.TEXT_\n-                          </otherwise>\n-                        </choose> \n-                        <choose>\n-                            <when test=\"var.operator.equals('LIKE') || var.operator.equals('LIKE_IGNORE_CASE')\">LIKE</when>\n-                            <otherwise><include refid=\"executionVariableOperator\" /></otherwise>\n-                        </choose>          \n-                        #{var.textValue}\n-                        <choose>\n-                            <when test=\"var.operator.equals('LIKE') || var.operator.equals('LIKE_IGNORE_CASE')\">${wildcardEscapeClause}</when>\n-                        </choose>\n-                      </if>\n-                      <if test=\"var.textValue2 != null\">\n-                        and A_${orLocal}OR${orIndex}.TEXT2_\n-                        <choose>\n-                          <when test=\"var.operator.equals('LIKE')\">LIKE</when>\n-                          <otherwise><include refid=\"executionVariableOperator\" /></otherwise>\n-                        </choose>          \n-                        #{var.textValue2}\n-                        <choose>\n-                          <when test=\"var.operator.equals('LIKE')\">${wildcardEscapeClause}</when>\n-                        </choose>\n-                      </if>\n-                      <if test=\"var.longValue != null\">\n-                        and A_${orLocal}OR${orIndex}.LONG_\n-                        <include refid=\"executionVariableOperator\" />\n-                        #{var.longValue}\n-                      </if>\n-                      <if test=\"var.doubleValue != null\">\n-                        and A_${orLocal}OR${orIndex}.DOUBLE_\n-                        <include refid=\"executionVariableOperator\" />\n-                        #{var.doubleValue}\n-                      </if>\n-                      <!-- Null variable type -->\n-                      <if test=\"var.textValue == null &amp;&amp; var.textValue2 == null &amp;&amp; var.longValue == null &amp;&amp; var.doubleValue == null\">\n-                        <choose>\n-                          <when test=\"var.operator.equals('NOT_EQUALS')\">\n-                            and (A_${orLocal}OR${orIndex}.TEXT_ is not null or A_${orLocal}OR${orIndex}.TEXT2_ is not null or A_${orLocal}OR${orIndex}.LONG_ is not null or A_${orLocal}OR${orIndex}.DOUBLE_ is not null or A_${orLocal}OR${orIndex}.BYTEARRAY_ID_ is not null)\n-                          </when>\n-                          <otherwise>\n-                            and A_${orLocal}OR${orIndex}.TEXT_ is null and A_${orLocal}OR${orIndex}.TEXT2_ is null and A_${orLocal}OR${orIndex}.LONG_ is null and A_${orLocal}OR${orIndex}.DOUBLE_ is null and A_${orLocal}OR${orIndex}.BYTEARRAY_ID_ is null\n-                          </otherwise>\n-                        </choose>          \n-                      </if>\n-                    </otherwise>\n-                </choose>\n-              </trim>\n-            </foreach>\n-            <if test=\"orQueryObject.suspensionState != null\">\n-              <if test=\"orQueryObject.suspensionState.stateCode == 1\">\n-                  or RES.SUSPENSION_STATE_ = 1\n-              </if>\n-              <if test=\"orQueryObject.suspensionState.stateCode == 2\">\n-                  or RES.SUSPENSION_STATE_ = 2\n-              </if>\n-            </if>\n-            <if test=\"orQueryObject.tenantId != null\">\n-              or RES.TENANT_ID_ = #{orQueryObject.tenantId}\n-            </if>\n-            <if test=\"orQueryObject.tenantIdLike != null\">\n-              or RES.TENANT_ID_ like #{orQueryObject.tenantIdLike}${wildcardEscapeClause}\n-            </if>\n-            <if test=\"orQueryObject.withoutTenantId\">\n-              or (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)\n-            </if>\n-            <choose>\n-              <when test=\"orQueryObject.bothCandidateAndAssigned\">\n-                <!-- if dbIdentityUsed set true in process engine configuration -->\n-                <if test=\"orQueryObject.userIdForCandidateAndAssignee != null\">\n-                  <if test=\"orQueryObject.candidateGroups == null\">\n-                    or (RES.ASSIGNEE_ = #{orQueryObject.userIdForCandidateAndAssignee}\n-                        or (\n-                        <if test=\"!orQueryObject.ignoreAssigneeValue\">\n-                            RES.ASSIGNEE_ is null and\n-                        </if>\n-                        exists(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.TASK_ID_ = RES.ID_\n-                        and (LINK.USER_ID_ = #{orQueryObject.userIdForCandidateAndAssignee}\n-                        or LINK.GROUP_ID_ IN (select g.GROUP_ID_ from ${prefix}ACT_ID_MEMBERSHIP g where g.USER_ID_ = #{orQueryObject.userIdForCandidateAndAssignee} )))))\n-                  </if>\n-                </if>\n-                <!-- if dbIdentityUsed set false in process engine configuration of using custom session factory of GroupIdentityManager -->\n-                <if test=\"orQueryObject.candidateGroups != null\">\n-                  or (RES.ASSIGNEE_ = #{orQueryObject.userIdForCandidateAndAssignee}\n-                  or (\n-                    <if test=\"!orQueryObject.ignoreAssigneeValue\">\n-                        RES.ASSIGNEE_ is null and\n-                    </if>\n-                    exists(select LINK.ID_ from ${prefix}ACT_RU_IDENTITYLINK LINK where LINK.TASK_ID_ = RES.ID_\n-                    and LINK.TYPE_ = 'candidate' and (LINK.USER_ID_ = #{orQueryObject.userIdForCandidateAndAssignee}\n-                    <if test=\"orQueryObject.candidateGroups.size() &gt; 0\">\n-                        or LINK.GROUP_ID_ IN\n-                        <foreach item=\"group\" index=\"index\" collection=\"orQueryObject.candidateGroups\" open=\"(\" separator=\",\" close=\")\">\n-                            #{group}\n-                        </foreach>\n-                    </if>\n-                  ))))\n-                </if>\n-              </when>\n-            </choose>\n-          </trim>\n-        </foreach>\n-     </where>\n-  </sql>\n-  \n-  <sql id=\"executionVariableOperator\">\n-    <choose>\n-      <when test=\"var.operator.equals('EQUALS')\">=</when>\n-      <when test=\"var.operator.equals('EQUALS_IGNORE_CASE')\">=</when>\n-      <when test=\"var.operator.equals('NOT_EQUALS')\">&lt;&gt;</when>\n-      <when test=\"var.operator.equals('NOT_EQUALS_IGNORE_CASE')\">&lt;&gt;</when>\n-      <when test=\"var.operator.equals('GREATER_THAN')\">&gt;</when>\n-      <when test=\"var.operator.equals('GREATER_THAN_OR_EQUAL')\">&gt;=</when>\n-      <when test=\"var.operator.equals('LESS_THAN')\">&lt;</when>\n-      <when test=\"var.operator.equals('LESS_THAN_OR_EQUAL')\">&lt;=</when>\n-   </choose>\n-  </sql>  \n-\n-  <select id=\"selectTaskByNativeQuery\" parameterType=\"java.util.Map\" resultMap=\"taskResultMap\">\n-  \t<include refid=\"org.flowable.task.service.db.common.selectByNativeQuery\"/>\n-  </select>\n-  \n-  <select id=\"selectTaskCountByNativeQuery\" parameterType=\"java.util.Map\" resultType=\"long\">\n-     ${sql}\n-  </select>\n-\n-</mapper>\n\\ No newline at end of file"},{"sha":"1dd68886a3232838a2df77c6579acc1ab0699f43","filename":"ext/flowable/flowable-bpmn/src/main/resources/org/apache/syncope/ext/flowable/mappings.xml","status":"removed","additions":0,"deletions":73,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eaf70b1fbec40958ab917da88ff0797bd4abe09f/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fflowable%2Fmappings.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eaf70b1fbec40958ab917da88ff0797bd4abe09f/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fflowable%2Fmappings.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fflowable%2Fmappings.xml?ref=eaf70b1fbec40958ab917da88ff0797bd4abe09f","patch":"@@ -1,73 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n-\n-<configuration>\n-\n-    <settings>\n-        <setting name=\"lazyLoadingEnabled\" value=\"false\" />\n-    </settings>\n-    <typeAliases>\n-        <typeAlias type=\"org.flowable.engine.impl.persistence.ByteArrayRefTypeHandler\" alias=\"ByteArrayRefTypeHandler\" />\n-        <typeAlias type=\"org.flowable.variable.service.impl.persistence.VariableByteArrayRefTypeHandler\" alias=\"VariableByteArrayRefTypeHandler\" />\n-        <typeAlias type=\"org.flowable.job.service.impl.persistence.JobByteArrayRefTypeHandler\" alias=\"JobByteArrayRefTypeHandler\" />\n-    </typeAliases>\n-    <typeHandlers>\n-        <typeHandler handler=\"ByteArrayRefTypeHandler\" javaType=\"org.flowable.engine.impl.persistence.entity.ByteArrayRef\" jdbcType=\"VARCHAR\" />\n-        <typeHandler handler=\"VariableByteArrayRefTypeHandler\" javaType=\"org.flowable.variable.service.impl.persistence.entity.VariableByteArrayRef\" jdbcType=\"VARCHAR\" />\n-        <typeHandler handler=\"JobByteArrayRefTypeHandler\" javaType=\"org.flowable.job.service.impl.persistence.entity.JobByteArrayRef\" jdbcType=\"VARCHAR\" />\n-    </typeHandlers>\n-\n-    <mappers>\n-        <mapper resource=\"org/flowable/db/mapping/common.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/Attachment.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/ByteArray.xml\" />\n-        <mapper resource=\"org/flowable/variable/service/db/mapping/common.xml\" />\n-        <mapper resource=\"org/flowable/variable/service/db/mapping/entity/ByteArray.xml\" />\n-        <mapper resource=\"org/flowable/job/service/db/mapping/entity/ByteArray.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/Comment.xml\" />\n-        <mapper resource=\"org/flowable/job/service/db/mapping/entity/DeadLetterJob.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/Deployment.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/Execution.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/HistoricActivityInstance.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/HistoricDetail.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/HistoricProcessInstance.xml\" />\n-        <mapper resource=\"org/flowable/variable/service/db/mapping/entity/HistoricVariableInstance.xml\" />\n-        <mapper resource=\"org/flowable/task/service/db/mapping/entity/HistoricTaskInstance.xml\" />\n-        <mapper resource=\"org/flowable/identitylink/service/db/mapping/entity/HistoricIdentityLink.xml\" />\n-        <mapper resource=\"org/flowable/job/service/db/mapping/entity/HistoryJob.xml\" />\n-        <mapper resource=\"org/flowable/identitylink/service/db/mapping/entity/IdentityLink.xml\" />\n-        <mapper resource=\"org/flowable/job/service/db/mapping/entity/Job.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/Model.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/ProcessDefinition.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/ProcessDefinitionInfo.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/Property.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/Resource.xml\" />\n-        <mapper resource=\"org/flowable/job/service/db/mapping/entity/SuspendedJob.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/TableData.xml\" />\n-        <mapper resource=\"org/flowable/task/service/db/mapping/common.xml\" />\n-        <mapper resource=\"org/apache/syncope/ext/flowable/Task.xml\" />\n-        <mapper resource=\"org/flowable/job/service/db/mapping/entity/TimerJob.xml\" />\n-        <mapper resource=\"org/flowable/variable/service/db/mapping/entity/VariableInstance.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/EventSubscription.xml\" />\n-        <mapper resource=\"org/flowable/db/mapping/entity/EventLogEntry.xml\" />\n-    </mappers>\n-\n-</configuration>\n\\ No newline at end of file"},{"sha":"aebf4950151e20a07e5c03a832a8a0198259df1b","filename":"ext/flowable/flowable-bpmn/src/main/resources/workflowFlowableContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml?ref=e9b8d95a6823da542d6c41f9b979a4c4c88cab21","patch":"@@ -40,7 +40,7 @@ under the License.\n \n   <bean id=\"syncopeFormHandlerHelper\" class=\"org.apache.syncope.core.flowable.support.SyncopeFormHandlerHelper\"/>\n \n-  <bean class=\"org.apache.syncope.core.flowable.support.DomainProcessEngineConfiguration\" scope=\"prototype\">\n+  <bean class=\"org.flowable.spring.SpringProcessEngineConfiguration\" scope=\"prototype\">\n     <property name=\"databaseSchemaUpdate\" value=\"true\"/>\n \n     <property name=\"jpaHandleTransaction\" value=\"true\"/>"},{"sha":"7d673dd859c1df18c44cacf69b9f72ef5664912e","filename":"pom.xml","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9b8d95a6823da542d6c41f9b979a4c4c88cab21/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=e9b8d95a6823da542d6c41f9b979a4c4c88cab21","patch":"@@ -408,7 +408,7 @@ under the License.\n \n     <groovy.version>3.0.0-alpha-4</groovy.version>\n \n-    <flowable.version>6.4.0</flowable.version>\n+    <flowable.version>6.4.1</flowable.version>\n \n     <camel.version>2.23.0</camel.version>\t\n \n@@ -884,6 +884,11 @@ under the License.\n         <version>${joda.version}</version>\n       </dependency>\n \n+      <dependency>\n+        <groupId>org.springframework</groupId>\n+        <artifactId>spring-beans</artifactId>\n+        <version>${spring.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.springframework</groupId>\n         <artifactId>spring-context</artifactId>\n@@ -1160,6 +1165,10 @@ under the License.\n         <artifactId>flowable-spring</artifactId>\n         <version>${flowable.version}</version>\n         <exclusions>\n+          <exclusion>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-beans</artifactId>\n+          </exclusion>\n           <exclusion>\n             <groupId>commons-dbcp</groupId>\n             <artifactId>commons-dbcp</artifactId>"}]}