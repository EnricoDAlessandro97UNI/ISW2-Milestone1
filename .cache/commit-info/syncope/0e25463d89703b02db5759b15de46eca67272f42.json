{"sha":"0e25463d89703b02db5759b15de46eca67272f42","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBlMjU0NjNkODk3MDNiMDJkYjU3NTliMTVkZTQ2ZWNhNjcyNzJmNDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-08T14:49:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-08T14:50:18Z"},"message":"[SYNCOPE-1143] Cleaner handling for less-privileged delegated admins","tree":{"sha":"e6a764b91f12989d2eb0508b4ed08feab630c442","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e6a764b91f12989d2eb0508b4ed08feab630c442"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0e25463d89703b02db5759b15de46eca67272f42","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e25463d89703b02db5759b15de46eca67272f42","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e25463d89703b02db5759b15de46eca67272f42","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e25463d89703b02db5759b15de46eca67272f42/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2168ef7bf8f9487c0483b6ab9a5a1a9740a53a41","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2168ef7bf8f9487c0483b6ab9a5a1a9740a53a41","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2168ef7bf8f9487c0483b6ab9a5a1a9740a53a41"}],"stats":{"total":123,"additions":71,"deletions":52},"files":[{"sha":"0ce0ab2d90ed3ff00a0e118cf6dde8968e67514b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ProvisionAuxClassesPanel.java","status":"modified","additions":22,"deletions":11,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FProvisionAuxClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FProvisionAuxClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FProvisionAuxClassesPanel.java?ref=0e25463d89703b02db5759b15de46eca67272f42","patch":"@@ -31,18 +31,22 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ProvisionAuxClassesPanel extends Panel {\n \n     private static final long serialVersionUID = -3962956154520358784L;\n \n-    private final ProvisionTO provisionTO;\n+    private static final Logger LOG = LoggerFactory.getLogger(ProvisionAuxClassesPanel.class);\n \n-    public ProvisionAuxClassesPanel(final String id, final ProvisionTO provisionTO) {\n+    private final ProvisionTO provision;\n+\n+    public ProvisionAuxClassesPanel(final String id, final ProvisionTO provision) {\n         super(id);\n         setOutputMarkupId(true);\n \n-        this.provisionTO = provisionTO;\n+        this.provision = provision;\n     }\n \n     @Override\n@@ -51,25 +55,32 @@ protected void onBeforeRender() {\n \n         IModel<List<String>> model;\n         List<String> choices;\n-        if (provisionTO == null) {\n+        if (provision == null) {\n             model = new ListModel<>(Collections.<String>emptyList());\n             choices = Collections.emptyList();\n         } else {\n-            model = new PropertyModel<>(provisionTO, \"auxClasses\");\n-\n-            AnyTypeTO anyType = new AnyTypeRestClient().read(provisionTO.getAnyType());\n+            model = new PropertyModel<>(provision, \"auxClasses\");\n             choices = new ArrayList<>();\n-            for (AnyTypeClassTO aux : new AnyTypeClassRestClient().list()) {\n-                if (!anyType.getClasses().contains(aux.getKey())) {\n-                    choices.add(aux.getKey());\n+\n+            AnyTypeTO anyType = null;\n+            try {\n+                anyType = new AnyTypeRestClient().read(provision.getAnyType());\n+            } catch (Exception e) {\n+                LOG.error(\"Could not read AnyType {}\", provision.getAnyType(), e);\n+            }\n+            if (anyType != null) {\n+                for (AnyTypeClassTO aux : new AnyTypeClassRestClient().list()) {\n+                    if (!anyType.getClasses().contains(aux.getKey())) {\n+                        choices.add(aux.getKey());\n+                    }\n                 }\n             }\n         }\n         addOrReplace(\n                 new AjaxPalettePanel.Builder<String>().build(\"auxClasses\", model, new ListModel<>(choices)).\n                         hideLabel().\n                         setOutputMarkupId(true).\n-                        setEnabled(provisionTO != null));\n+                        setEnabled(provision != null));\n     }\n \n }"},{"sha":"e3f2b170ca8537c2c1335b46487170a47ec94aab","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SubmitableModalPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSubmitableModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSubmitableModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSubmitableModalPanel.java?ref=0e25463d89703b02db5759b15de46eca67272f42","patch":"@@ -23,7 +23,7 @@\n \n public interface SubmitableModalPanel extends ModalPanel {\n \n-    void onSubmit(final AjaxRequestTarget target, final Form<?> form);\n+    void onSubmit(AjaxRequestTarget target, Form<?> form);\n \n-    void onError(final AjaxRequestTarget target, final Form<?> form);\n+    void onError(AjaxRequestTarget target, Form<?> form);\n }"},{"sha":"8b6b1a5a684f85b6e34eec4286f4a8168cc251c5","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":14,"deletions":26,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=0e25463d89703b02db5759b15de46eca67272f42","patch":"@@ -106,7 +106,9 @@ protected void onConfigure() {\n \n         provisionModal = new BaseModal<>(\"outer\");\n         provisionModal.size(Modal.Size.Large);\n-        provisionModal.addSubmitButton();\n+        if (SyncopeConsoleSession.get().owns(StandardEntitlement.RESOURCE_UPDATE)) {\n+            provisionModal.addSubmitButton();\n+        }\n         addOuterObject(provisionModal);\n \n         historyModal = new BaseModal<>(\"outer\");\n@@ -227,10 +229,6 @@ public void onClick(final AjaxRequestTarget target) {\n                         build(BaseModal.CONTENT_ID, AjaxWizard.Mode.CREATE)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"connector.new\"), node.getKey())));\n-\n-                MetaDataRoleAuthorizationStrategy.\n-                        authorize(modal.getForm(), RENDER, StandardEntitlement.CONNECTOR_CREATE);\n-\n                 modal.show(true);\n             }\n \n@@ -288,10 +286,6 @@ public void onClick(final AjaxRequestTarget target) {\n                         build(BaseModal.CONTENT_ID, AjaxWizard.Mode.CREATE)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"resource.new\"), node.getKey())));\n-\n-                MetaDataRoleAuthorizationStrategy.\n-                        authorize(modal.getForm(), RENDER, StandardEntitlement.RESOURCE_CREATE);\n-\n                 modal.show(true);\n             }\n \n@@ -316,14 +310,13 @@ public void onClick(final AjaxRequestTarget target) {\n                 modal.setFormModel(model);\n \n                 target.add(modal.setContent(new ConnectorWizardBuilder(modelObject, pageRef).\n-                        build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n+                        build(BaseModal.CONTENT_ID,\n+                                SyncopeConsoleSession.get().owns(StandardEntitlement.CONNECTOR_UPDATE)\n+                                ? AjaxWizard.Mode.EDIT\n+                                : AjaxWizard.Mode.READONLY)));\n \n                 modal.header(\n                         new Model<>(MessageFormat.format(getString(\"connector.edit\"), modelObject.getDisplayName())));\n-\n-                MetaDataRoleAuthorizationStrategy.\n-                        authorize(modal.getForm(), RENDER, StandardEntitlement.CONNECTOR_UPDATE);\n-\n                 modal.show(true);\n             }\n \n@@ -333,7 +326,7 @@ public String getAjaxIndicatorMarkupId() {\n             }\n \n         };\n-        MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, StandardEntitlement.CONNECTOR_UPDATE);\n+        MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, StandardEntitlement.CONNECTOR_READ);\n         fragment.add(edit);\n \n         AjaxLink<String> history = new IndicatingAjaxLink<String>(\"history\") {\n@@ -402,13 +395,12 @@ public void onClick(final AjaxRequestTarget target) {\n                 modal.setFormModel(model);\n \n                 target.add(modal.setContent(new ResourceWizardBuilder(modelObject, pageRef).\n-                        build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n+                        build(BaseModal.CONTENT_ID,\n+                                SyncopeConsoleSession.get().owns(StandardEntitlement.RESOURCE_UPDATE)\n+                                ? AjaxWizard.Mode.EDIT\n+                                : AjaxWizard.Mode.READONLY)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));\n-\n-                MetaDataRoleAuthorizationStrategy.authorize(\n-                        modal.getForm(), RENDER, StandardEntitlement.RESOURCE_UPDATE);\n-\n                 modal.show(true);\n             }\n \n@@ -418,7 +410,7 @@ public String getAjaxIndicatorMarkupId() {\n             }\n \n         };\n-        MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, StandardEntitlement.RESOURCE_UPDATE);\n+        MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, StandardEntitlement.RESOURCE_READ);\n         fragment.add(edit);\n \n         AjaxLink<String> status = new IndicatingAjaxLink<String>(\"status\") {\n@@ -458,10 +450,6 @@ public void onClick(final AjaxRequestTarget target) {\n                 target.add(provisionModal.setContent(new ResourceProvisionPanel(provisionModal, resource, pageRef)));\n \n                 provisionModal.header(new Model<>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));\n-\n-                MetaDataRoleAuthorizationStrategy.\n-                        authorize(provisionModal.getForm(), RENDER, StandardEntitlement.RESOURCE_UPDATE);\n-\n                 provisionModal.show(true);\n             }\n \n@@ -471,7 +459,7 @@ public String getAjaxIndicatorMarkupId() {\n             }\n \n         };\n-        MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, StandardEntitlement.RESOURCE_UPDATE);\n+        MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, StandardEntitlement.RESOURCE_READ);\n         fragment.add(provision);\n \n         AjaxLink<String> explore = new IndicatingAjaxLink<String>(\"explore\") {"},{"sha":"7f52dd14e5b42c724395995e68f72e3509d38713","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=0e25463d89703b02db5759b15de46eca67272f42","patch":"@@ -296,7 +296,7 @@ protected final WizardMgtPanel<T> enableExitButton() {\n     public MarkupContainer addInnerObject(final Component... childs) {\n         return initialFragment.add(childs);\n     }\n-    \n+\n     /**\n      * Add or replace object inside the main container.\n      *\n@@ -402,7 +402,7 @@ protected void customActionOnCancelCallback(final AjaxRequestTarget target) {\n      */\n     public abstract static class Builder<T extends Serializable> implements Serializable {\n \n-        private static final long serialVersionUID = 1L;\n+        private static final long serialVersionUID = 1908836274665387084L;\n \n         protected final PageReference pageRef;\n "},{"sha":"80a7a85a856ac129a7a69ec03c89a34733a64803","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ConnectorDetailsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java?ref=0e25463d89703b02db5759b15de46eca67272f42","patch":"@@ -113,7 +113,7 @@ public String transform(final RealmTO realm) {\n                 new PropertyModel<String>(connInstanceTO, \"bundleName\"), false);\n         ((DropDownChoice<String>) bundleName.getField()).setNullValid(true);\n \n-        List<String> bundleNames = new ArrayList<String>();\n+        List<String> bundleNames = new ArrayList<>();\n         for (ConnBundleTO bundle : bundles) {\n             if (!bundleNames.contains(bundle.getBundleName())) {\n                 bundleNames.add(bundle.getBundleName());"},{"sha":"02ae10faf0da4aa8fa2caf6351d8500a9b86f9b5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":22,"deletions":3,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=0e25463d89703b02db5759b15de46eca67272f42","patch":"@@ -36,6 +36,8 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.util.ListModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * Resource mapping panel.\n@@ -44,6 +46,8 @@ public class ResourceMappingPanel extends AbstractMappingPanel {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ResourceMappingPanel.class);\n+\n     /**\n      * External resource provisioning configuration instance to be updated.\n      */\n@@ -120,12 +124,27 @@ protected void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n             choices.add(\"name\");\n             choices.add(\"fullpath\");\n         } else {\n-            AnyTypeTO anyTypeTO = anyTypeRestClient.read(provision.getAnyType());\n+            AnyTypeTO anyType = null;\n+            try {\n+                anyType = anyTypeRestClient.read(provision.getAnyType());\n+            } catch (Exception e) {\n+                LOG.error(\"Could not read AnyType {}\", provision.getAnyType(), e);\n+            }\n \n             List<AnyTypeClassTO> anyTypeClassTOs = new ArrayList<>();\n-            anyTypeClassTOs.addAll(anyTypeClassRestClient.list(anyTypeTO.getClasses()));\n+            if (anyType != null) {\n+                try {\n+                    anyTypeClassTOs.addAll(anyTypeClassRestClient.list(anyType.getClasses()));\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not read AnyType classes for {}\", anyType.getClasses(), e);\n+                }\n+            }\n             for (String auxClass : provision.getAuxClasses()) {\n-                anyTypeClassTOs.add(anyTypeClassRestClient.read(auxClass));\n+                try {\n+                    anyTypeClassTOs.add(anyTypeClassRestClient.read(auxClass));\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not read AnyTypeClass for {}\", auxClass, e);\n+                }\n             }\n \n             switch (provision.getAnyType()) {"},{"sha":"ceab536a8488502c163ab4af9719d6cb684c1dc9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e25463d89703b02db5759b15de46eca67272f42/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=0e25463d89703b02db5759b15de46eca67272f42","patch":"@@ -168,7 +168,7 @@ public void onClick(final AjaxRequestTarget target, final ResourceProvision prov\n                     ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                 }\n             }\n-        }, ActionLink.ActionType.MAPPING, StandardEntitlement.RESOURCE_UPDATE).\n+        }, ActionLink.ActionType.MAPPING, StandardEntitlement.RESOURCE_READ).\n                 addAction(new ActionLink<ResourceProvision>() {\n \n                     private static final long serialVersionUID = -7780999687733432439L;\n@@ -225,6 +225,7 @@ public void onClick(final AjaxRequestTarget target, final ResourceProvision prov\n         builder.addNewItemPanelBuilder(wizard);\n \n         list = builder.build(\"provision\");\n+        list.setReadOnly(!SyncopeConsoleSession.get().owns(StandardEntitlement.RESOURCE_UPDATE));\n \n         addAjaxLink = new AjaxLink<ResourceProvision>(\"add\") {\n \n@@ -243,14 +244,12 @@ public void onClick(final AjaxRequestTarget target) {\n         // toggle panel, used to choose 'type' before starting wizard - SYNCOPE-1167\n         final ResourceProvision provision = new ResourceProvision();\n         provision.setAnyType(\"\");\n-        objectTypeTogglePanel =\n-                new ObjectTypeTogglePanel(\"objectTypeToggle\", provision, getAnyTypes(), pageRef) {\n+        objectTypeTogglePanel = new ObjectTypeTogglePanel(\"objectTypeToggle\", provision, getAnyTypes(), pageRef) {\n \n             private static final long serialVersionUID = 7878063325027015067L;\n \n             @Override\n             protected void onSubmit(final String type, final AjaxRequestTarget target) {\n-\n                 provision.setAnyType(type);\n \n                 send(list, Broadcast.BREADTH,\n@@ -348,8 +347,10 @@ public boolean evaluate(final String key) {\n     }\n \n     private void checkAddButton() {\n-        boolean test = !getAnyTypes().getObject().isEmpty();\n-        addAjaxLink.setVisible(test);\n-        objectTypeTogglePanel.setEnabled(test);\n+        boolean enabled =\n+                SyncopeConsoleSession.get().owns(StandardEntitlement.RESOURCE_UPDATE)\n+                && !getAnyTypes().getObject().isEmpty();\n+        addAjaxLink.setVisible(enabled);\n+        objectTypeTogglePanel.setEnabled(enabled);\n     }\n }"}]}