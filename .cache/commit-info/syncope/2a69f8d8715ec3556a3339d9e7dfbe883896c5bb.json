{"sha":"2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJhNjlmOGQ4NzE1ZWMzNTU2YTMzMzlkOWU3ZGZiZTg4Mzg5NmM1YmI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-29T10:41:42Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-29T10:41:42Z"},"message":"Fixes issue 223\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247220 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c6425faccec51558084f530b796cb694b469bfed","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c6425faccec51558084f530b796cb694b469bfed"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/comments","author":null,"committer":null,"parents":[{"sha":"0651c1715d30aff0f189567e6be6b6670cc6918c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0651c1715d30aff0f189567e6be6b6670cc6918c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0651c1715d30aff0f189567e6be6b6670cc6918c"}],"stats":{"total":210,"additions":181,"deletions":29},"files":[{"sha":"3faadc9755187a9b7d49ed560f698b9303cf4e3b","filename":"client/src/main/java/org/syncope/client/to/PropagationTaskTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -33,6 +33,8 @@ public class PropagationTaskTO extends TaskTO {\n \n     private String resource;\n \n+    private long user;\n+\n     public String getAccountId() {\n         return accountId;\n     }\n@@ -82,4 +84,12 @@ public String getXmlAttributes() {\n     public void setXmlAttributes(String xmlAttributes) {\n         this.xmlAttributes = xmlAttributes;\n     }\n+\n+    public long getUser() {\n+        return user;\n+    }\n+\n+    public void setUser(long user) {\n+        this.user = user;\n+    }\n }"},{"sha":"fe3e209bbbc60d1985ad0509a6015248f605d269","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -23,6 +23,7 @@\n import org.apache.commons.lang.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang.builder.ToStringStyle;\n import org.codehaus.jackson.annotate.JsonIgnore;\n+import org.syncope.types.PropagationTaskExecStatus;\n \n public class UserTO extends AbstractAttributableTO {\n \n@@ -48,10 +49,13 @@ public class UserTO extends AbstractAttributableTO {\n \n     private Integer failedLogins;\n \n+    private Map<String, PropagationTaskExecStatus> propagationStatusMap;\n+\n     public UserTO() {\n         super();\n \n         memberships = new ArrayList<MembershipTO>();\n+        propagationStatusMap = new HashMap<String, PropagationTaskExecStatus>();\n     }\n \n     public String getPassword() {\n@@ -157,6 +161,30 @@ public void setLastLoginDate(Date lastLoginDate) {\n         this.lastLoginDate = lastLoginDate;\n     }\n \n+    public void addPropagationStatus(String resource,\n+            PropagationTaskExecStatus status) {\n+\n+        propagationStatusMap.put(resource, status);\n+    }\n+\n+    public void removePropagationStatus(String resource) {\n+\n+        propagationStatusMap.remove(resource);\n+    }\n+\n+    public Map<String, PropagationTaskExecStatus> getPropagationStatusMap() {\n+        return propagationStatusMap;\n+    }\n+\n+    public void setPropagationStatusMap(\n+            Map<String, PropagationTaskExecStatus> propagationStatusMap) {\n+\n+        this.propagationStatusMap.clear();\n+        if (propagationStatusMap != null && !propagationStatusMap.isEmpty()) {\n+            this.propagationStatusMap.putAll(propagationStatusMap);\n+        }\n+    }\n+\n     @Override\n     public String toString() {\n         return new ReflectionToStringBuilder(this,"},{"sha":"28df9b363e5a33ff766f10709cbb8f657b8f1f9a","filename":"client/src/main/java/org/syncope/types/PropagationTaskExecStatus.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPropagationTaskExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPropagationTaskExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPropagationTaskExecStatus.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.propagation;\n+package org.syncope.types;\n \n /**\n  * Status of a TaskExecution.","previous_filename":"core/src/main/java/org/syncope/core/propagation/PropagationTaskExecStatus.java"},{"sha":"fb17245c1ee08974eb9630c309e5311096042fb9","filename":"core/src/main/java/org/syncope/core/persistence/beans/PropagationTask.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -22,6 +22,7 @@\n import javax.persistence.ManyToOne;\n import org.hibernate.annotations.Type;\n import org.identityconnectors.framework.common.objects.Attribute;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.validation.entity.PropagationTaskCheck;\n import org.syncope.core.util.XMLSerializer;\n import org.syncope.types.PropagationMode;\n@@ -65,6 +66,12 @@ public class PropagationTask extends Task {\n     @Type(type = \"org.hibernate.type.StringClobType\")\n     private String xmlAttributes;\n \n+    /**\n+     * User whose data are propagated.\n+     */\n+    @ManyToOne\n+    private SyncopeUser syncopeUser;\n+\n     /**\n      * ExternalResource to which the propagation happens.\n      */\n@@ -120,4 +127,12 @@ public ExternalResource getResource() {\n     public void setResource(ExternalResource resource) {\n         this.resource = resource;\n     }\n+\n+    public SyncopeUser getSyncopeUser() {\n+        return syncopeUser;\n+    }\n+\n+    public void setSyncopeUser(SyncopeUser syncopeUser) {\n+        this.syncopeUser = syncopeUser;\n+    }\n }"},{"sha":"9240c6e662069ff02308c94dcfe888792da5445e","filename":"core/src/main/java/org/syncope/core/persistence/dao/TaskDAO.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -17,6 +17,8 @@\n import java.util.List;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.ExternalResource;\n+import org.syncope.core.persistence.beans.PropagationTask;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n public interface TaskDAO extends DAO {\n@@ -33,6 +35,10 @@ <T extends Task> List<T> findAll(ExternalResource resource,\n      <T extends Task> List<T> findAll(int page, int itemsPerPage,\n             Class<T> reference);\n \n+    List<PropagationTask> findAll(ExternalResource resource, SyncopeUser user);\n+\n+    List<PropagationTask> findAll(SyncopeUser user);\n+\n      <T extends Task> Integer count(Class<T> reference);\n \n      <T extends Task> T save(T task)"},{"sha":"2dc0589bdd5b50157b3776319b7e1653fe641709","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/TaskDAOImpl.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -23,6 +23,8 @@\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.ExternalResource;\n+import org.syncope.core.persistence.beans.PropagationTask;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.TaskDAO;\n \n @Repository\n@@ -96,6 +98,30 @@ public <T extends Task> List<T> findAll(final int page,\n         return query.getResultList();\n     }\n \n+    @Override\n+    public List<PropagationTask> findAll(final SyncopeUser user) {\n+        StringBuilder queryString = buildfindAllQuery(PropagationTask.class);\n+        queryString.append(\"WHERE e.syncopeUser=:user\");\n+        final Query query = entityManager.createQuery(queryString.toString());\n+        query.setParameter(\"user\", user);\n+\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public List<PropagationTask> findAll(final ExternalResource resource,\n+            final SyncopeUser user) {\n+\n+        StringBuilder queryString = buildfindAllQuery(PropagationTask.class);\n+        queryString.append(\"WHERE e.syncopeUser=:user \").\n+                append(\"AND e.resource=:resource\");\n+        final Query query = entityManager.createQuery(queryString.toString());\n+        query.setParameter(\"user\", user);\n+        query.setParameter(\"resource\", resource);\n+\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public <T extends Task> Integer count(final Class<T> reference) {\n         Query countQuery ="},{"sha":"44a9c259831148835aed31711d629b9afeba550e","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -34,6 +34,7 @@\n import org.springframework.util.StringUtils;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n+import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttrUniqueValue;\n@@ -43,6 +44,7 @@\n import org.syncope.core.persistence.dao.DerSchemaDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.RoleDAO;\n+import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.rest.controller.InvalidSearchConditionException;\n \n@@ -59,6 +61,9 @@ public class UserDAOImpl extends AbstractDAOImpl\n     @Autowired\n     private RoleDAO roleDAO;\n \n+    @Autowired\n+    private TaskDAO taskDAO;\n+\n     @Override\n     public SyncopeUser find(final Long id) {\n         Query query = entityManager.createQuery(\n@@ -368,6 +373,10 @@ public void delete(final SyncopeUser user) {\n         }\n         user.getMemberships().clear();\n \n+        for (PropagationTask task : taskDAO.findAll(user)) {\n+            task.setSyncopeUser(null);\n+        }\n+\n         entityManager.remove(user);\n     }\n "},{"sha":"332a970a3c0b29ad51f367d11a1df99e796163a2","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/PropagationTaskValidator.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -20,7 +20,8 @@\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.types.EntityViolationType;\n-import org.syncope.core.propagation.PropagationTaskExecStatus;\n+import org.syncope.types.PropagationOperation;\n+import org.syncope.types.PropagationTaskExecStatus;\n \n public class PropagationTaskValidator extends AbstractValidator\n         implements ConstraintValidator<PropagationTaskCheck, PropagationTask> {\n@@ -41,13 +42,17 @@ public boolean isValid(final PropagationTask object,\n             isValid = object.getPropagationMode() != null\n                     && object.getResourceOperationType() != null\n                     && !object.getAttributes().isEmpty()\n-                    && object.getResource() != null;\n+                    && object.getResource() != null\n+                    && (PropagationOperation.DELETE == object.\n+                    getResourceOperationType()\n+                    || object.getSyncopeUser() != null);\n \n             if (isValid) {\n                 List<TaskExec> executions = object.getExecs();\n                 for (TaskExec execution : executions) {\n                     try {\n-                        PropagationTaskExecStatus.valueOf(execution.getStatus());\n+                        PropagationTaskExecStatus.valueOf(\n+                                execution.getStatus());\n                     } catch (IllegalArgumentException e) {\n                         LOG.error(\"Invalid execution status '\"\n                                 + execution.getStatus() + \"'\", e);"},{"sha":"6de7fa3e5252a620650a233583bb7d9a779a84f3","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"modified","additions":11,"deletions":15,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -14,6 +14,7 @@\n  */\n package org.syncope.core.propagation;\n \n+import org.syncope.types.PropagationTaskExecStatus;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.util.ArrayList;\n@@ -597,12 +598,10 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n      * @param enable wether user must be enabled or not\n      * @param propByRes operation to be performed per resource\n      * @return list of propagation tasks created\n-     * @throws PropagationException if anything goes wrong\n      */\n     protected List<PropagationTask> provision(final SyncopeUser user,\n             final String password, final Boolean enable,\n-            final PropagationByResource propByRes)\n-            throws NotFoundException {\n+            final PropagationByResource propByRes) {\n \n         LOG.debug(\"Provisioning with user {}:\\n{}\", user, propByRes);\n \n@@ -612,24 +611,22 @@ protected List<PropagationTask> provision(final SyncopeUser user,\n \n         List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n \n-        List<ExternalResource> resources = resourceDAO.findAllByPriority();\n-        List<ExternalResource> resourcesByPriority;\n-        Map.Entry<String, Set<Attribute>> preparedAttrs;\n-        PropagationTask task;\n         for (PropagationOperation type : PropagationOperation.values()) {\n-            resourcesByPriority = new ArrayList<ExternalResource>();\n-            for (ExternalResource resource : resources) {\n+            List<ExternalResource> resourcesByPriority =\n+                    new ArrayList<ExternalResource>();\n+            for (ExternalResource resource : resourceDAO.findAllByPriority()) {\n                 if (propByRes.get(type).contains(resource.getName())) {\n                     resourcesByPriority.add(resource);\n                 }\n             }\n \n             for (ExternalResource resource : resourcesByPriority) {\n-                preparedAttrs = prepareAttributes(\n-                        user, password, enable, resource);\n+                Map.Entry<String, Set<Attribute>> preparedAttrs =\n+                        prepareAttributes(user, password, enable, resource);\n \n-                task = new PropagationTask();\n+                PropagationTask task = new PropagationTask();\n                 task.setResource(resource);\n+                task.setSyncopeUser(user);\n                 task.setResourceOperationType(type);\n                 task.setPropagationMode(resource.getPropagationMode());\n                 task.setAccountId(preparedAttrs.getKey());\n@@ -657,17 +654,16 @@ protected List<PropagationTask> provision(final SyncopeUser user,\n     public void execute(final List<PropagationTask> tasks)\n             throws PropagationException {\n \n-        TaskExec execution;\n-        PropagationTaskExecStatus execStatus;\n         for (PropagationTask task : tasks) {\n             LOG.debug(\"Execution started for {}\", task);\n \n-            execution = execute(task);\n+            TaskExec execution = execute(task);\n \n             LOG.debug(\"Execution finished for {}, {}\", task, execution);\n \n             // Propagation is interrupted as soon as the result of the\n             // communication with a primary resource is in error\n+            PropagationTaskExecStatus execStatus;\n             try {\n                 execStatus = PropagationTaskExecStatus.valueOf(\n                         execution.getStatus());"},{"sha":"f01166a592d4a3e339d32c646955f4581e870032","filename":"core/src/main/java/org/syncope/core/rest/controller/TaskController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -58,7 +58,7 @@\n import org.syncope.core.scheduling.SyncJob;\n import org.syncope.core.util.TaskUtil;\n import org.syncope.types.PropagationMode;\n-import org.syncope.core.propagation.PropagationTaskExecStatus;\n+import org.syncope.types.PropagationTaskExecStatus;\n import org.syncope.core.scheduling.AbstractJob;\n import org.syncope.core.scheduling.SyncJobActions;\n import org.syncope.types.SyncopeClientExceptionType;"},{"sha":"3ebd2b56b86e0b449f78cd9903a0e4ab5705469c","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -821,7 +821,7 @@ protected void fill(final AbstractAttributable attributable,\n         }\n     }\n \n-    public void fillTO(\n+    protected void fillTO(\n             final AbstractAttributableTO abstractAttributableTO,\n             final Collection<? extends AbstractAttr> attributes,\n             final Collection<? extends AbstractDerAttr> derivedAttributes,"},{"sha":"b293c1f34608d8ada4abf3e88baf75bb298436ae","filename":"core/src/main/java/org/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -60,7 +60,7 @@ public class TaskDataBinder {\n             TaskDataBinder.class);\n \n     private static final String[] IGNORE_TASK_PROPERTIES = {\n-        \"executions\", \"resource\"};\n+        \"executions\", \"resource\", \"user\"};\n \n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = {\n         \"id\", \"task\"};\n@@ -220,6 +220,10 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n             case PROPAGATION:\n                 ((PropagationTaskTO) taskTO).setResource(\n                         ((PropagationTask) task).getResource().getName());\n+                if (((PropagationTask) task).getSyncopeUser() != null) {\n+                    ((PropagationTaskTO) taskTO).setUser(\n+                            ((PropagationTask) task).getSyncopeUser().getId());\n+                }\n                 break;\n \n             case SCHED:"},{"sha":"48c3076572922fbb43ac4e5d6a205bf1e5b222c7","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -21,6 +21,7 @@\n import javassist.NotFoundException;\n import org.apache.commons.lang.StringUtils;\n import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -35,18 +36,23 @@\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n import org.syncope.core.persistence.beans.Policy;\n import org.syncope.core.persistence.beans.ExternalResource;\n+import org.syncope.core.persistence.beans.PropagationTask;\n+import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.membership.MAttr;\n import org.syncope.core.persistence.beans.membership.MDerAttr;\n import org.syncope.core.persistence.beans.membership.MVirAttr;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.dao.TaskDAO;\n+import org.syncope.core.persistence.dao.TaskExecDAO;\n import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.syncope.core.util.EntitlementUtil;\n import org.syncope.types.CipherAlgorithm;\n import org.syncope.types.PasswordPolicySpec;\n import org.syncope.types.PropagationOperation;\n+import org.syncope.types.PropagationTaskExecStatus;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n@@ -62,6 +68,12 @@ public class UserDataBinder extends AbstractAttributableDataBinder {\n         \"virtualAttributes\",\n         \"resources\"};\n \n+    @Autowired\n+    private TaskDAO taskDAO;\n+\n+    @Autowired\n+    private TaskExecDAO taskExecDAO;\n+\n     @Transactional(readOnly = true)\n     public SyncopeUser getUserFromId(final Long userId)\n             throws NotFoundException, UnauthorizedRoleException {\n@@ -377,6 +389,7 @@ public PropagationByResource update(final SyncopeUser user,\n         return propByRes;\n     }\n \n+    @Transactional(readOnly = true)\n     public UserTO getUserTO(final SyncopeUser user) {\n         UserTO userTO = new UserTO();\n \n@@ -404,6 +417,15 @@ public UserTO getUserTO(final SyncopeUser user) {\n             userTO.addMembership(membershipTO);\n         }\n \n+        for (ExternalResource resource : user.getExternalResources()) {\n+            for (PropagationTask task : taskDAO.findAll(resource, user)) {\n+                TaskExec exec = taskExecDAO.findLatestStarted(task);\n+                userTO.addPropagationStatus(resource.getName(),\n+                        exec == null ? null\n+                        : PropagationTaskExecStatus.valueOf(exec.getStatus()));\n+            }\n+        }\n+\n         return userTO;\n     }\n "},{"sha":"adb8422a297dfab81ed7b8ae4d512a3c5fa9ed50","filename":"core/src/test/java/org/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -30,6 +30,7 @@\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.syncope.core.scheduling.TestSyncJobActions;\n import org.syncope.types.PropagationMode;\n@@ -44,6 +45,9 @@ public class TaskTest extends AbstractTest {\n     @Autowired\n     private ResourceDAO resourceDAO;\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n     @Test\n     public final void findWithoutExecs() {\n         List<PropagationTask> tasks =\n@@ -62,15 +66,28 @@ public final void findAll() {\n \n         List<SyncTask> sylist = taskDAO.findAll(SyncTask.class);\n         assertEquals(1, sylist.size());\n+\n+        ExternalResource resource = resourceDAO.find(\"ws-target-resource-2\");\n+        assertNotNull(resource);\n+\n+        SyncopeUser user = userDAO.find(1L);\n+        assertNotNull(user);\n+\n+        plist = taskDAO.findAll(resource, user);\n+        assertEquals(3, plist.size());\n     }\n \n     @Test\n     public final void savePropagationTask() {\n         ExternalResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n+        SyncopeUser user = userDAO.find(2L);\n+        assertNotNull(user);\n+\n         PropagationTask task = new PropagationTask();\n         task.setResource(resource);\n+        task.setSyncopeUser(user);\n         task.setPropagationMode(PropagationMode.ASYNC);\n         task.setResourceOperationType(PropagationOperation.CREATE);\n         task.setAccountId(\"one@two.com\");"},{"sha":"d48ed277807a5328b8932a740ff8794bab352edd","filename":"core/src/test/java/org/syncope/core/persistence/relationships/TaskTest.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -29,11 +29,13 @@\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.core.persistence.beans.SyncTask;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.persistence.dao.TaskExecDAO;\n+import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.types.PropagationMode;\n-import org.syncope.core.propagation.PropagationTaskExecStatus;\n+import org.syncope.types.PropagationTaskExecStatus;\n import org.syncope.types.PropagationOperation;\n \n @Transactional\n@@ -48,6 +50,9 @@ public class TaskTest extends AbstractTest {\n     @Autowired\n     private ResourceDAO resourceDAO;\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n     @Test\n     public final void read() {\n         PropagationTask task = taskDAO.find(1L);\n@@ -63,8 +68,12 @@ public final void save() {\n         ExternalResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n+        SyncopeUser user = userDAO.find(2L);\n+        assertNotNull(user);\n+\n         PropagationTask task = new PropagationTask();\n         task.setResource(resource);\n+        task.setSyncopeUser(user);\n         task.setPropagationMode(PropagationMode.ASYNC);\n         task.setResourceOperationType(PropagationOperation.CREATE);\n         task.setAccountId(\"one@two.com\");"},{"sha":"8619d92cbd108cb89ab1d84f26c96673233ecafa","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -29,7 +29,7 @@\n import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.to.TaskTO;\n import org.syncope.client.to.UserTO;\n-import org.syncope.core.propagation.PropagationTaskExecStatus;\n+import org.syncope.types.PropagationTaskExecStatus;\n import org.syncope.core.scheduling.TestSyncJobActions;\n \n public class TaskTestITCase extends AbstractTest {"},{"sha":"7d3c02189d869b38725cf89e7ad2ac1ffaf5e1f1","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -53,6 +53,7 @@\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.types.CipherAlgorithm;\n+import org.syncope.types.PropagationTaskExecStatus;\n import org.syncope.types.SyncopeClientExceptionType;\n \n public class UserTestITCase extends AbstractTest {\n@@ -374,8 +375,12 @@ public final void createUserWithDbPropagation() {\n \n         userTO.addResource(\"resource-testdb\");\n \n-        restTemplate.postForObject(BASE_URL + \"user/create\",\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(1, userTO.getPropagationStatusMap().size());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS,\n+                userTO.getPropagationStatusMap().get(\"resource-testdb\"));\n     }\n \n     @Test"},{"sha":"0f928eeedb2d7e583a09e6e4a2bfe0884088b282","filename":"core/src/test/resources/content.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a69f8d8715ec3556a3339d9e7dfbe883896c5bb/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=2a69f8d8715ec3556a3339d9e7dfbe883896c5bb","patch":"@@ -411,21 +411,21 @@\n                    accountid=\"0\" password=\"1\"/>\n                    \n     <Task DTYPE=\"PropagationTask\" id=\"1\" propagationMode=\"ASYNC\" resourceOperationType=\"UPDATE\"\n-                 resource_name=\"ws-target-resource-2\"\n+                 resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\"\n                  xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n     <TaskExec id=\"1\" task_id=\"1\" status=\"SUCCESS\"/>\n     <Task DTYPE=\"PropagationTask\" id=\"2\" propagationMode=\"SYNC\" resourceOperationType=\"CREATE\"\n-                 resource_name=\"ws-target-resource-2\"\n+                 resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\"\n                  xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n     <Task DTYPE=\"PropagationTask\" id=\"3\" propagationMode=\"ASYNC\" resourceOperationType=\"DELETE\"\n-                 resource_name=\"ws-target-resource-2\"\n+                 resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\"\n                  xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n     <Task DTYPE=\"SyncTask\" id=\"4\" resource_name=\"resource-csv\"\n           performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" \n           jobClassName=\"org.syncope.core.scheduling.SyncJob\"/>\n     <Task DTYPE=\"SchedTask\" id=\"5\" jobClassName=\"org.syncope.core.scheduling.SampleJob\" cronExpression=\"0 0 0 1 * ?\"/>\n     <Task DTYPE=\"PropagationTask\" id=\"6\" propagationMode=\"ASYNC\" resourceOperationType=\"UPDATE\"\n-                 resource_name=\"ws-target-resource-nopropagation\"\n+                 resource_name=\"ws-target-resource-nopropagation\" syncopeUser_id=\"1\"\n                  xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n           \n     <RDerSchema name=\"displayProperty\" expression=\"icon + ': ' + show\"/>"}]}