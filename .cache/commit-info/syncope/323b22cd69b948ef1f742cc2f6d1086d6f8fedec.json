{"sha":"323b22cd69b948ef1f742cc2f6d1086d6f8fedec","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMyM2IyMmNkNjliOTQ4ZWYxZjc0MmNjMmY2ZDEwODZkNmY4ZmVkZWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-04T13:19:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-04T13:19:19Z"},"message":"[SYNCOPE-805] DropDownChoice provided - also set mandatory for PullTasks","tree":{"sha":"c084ed1f13fda9e39ccb35964db3635697799e40","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c084ed1f13fda9e39ccb35964db3635697799e40"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/323b22cd69b948ef1f742cc2f6d1086d6f8fedec","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/323b22cd69b948ef1f742cc2f6d1086d6f8fedec","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/323b22cd69b948ef1f742cc2f6d1086d6f8fedec","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/323b22cd69b948ef1f742cc2f6d1086d6f8fedec/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"74e57f1f732728ab0ca622239960207b948fe879","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/74e57f1f732728ab0ca622239960207b948fe879","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/74e57f1f732728ab0ca622239960207b948fe879"}],"stats":{"total":51,"additions":38,"deletions":13},"files":[{"sha":"a42a22df8d30b2141aad7ea3a30fcf264f6d4311","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323b22cd69b948ef1f742cc2f6d1086d6f8fedec/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323b22cd69b948ef1f742cc2f6d1086d6f8fedec/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java?ref=323b22cd69b948ef1f742cc2f6d1086d6f8fedec","patch":"@@ -62,7 +62,7 @@ protected ProvisioningTaskDirectoryPanel(\n \n     @Override\n     protected void initResultTable() {\n-        // DO nothing in order to disable the call performed by the parent\n+        // Do nothing in order to disable the call performed by the parent\n     }\n \n     @Override"},{"sha":"e6cee5fb40a6c4193d37a71c485342d37327bd5b","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":35,"deletions":9,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323b22cd69b948ef1f742cc2f6d1086d6f8fedec/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323b22cd69b948ef1f742cc2f6d1086d6f8fedec/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=323b22cd69b948ef1f742cc2f6d1086d6f8fedec","patch":"@@ -21,9 +21,13 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DateFormatROModel;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n@@ -33,6 +37,7 @@\n import org.apache.syncope.common.lib.to.AbstractProvisioningTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n@@ -51,12 +56,27 @@\n \n     private final TaskRestClient taskRestClient = new TaskRestClient();\n \n-    /**\n-     * Construct.\n-     *\n-     * @param taskTO task\n-     * @param pageRef Caller page reference.\n-     */\n+    private final LoadableDetachableModel<List<String>> realms = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 5275935387613157437L;\n+\n+        @Override\n+        protected List<String> load() {\n+            List<String> result = CollectionUtils.collect(\n+                    new RealmRestClient().list(), new Transformer<RealmTO, String>() {\n+\n+                @Override\n+                public String transform(final RealmTO realm) {\n+                    return realm.getFullPath();\n+                }\n+            }, new ArrayList<String>());\n+\n+            Collections.sort(result);\n+\n+            return result;\n+        }\n+    };\n+\n     public SchedTaskWizardBuilder(final T taskTO, final PageReference pageRef) {\n         super(\"wizard\", taskTO, pageRef);\n     }\n@@ -120,8 +140,10 @@ public Profile(final SchedTaskTO taskTO) {\n \n             final AjaxDropDownChoicePanel<PullMode> pullMode = new AjaxDropDownChoicePanel<>(\"pullMode\", \"pullMode\",\n                     new PropertyModel<PullMode>(taskTO, \"pullMode\"), false);\n-            pullTaskSpecifics.add(pullMode);\n             pullMode.setChoices(Arrays.asList(PullMode.values()));\n+            pullMode.setRequired(taskTO instanceof PullTaskTO);\n+            pullMode.setNullValid(!(taskTO instanceof PullTaskTO));\n+            pullTaskSpecifics.add(pullMode);\n \n             final AjaxTextFieldPanel filter = new AjaxTextFieldPanel(\n                     \"reconciliationFilterBuilderClassName\", \"reconciliationFilterBuilderClassName\",\n@@ -140,8 +162,12 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n \n-            final AjaxTextFieldPanel destinationRealm = new AjaxTextFieldPanel(\"destinationRealm\", \"destinationRealm\",\n-                    new PropertyModel<String>(taskTO, \"destinationRealm\"), false);\n+            final AjaxDropDownChoicePanel<String> destinationRealm = new AjaxDropDownChoicePanel<>(\n+                    \"destinationRealm\", \"destinationRealm\",\n+                    new PropertyModel<String>(taskTO, \"destinationRealm\"), false).\n+                    setChoices(realms);\n+            destinationRealm.setRequired(taskTO instanceof PullTaskTO);\n+            destinationRealm.setNullValid(!(taskTO instanceof PullTaskTO));\n             pullTaskSpecifics.add(destinationRealm);\n \n             final AjaxDropDownChoicePanel<String> className = new AjaxDropDownChoicePanel<>("},{"sha":"896cead4ae34baf92bf8186eaa5447879d610b37","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/AnyByRealmWidget.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323b22cd69b948ef1f742cc2f6d1086d6f8fedec/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323b22cd69b948ef1f742cc2f6d1086d6f8fedec/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java?ref=323b22cd69b948ef1f742cc2f6d1086d6f8fedec","patch":"@@ -24,9 +24,8 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.syncope.common.rest.api.service.RealmService;\n import org.apache.wicket.model.Model;\n \n public class AnyByRealmWidget extends BaseWidget {\n@@ -88,7 +87,7 @@ private Bar build(\n         List<Integer> any1Values = new ArrayList<>();\n         List<Integer> any2Values = new ArrayList<>();\n \n-        List<RealmTO> realms = SyncopeConsoleSession.get().getService(RealmService.class).list();\n+        List<RealmTO> realms = new RealmRestClient().list();\n         for (int i = 0; i < realms.size() && i < MAX_REALMS; i++) {\n             RealmTO realm = realms.get(i);\n "}]}