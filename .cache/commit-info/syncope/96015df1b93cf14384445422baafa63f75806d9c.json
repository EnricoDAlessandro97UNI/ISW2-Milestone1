{"sha":"96015df1b93cf14384445422baafa63f75806d9c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk2MDE1ZGYxYjkzY2YxNDM4NDQ0NTQyMmJhYWZhNjNmNzU4MDZkOWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-12-22T13:41:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-12-22T13:41:25Z"},"message":"[SYNCOPE-622] Extracted interface, provided defalt and disabled implementations","tree":{"sha":"e0324e01f357b5d2d113321a5fb534c886e877ae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e0324e01f357b5d2d113321a5fb534c886e877ae"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/96015df1b93cf14384445422baafa63f75806d9c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/96015df1b93cf14384445422baafa63f75806d9c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/96015df1b93cf14384445422baafa63f75806d9c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/96015df1b93cf14384445422baafa63f75806d9c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"386b86a79658bdec6fa8479e10a2e01debc60ded","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/386b86a79658bdec6fa8479e10a2e01debc60ded","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/386b86a79658bdec6fa8479e10a2e01debc60ded"}],"stats":{"total":152,"additions":136,"deletions":16},"files":[{"sha":"4e343a3cfbd71d1fb5851129cf8b05a99465d4f1","filename":"core/src/main/java/org/apache/syncope/core/cache/DisabledVirAttrCache.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FDisabledVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FDisabledVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FDisabledVirAttrCache.java?ref=96015df1b93cf14384445422baafa63f75806d9c","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.cache;\n+\n+import org.apache.syncope.common.types.AttributableType;\n+\n+/**\n+ * Empty virtual attribute value cache implementation.\n+ */\n+public class DisabledVirAttrCache implements VirAttrCache {\n+\n+    @Override\n+    public void expire(final AttributableType type, final Long id, final String schemaName) {\n+        // nothing to do\n+    }\n+\n+    @Override\n+    public VirAttrCacheValue get(final AttributableType type, final Long id, final String schemaName) {\n+        return null;\n+    }\n+\n+    @Override\n+    public boolean isValidEntry(VirAttrCacheValue value) {\n+        return false;\n+    }\n+\n+    @Override\n+    public void put(\n+            final AttributableType type, final Long id, final String schemaName, final VirAttrCacheValue value) {\n+\n+        // nothing to do\n+    }\n+\n+}"},{"sha":"b48ca10888907ec0f50e7bc3c30cbe57fc898ba1","filename":"core/src/main/java/org/apache/syncope/core/cache/MemoryVirAttrCache.java","status":"renamed","additions":11,"deletions":7,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FMemoryVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FMemoryVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FMemoryVirAttrCache.java?ref=96015df1b93cf14384445422baafa63f75806d9c","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.util;\n+package org.apache.syncope.core.cache;\n \n import java.util.Date;\n import java.util.HashMap;\n@@ -26,26 +26,26 @@\n import org.apache.syncope.common.types.AttributableType;\n \n /**\n- * Virtual Attribute Value cache.\n+ * In-memory (HashMap) virtual attribute value cache implementation.\n  */\n-public final class VirAttrCache {\n+public class MemoryVirAttrCache implements VirAttrCache {\n \n     /**\n      * Elapsed time in seconds.\n      */\n-    private final int ttl;\n+    protected int ttl;\n \n     /**\n      * Max cache size.\n      */\n-    private final int maxCacheSize;\n+    protected int maxCacheSize;\n \n     /**\n      * Cache entries.\n      */\n-    private final Map<VirAttrCacheKey, VirAttrCacheValue> cache = new HashMap<VirAttrCacheKey, VirAttrCacheValue>();\n+    protected final Map<VirAttrCacheKey, VirAttrCacheValue> cache = new HashMap<VirAttrCacheKey, VirAttrCacheValue>();\n \n-    public VirAttrCache(final int ttl, final int maxCacheSize) {\n+    public MemoryVirAttrCache(final int ttl, final int maxCacheSize) {\n         this.ttl = ttl;\n         this.maxCacheSize = maxCacheSize;\n     }\n@@ -58,6 +58,7 @@ public VirAttrCache(final int ttl, final int maxCacheSize) {\n      * @param schemaName virtual attribute name\n      * @param value virtual attribute values\n      */\n+    @Override\n     public void put(\n             final AttributableType type,\n             final Long id,\n@@ -82,6 +83,7 @@ public void put(\n      * @param schemaName virtual attribute schema name.\n      * @return cached values or null if virtual attribute is not cached.\n      */\n+    @Override\n     public VirAttrCacheValue get(final AttributableType type, final Long id, final String schemaName) {\n         return cache.get(new VirAttrCacheKey(type, id, schemaName));\n     }\n@@ -93,6 +95,7 @@ public VirAttrCacheValue get(final AttributableType type, final Long id, final S\n      * @param id user or role id\n      * @param schemaName virtual attribute schema name\n      */\n+    @Override\n     public void expire(final AttributableType type, final Long id, final String schemaName) {\n         final VirAttrCacheValue value = cache.get(new VirAttrCacheKey(type, id, schemaName));\n         if (isValidEntry(value)) {\n@@ -137,6 +140,7 @@ private void free() {\n      * @param value cache entry value.\n      * @return TRUE if the value is valid; FALSE otherwise.\n      */\n+    @Override\n     public boolean isValidEntry(final VirAttrCacheValue value) {\n         final Date expiringDate = new Date(value == null ? 0 : value.getCreationDate().getTime() + ttl * 1000);\n         return expiringDate.after(new Date());","previous_filename":"core/src/main/java/org/apache/syncope/core/util/VirAttrCache.java"},{"sha":"723eb1d0683ff9cf58e0842e5e800f3c65cdbb4d","filename":"core/src/main/java/org/apache/syncope/core/cache/VirAttrCache.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCache.java?ref=96015df1b93cf14384445422baafa63f75806d9c","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.cache;\n+\n+import org.apache.syncope.common.types.AttributableType;\n+\n+/**\n+ * Virtual Attribute Value cache.\n+ */\n+public interface VirAttrCache {\n+\n+    /**\n+     * Force entry expiring.\n+     *\n+     * @param type user or role\n+     * @param id user or role id\n+     * @param schemaName virtual attribute schema name\n+     */\n+    void expire(AttributableType type, Long id, String schemaName);\n+\n+    /**\n+     * Retrieve cached value. Return null in case of virtual attribute not cached.\n+     *\n+     * @param type user or role\n+     * @param id user or role id\n+     * @param schemaName virtual attribute schema name.\n+     * @return cached values or null if virtual attribute is not cached.\n+     */\n+    VirAttrCacheValue get(AttributableType type, Long id, String schemaName);\n+\n+    /**\n+     * Cache entry is valid if and only if value exist and it is not expired.\n+     *\n+     * @param value cache entry value.\n+     * @return TRUE if the value is valid; FALSE otherwise.\n+     */\n+    boolean isValidEntry(VirAttrCacheValue value);\n+\n+    /**\n+     * Cache virtual attribute values.\n+     *\n+     * @param type user or role\n+     * @param id user or role id\n+     * @param schemaName virtual attribute name\n+     * @param value virtual attribute values\n+     */\n+    void put(AttributableType type, Long id, String schemaName, VirAttrCacheValue value);\n+\n+}"},{"sha":"b22a278d370030ee6fdd34f1a4590be3d6682065","filename":"core/src/main/java/org/apache/syncope/core/cache/VirAttrCacheKey.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCacheKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCacheKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCacheKey.java?ref=96015df1b93cf14384445422baafa63f75806d9c","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.util;\n+package org.apache.syncope.core.cache;\n \n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;","previous_filename":"core/src/main/java/org/apache/syncope/core/util/VirAttrCacheKey.java"},{"sha":"5a634f2b02800886ba4be9639cc1bae582cca86f","filename":"core/src/main/java/org/apache/syncope/core/cache/VirAttrCacheValue.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCacheValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCacheValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fcache%2FVirAttrCacheValue.java?ref=96015df1b93cf14384445422baafa63f75806d9c","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.util;\n+package org.apache.syncope.core.cache;\n \n import java.util.Date;\n import java.util.HashMap;\n@@ -80,7 +80,7 @@ public Date getLastAccessDate() {\n         return lastAccessDate;\n     }\n \n-    void setLastAccessDate(Date lastAccessDate) {\n+    void setLastAccessDate(final Date lastAccessDate) {\n         this.lastAccessDate = lastAccessDate;\n     }\n }","previous_filename":"core/src/main/java/org/apache/syncope/core/util/VirAttrCacheValue.java"},{"sha":"814e83ba45a9e7ce73a064a89e32bf170df7e665","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=96015df1b93cf14384445422baafa63f75806d9c","patch":"@@ -69,8 +69,8 @@\n import org.apache.syncope.core.util.InvalidPasswordPolicySpecException;\n import org.apache.syncope.core.util.MappingUtil;\n import org.apache.syncope.core.util.SecureRandomUtil;\n-import org.apache.syncope.core.util.VirAttrCache;\n-import org.apache.syncope.core.util.VirAttrCacheValue;\n+import org.apache.syncope.core.cache.VirAttrCache;\n+import org.apache.syncope.core.cache.VirAttrCacheValue;\n import org.apache.syncope.core.util.jexl.JexlUtil;\n import org.identityconnectors.common.Base64;\n import org.identityconnectors.common.security.GuardedByteArray;"},{"sha":"f6dc331d270a1acd15e12dc0d29fb92b4ed329c2","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=96015df1b93cf14384445422baafa63f75806d9c","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.MappingPurpose;\n+import org.apache.syncope.core.cache.VirAttrCache;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.connid.PasswordGenerator;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n@@ -208,7 +209,7 @@ public static <T extends AbstractSubject> Map.Entry<String, Set<Attribute>> prep\n             }\n         }\n \n-        final Attribute accountIdExtAttr = \n+        final Attribute accountIdExtAttr =\n                 AttributeUtil.find(attrUtil.getAccountIdItem(resource).getExtAttrName(), attributes);\n         if (accountIdExtAttr != null) {\n             attributes.remove(accountIdExtAttr);\n@@ -377,8 +378,8 @@ private static <T extends AbstractAttributable> Map.Entry<String, Attribute> pre\n                 } else {\n                     result = new AbstractMap.SimpleEntry<String, Attribute>(\n                             null, objValues.isEmpty()\n-                            ? AttributeBuilder.build(extAttrName)\n-                            : AttributeBuilder.build(extAttrName, objValues.iterator().next()));\n+                                    ? AttributeBuilder.build(extAttrName)\n+                                    : AttributeBuilder.build(extAttrName, objValues.iterator().next()));\n                 }\n             }\n         }"},{"sha":"9bb146b8bb0188b0a9a0a4633b133568c3d92bed","filename":"core/src/main/resources/coreContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96015df1b93cf14384445422baafa63f75806d9c/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml?ref=96015df1b93cf14384445422baafa63f75806d9c","patch":"@@ -141,7 +141,7 @@ under the License.\n   <task:annotation-driven executor=\"connectorExecutor\"/>\n   <task:executor id=\"connectorExecutor\" pool-size=\"10\"/>\n   \n-  <bean id=\"virAttrCache\" class=\"org.apache.syncope.core.util.VirAttrCache\" scope=\"singleton\">\n+  <bean id=\"virAttrCache\" class=\"org.apache.syncope.core.cache.MemoryVirAttrCache\" scope=\"singleton\">\n     <constructor-arg value=\"60\"/>\n     <constructor-arg value=\"5000\"/>\n   </bean>"}]}