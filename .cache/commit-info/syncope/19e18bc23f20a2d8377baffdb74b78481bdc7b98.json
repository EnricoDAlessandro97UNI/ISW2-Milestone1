{"sha":"19e18bc23f20a2d8377baffdb74b78481bdc7b98","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE5ZTE4YmMyM2YyMGEyZDgzNzdiYWZmZGI3NGI3ODQ4MWJkYzdiOTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-07-26T09:48:07Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-07-26T09:48:07Z"},"message":"[SYNCOPE-246] Collection setters removed from transfer objects + provided custom BeanUtils for handling bean collection properties copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1507238 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5179fd773880152f17055dc955e24aafafe67a5e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5179fd773880152f17055dc955e24aafafe67a5e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/19e18bc23f20a2d8377baffdb74b78481bdc7b98","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/19e18bc23f20a2d8377baffdb74b78481bdc7b98","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/19e18bc23f20a2d8377baffdb74b78481bdc7b98","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/19e18bc23f20a2d8377baffdb74b78481bdc7b98/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"76a4861d322120ac8e6a9ba21416c858243c0d55","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/76a4861d322120ac8e6a9ba21416c858243c0d55","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/76a4861d322120ac8e6a9ba21416c858243c0d55"}],"stats":{"total":2351,"additions":919,"deletions":1432},"files":[{"sha":"a9aa7c3d7a6aae7c657a33c906812dd9a7a5ce76","filename":"common/src/main/java/org/apache/syncope/common/mod/AbstractAttributableMod.java","status":"modified","additions":1,"deletions":144,"changes":145,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -76,209 +76,66 @@ public long getId() {\n         return id;\r\n     }\r\n \r\n-    public void setId(long id) {\r\n+    public void setId(final long id) {\r\n         this.id = id;\r\n     }\r\n \r\n-    /**\r\n-     * Convenience method for removing entire attribute instead removing each value in an AttributeMod object\r\n-     *\r\n-     * @param name (schema) of attribute to be removed.\r\n-     * @return true on success.\r\n-     */\r\n-    public boolean addAttributeToBeRemoved(String attribute) {\r\n-        return attributesToBeRemoved.add(attribute);\r\n-    }\r\n-\r\n-    /**\r\n-     * Convenience method for removing entire attribute instead removing each value in an AttributeMod object\r\n-     *\r\n-     * @param name (schema) of attribute to be removed.\r\n-     * @return true on success.\r\n-     */\r\n-    public boolean removeAttributeToBeRemoved(String attribute) {\r\n-        return attributesToBeRemoved.remove(attribute);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"attributesToBeRemoved\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"attributesToBeRemoved\")\r\n     public Set<String> getAttributesToBeRemoved() {\r\n         return attributesToBeRemoved;\r\n     }\r\n \r\n-    public void setAttributesToBeRemoved(Set<String> attributesToBeRemoved) {\r\n-        this.attributesToBeRemoved = attributesToBeRemoved;\r\n-    }\r\n-\r\n-    /**\r\n-     * Add an attribute modification object. AttributeMod itself indicates how the attribute should be modified.\r\n-     *\r\n-     * @param attribute modification object\r\n-     * @see AttributeMod\r\n-     * @return true on success\r\n-     */\r\n-    public boolean addAttributeToBeUpdated(AttributeMod attribute) {\r\n-        return attributesToBeUpdated.add(attribute);\r\n-    }\r\n-\r\n-    /**\r\n-     * Remove an attribute modification object. AttributeMod itself indicates how the attribute should be modified.\r\n-     *\r\n-     * @param attribute modification object\r\n-     * @see AttributeMod\r\n-     * @return true on success\r\n-     */\r\n-    public boolean removeAttributeToBeUpdated(AttributeMod attribute) {\r\n-        return attributesToBeUpdated.remove(attribute);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"attributesToBeUpdated\")\r\n     @XmlElement(name = \"attributeMod\")\r\n     @JsonProperty(\"attributesToBeUpdated\")\r\n     public Set<AttributeMod> getAttributesToBeUpdated() {\r\n         return attributesToBeUpdated;\r\n     }\r\n \r\n-    public void setAttributesToBeUpdated(Set<AttributeMod> attributesToBeUpdated) {\r\n-        this.attributesToBeUpdated = attributesToBeUpdated;\r\n-    }\r\n-\r\n-    /**\r\n-     * Add an attribute modification object. AttributeMod itself indicates how the attribute should be modified.\r\n-     *\r\n-     * @param attribute modification object\r\n-     * @see AttributeMod\r\n-     * @return true on success\r\n-     */\r\n-    public boolean addDerivedAttributeToBeAdded(String derivedAttribute) {\r\n-        return derivedAttributesToBeAdded.add(derivedAttribute);\r\n-    }\r\n-\r\n-    /**\r\n-     * Add a derivedattribute. Value is calculated by its definition.\r\n-     *\r\n-     * @param derivedAttribute\r\n-     * @return true on success\r\n-     */\r\n-    public boolean removeDerivedAttributeToBeAdded(String derivedAttribute) {\r\n-        return derivedAttributesToBeAdded.remove(derivedAttribute);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"derivedAttributesToBeAdded\")\r\n     @XmlElement(name = \"attributeName\")\r\n     @JsonProperty(\"derivedAttributesToBeAdded\")\r\n     public Set<String> getDerivedAttributesToBeAdded() {\r\n         return derivedAttributesToBeAdded;\r\n     }\r\n \r\n-    public void setDerivedAttributesToBeAdded(Set<String> derivedAttributesToBeAdded) {\r\n-\r\n-        this.derivedAttributesToBeAdded = derivedAttributesToBeAdded;\r\n-    }\r\n-\r\n-    public boolean addDerivedAttributeToBeRemoved(String derivedAttribute) {\r\n-        return derivedAttributesToBeRemoved.add(derivedAttribute);\r\n-    }\r\n-\r\n-    public boolean removeDerivedAttributeToBeRemoved(String derivedAttribute) {\r\n-        return derivedAttributesToBeRemoved.remove(derivedAttribute);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"derivedAttributesToBeRemoved\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"derivedAttributesToBeRemoved\")\r\n     public Set<String> getDerivedAttributesToBeRemoved() {\r\n         return derivedAttributesToBeRemoved;\r\n     }\r\n \r\n-    public void setDerivedAttributesToBeRemoved(Set<String> derivedAttributesToBeRemoved) {\r\n-\r\n-        this.derivedAttributesToBeRemoved = derivedAttributesToBeRemoved;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"virtualAttributesToBeRemoved\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"virtualAttributesToBeRemoved\")\r\n     public Set<String> getVirtualAttributesToBeRemoved() {\r\n         return virtualAttributesToBeRemoved;\r\n     }\r\n \r\n-    public boolean addVirtualAttributeToBeRemoved(String virtualAttributeToBeRemoved) {\r\n-\r\n-        return virtualAttributesToBeRemoved.add(virtualAttributeToBeRemoved);\r\n-    }\r\n-\r\n-    public boolean removeVirtualAttributeToBeRemoved(String virtualAttributeToBeRemoved) {\r\n-\r\n-        return virtualAttributesToBeRemoved.remove(virtualAttributeToBeRemoved);\r\n-    }\r\n-\r\n-    public void setVirtualAttributesToBeRemoved(Set<String> virtualAttributesToBeRemoved) {\r\n-\r\n-        this.virtualAttributesToBeRemoved = virtualAttributesToBeRemoved;\r\n-    }\r\n-\r\n-    public boolean addVirtualAttributeToBeUpdated(AttributeMod virtualAttributeToBeUpdated) {\r\n-\r\n-        return virtualAttributesToBeUpdated.add(virtualAttributeToBeUpdated);\r\n-    }\r\n-\r\n-    public boolean removeVirtualAttributeToBeUpdated(AttributeMod virtualAttributeToBeUpdated) {\r\n-\r\n-        return virtualAttributesToBeUpdated.remove(virtualAttributeToBeUpdated);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"virtualAttributesToBeUpdated\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"virtualAttributesToBeUpdated\")\r\n     public Set<AttributeMod> getVirtualAttributesToBeUpdated() {\r\n         return virtualAttributesToBeUpdated;\r\n     }\r\n \r\n-    public void setVirtualAttributesToBeUpdated(Set<AttributeMod> virtualAttributesToBeUpdated) {\r\n-\r\n-        this.virtualAttributesToBeUpdated = virtualAttributesToBeUpdated;\r\n-    }\r\n-\r\n-    public boolean addResourceToBeAdded(String resource) {\r\n-        return resourcesToBeAdded.add(resource);\r\n-    }\r\n-\r\n-    public boolean removeResourceToBeAdded(String resource) {\r\n-        return resourcesToBeAdded.remove(resource);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"resourcesToBeAdded\")\r\n     @XmlElement(name = \"resource\")\r\n     @JsonProperty(\"resourcesToBeAdded\")\r\n     public Set<String> getResourcesToBeAdded() {\r\n         return resourcesToBeAdded;\r\n     }\r\n \r\n-    public void setResourcesToBeAdded(Set<String> resourcesToBeAdded) {\r\n-        this.resourcesToBeAdded = resourcesToBeAdded;\r\n-    }\r\n-\r\n-    public boolean addResourceToBeRemoved(String resource) {\r\n-        return resourcesToBeRemoved.add(resource);\r\n-    }\r\n-\r\n-    public boolean removeResourceToBeRemoved(String resource) {\r\n-        return resourcesToBeRemoved.remove(resource);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"resourcesToBeRemoved\")\r\n     @XmlElement(name = \"resource\")\r\n     @JsonProperty(\"resourcesToBeRemoved\")\r\n     public Set<String> getResourcesToBeRemoved() {\r\n         return resourcesToBeRemoved;\r\n     }\r\n \r\n-    public void setResourcesToBeRemoved(Set<String> resourcesToBeRemoved) {\r\n-        this.resourcesToBeRemoved = resourcesToBeRemoved;\r\n-    }\r\n-\r\n     /**\r\n      * @return true is all backing Sets are empty.\r\n      */\r"},{"sha":"4b51c4b42fc7fd42eb84ddc97114ec863a60724d","filename":"common/src/main/java/org/apache/syncope/common/mod/AttributeMod.java","status":"modified","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAttributeMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAttributeMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAttributeMod.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -57,44 +57,20 @@ public void setSchema(String schema) {\n         this.schema = schema;\r\n     }\r\n \r\n-    public boolean addValueToBeAdded(String value) {\r\n-        return valuesToBeAdded.add(value);\r\n-    }\r\n-\r\n-    public boolean removeValueToBeAdded(String value) {\r\n-        return valuesToBeAdded.remove(value);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"valuesToBeAdded\")\r\n     @XmlElement(name = \"value\")\r\n     @JsonProperty(\"valuesToBeAdded\")\r\n     public List<String> getValuesToBeAdded() {\r\n         return valuesToBeAdded;\r\n     }\r\n \r\n-    public void setValuesToBeAdded(List<String> valuesToBeAdded) {\r\n-        this.valuesToBeAdded = valuesToBeAdded;\r\n-    }\r\n-\r\n-    public boolean addValueToBeRemoved(String value) {\r\n-        return valuesToBeRemoved.add(value);\r\n-    }\r\n-\r\n-    public boolean removeValueToBeRemoved(String value) {\r\n-        return valuesToBeRemoved.remove(value);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"valuesToBeRemoved\")\r\n     @XmlElement(name = \"value\")\r\n     @JsonProperty(\"valuesToBeRemoved\")\r\n     public List<String> getValuesToBeRemoved() {\r\n         return valuesToBeRemoved;\r\n     }\r\n \r\n-    public void setValuesToBeRemoved(List<String> valuesToBeRemoved) {\r\n-        this.valuesToBeRemoved = valuesToBeRemoved;\r\n-    }\r\n-\r\n     @JsonIgnore\r\n     public boolean isEmpty() {\r\n         return valuesToBeAdded.isEmpty() && valuesToBeRemoved.isEmpty();\r"},{"sha":"c24293595aaf7542306b6ec5b0de197f96822b21","filename":"common/src/main/java/org/apache/syncope/common/mod/MembershipMod.java","status":"modified","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -44,16 +44,6 @@ public void setRole(long role) {\n         this.role = role;\r\n     }\r\n \r\n-    @Override\r\n-    public boolean addResourceToBeAdded(String resource) {\r\n-        return false;\r\n-    }\r\n-\r\n-    @Override\r\n-    public boolean addResourceToBeRemoved(String resource) {\r\n-        return false;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"resourcesToBeAdded\")\r\n     @XmlElement(name = \"resource\")\r\n     @JsonProperty(\"resourcesToBeAdded\")\r\n@@ -70,24 +60,6 @@ public Set<String> getResourcesToBeRemoved() {\n         return Collections.emptySet();\r\n     }\r\n \r\n-    @Override\r\n-    public boolean removeResourceToBeAdded(String resource) {\r\n-        return false;\r\n-    }\r\n-\r\n-    @Override\r\n-    public boolean removeResourceToBeRemoved(String resource) {\r\n-        return false;\r\n-    }\r\n-\r\n-    @Override\r\n-    public void setResourcesToBeAdded(Set<String> resourcesToBeAdded) {\r\n-    }\r\n-\r\n-    @Override\r\n-    public void setResourcesToBeRemoved(Set<String> resourcesToBeRemoved) {\r\n-    }\r\n-\r\n     @JsonIgnore\r\n     @Override\r\n     public boolean isEmpty() {\r"},{"sha":"70bbcd303a22d69a6fb3e94e83f41ff14dbc4f79","filename":"common/src/main/java/org/apache/syncope/common/mod/ReferenceMod.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FReferenceMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FReferenceMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FReferenceMod.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -48,7 +48,7 @@ public Long getId() {\n         return id;\r\n     }\r\n \r\n-    public void setId(Long id) {\r\n+    public void setId(final Long id) {\r\n         this.id = id;\r\n     }\r\n }\r"},{"sha":"59dee41cb946031338b3c704a7453ff928a47906","filename":"common/src/main/java/org/apache/syncope/common/mod/RoleMod.java","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -20,6 +20,7 @@\n \r\n import com.fasterxml.jackson.annotation.JsonIgnore;\r\n import com.fasterxml.jackson.annotation.JsonProperty;\r\n+import java.util.ArrayList;\r\n import java.util.List;\r\n \r\n import javax.xml.bind.annotation.XmlElement;\r\n@@ -51,7 +52,9 @@ public class RoleMod extends AbstractAttributableMod {\n \r\n     private Boolean inheritPasswordPolicy;\r\n \r\n-    private List<String> entitlements;\r\n+    private boolean modEntitlements;\r\n+    \r\n+    private List<String> entitlements = new ArrayList<String>();\r\n \r\n     private ReferenceMod passwordPolicy;\r\n \r\n@@ -113,17 +116,21 @@ public void setInheritVirtualAttributes(final Boolean inheritVirtualAttributes)\n         this.inheritVirtualAttributes = inheritVirtualAttributes;\r\n     }\r\n \r\n+    public boolean isModEntitlements() {\r\n+        return modEntitlements;\r\n+    }\r\n+\r\n+    public void setModEntitlements(final boolean modEntitlements) {\r\n+        this.modEntitlements = modEntitlements;\r\n+    }    \r\n+\r\n     @XmlElementWrapper(name = \"entitlements\")\r\n     @XmlElement(name = \"entitlement\")\r\n     @JsonProperty(\"entitlements\")\r\n     public List<String> getEntitlements() {\r\n         return entitlements;\r\n     }\r\n \r\n-    public void setEntitlements(final List<String> entitlements) {\r\n-        this.entitlements = entitlements;\r\n-    }\r\n-\r\n     public ReferenceMod getPasswordPolicy() {\r\n         return passwordPolicy;\r\n     }\r"},{"sha":"72d1a6aeb33eac3d729cabd12de9ab798aa7d06b","filename":"common/src/main/java/org/apache/syncope/common/mod/UserMod.java","status":"modified","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -74,47 +74,13 @@ public Set<MembershipMod> getMembershipsToBeAdded() {\n         return membershipsToBeAdded;\r\n     }\r\n \r\n-    public boolean addMembershipToBeAdded(final MembershipMod membershipMod) {\r\n-        return membershipsToBeAdded.add(membershipMod);\r\n-    }\r\n-\r\n-    public boolean removeMembershipToBeAdded(final MembershipMod membershipMod) {\r\n-        return membershipsToBeAdded.remove(membershipMod);\r\n-    }\r\n-\r\n-    public void setMembershipsToBeAdded(final Set<MembershipMod> membershipsToBeAdded) {\r\n-        if (this.membershipsToBeAdded != membershipsToBeAdded) {\r\n-            this.membershipsToBeAdded.clear();\r\n-            if (membershipsToBeAdded != null && !membershipsToBeAdded.isEmpty()) {\r\n-                this.membershipsToBeAdded.addAll(membershipsToBeAdded);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"membershipsToBeRemoved\")\r\n     @XmlElement(name = \"membership\")\r\n     @JsonProperty(\"membershipsToBeRemoved\")\r\n     public Set<Long> getMembershipsToBeRemoved() {\r\n         return membershipsToBeRemoved;\r\n     }\r\n \r\n-    public boolean addMembershipToBeRemoved(final Long membershipToBeRemoved) {\r\n-        return membershipsToBeRemoved.add(membershipToBeRemoved);\r\n-    }\r\n-\r\n-    public boolean removeMembershipToBeRemoved(final Long membershipToBeRemoved) {\r\n-        return membershipsToBeRemoved.remove(membershipToBeRemoved);\r\n-    }\r\n-\r\n-    public void setMembershipsToBeRemoved(final Set<Long> membershipsToBeRemoved) {\r\n-        if (this.membershipsToBeRemoved != membershipsToBeRemoved) {\r\n-            this.membershipsToBeRemoved.clear();\r\n-            if (membershipsToBeRemoved != null && !membershipsToBeRemoved.isEmpty()) {\r\n-                this.membershipsToBeRemoved.addAll(membershipsToBeRemoved);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n     public PropagationRequestTO getPwdPropRequest() {\r\n         return pwdPropRequest;\r\n     }\r"},{"sha":"2d3691b708a92e90c589f43e20db45db22c83d3a","filename":"common/src/main/java/org/apache/syncope/common/report/RoleReportletConf.java","status":"modified","additions":5,"deletions":21,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FRoleReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FRoleReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FRoleReportletConf.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -84,19 +84,18 @@ public List<String> getAttrs() {\n         return attrs;\n     }\n \n-    public void setAttrs(final List<String> attrs) {\n-        this.attrs = attrs;\n-    }\n-\n     @XmlElementWrapper(name = \"derivedAttributes\")\n     @XmlElement(name = \"attribute\")\n     @JsonProperty(\"derivedAttributes\")\n     public List<String> getDerAttrs() {\n         return derAttrs;\n     }\n \n-    public void setDerAttrs(final List<String> derAttrs) {\n-        this.derAttrs = derAttrs;\n+    @XmlElementWrapper(name = \"virtualAttributes\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"virtualAttributes\")\n+    public List<String> getVirAttrs() {\n+        return virAttrs;\n     }\n \n     @XmlElementWrapper(name = \"features\")\n@@ -106,26 +105,11 @@ public List<Feature> getFeatures() {\n         return features;\n     }\n \n-    public void setFeatures(final List<Feature> features) {\n-        this.features = features;\n-    }\n-\n     public NodeCond getMatchingCond() {\n         return matchingCond;\n     }\n \n     public void setMatchingCond(final NodeCond matchingCond) {\n         this.matchingCond = matchingCond;\n     }\n-\n-    @XmlElementWrapper(name = \"virtualAttributes\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virtualAttributes\")\n-    public List<String> getVirAttrs() {\n-        return virAttrs;\n-    }\n-\n-    public void setVirAttrs(final List<String> virAttrs) {\n-        this.virAttrs = virAttrs;\n-    }\n }"},{"sha":"ef618fc9a39dd179cae1bace5c8a4be732549dea","filename":"common/src/main/java/org/apache/syncope/common/report/StaticReportletConf.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FStaticReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FStaticReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FStaticReportletConf.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -84,10 +84,6 @@ public List<String> getListField() {\n         return listField;\r\n     }\r\n \r\n-    public void setListField(List<String> listField) {\r\n-        this.listField = listField;\r\n-    }\r\n-\r\n     public Long getLongField() {\r\n         return longField;\r\n     }\r"},{"sha":"bbed2b465aa341c80eb56599ed9e4c404b1448ae","filename":"common/src/main/java/org/apache/syncope/common/report/UserReportletConf.java","status":"modified","additions":9,"deletions":30,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FUserReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FUserReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freport%2FUserReportletConf.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -59,27 +59,22 @@ public enum Feature {\n     private NodeCond matchingCond;\r\n \r\n     @FormAttributeField(schema = IntMappingType.UserSchema)\r\n-    private List<String> attrs;\r\n+    private List<String> attrs = new ArrayList<String>();\r\n \r\n     @FormAttributeField(schema = IntMappingType.UserDerivedSchema)\r\n-    private List<String> derAttrs;\r\n+    private List<String> derAttrs = new ArrayList<String>();\r\n \r\n     @FormAttributeField(schema = IntMappingType.UserVirtualSchema)\r\n-    private List<String> virAttrs;\r\n+    private List<String> virAttrs = new ArrayList<String>();\r\n \r\n-    private List<Feature> features;\r\n+    private List<Feature> features = new ArrayList<Feature>();\r\n \r\n     public UserReportletConf() {\r\n         super();\r\n     }\r\n \r\n     public UserReportletConf(final String name) {\r\n         super(name);\r\n-\r\n-        attrs = new ArrayList<String>();\r\n-        derAttrs = new ArrayList<String>();\r\n-        virAttrs = new ArrayList<String>();\r\n-        features = new ArrayList<Feature>();\r\n     }\r\n \r\n     @XmlElementWrapper(name = \"attributes\")\r\n@@ -89,19 +84,18 @@ public List<String> getAttrs() {\n         return attrs;\r\n     }\r\n \r\n-    public void setAttrs(final List<String> attrs) {\r\n-        this.attrs = attrs;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"derivedAttributes\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"derivedAttributes\")\r\n     public List<String> getDerAttrs() {\r\n         return derAttrs;\r\n     }\r\n \r\n-    public void setDerAttrs(final List<String> derAttrs) {\r\n-        this.derAttrs = derAttrs;\r\n+    @XmlElementWrapper(name = \"virtualAttributes\")\r\n+    @XmlElement(name = \"attribute\")\r\n+    @JsonProperty(\"virtualAttributes\")\r\n+    public List<String> getVirAttrs() {\r\n+        return virAttrs;\r\n     }\r\n \r\n     @XmlElementWrapper(name = \"features\")\r\n@@ -111,26 +105,11 @@ public List<Feature> getFeatures() {\n         return features;\r\n     }\r\n \r\n-    public void setFeatures(final List<Feature> features) {\r\n-        this.features = features;\r\n-    }\r\n-\r\n     public NodeCond getMatchingCond() {\r\n         return matchingCond;\r\n     }\r\n \r\n     public void setMatchingCond(final NodeCond matchingCond) {\r\n         this.matchingCond = matchingCond;\r\n     }\r\n-\r\n-    @XmlElementWrapper(name = \"virtualAttributes\")\r\n-    @XmlElement(name = \"attribute\")\r\n-    @JsonProperty(\"virtualAttributes\")\r\n-    public List<String> getVirAttrs() {\r\n-        return virAttrs;\r\n-    }\r\n-\r\n-    public void setVirAttrs(final List<String> virAttrs) {\r\n-        this.virAttrs = virAttrs;\r\n-    }\r\n }\r"},{"sha":"9e7f869597f7c9c01cdee95306461f3817dadb6c","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractAttributableTO.java","status":"modified","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -97,67 +97,27 @@ public Map<String, AttributeTO> getVirtualAttributeMap() {\n         return result;\r\n     }\r\n \r\n-    public boolean addDerivedAttribute(final AttributeTO derivedAttribute) {\r\n-        return derivedAttributes.add(derivedAttribute);\r\n-    }\r\n-\r\n-    public boolean removeDerivedAttribute(final AttributeTO derivedAttribute) {\r\n-        return derivedAttributes.remove(derivedAttribute);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"derivedAttributes\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"derivedAttributes\")\r\n     public List<AttributeTO> getDerivedAttributes() {\r\n         return derivedAttributes;\r\n     }\r\n \r\n-    public void setDerivedAttributes(final List<AttributeTO> derivedAttributes) {\r\n-        this.derivedAttributes = derivedAttributes;\r\n-    }\r\n-\r\n-    public boolean addVirtualAttribute(final AttributeTO virtualAttribute) {\r\n-        return virtualAttributes.add(virtualAttribute);\r\n-    }\r\n-\r\n-    public boolean removeVirtualAttribute(final AttributeTO virtualAttribute) {\r\n-        return virtualAttributes.remove(virtualAttribute);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"virtualAttributes\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"virtualAttributes\")\r\n     public List<AttributeTO> getVirtualAttributes() {\r\n         return virtualAttributes;\r\n     }\r\n \r\n-    public void setVirtualAttributes(final List<AttributeTO> virtualAttributes) {\r\n-        this.virtualAttributes = virtualAttributes;\r\n-    }\r\n-\r\n-    public boolean addResource(final String resource) {\r\n-        return resources.add(resource);\r\n-    }\r\n-\r\n-    public boolean removeResource(final String resource) {\r\n-        return resources.remove(resource);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"resources\")\r\n     @XmlElement(name = \"resource\")\r\n     @JsonProperty(\"resources\")\r\n     public Set<String> getResources() {\r\n         return resources;\r\n     }\r\n \r\n-    public void setResources(final Set<String> resources) {\r\n-        this.resources = resources;\r\n-    }\r\n-\r\n-    public boolean addPropagationTO(final PropagationStatusTO status) {\r\n-        return propagationStatusTOs.add(status);\r\n-    }\r\n-\r\n     public boolean removePropagationTO(final String resource) {\r\n         if (resource != null && getPropagationStatusTOs().isEmpty()) {\r\n             final List<PropagationStatusTO> toBeRemoved = new ArrayList<PropagationStatusTO>();\r\n@@ -179,11 +139,4 @@ public boolean removePropagationTO(final String resource) {\n     public List<PropagationStatusTO> getPropagationStatusTOs() {\r\n         return propagationStatusTOs;\r\n     }\r\n-\r\n-    public void setPropagationStatusTOs(final List<PropagationStatusTO> propagationStatusTOs) {\r\n-        if (this.propagationStatusTOs != propagationStatusTOs) {\r\n-            this.propagationStatusTOs.clear();\r\n-            this.propagationStatusTOs.addAll(propagationStatusTOs);\r\n-        }\r\n-    }\r\n }\r"},{"sha":"8ee9125448a7af1d4433f012715a753e5ccda4f5","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractTaskTO.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractTaskTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -68,25 +68,13 @@ public void setLatestExecStatus(final String latestExecStatus) {\n         this.latestExecStatus = latestExecStatus;\r\n     }\r\n \r\n-    public boolean addExecution(final TaskExecTO execution) {\r\n-        return executions.add(execution);\r\n-    }\r\n-\r\n-    public boolean removeExecution(final TaskExecTO execution) {\r\n-        return executions.remove(execution);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"excecutions\")\r\n     @XmlElement(name = \"excecution\")\r\n     @JsonProperty(\"excecutions\")\r\n     public List<TaskExecTO> getExecutions() {\r\n         return executions;\r\n     }\r\n \r\n-    public void setExecutions(final List<TaskExecTO> executions) {\r\n-        this.executions = executions;\r\n-    }\r\n-\r\n     public Date getStartDate() {\r\n         return startDate == null\r\n                 ? null\r"},{"sha":"fa78c250ff8597608882bd28e76f0a7454083a5e","filename":"common/src/main/java/org/apache/syncope/common/to/AttributeTO.java","status":"modified","additions":0,"deletions":29,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -74,26 +74,6 @@ public void setSchema(final String schema) {\n \r\n     }\r\n \r\n-    /**\r\n-     * @param value an attribute value to be added\r\n-     * @return whether the operation succeeded or not\r\n-     */\r\n-    public boolean addValue(final String value) {\r\n-        return value == null || isReadonly()\r\n-                ? false\r\n-                : values.add(value);\r\n-    }\r\n-\r\n-    /**\r\n-     * @param value an attribute value to be removed\r\n-     * @return whether the operation succeeded or not\r\n-     */\r\n-    public boolean removeValue(final String value) {\r\n-        return value == null || isReadonly()\r\n-                ? false\r\n-                : values.remove(value);\r\n-    }\r\n-\r\n     /**\r\n      * @return attribute values as strings\r\n      */\r\n@@ -104,15 +84,6 @@ public List<String> getValues() {\n         return values;\r\n     }\r\n \r\n-    /**\r\n-     * @param values set of (string) values\r\n-     */\r\n-    public void setValues(final List<String> values) {\r\n-        if (!isReadonly()) {\r\n-            this.values = values;\r\n-        }\r\n-    }\r\n-\r\n     public boolean isReadonly() {\r\n         return readonly;\r\n     }\r"},{"sha":"f400ebe78fb484d427efae7108a9e5514237c2e2","filename":"common/src/main/java/org/apache/syncope/common/to/ConnBundleTO.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnBundleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnBundleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnBundleTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -94,16 +94,4 @@ public String getVersion() {\n     public void setVersion(final String version) {\r\n         this.version = version;\r\n     }\r\n-\r\n-    public void setProperties(final List<ConnConfPropSchema> properties) {\r\n-        this.properties = properties;\r\n-    }\r\n-\r\n-    public boolean addProperty(final ConnConfPropSchema property) {\r\n-        return properties.add(property);\r\n-    }\r\n-\r\n-    public boolean removeProperty(final ConnConfPropSchema property) {\r\n-        return properties.remove(property);\r\n-    }\r\n }\r"},{"sha":"eb09aacba0cb54b7efa8da8fca77ae319ceda060","filename":"common/src/main/java/org/apache/syncope/common/to/ConnInstanceTO.java","status":"modified","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnInstanceTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -129,47 +129,13 @@ public Map<String, ConnConfProperty> getConfigurationMap() {\n         return result;\r\n     }\r\n \r\n-    public boolean addConfiguration(final ConnConfProperty property) {\r\n-        return this.configuration.add(property);\r\n-    }\r\n-\r\n-    public boolean removeConfiguration(final ConnConfProperty property) {\r\n-        return this.configuration.remove(property);\r\n-    }\r\n-\r\n-    public void setConfiguration(final Set<ConnConfProperty> configuration) {\r\n-        if (this.configuration != configuration) {\r\n-            this.configuration.clear();\r\n-            if (configuration != null && !configuration.isEmpty()) {\r\n-                this.configuration.addAll(configuration);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    public boolean addCapability(final ConnectorCapability capability) {\r\n-        return capabilities.add(capability);\r\n-    }\r\n-\r\n-    public boolean removeCapability(final ConnectorCapability capability) {\r\n-        return capabilities.remove(capability);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"capabilities\")\r\n     @XmlElement(name = \"capability\")\r\n     @JsonProperty(\"capabilities\")\r\n     public Set<ConnectorCapability> getCapabilities() {\r\n         return capabilities;\r\n     }\r\n \r\n-    public void setCapabilities(final Set<ConnectorCapability> capabilities) {\r\n-        if (this.capabilities != capabilities) {\r\n-            this.capabilities.clear();\r\n-            if (capabilities != null && !capabilities.isEmpty()) {\r\n-                this.capabilities.addAll(capabilities);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n     public String getDisplayName() {\r\n         return displayName;\r\n     }\r"},{"sha":"354ecf4e8bd0e081afc4fa8ab6d915793d92c47d","filename":"common/src/main/java/org/apache/syncope/common/to/ConnObjectTO.java","status":"modified","additions":1,"deletions":19,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -36,21 +36,7 @@ public class ConnObjectTO extends AbstractSysInfoTO {\n \r\n     private static final long serialVersionUID = 5139554911265442497L;\r\n \r\n-    private List<AttributeTO> attributes;\r\n-\r\n-    public ConnObjectTO() {\r\n-        super();\r\n-\r\n-        attributes = new ArrayList<AttributeTO>();\r\n-    }\r\n-\r\n-    public boolean addAttribute(final AttributeTO attribute) {\r\n-        return attributes.add(attribute);\r\n-    }\r\n-\r\n-    public boolean removeAttribute(final AttributeTO attribute) {\r\n-        return attributes.remove(attribute);\r\n-    }\r\n+    private List<AttributeTO> attributes = new ArrayList<AttributeTO>();\r\n \r\n     @XmlElementWrapper(name = \"attributes\")\r\n     @XmlElement(name = \"attribute\")\r\n@@ -59,10 +45,6 @@ public List<AttributeTO> getAttributes() {\n         return attributes;\r\n     }\r\n \r\n-    public void setAttributes(final List<AttributeTO> attributes) {\r\n-        this.attributes = attributes;\r\n-    }\r\n-\r\n     @JsonIgnore\r\n     public Map<String, AttributeTO> getAttributeMap() {\r\n         Map<String, AttributeTO> result;\r"},{"sha":"69c2d8e896688a362f93d135e51d6d5d081d463a","filename":"common/src/main/java/org/apache/syncope/common/to/MappingTO.java","status":"modified","additions":1,"deletions":17,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -20,7 +20,6 @@\n \r\n import com.fasterxml.jackson.annotation.JsonProperty;\r\n import java.util.ArrayList;\r\n-import java.util.Collection;\r\n import java.util.List;\r\n \r\n import javax.xml.bind.annotation.XmlElement;\r\n@@ -39,13 +38,7 @@ public class MappingTO extends AbstractBaseBean {\n \r\n     private String accountLink;\r\n \r\n-    private final List<MappingItemTO> items;\r\n-\r\n-    public MappingTO() {\r\n-        super();\r\n-\r\n-        items = new ArrayList<MappingItemTO>();\r\n-    }\r\n+    private final List<MappingItemTO> items = new ArrayList<MappingItemTO>();\r\n \r\n     public String getAccountLink() {\r\n         return accountLink;\r\n@@ -127,13 +120,4 @@ public boolean addItem(final MappingItemTO item) {\n     public boolean removeItem(final MappingItemTO item) {\r\n         return this.items.remove(item);\r\n     }\r\n-\r\n-    public void setItems(final Collection<MappingItemTO> items) {\r\n-        if (this.items != items) {\r\n-            this.items.clear();\r\n-            if (items != null && !items.isEmpty()) {\r\n-                this.items.addAll(items);\r\n-            }\r\n-        }\r\n-    }\r\n }\r"},{"sha":"6be9d62550e5d209caf889d0d0a7637679282c9c","filename":"common/src/main/java/org/apache/syncope/common/to/MembershipTO.java","status":"modified","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -54,16 +54,6 @@ public void setRoleName(String roleName) {\n         this.roleName = roleName;\r\n     }\r\n \r\n-    @Override\r\n-    public boolean addResource(String resource) {\r\n-        return false;\r\n-    }\r\n-\r\n-    @Override\r\n-    public boolean removeResource(String resource) {\r\n-        return false;\r\n-    }\r\n-\r\n     @Override\r\n     @XmlElementWrapper(name = \"resources\")\r\n     @XmlElement(name = \"resource\")\r\n@@ -72,26 +62,8 @@ public Set<String> getResources() {\n         return Collections.<String>emptySet();\r\n     }\r\n \r\n-    @Override\r\n-    public void setResources(Set<String> resources) {\r\n-    }\r\n-\r\n-    @Override\r\n-    public boolean addPropagationTO(PropagationStatusTO status) {\r\n-        return false;\r\n-    }\r\n-\r\n-    @Override\r\n-    public boolean removePropagationTO(String resource) {\r\n-        return false;\r\n-    }\r\n-\r\n     @Override\r\n     public List<PropagationStatusTO> getPropagationStatusTOs() {\r\n         return Collections.<PropagationStatusTO>emptyList();\r\n     }\r\n-\r\n-    @Override\r\n-    public void setPropagationStatusTOs(List<PropagationStatusTO> propagationTOs) {\r\n-    }\r\n }\r"},{"sha":"b5ed89e0d7491eba1385cddaf4deb8f82cfec9cf","filename":"common/src/main/java/org/apache/syncope/common/to/NotificationTO.java","status":"modified","additions":2,"deletions":18,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -40,7 +40,7 @@ public class NotificationTO extends AbstractBaseBean {\n \r\n     private Long id;\r\n \r\n-    private List<String> events;\r\n+    private List<String> events = new ArrayList<String>();\r\n \r\n     private NodeCond about;\r\n \r\n@@ -60,15 +60,11 @@ public class NotificationTO extends AbstractBaseBean {\n \r\n     private TraceLevel traceLevel;\r\n \r\n-    public NotificationTO() {\r\n-        events = new ArrayList<String>();\r\n-    }\r\n-\r\n     public NodeCond getAbout() {\r\n         return about;\r\n     }\r\n \r\n-    public void setAbout(NodeCond about) {\r\n+    public void setAbout(final NodeCond about) {\r\n         this.about = about;\r\n     }\r\n \r\n@@ -79,18 +75,6 @@ public List<String> getEvents() {\n         return events;\r\n     }\r\n \r\n-    public boolean addEvent(final String event) {\r\n-        return event != null && !events.contains(event) && events.add(event);\r\n-    }\r\n-\r\n-    public boolean removeEvent(final String event) {\r\n-        return event != null && events.remove(event);\r\n-    }\r\n-\r\n-    public void setEvents(List<String> events) {\r\n-        this.events = events;\r\n-    }\r\n-\r\n     public Long getId() {\r\n         return id;\r\n     }\r"},{"sha":"1d518c2a44e77eda75ef244a5d5969f75b43f681","filename":"common/src/main/java/org/apache/syncope/common/to/NotificationTaskTO.java","status":"modified","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTaskTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -56,23 +56,6 @@ public Set<String> getRecipients() {\n         return recipients;\r\n     }\r\n \r\n-    public boolean addRecipient(final String recipient) {\r\n-        return recipients.add(recipient);\r\n-    }\r\n-\r\n-    public boolean removeRecipient(final String recipient) {\r\n-        return recipients.remove(recipient);\r\n-    }\r\n-\r\n-    public void setRecipients(final Set<String> recipients) {\r\n-        if (this.recipients != recipients) {\r\n-            this.recipients.clear();\r\n-            if (recipients != null) {\r\n-                this.recipients.addAll(recipients);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n     public String getSender() {\r\n         return sender;\r\n     }\r"},{"sha":"2948689c025eb4cfc73d09fc97f455079c3b1972","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationRequestTO.java","status":"modified","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationRequestTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -66,21 +66,4 @@ public void setOnSyncope(final boolean onSyncope) {\n     public Set<String> getResources() {\n         return resources;\n     }\n-\n-    public boolean addResource(final String resource) {\n-        return this.resources.add(resource);\n-    }\n-\n-    public boolean removeResource(final String resource) {\n-        return this.resources.remove(resource);\n-    }\n-\n-    public void setResources(final Set<String> resources) {\n-        if (this.resources != resources) {\n-            this.resources.clear();\n-            if (resources != null && !resources.isEmpty()) {\n-                this.resources.addAll(resources);\n-            }\n-        }\n-    }\n }"},{"sha":"ceb6ec1a4bfb0225a57914e36394dfc71f8a9f93","filename":"common/src/main/java/org/apache/syncope/common/to/ReportExecTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FReportExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FReportExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FReportExecTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -21,7 +21,7 @@\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n-@XmlRootElement(name = \"executionReport\")\r\n+@XmlRootElement(name = \"reportExec\")\r\n @XmlType\r\n public class ReportExecTO extends AbstractExecTO {\r\n \r"},{"sha":"1fe2ef23f007ba069a1d09d4eadba64956ff894e","filename":"common/src/main/java/org/apache/syncope/common/to/ReportTO.java","status":"modified","additions":2,"deletions":33,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FReportTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FReportTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FReportTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -45,11 +45,11 @@ public class ReportTO extends AbstractBaseBean {\n \r\n     private String name;\r\n \r\n-    private List<AbstractReportletConf> reportletConfs;\r\n+    private List<AbstractReportletConf> reportletConfs = new ArrayList<AbstractReportletConf>();\r\n \r\n     private String cronExpression;\r\n \r\n-    private List<ReportExecTO> executions;\r\n+    private List<ReportExecTO> executions = new ArrayList<ReportExecTO>();\r\n \r\n     private String latestExecStatus;\r\n \r\n@@ -61,13 +61,6 @@ public class ReportTO extends AbstractBaseBean {\n \r\n     private Date endDate;\r\n \r\n-    public ReportTO() {\r\n-        super();\r\n-\r\n-        reportletConfs = new ArrayList<AbstractReportletConf>();\r\n-        executions = new ArrayList<ReportExecTO>();\r\n-    }\r\n-\r\n     public long getId() {\r\n         return id;\r\n     }\r\n@@ -84,25 +77,13 @@ public void setName(String name) {\n         this.name = name;\r\n     }\r\n \r\n-    public boolean addReportletConf(AbstractReportletConf reportlet) {\r\n-        return this.reportletConfs.add(reportlet);\r\n-    }\r\n-\r\n-    public boolean removeReportletConf(AbstractReportletConf reportlet) {\r\n-        return this.reportletConfs.remove(reportlet);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"reportletConfs\")\r\n     @XmlElement(name = \"reportletConf\")\r\n     @JsonProperty(\"reportletConfs\")\r\n     public List<AbstractReportletConf> getReportletConfs() {\r\n         return reportletConfs;\r\n     }\r\n \r\n-    public void setReportletConfs(List<AbstractReportletConf> reportlets) {\r\n-        this.reportletConfs = reportlets;\r\n-    }\r\n-\r\n     public String getCronExpression() {\r\n         return cronExpression;\r\n     }\r\n@@ -111,25 +92,13 @@ public void setCronExpression(String cronExpression) {\n         this.cronExpression = cronExpression;\r\n     }\r\n \r\n-    public boolean addExecution(ReportExecTO execution) {\r\n-        return executions.add(execution);\r\n-    }\r\n-\r\n-    public boolean removeExecution(ReportExecTO execution) {\r\n-        return executions.remove(execution);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"executions\")\r\n     @XmlElement(name = \"execution\")\r\n     @JsonProperty(\"executions\")\r\n     public List<ReportExecTO> getExecutions() {\r\n         return executions;\r\n     }\r\n \r\n-    public void setExecutions(List<ReportExecTO> executions) {\r\n-        this.executions = executions;\r\n-    }\r\n-\r\n     public String getLatestExecStatus() {\r\n         return latestExecStatus;\r\n     }\r"},{"sha":"36d36432a4d42d919338ad8b9b5667dd458e02b9","filename":"common/src/main/java/org/apache/syncope/common/to/ResourceTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -234,10 +234,6 @@ public Set<ConnConfProperty> getConnConfProperties() {\n         return connConfProperties;\r\n     }\r\n \r\n-    public void setConnConfProperties(final Set<ConnConfProperty> connConfProperties) {\r\n-        this.connConfProperties = connConfProperties;\r\n-    }\r\n-\r\n     public TraceLevel getSyncTraceLevel() {\r\n         return syncTraceLevel;\r\n     }\r"},{"sha":"a52506b44b79b45a64a7dd0f9b3a84e41a0484b4","filename":"common/src/main/java/org/apache/syncope/common/to/RoleTO.java","status":"modified","additions":1,"deletions":24,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -55,18 +55,12 @@ public class RoleTO extends AbstractAttributableTO {\n \r\n     private boolean inheritAccountPolicy;\r\n \r\n-    private final List<String> entitlements;\r\n+    private final List<String> entitlements = new ArrayList<String>();\r\n \r\n     private Long passwordPolicy;\r\n \r\n     private Long accountPolicy;\r\n \r\n-    public RoleTO() {\r\n-        super();\r\n-\r\n-        entitlements = new ArrayList<String>();\r\n-    }\r\n-\r\n     public String getName() {\r\n         return name;\r\n     }\r\n@@ -132,30 +126,13 @@ public void setInheritVirtualAttributes(final boolean inheritVirtualAttributes)\n         this.inheritVirtualAttributes = inheritVirtualAttributes;\r\n     }\r\n \r\n-    public boolean addEntitlement(final String entitlement) {\r\n-        return entitlements.add(entitlement);\r\n-    }\r\n-\r\n-    public boolean removeEntitlement(final String entitlement) {\r\n-        return entitlements.remove(entitlement);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"entitlements\")\r\n     @XmlElement(name = \"entitlement\")\r\n     @JsonProperty(\"entitlements\")\r\n     public List<String> getEntitlements() {\r\n         return entitlements;\r\n     }\r\n \r\n-    public void setEntitlements(final List<String> entitlements) {\r\n-        if (this.entitlements != entitlements) {\r\n-            this.entitlements.clear();\r\n-            if (entitlements != null && !entitlements.isEmpty()) {\r\n-                this.entitlements.addAll(entitlements);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n     public Long getPasswordPolicy() {\r\n         return passwordPolicy;\r\n     }\r"},{"sha":"b08adb1b1db6de5be18df25bcf69833852546645","filename":"common/src/main/java/org/apache/syncope/common/to/TaskExecTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskExecTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -21,7 +21,7 @@\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n-@XmlRootElement(name = \"taskExecution\")\r\n+@XmlRootElement(name = \"taskExec\")\r\n @XmlType\r\n public class TaskExecTO extends AbstractExecTO {\r\n \r\n@@ -33,7 +33,7 @@ public long getTask() {\n         return task;\r\n     }\r\n \r\n-    public void setTask(long task) {\r\n+    public void setTask(final long task) {\r\n         this.task = task;\r\n     }\r\n }\r"},{"sha":"07386cb46eac5f8467a51f2b132a8d824d4d05fb","filename":"common/src/main/java/org/apache/syncope/common/to/UserRequestOptionsTO.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestOptionsTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestOptionsTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestOptionsTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -22,9 +22,10 @@\n \n @XmlRootElement\n public class UserRequestOptionsTO {\n+\n     private boolean createAllowed;\n \n-    public UserRequestOptionsTO(boolean createAllowed) {\n+    public UserRequestOptionsTO(final boolean createAllowed) {\n         super();\n         this.createAllowed = createAllowed;\n     }"},{"sha":"ef03944fdd7cfb09a256e6a8ed10f8ce68cee6a3","filename":"common/src/main/java/org/apache/syncope/common/to/UserRequestTO.java","status":"modified","additions":14,"deletions":11,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -40,33 +40,36 @@ public class UserRequestTO extends AbstractBaseBean {\n     private Long userId;\r\n \r\n     private UserRequestType type;\r\n-    \r\n+\r\n     public UserRequestTO() {\r\n     }\r\n \r\n     /**\r\n-     * Request to create a user\r\n+     * Request to create an user.\r\n+     *\r\n      * @param userTO\r\n      */\r\n-    public UserRequestTO(UserTO userTO) {\r\n+    public UserRequestTO(final UserTO userTO) {\r\n         this.type = UserRequestType.CREATE;\r\n         this.userTO = userTO;\r\n     }\r\n \r\n     /**\r\n-     * Request to update a user\r\n+     * Request to update an user.\r\n+     *\r\n      * @param userMod\r\n      */\r\n-    public UserRequestTO(UserMod userMod) {\r\n+    public UserRequestTO(final UserMod userMod) {\r\n         this.userMod = userMod;\r\n         this.type = UserRequestType.UPDATE;\r\n     }\r\n \r\n     /**\r\n-     * Request to delete a user\r\n+     * Request to delete a user.\r\n+     *\r\n      * @param userId\r\n      */\r\n-    public UserRequestTO(long userId) {\r\n+    public UserRequestTO(final long userId) {\r\n         this.type = UserRequestType.DELETE;\r\n         this.userId = userId;\r\n     }\r\n@@ -83,7 +86,7 @@ public UserRequestType getType() {\n         return type;\r\n     }\r\n \r\n-    public void setType(UserRequestType type) {\r\n+    public void setType(final UserRequestType type) {\r\n         this.type = type;\r\n     }\r\n \r\n@@ -93,7 +96,7 @@ public UserTO getUserTO() {\n                 : userTO;\r\n     }\r\n \r\n-    public void setUserTO(UserTO userTO) {\r\n+    public void setUserTO(final UserTO userTO) {\r\n         this.userTO = userTO;\r\n     }\r\n \r\n@@ -103,7 +106,7 @@ public UserMod getUserMod() {\n                 : userMod;\r\n     }\r\n \r\n-    public void setUserMod(UserMod userMod) {\r\n+    public void setUserMod(final UserMod userMod) {\r\n         this.userMod = userMod;\r\n     }\r\n \r\n@@ -113,7 +116,7 @@ public Long getUserId() {\n                 : userId;\r\n     }\r\n \r\n-    public void setUserId(Long userId) {\r\n+    public void setUserId(final Long userId) {\r\n         this.userId = userId;\r\n     }\r\n }\r"},{"sha":"6ca2b2fe984a0d0086457f9e0723d96d235d78f5","filename":"common/src/main/java/org/apache/syncope/common/to/UserTO.java","status":"modified","additions":1,"deletions":19,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -42,7 +42,7 @@ public class UserTO extends AbstractAttributableTO {\n \r\n     private String password;\r\n \r\n-    private List<MembershipTO> memberships;\r\n+    private List<MembershipTO> memberships = new ArrayList<MembershipTO>();\r\n \r\n     private String status;\r\n \r\n@@ -58,12 +58,6 @@ public class UserTO extends AbstractAttributableTO {\n \r\n     private Integer failedLogins;\r\n \r\n-    public UserTO() {\r\n-        super();\r\n-\r\n-        memberships = new ArrayList<MembershipTO>();\r\n-    }\r\n-\r\n     public String getPassword() {\r\n         return password;\r\n     }\r\n@@ -72,25 +66,13 @@ public void setPassword(final String password) {\n         this.password = password;\r\n     }\r\n \r\n-    public boolean addMembership(final MembershipTO membershipTO) {\r\n-        return memberships.add(membershipTO);\r\n-    }\r\n-\r\n-    public boolean removeMembership(final MembershipTO membershipTO) {\r\n-        return memberships.remove(membershipTO);\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"memberships\")\r\n     @XmlElement(name = \"membership\")\r\n     @JsonProperty(\"memberships\")\r\n     public List<MembershipTO> getMemberships() {\r\n         return memberships;\r\n     }\r\n \r\n-    public void setMemberships(final List<MembershipTO> memberships) {\r\n-        this.memberships = memberships;\r\n-    }\r\n-\r\n     @JsonIgnore\r\n     public Map<Long, MembershipTO> getMembershipMap() {\r\n         Map<Long, MembershipTO> result;\r"},{"sha":"b18465a4e6d9e5b3974443be57a557332938edd2","filename":"common/src/main/java/org/apache/syncope/common/to/WorkflowDefinitionTO.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FWorkflowDefinitionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FWorkflowDefinitionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FWorkflowDefinitionTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -37,16 +37,15 @@ public String getId() {\n         return id;\r\n     }\r\n \r\n-    public void setId(String id) {\r\n+    public void setId(final String id) {\r\n         this.id = id;\r\n     }\r\n \r\n     public String getXmlDefinition() {\r\n         return xmlDefinition;\r\n     }\r\n \r\n-    public void setXmlDefinition(String xmlDefinition) {\r\n+    public void setXmlDefinition(final String xmlDefinition) {\r\n         this.xmlDefinition = xmlDefinition;\r\n     }\r\n-\r\n }\r"},{"sha":"ce2db38382059be1145ca11a0e4e65457c57c627","filename":"common/src/main/java/org/apache/syncope/common/to/WorkflowFormPropertyTO.java","status":"modified","additions":9,"deletions":27,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FWorkflowFormPropertyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FWorkflowFormPropertyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FWorkflowFormPropertyTO.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -49,91 +49,73 @@ public class WorkflowFormPropertyTO extends AbstractBaseBean {\n \r\n     private String datePattern;\r\n \r\n-    private Map<String, String> enumValues;\r\n-\r\n-    public WorkflowFormPropertyTO() {\r\n-        enumValues = new HashMap<String, String>();\r\n-    }\r\n+    private Map<String, String> enumValues = new HashMap<String, String>();\r\n \r\n     public String getId() {\r\n         return id;\r\n     }\r\n \r\n-    public void setId(String id) {\r\n+    public void setId(final String id) {\r\n         this.id = id;\r\n     }\r\n \r\n     public String getName() {\r\n         return name;\r\n     }\r\n \r\n-    public void setName(String name) {\r\n+    public void setName(final String name) {\r\n         this.name = name;\r\n     }\r\n \r\n     public boolean isReadable() {\r\n         return readable;\r\n     }\r\n \r\n-    public void setReadable(boolean readable) {\r\n+    public void setReadable(final boolean readable) {\r\n         this.readable = readable;\r\n     }\r\n \r\n     public boolean isRequired() {\r\n         return required;\r\n     }\r\n \r\n-    public void setRequired(boolean required) {\r\n+    public void setRequired(final boolean required) {\r\n         this.required = required;\r\n     }\r\n \r\n     public WorkflowFormPropertyType getType() {\r\n         return type;\r\n     }\r\n \r\n-    public void setType(WorkflowFormPropertyType type) {\r\n+    public void setType(final WorkflowFormPropertyType type) {\r\n         this.type = type;\r\n     }\r\n \r\n     public String getValue() {\r\n         return value;\r\n     }\r\n \r\n-    public void setValue(String value) {\r\n+    public void setValue(final String value) {\r\n         this.value = value;\r\n     }\r\n \r\n     public boolean isWritable() {\r\n         return writable;\r\n     }\r\n \r\n-    public void setWritable(boolean writable) {\r\n+    public void setWritable(final boolean writable) {\r\n         this.writable = writable;\r\n     }\r\n \r\n     public String getDatePattern() {\r\n         return datePattern;\r\n     }\r\n \r\n-    public void setDatePattern(String datePattern) {\r\n+    public void setDatePattern(final String datePattern) {\r\n         this.datePattern = datePattern;\r\n     }\r\n \r\n     public Map<String, String> getEnumValues() {\r\n         return enumValues;\r\n     }\r\n-\r\n-    public void putEnumValue(String key, String value) {\r\n-        this.enumValues.put(key, value);\r\n-    }\r\n-\r\n-    public void removeEnumValue(String key) {\r\n-        this.enumValues.remove(key);\r\n-    }\r\n-\r\n-    public void setEnumValues(Map<String, String> enumValues) {\r\n-        if (enumValues != null) {\r\n-            this.enumValues = enumValues;\r\n-        }\r\n-    }\r\n }\r"},{"sha":"ae004dde772cc7fadf8150cdef2f3fac1a62d1cf","filename":"common/src/main/java/org/apache/syncope/common/types/AccountPolicySpec.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -130,10 +130,6 @@ public List<String> getPrefixesNotPermitted() {\n         return prefixesNotPermitted;\r\n     }\r\n \r\n-    public void setPrefixesNotPermitted(final List<String> prefixesNotPermitted) {\r\n-        this.prefixesNotPermitted = prefixesNotPermitted;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"schemasNotPermitted\")\r\n     @XmlElement(name = \"schema\")\r\n     @JsonProperty(\"schemasNotPermitted\")\r\n@@ -144,10 +140,6 @@ public List<String> getSchemasNotPermitted() {\n         return schemasNotPermitted;\r\n     }\r\n \r\n-    public void setSchemasNotPermitted(final List<String> schemasNotPermitted) {\r\n-        this.schemasNotPermitted = schemasNotPermitted;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"suffixesNotPermitted\")\r\n     @XmlElement(name = \"suffix\")\r\n     @JsonProperty(\"suffixesNotPermitted\")\r\n@@ -158,10 +150,6 @@ public List<String> getSuffixesNotPermitted() {\n         return suffixesNotPermitted;\r\n     }\r\n \r\n-    public void setSuffixesNotPermitted(final List<String> suffixesNotPermitted) {\r\n-        this.suffixesNotPermitted = suffixesNotPermitted;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"wordsNotPermitted\")\r\n     @XmlElement(name = \"word\")\r\n     @JsonProperty(\"wordsNotPermitted\")\r\n@@ -172,10 +160,6 @@ public List<String> getWordsNotPermitted() {\n         return wordsNotPermitted;\r\n     }\r\n \r\n-    public void setWordsNotPermitted(final List<String> wordsNotPermitted) {\r\n-        this.wordsNotPermitted = wordsNotPermitted;\r\n-    }\r\n-\r\n     public boolean isPropagateSuspension() {\r\n         return propagateSuspension;\r\n     }\r"},{"sha":"b9f34a9e975b7cbe48bbb848387cc6701af168ca","filename":"common/src/main/java/org/apache/syncope/common/types/ConnConfProperty.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -37,7 +37,7 @@ public class ConnConfProperty extends AbstractBaseBean implements Comparable<Con\n \r\n     private ConnConfPropSchema schema;\r\n \r\n-    private List<?> values = new ArrayList<Object>();\r\n+    private List<Object> values = new ArrayList<Object>();\r\n \r\n     private boolean overridable;\r\n \r\n@@ -52,14 +52,10 @@ public void setSchema(final ConnConfPropSchema schema) {\n     @XmlElementWrapper(name = \"values\")\r\n     @XmlElement(name = \"value\")\r\n     @JsonProperty(\"values\")\r\n-    public List<?> getValues() {\r\n+    public List<Object> getValues() {\r\n         return values;\r\n     }\r\n \r\n-    public void setValues(final List<?> values) {\r\n-        this.values = values;\r\n-    }\r\n-\r\n     public boolean isOverridable() {\r\n         return overridable;\r\n     }\r"},{"sha":"23101d625df63df2b7b378ff6c4847cb80b7716a","filename":"common/src/main/java/org/apache/syncope/common/types/EntityViolationType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FEntityViolationType.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -56,7 +56,7 @@ public enum EntityViolationType {\n \r\n     private String message;\r\n \r\n-    private EntityViolationType(final String message) {\r\n+    EntityViolationType(final String message) {\r\n         this.message = message;\r\n     }\r\n \r"},{"sha":"45b267ae3807bdc7fcc034fa19d58c39d5422236","filename":"common/src/main/java/org/apache/syncope/common/types/PasswordPolicySpec.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPasswordPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPasswordPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPasswordPolicySpec.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -266,10 +266,6 @@ public List<String> getPrefixesNotPermitted() {\n         return prefixesNotPermitted;\r\n     }\r\n \r\n-    public void setPrefixesNotPermitted(final List<String> prefixesNotPermitted) {\r\n-        this.prefixesNotPermitted = prefixesNotPermitted;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"schemasNotPermitted\")\r\n     @XmlElement(name = \"schema\")\r\n     @JsonProperty(\"schemasNotPermitted\")\r\n@@ -280,10 +276,6 @@ public List<String> getSchemasNotPermitted() {\n         return schemasNotPermitted;\r\n     }\r\n \r\n-    public void setSchemasNotPermitted(final List<String> schemasNotPermitted) {\r\n-        this.schemasNotPermitted = schemasNotPermitted;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"suffixesNotPermitted\")\r\n     @XmlElement(name = \"suffix\")\r\n     @JsonProperty(\"suffixesNotPermitted\")\r\n@@ -294,10 +286,6 @@ public List<String> getSuffixesNotPermitted() {\n         return suffixesNotPermitted;\r\n     }\r\n \r\n-    public void setSuffixesNotPermitted(final List<String> suffixesNotPermitted) {\r\n-        this.suffixesNotPermitted = suffixesNotPermitted;\r\n-    }\r\n-\r\n     public boolean isUppercaseRequired() {\r\n         return uppercaseRequired;\r\n     }\r\n@@ -316,10 +304,6 @@ public List<String> getWordsNotPermitted() {\n         return wordsNotPermitted;\r\n     }\r\n \r\n-    public void setWordsNotPermitted(final List<String> wordsNotPermitted) {\r\n-        this.wordsNotPermitted = wordsNotPermitted;\r\n-    }\r\n-\r\n     public boolean isAlphanumericRequired() {\r\n         return alphanumericRequired;\r\n     }\r"},{"sha":"a12abb02bead41159369a7c37b06262a41beea88","filename":"common/src/main/java/org/apache/syncope/common/types/SyncPolicySpec.java","status":"modified","additions":2,"deletions":18,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncPolicySpec.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -36,7 +36,7 @@ public class SyncPolicySpec extends AbstractPolicySpec {\n      * SyncopeUser attributes and fields for matching during synchronization.\r\n      */\r\n     @SchemaList(extended = true)\r\n-    private List<String> uAltSearchSchemas;\r\n+    private List<String> uAltSearchSchemas = new ArrayList<String>();\r\n \r\n     @ClassList\r\n     private String userJavaRule;\r\n@@ -45,7 +45,7 @@ public class SyncPolicySpec extends AbstractPolicySpec {\n      * SyncopeRole attributes and fields for matching during synchronization.\r\n      */\r\n     @SchemaList(extended = true)\r\n-    private List<String> rAltSearchSchemas;\r\n+    private List<String> rAltSearchSchemas = new ArrayList<String>();\r\n \r\n     @ClassList\r\n     private String roleJavaRule;\r\n@@ -55,13 +55,6 @@ public class SyncPolicySpec extends AbstractPolicySpec {\n      */\r\n     private ConflictResolutionAction conflictResolutionAction;\r\n \r\n-    public SyncPolicySpec() {\r\n-        super();\r\n-\r\n-        uAltSearchSchemas = new ArrayList<String>();\r\n-        rAltSearchSchemas = new ArrayList<String>();\r\n-    }\r\n-\r\n     public ConflictResolutionAction getConflictResolutionAction() {\r\n         return conflictResolutionAction == null\r\n                 ? ConflictResolutionAction.IGNORE\r\n@@ -79,22 +72,13 @@ public List<String> getuAltSearchSchemas() {\n         return uAltSearchSchemas;\r\n     }\r\n \r\n-    public void setuAltSearchSchemas(final List<String> uAltSearchSchemas) {\r\n-        this.uAltSearchSchemas = uAltSearchSchemas;\r\n-    }\r\n-\r\n     @XmlElementWrapper(name = \"roleAltSearchSchemas\")\r\n     @XmlElement(name = \"roleAltSearchSchema\")\r\n     @JsonProperty(\"roleAltSearchSchemas\")\r\n     public List<String> getrAltSearchSchemas() {\r\n         return rAltSearchSchemas;\r\n     }\r\n \r\n-    public void setrAltSearchSchemas(final List<String> rAltSearchSchemas) {\r\n-        this.rAltSearchSchemas = rAltSearchSchemas;\r\n-    }\r\n-\r\n-\r\n     public String getRoleJavaRule() {\r\n         return roleJavaRule;\r\n     }\r"},{"sha":"8d661ba12f9af4110154d3a1eef75172b2cf4867","filename":"common/src/main/java/org/apache/syncope/common/util/AttributableOperations.java","status":"modified","additions":43,"deletions":35,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -56,11 +56,13 @@ public static <T extends AbstractAttributableTO> T clone(final T original) {\n \r\n     private static void populate(final Map<String, AttributeTO> updatedAttrs,\r\n             final Map<String, AttributeTO> originalAttrs, final AbstractAttributableMod result) {\r\n+\r\n         populate(updatedAttrs, originalAttrs, result, false);\r\n     }\r\n \r\n     private static void populate(final Map<String, AttributeTO> updatedAttrs,\r\n-            final Map<String, AttributeTO> originalAttrs, final AbstractAttributableMod result, final boolean virtuals) {\r\n+            final Map<String, AttributeTO> originalAttrs, final AbstractAttributableMod result,\r\n+            final boolean virtuals) {\r\n \r\n         for (Map.Entry<String, AttributeTO> entry : updatedAttrs.entrySet()) {\r\n             AttributeMod mod = new AttributeMod();\r\n@@ -76,24 +78,24 @@ private static void populate(final Map<String, AttributeTO> updatedAttrs,\n                 // avoid unwanted inputs\r\n                 updatedValues.remove(\"\");\r\n                 if (!entry.getValue().isReadonly()) {\r\n-                    mod.setValuesToBeAdded(new ArrayList<String>(updatedValues));\r\n+                    mod.getValuesToBeAdded().addAll(updatedValues);\r\n \r\n                     if (!mod.isEmpty()) {\r\n                         if (virtuals) {\r\n-                            result.addVirtualAttributeToBeRemoved(mod.getSchema());\r\n+                            result.getVirtualAttributesToBeRemoved().add(mod.getSchema());\r\n                         } else {\r\n-                            result.addAttributeToBeRemoved(mod.getSchema());\r\n+                            result.getAttributesToBeRemoved().add(mod.getSchema());\r\n                         }\r\n                     }\r\n                 }\r\n \r\n-                mod.setValuesToBeRemoved(new ArrayList<String>(originalValues));\r\n+                mod.getValuesToBeRemoved().addAll(originalValues);\r\n \r\n                 if (!mod.isEmpty()) {\r\n                     if (virtuals) {\r\n-                        result.addVirtualAttributeToBeUpdated(mod);\r\n+                        result.getVirtualAttributesToBeUpdated().add(mod);\r\n                     } else {\r\n-                        result.addAttributeToBeUpdated(mod);\r\n+                        result.getAttributesToBeUpdated().add(mod);\r\n                     }\r\n                 }\r\n             }\r\n@@ -120,7 +122,8 @@ private static void diff(\n         originalAttrNames.removeAll(updatedAttrs.keySet());\r\n \r\n         if (!incremental) {\r\n-            result.setAttributesToBeRemoved(originalAttrNames);\r\n+            result.getAttributesToBeRemoved().clear();\r\n+            result.getAttributesToBeRemoved().addAll(originalAttrNames);\r\n         }\r\n \r\n         Set<String> emptyUpdatedAttrs = new HashSet<String>();\r\n@@ -132,7 +135,7 @@ private static void diff(\n         }\r\n         for (String emptyUpdatedAttr : emptyUpdatedAttrs) {\r\n             updatedAttrs.remove(emptyUpdatedAttr);\r\n-            result.addAttributeToBeRemoved(emptyUpdatedAttr);\r\n+            result.getAttributesToBeRemoved().add(emptyUpdatedAttr);\r\n         }\r\n \r\n         populate(updatedAttrs, originalAttrs, result);\r\n@@ -145,12 +148,14 @@ private static void diff(\n         originalAttrNames.removeAll(updatedAttrs.keySet());\r\n \r\n         if (!incremental) {\r\n-            result.setDerivedAttributesToBeRemoved(originalAttrNames);\r\n+            result.getDerivedAttributesToBeRemoved().clear();\r\n+            result.getDerivedAttributesToBeRemoved().addAll(originalAttrNames);\r\n         }\r\n \r\n         Set<String> updatedAttrNames = new HashSet<String>(updatedAttrs.keySet());\r\n         updatedAttrNames.removeAll(originalAttrs.keySet());\r\n-        result.setDerivedAttributesToBeAdded(updatedAttrNames);\r\n+        result.getDerivedAttributesToBeAdded().clear();\r\n+        result.getDerivedAttributesToBeAdded().addAll(updatedAttrNames);\r\n \r\n         // 4. virtual attributes\r\n         updatedAttrs = updated.getVirtualAttributeMap();\r\n@@ -160,7 +165,8 @@ private static void diff(\n         originalAttrNames.removeAll(updatedAttrs.keySet());\r\n \r\n         if (!incremental) {\r\n-            result.setVirtualAttributesToBeRemoved(originalAttrNames);\r\n+            result.getVirtualAttributesToBeRemoved().clear();\r\n+            result.getVirtualAttributesToBeRemoved().addAll(originalAttrNames);\r\n         }\r\n \r\n         populate(updatedAttrs, originalAttrs, result, true);\r\n@@ -170,12 +176,14 @@ private static void diff(\n         Set<String> originalRes = new HashSet<String>(original.getResources());\r\n \r\n         updatedRes.removeAll(originalRes);\r\n-        result.setResourcesToBeAdded(updatedRes);\r\n+        result.getResourcesToBeAdded().clear();\r\n+        result.getResourcesToBeAdded().addAll(updatedRes);\r\n \r\n         originalRes.removeAll(updated.getResources());\r\n \r\n         if (!incremental) {\r\n-            result.setResourcesToBeRemoved(originalRes);\r\n+            result.getResourcesToBeRemoved().clear();\r\n+            result.getResourcesToBeRemoved().addAll(originalRes);\r\n         }\r\n     }\r\n \r\n@@ -228,41 +236,39 @@ public static UserMod diff(final UserTO updated, final UserTO original, final bo\n \r\n                     AttributeMod attrMod = new AttributeMod();\r\n                     attrMod.setSchema(attr.getSchema());\r\n-                    attrMod.setValuesToBeAdded(attr.getValues());\r\n+                    attrMod.getValuesToBeAdded().addAll(attr.getValues());\r\n \r\n                     if (!attrMod.isEmpty()) {\r\n-                        membMod.addAttributeToBeUpdated(attrMod);\r\n-                        membMod.addAttributeToBeRemoved(attrMod.getSchema());\r\n+                        membMod.getAttributesToBeUpdated().add(attrMod);\r\n+                        membMod.getAttributesToBeRemoved().add(attrMod.getSchema());\r\n                     }\r\n                 }\r\n                 for (AttributeTO attr : entry.getValue().getDerivedAttributes()) {\r\n-\r\n-                    membMod.addDerivedAttributeToBeAdded(attr.getSchema());\r\n+                    membMod.getDerivedAttributesToBeAdded().add(attr.getSchema());\r\n                 }\r\n                 for (AttributeTO attr : entry.getValue().getVirtualAttributes()) {\r\n-\r\n                     AttributeMod attrMod = new AttributeMod();\r\n                     attrMod.setSchema(attr.getSchema());\r\n-                    attrMod.setValuesToBeAdded(attr.getValues());\r\n+                    attrMod.getValuesToBeAdded().addAll(attr.getValues());\r\n \r\n                     if (!attrMod.isEmpty()) {\r\n-                        membMod.addVirtualAttributeToBeUpdated(attrMod);\r\n-                        membMod.addAttributeToBeRemoved(attrMod.getSchema());\r\n+                        membMod.getVirtualAttributesToBeUpdated().add(attrMod);\r\n+                        membMod.getAttributesToBeRemoved().add(attrMod.getSchema());\r\n                     }\r\n                 }\r\n-                membMod.setResourcesToBeAdded(entry.getValue().getResources());\r\n+                membMod.getResourcesToBeAdded().addAll(entry.getValue().getResources());\r\n             }\r\n \r\n             if (!membMod.isEmpty()) {\r\n-                result.addMembershipToBeAdded(membMod);\r\n+                result.getMembershipsToBeAdded().add(membMod);\r\n             }\r\n         }\r\n \r\n         if (!incremental) {\r\n             Set<Long> originalRoles = new HashSet<Long>(originalMembs.keySet());\r\n             originalRoles.removeAll(updatedMembs.keySet());\r\n             for (Long roleId : originalRoles) {\r\n-                result.addMembershipToBeRemoved(originalMembs.get(roleId).getId());\r\n+                result.getMembershipsToBeRemoved().add(originalMembs.get(roleId).getId());\r\n             }\r\n         }\r\n \r\n@@ -314,9 +320,11 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original, final bo\n         Set<String> updatedEnts = new HashSet<String>(updated.getEntitlements());\r\n         Set<String> originalEnts = new HashSet<String>(original.getEntitlements());\r\n         if (updatedEnts.equals(originalEnts)) {\r\n-            result.setEntitlements(null);\r\n+            result.setModEntitlements(false);\r\n+            result.getEntitlements().clear();\r\n         } else {\r\n-            result.setEntitlements(updated.getEntitlements());\r\n+            result.setModEntitlements(true);\r\n+            result.getEntitlements().addAll(updated.getEntitlements());\r\n         }\r\n \r\n         // 5. owner\r\n@@ -341,7 +349,7 @@ private static List<AttributeTO> getUpdateValues(final Map<String, AttributeTO>\n             } else {\r\n                 AttributeTO attrTO = new AttributeTO();\r\n                 attrTO.setSchema(attrMod.getSchema());\r\n-                attrTO.setValues(attrMod.getValuesToBeAdded());\r\n+                attrTO.getValues().addAll(attrMod.getValuesToBeAdded());\r\n \r\n                 rwattrs.put(attrMod.getSchema(), attrTO);\r\n             }\r\n@@ -354,8 +362,8 @@ private static <T extends AbstractAttributableTO, K extends AbstractAttributable\n             final K mod, final T result) {\r\n \r\n         // 1. attributes\r\n-        result.setAttributes(getUpdateValues(to.getAttributeMap(), mod.getAttributesToBeRemoved(), mod.\r\n-                getAttributesToBeUpdated()));\r\n+        result.getAttributes().addAll(getUpdateValues(to.getAttributeMap(),\r\n+                mod.getAttributesToBeRemoved(), mod.getAttributesToBeUpdated()));\r\n \r\n         // 2. derived attributes\r\n         Map<String, AttributeTO> attrs = to.getDerivedAttributeMap();\r\n@@ -368,11 +376,11 @@ private static <T extends AbstractAttributableTO, K extends AbstractAttributable\n \r\n             attrs.put(attrName, attrTO);\r\n         }\r\n-        result.setDerivedAttributes(new ArrayList<AttributeTO>(attrs.values()));\r\n+        result.getDerivedAttributes().addAll(attrs.values());\r\n \r\n         // 3. virtual attributes\r\n-        result.setVirtualAttributes(getUpdateValues(to.getVirtualAttributeMap(), mod.getVirtualAttributesToBeRemoved(),\r\n-                mod.getVirtualAttributesToBeUpdated()));\r\n+        result.getVirtualAttributes().addAll(getUpdateValues(to.getVirtualAttributeMap(),\r\n+                mod.getVirtualAttributesToBeRemoved(), mod.getVirtualAttributesToBeUpdated()));\r\n \r\n         // 4. resources\r\n         result.getResources().removeAll(mod.getResourcesToBeRemoved());\r\n@@ -398,7 +406,7 @@ public static UserTO apply(final UserTO userTO, final UserMod userMod) {\n         // 3. memberships\r\n         Map<Long, MembershipTO> membs = result.getMembershipMap();\r\n         for (Long membId : userMod.getMembershipsToBeRemoved()) {\r\n-            result.removeMembership(membs.get(membId));\r\n+            result.getMemberships().remove(membs.get(membId));\r\n         }\r\n         for (MembershipMod membMod : userMod.getMembershipsToBeAdded()) {\r\n             MembershipTO membTO = new MembershipTO();\r"},{"sha":"2f23ea0a73a1e1fa3bfdb5e23d151c5635453408","filename":"common/src/main/java/org/apache/syncope/common/util/BeanUtils.java","status":"added","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FBeanUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FBeanUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FBeanUtils.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.util;\n+\n+import static org.springframework.beans.BeanUtils.getPropertyDescriptor;\n+import static org.springframework.beans.BeanUtils.getPropertyDescriptors;\n+\n+import java.beans.PropertyDescriptor;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n+import java.util.Collection;\n+import java.util.Map;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.FatalBeanException;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * Overrides Spring's BeanUtils not using collection setters but instead getters + addAll() / putAll(),\n+ * in a JAXB friendly way.\n+ *\n+ * @see org.springframework.beans.BeanUtils\n+ * @see https://issues.apache.org/jira/browse/SYNCOPE-246\n+ */\n+public final class BeanUtils {\n+\n+    private BeanUtils() {\n+        // Empty private constructor for static utility classes\n+    }\n+\n+    /**\n+     * Copy the property values of the given source bean into the target bean.\n+     * <p>Note: The source and target classes do not have to match or even be derived\n+     * from each other, as long as the properties match. Any bean properties that the\n+     * source bean exposes but the target bean does not will silently be ignored.\n+     * <p>This is just a convenience method. For more complex transfer needs,\n+     * consider using a full BeanWrapper.\n+     *\n+     * @param source the source bean\n+     * @param target the target bean\n+     * @throws BeansException if the copying failed\n+     * @see org.springframework.beans.BeanWrapper\n+     */\n+    public static void copyProperties(final Object source, final Object target) throws BeansException {\n+        copyProperties(source, target, null);\n+    }\n+\n+    /**\n+     * Copy the property values of the given source bean into the given target bean.\n+     * <p>Note: The source and target classes do not have to match or even be derived\n+     * from each other, as long as the properties match. Any bean properties that the\n+     * source bean exposes but the target bean does not will silently be ignored.\n+     *\n+     * @param source the source bean\n+     * @param target the target bean\n+     * @param ignoreProperties array of property names to ignore\n+     * @throws BeansException if the copying failed\n+     * @see org.springframework.beans.BeanWrapper\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static void copyProperties(final Object source, final Object target, final String[] ignoreProperties)\n+            throws BeansException {\n+\n+        Assert.notNull(source, \"Source must not be null\");\n+        Assert.notNull(target, \"Target must not be null\");\n+\n+        for (PropertyDescriptor targetPd : getPropertyDescriptors(target.getClass())) {\n+            if (!ArrayUtils.contains(ignoreProperties, targetPd.getName())) {\n+                PropertyDescriptor sourcePd = getPropertyDescriptor(source.getClass(), targetPd.getName());\n+                if (sourcePd != null && sourcePd.getReadMethod() != null) {\n+                    try {\n+                        Method readMethod = sourcePd.getReadMethod();\n+                        if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers())) {\n+                            readMethod.setAccessible(true);\n+                        }\n+                        Object value = readMethod.invoke(source);\n+\n+                        Method writeMethod = targetPd.getWriteMethod();\n+                        // Diverts from Spring's BeanUtils: if no write method is found and property is collection,\n+                        // try to use addAll() / putAll().\n+                        if (writeMethod == null) {\n+                            Method targetReadMethod = targetPd.getReadMethod();\n+                            if (targetReadMethod != null) {\n+                                if (!Modifier.isPublic(targetReadMethod.getDeclaringClass().getModifiers())) {\n+                                    targetReadMethod.setAccessible(true);\n+                                }\n+                                Object destValue = targetReadMethod.invoke(target);\n+\n+                                if (value instanceof Collection && destValue instanceof Collection) {\n+                                    ((Collection) destValue).clear();\n+                                    ((Collection) destValue).addAll((Collection) value);\n+                                } else if (value instanceof Map && destValue instanceof Map) {\n+                                    ((Map) destValue).clear();\n+                                    ((Map) destValue).putAll((Map) value);\n+                                }\n+                            }\n+                        } else {\n+                            if (!Modifier.isPublic(writeMethod.getDeclaringClass().getModifiers())) {\n+                                writeMethod.setAccessible(true);\n+                            }\n+                            writeMethod.invoke(target, value);\n+                        }\n+                    } catch (Throwable ex) {\n+                        throw new FatalBeanException(\"Could not copy properties from source to target\", ex);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"},{"sha":"55545e330af13626bdb3324012ebabfaae2f544f","filename":"common/src/test/java/org/apache/syncope/common/JSONTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -91,8 +91,8 @@ public void testLists() throws IOException {\n     @Test\n     public void testMap() throws IOException {\n         WorkflowFormPropertyTO prop = new WorkflowFormPropertyTO();\n-        prop.putEnumValue(\"key1\", \"value1\");\n-        prop.putEnumValue(\"key2\", \"value2\");\n+        prop.getEnumValues().put(\"key1\", \"value1\");\n+        prop.getEnumValues().put(\"key2\", \"value2\");\n \n         ObjectMapper mapper = new ObjectMapper();\n \n@@ -107,8 +107,8 @@ public void testMap() throws IOException {\n     public void testReportletConfImplementations() throws IOException {\n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForCreate\");\n-        report.addReportletConf(new UserReportletConf(\"first\"));\n-        report.addReportletConf(new UserReportletConf(\"second\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"first\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"second\"));\n \n         ObjectMapper mapper = new ObjectMapper();\n "},{"sha":"2ba37de83bb0d066db2e06d0b7a57d6529fb8752","filename":"console/src/main/java/org/apache/syncope/console/commons/StatusUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -152,7 +152,7 @@ public static PropagationRequestTO buildPropagationRequestTO(final Collection<St\n                 if (\"Syncope\".equals(status.getResourceName())) {\n                     propagationRequestTO.setOnSyncope(true);\n                 } else {\n-                    propagationRequestTO.addResource(status.getResourceName());\n+                    propagationRequestTO.getResources().add(status.getResourceName());\n                 }\n \n             }"},{"sha":"eefc7a3e18fd1b50587e2ddd6d024f06cb9279e8","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -23,7 +23,6 @@\n import java.util.Collections;\n import java.util.EnumSet;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.lang3.ArrayUtils;\n@@ -351,7 +350,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                         \"connPropAttrOverridable\", new PropertyModel<Boolean>(property, \"overridable\"));\n \n                 item.add(overridable);\n-                connInstanceTO.addConfiguration(property);\n+                connInstanceTO.getConfiguration().add(property);\n             }\n         };\n         connPropView.setOutputMarkupId(true);\n@@ -408,10 +407,10 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 conn.setConnectorName(bundleTO.getConnectorName());\n                 conn.setBundleName(bundleTO.getBundleName());\n                 conn.setVersion(bundleTO.getVersion());\n-                conn.setConfiguration(new HashSet<ConnConfProperty>(connPropView.getModelObject()));\n+                conn.getConfiguration().addAll(connPropView.getModelObject());\n \n                 // Set the model object's capabilites to capabilitiesPalette's converted Set\n-                conn.setCapabilities(selectedCapabilities.isEmpty()\n+                conn.getCapabilities().addAll(selectedCapabilities.isEmpty()\n                         ? EnumSet.noneOf(ConnectorCapability.class)\n                         : EnumSet.copyOf(selectedCapabilities));\n                 try {\n@@ -483,7 +482,7 @@ private List<ConnConfProperty> fillProperties(final ConnBundleTO bundleTO, final\n                 final ConnConfProperty propertyTO = new ConnConfProperty();\n                 propertyTO.setSchema(key);\n                 if (connInstanceTO.getId() != 0 && connInstanceTO.getConfigurationMap().containsKey(key.getName())) {\n-                    propertyTO.setValues(connInstanceTO.getConfigurationMap().get(key.getName()).getValues());\n+                    propertyTO.getValues().add(connInstanceTO.getConfigurationMap().get(key.getName()).getValues());\n                     propertyTO.setOverridable(connInstanceTO.getConfigurationMap().get(key.getName()).isOverridable());\n                 }\n                 props.add(propertyTO);"},{"sha":"0bb89a3a1b4c478625e316b81bfb3824588bc05f","filename":"console/src/main/java/org/apache/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -54,8 +54,8 @@ public MembershipModalPage(final PageReference pageRef, final ModalWindow window\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n-                userTO.removeMembership(membershipTO);\n-                userTO.addMembership(membershipTO);\n+                userTO.getMemberships().remove(membershipTO);\n+                userTO.getMemberships().add(membershipTO);\n \n                 ((UserModalPage) pageRef.getPage()).setUserTO(userTO);\n "},{"sha":"a98d84e037bd1a9bda32fce9e2ea0d60834d92a5","filename":"console/src/main/java/org/apache/syncope/console/pages/ReportModalPage.java","status":"modified","additions":48,"deletions":47,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -128,37 +128,37 @@ public ReportModalPage(final ModalWindow window, final ReportTO reportTO, final\n         final AjaxButton submit =\n                 new ClearIndicatingAjaxButton(APPLY, new ResourceModel(APPLY), getPageReference()) {\n \n-                    private static final long serialVersionUID = -958724007591692537L;\n+            private static final long serialVersionUID = -958724007591692537L;\n \n-                    @Override\n-                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                        ReportTO reportTO = (ReportTO) form.getModelObject();\n-                        reportTO.setCronExpression(StringUtils.hasText(reportTO.getCronExpression())\n-                                ? crontab.getCronExpression()\n-                                : null);\n-\n-                        try {\n-                            if (reportTO.getId() > 0) {\n-                                reportRestClient.update(reportTO);\n-                            } else {\n-                                reportRestClient.create(reportTO);\n-                            }\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                ReportTO reportTO = (ReportTO) form.getModelObject();\n+                reportTO.setCronExpression(StringUtils.hasText(reportTO.getCronExpression())\n+                        ? crontab.getCronExpression()\n+                        : null);\n+\n+                try {\n+                    if (reportTO.getId() > 0) {\n+                        reportRestClient.update(reportTO);\n+                    } else {\n+                        reportRestClient.create(reportTO);\n+                    }\n \n-                            ((BasePage) callerPageRef.getPage()).setModalResult(true);\n+                    ((BasePage) callerPageRef.getPage()).setModalResult(true);\n \n-                            window.close(target);\n-                        } catch (SyncopeClientCompositeErrorException e) {\n-                            LOG.error(\"While creating or updating report\", e);\n-                            error(getString(Constants.ERROR) + \":\" + e.getMessage());\n-                            target.add(feedbackPanel);\n-                        }\n-                    }\n+                    window.close(target);\n+                } catch (SyncopeClientCompositeErrorException e) {\n+                    LOG.error(\"While creating or updating report\", e);\n+                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n+            }\n \n-                    @Override\n-                    protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                        target.add(feedbackPanel);\n-                    }\n-                };\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                target.add(feedbackPanel);\n+            }\n+        };\n \n         if (reportTO.getId() > 0) {\n             MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getAllAllowedRoles(\"Reports\",\n@@ -173,13 +173,13 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         final AjaxButton cancel =\n                 new ClearIndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL), getPageReference()) {\n \n-                    private static final long serialVersionUID = -958724007591692537L;\n+            private static final long serialVersionUID = -958724007591692537L;\n \n-                    @Override\n-                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                        window.close(target);\n-                    }\n-                };\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                window.close(target);\n+            }\n+        };\n \n         cancel.setDefaultFormProcessing(false);\n         form.add(cancel);\n@@ -211,7 +211,7 @@ public void onClose(final AjaxRequestTarget target) {\n                 }\n                 if (modalReportletConf != null) {\n                     if (foundIdx == -1) {\n-                        reportTO.addReportletConf(modalReportletConf);\n+                        reportTO.getReportletConfs().add(modalReportletConf);\n                     } else {\n                         reportTO.getReportletConfs().set(foundIdx, modalReportletConf);\n                     }\n@@ -250,18 +250,18 @@ public void onClose(final AjaxRequestTarget target) {\n         reportlets = new ListChoice<AbstractReportletConf>(\"reportletConfs\", new Model(), reportTO.getReportletConfs(),\n                 new IChoiceRenderer<ReportletConf>() {\n \n-                    private static final long serialVersionUID = 1048000918946220007L;\n+            private static final long serialVersionUID = 1048000918946220007L;\n \n-                    @Override\n-                    public Object getDisplayValue(final ReportletConf object) {\n-                        return object.getName();\n-                    }\n+            @Override\n+            public Object getDisplayValue(final ReportletConf object) {\n+                return object.getName();\n+            }\n \n-                    @Override\n-                    public String getIdValue(final ReportletConf object, int index) {\n-                        return object.getName();\n-                    }\n-                }) {\n+            @Override\n+            public String getIdValue(final ReportletConf object, int index) {\n+                return object.getName();\n+            }\n+        }) {\n \n             private static final long serialVersionUID = 4022366881854379834L;\n \n@@ -338,7 +338,7 @@ public Page createPage() {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                reportTO.removeReportletConf(reportlets.getModelObject());\n+                reportTO.getReportletConfs().remove(reportlets.getModelObject());\n                 reportlets.setModelObject(null);\n                 target.add(reportlets);\n             }\n@@ -504,7 +504,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             reportRestClient.deleteExecution(taskExecutionTO.getId());\n \n-                            reportTO.removeExecution(taskExecutionTO);\n+                            reportTO.getExecutions().remove(taskExecutionTO);\n \n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientCompositeErrorException scce) {\n@@ -533,7 +533,8 @@ public void onClick(final AjaxRequestTarget target) {\n                             final ReportTO currentReportTO = reportTO.getId() == 0\n                                     ? reportTO\n                                     : reportRestClient.read(reportTO.getId());\n-                            reportTO.setExecutions(currentReportTO.getExecutions());\n+                            reportTO.getExecutions().clear();\n+                            reportTO.getExecutions().addAll(currentReportTO.getExecutions());\n                             final AjaxFallbackDefaultDataTable currentTable =\n                                     new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n                                     new ReportExecutionsProvider(reportTO), 10);"},{"sha":"0fb9217e58bbf1f63d3ce9d9bfd30fccc0ca0461","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -151,7 +151,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n     protected void submitAction(final AjaxRequestTarget target, final Form form) {\n         final RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n         final List<String> entitlementList = new ArrayList<String>(rolePanel.getSelectedEntitlements());\n-        roleTO.setEntitlements(entitlementList);\n+        roleTO.getEntitlements().clear();\n+        roleTO.getEntitlements().addAll(entitlementList);\n \n         final RoleTO result;\n         if (createFlag) {"},{"sha":"48fa165a03ddca3bbfd9bac37479068d8bbdc80f","filename":"console/src/main/java/org/apache/syncope/console/pages/TaskModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -147,7 +147,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             taskRestClient.deleteExecution(taskExecutionTO.getId());\n \n-                            taskTO.removeExecution(taskExecutionTO);\n+                            taskTO.getExecutions().remove(taskExecutionTO);\n \n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientCompositeErrorException scce) {\n@@ -249,7 +249,8 @@ private AbstractTaskTO getCurrentTaskExecution(final AbstractTaskTO taskTO) {\n                 ? taskRestClient.readSchedTask(SyncTaskTO.class, taskTO.getId())\n                 : taskRestClient.readSchedTask(SchedTaskTO.class, taskTO.getId());\n \n-        taskTO.setExecutions(currentTask.getExecutions());\n+        taskTO.getExecutions().clear();\n+        taskTO.getExecutions().addAll(currentTask.getExecutions());\n         return taskTO;\n     }\n }"},{"sha":"ee7daa2b42b43525f7bd56d0ef3b0d47ea6ad426","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -137,9 +137,7 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n         add(attributeView);\n     }\n \n-    private void initEntityData(final AbstractAttributableTO entityTO,\n-            final Collection<SchemaTO> schemas) {\n-\n+    private void initEntityData(final AbstractAttributableTO entityTO, final Collection<SchemaTO> schemas) {\n         final List<AttributeTO> entityData = new ArrayList<AttributeTO>();\n \n         final Map<String, AttributeTO> attrMap = entityTO.getAttributeMap();\n@@ -149,20 +147,18 @@ private void initEntityData(final AbstractAttributableTO entityTO,\n             attributeTO.setSchema(schema.getName());\n \n             if (attrMap.get(schema.getName()) == null || attrMap.get(schema.getName()).getValues().isEmpty()) {\n-\n-                List<String> values = new ArrayList<String>();\n-                values.add(\"\");\n-                attributeTO.setValues(values);\n+                attributeTO.getValues().add(\"\");\n \n                 // is important to set readonly only after values setting\n                 attributeTO.setReadonly(schema.isReadonly());\n             } else {\n-                attributeTO.setValues(attrMap.get(schema.getName()).getValues());\n+                attributeTO.getValues().addAll(attrMap.get(schema.getName()).getValues());\n             }\n             entityData.add(attributeTO);\n         }\n \n-        entityTO.setAttributes(entityData);\n+        entityTO.getAttributes().clear();\n+        entityTO.getAttributes().addAll(entityData);\n     }\n \n     @SuppressWarnings({\"rawtypes\", \"unchecked\"})"},{"sha":"9b7de3885db752071cc60c4a9fda3fd14a869b2e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/MembershipsPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -188,7 +188,7 @@ public Page createPage() {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        userTO.removeMembership(membershipTO);\n+                        userTO.getMemberships().remove(membershipTO);\n                         target.add(membershipsContainer);\n \n                         RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, membershipTO.getRoleId());\n@@ -240,7 +240,8 @@ public void onClose(final AjaxRequestTarget target) {\n                     }\n                 }\n \n-                MembershipsPanel.this.userTO.setMemberships(updatedUserTO.getMemberships());\n+                MembershipsPanel.this.userTO.getMemberships().clear();\n+                MembershipsPanel.this.userTO.getMemberships().addAll(updatedUserTO.getMemberships());\n                 target.add(container);\n             }\n         });"},{"sha":"104453d65382cbc372b9936c527fb77f4f39be0f","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -357,7 +357,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 final AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\"mandatoryCondition\",\n                         new ResourceModel(\"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n                         new PropertyModel<String>(mapItem, \"mandatoryCondition\"));\n-                mandatory.setChoices(Arrays.asList(new String[]{\"true\", \"false\"}));\n+                mandatory.setChoices(Arrays.asList(new String[] {\"true\", \"false\"}));\n                 mandatory.setStyleSheet(SHORT_FIELD_STYLE);\n                 item.add(mandatory);\n \n@@ -504,15 +504,15 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     private List<String> getSchemaNames(final Long connectorId, final Set<ConnConfProperty> conf) {\n         final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n         connInstanceTO.setId(connectorId);\n-        connInstanceTO.setConfiguration(conf);\n+        connInstanceTO.getConfiguration().addAll(conf);\n \n         return connRestClient.getSchemaNames(connInstanceTO);\n     }\n \n     private void setEnabled() {\n         final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n         connInstanceTO.setId(this.resourceTO.getConnectorId());\n-        connInstanceTO.setConfiguration(this.resourceTO.getConnConfProperties());\n+        connInstanceTO.getConfiguration().addAll(this.resourceTO.getConnConfProperties());\n \n         List<ConnIdObjectClassTO> objectClasses = connRestClient.getSupportedObjectClasses(connInstanceTO);\n "},{"sha":"f96010f0bf0b33ef6d005ac350f2d8bd823dfeea","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -107,7 +107,7 @@ protected Map<String, VirSchemaTO> load() {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                entityTO.addVirtualAttribute(new AttributeTO());\n+                entityTO.getVirtualAttributes().add(new AttributeTO());\n                 target.add(attributesContainer);\n             }\n \n@@ -134,12 +134,12 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        entityTO.removeVirtualAttribute(attributeTO);\n+                        entityTO.getVirtualAttributes().add(attributeTO);\n                         target.add(attributesContainer);\n                     }\n \n                     @Override\n-                    protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+                    protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n                         super.updateAjaxAttributes(attributes);\n \n                         final AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n@@ -156,7 +156,7 @@ public CharSequence getPrecondition(final Component component) {\n                 });\n \n                 if (attributeTO.getValues().isEmpty()) {\n-                    attributeTO.addValue(\"\");\n+                    attributeTO.getValues().add(\"\");\n                 }\n \n                 if (attributeTO.getSchema() != null) {"},{"sha":"c2249f034753611ec7db2d48393fa54bd51b488a","filename":"console/src/main/java/org/apache/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -33,9 +33,9 @@\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.types.ConnConfProperty;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.SyncopeSession;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -57,7 +57,8 @@ public List<ConnInstanceTO> getAllConnectors() {\n     }\n \n     public void create(final ConnInstanceTO connectorTO) {\n-        connectorTO.setConfiguration(filterProperties(connectorTO.getConfiguration()));\n+        connectorTO.getConfiguration().clear();\n+        connectorTO.getConfiguration().addAll(filterProperties(connectorTO.getConfiguration()));\n         getService(ConnectorService.class).create(connectorTO);\n     }\n \n@@ -80,7 +81,8 @@ public ConnInstanceTO read(final Long connectorInstanceId) {\n     }\n \n     public void update(final ConnInstanceTO connectorTO) {\n-        connectorTO.setConfiguration(filterProperties(connectorTO.getConfiguration()));\n+        connectorTO.getConfiguration().clear();\n+        connectorTO.getConfiguration().addAll(filterProperties(connectorTO.getConfiguration()));\n         getService(ConnectorService.class).update(connectorTO.getId(), connectorTO);\n     }\n \n@@ -136,7 +138,7 @@ private Set<ConnConfProperty> filterProperties(final Set<ConnConfProperty> prope\n                     }\n                 }\n             }\n-            prop.setValues(parsed);\n+            prop.getValues().addAll(parsed);\n             newProperties.add(prop);\n         }\n         return newProperties;\n@@ -151,7 +153,7 @@ private Set<ConnConfProperty> filterProperties(final Set<ConnConfProperty> prope\n     public boolean check(final ConnInstanceTO connectorTO) {\n         ConnInstanceTO toBeChecked = new ConnInstanceTO();\n         BeanUtils.copyProperties(connectorTO, toBeChecked, new String[] {\"configuration\"});\n-        toBeChecked.setConfiguration(filterProperties(connectorTO.getConfiguration()));\n+        toBeChecked.getConfiguration().addAll(filterProperties(connectorTO.getConfiguration()));\n \n         boolean check = false;\n         try {"},{"sha":"b73cf9fcea7ff2ed8376ac2d59ff61cbff9d24db","filename":"console/src/main/resources/org/apache/syncope/console/pages/MembershipModalPage.html","status":"modified","additions":35,"deletions":33,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -16,38 +16,40 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:extend>\n-  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n-<form wicket:id=\"MembershipForm\">\n-  <div id=\"tabs\">\n-    <ul>\n-      <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-      <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-      <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-    </ul>\n-    <div id=\"tabs-1\">\n-      <div id=\"formtable\">\n-        <span wicket:id=\"attributes\">[membership attributes]</span>\n-        <span wicket:id=\"systeminformation\">[System Information]</span>\n-      </div>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+    <form wicket:id=\"MembershipForm\">\n+      <div id=\"tabs\">\n+        <ul>\n+          <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n+          <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n+          <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+        </ul>\n+        <div id=\"tabs-1\">\n+          <div id=\"formtable\">\n+            <span wicket:id=\"attributes\">[membership attributes]</span>\n+            <span wicket:id=\"systeminformation\">[System Information]</span>\n+          </div>\n \n-      <script type=\"text/javascript\">\n-        $(function() {\n-          $('#formtable div.tablerow:even').addClass(\"alt\");\n-        });\n-      </script>\n-    </div>\n-    <div id=\"tabs-2\">\n-      <span wicket:id=\"derivedAttributes\">[membership derived attributes]</span>\n-    </div>\n+          <script type=\"text/javascript\">\n+            $(function() {\n+              $('#formtable div.tablerow:even').addClass(\"alt\");\n+            });\n+          </script>\n+        </div>\n+        <div id=\"tabs-2\">\n+          <span wicket:id=\"derivedAttributes\">[membership derived attributes]</span>\n+        </div>\n \n-    <div id=\"tabs-3\">\n-      <span wicket:id=\"virtualAttributes\">[membership virtual attributes]</span>\n-    </div>\n-  </div>\n-  <div style=\"margin: 20px 10px 0\">\n-    <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n-    <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n-  </div>\n-</form>\n-</wicket:extend>\n+        <div id=\"tabs-3\">\n+          <span wicket:id=\"virtualAttributes\">[membership virtual attributes]</span>\n+        </div>\n+      </div>\n+      <div style=\"margin: 20px 10px 0\">\n+        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n+        <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n+      </div>\n+    </form>\n+  </wicket:extend>\n+</html>"},{"sha":"450d86e600e91a5b80f83100d576b5637d8cdfec","filename":"console/src/main/resources/org/apache/syncope/console/pages/ReportModalPage.html","status":"modified","additions":107,"deletions":105,"changes":212,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -16,129 +16,131 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:extend>\n-  <div style=\"margin:10px\">\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n-    <form wicket:id=\"form\">\n-      <div id=\"tabs\">\n-        <ul>\n-          <li class=\"tabs-selected\"><a href=\"#profile\"><span><wicket:message key=\"profile\"/></span></a></li>\n-          <li><a href=\"#crontab\"><span><wicket:message key=\"crontab\"/></span></a></li>\n-          <li><a href=\"#executions\"><span><wicket:message key=\"executions\"/></span></a></li>\n-        </ul>\n-        <div id=\"profile\">\n-          <div id=\"users-contain\" class=\"ui-widget\">\n-            <span wicket:id=\"profile\">\n-              <div id=\"formtable\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div style=\"margin:10px\">\n+      <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+      <form wicket:id=\"form\">\n+        <div id=\"tabs\">\n+          <ul>\n+            <li class=\"tabs-selected\"><a href=\"#profile\"><span><wicket:message key=\"profile\"/></span></a></li>\n+            <li><a href=\"#crontab\"><span><wicket:message key=\"crontab\"/></span></a></li>\n+            <li><a href=\"#executions\"><span><wicket:message key=\"executions\"/></span></a></li>\n+          </ul>\n+          <div id=\"profile\">\n+            <div id=\"users-contain\" class=\"ui-widget\">\n+              <span wicket:id=\"profile\">\n+                <div id=\"formtable\">\n \n-                <div class=\"tablerow alt\">\n-                  <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <span wicket:id=\"idLabel\">[Id]</span>\n-                  </div>\n-                  <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"id\">[id]</span>\n+                  <div class=\"tablerow alt\">\n+                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                      <span wicket:id=\"idLabel\">[Id]</span>\n+                    </div>\n+                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                      <span wicket:id=\"id\">[id]</span>\n+                    </div>\n                   </div>\n-                </div>\n \n-                <div class=\"tablerow\">\n-                  <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <span wicket:id=\"nameLabel\">[Name]</span>\n-                  </div>\n-                  <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"name\">[name]</span>\n+                  <div class=\"tablerow\">\n+                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                      <span wicket:id=\"nameLabel\">[Name]</span>\n+                    </div>\n+                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                      <span wicket:id=\"name\">[name]</span>\n+                    </div>\n                   </div>\n-                </div>\n \n-                <div class=\"tablerow alt\">\n-                  <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"lastExec\"><wicket:message key=\"lastExec\"/></label>\n-                  </div>\n-                  <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"lastExec\">[lastExec]</span>\n+                  <div class=\"tablerow alt\">\n+                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                      <label for=\"lastExec\"><wicket:message key=\"lastExec\"/></label>\n+                    </div>\n+                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                      <span wicket:id=\"lastExec\">[lastExec]</span>\n+                    </div>\n                   </div>\n-                </div>\n \n-                <div class=\"tablerow\">\n-                  <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"nextExec\"><wicket:message key=\"nextExec\"/></label>\n-                  </div>\n-                  <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"nextExec\">[nextExec]</span>\n+                  <div class=\"tablerow\">\n+                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                      <label for=\"nextExec\"><wicket:message key=\"nextExec\"/></label>\n+                    </div>\n+                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                      <span wicket:id=\"nextExec\">[nextExec]</span>\n+                    </div>\n                   </div>\n-                </div>\n \n-                <div class=\"tablerow alt\">\n-                  <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"reportlets\"><wicket:message key=\"reportlets\"/></label>\n-                  </div>\n-                  <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <div style=\"display: inline-table;\">\n-                      <div id=\"selections\" style=\"display: table-cell;\">\n-                        <select wicket:id=\"reportletConfs\" class=\"selectionSelect\"></select>\t\n-                      </div>\n-                      <div id=\"orderingButtons\" style=\"display: table-cell; width: 30px; vertical-align: middle; padding-left: 5px;\">\n-                        <div style=\"padding-bottom: 5px;\">\n-                          <a wicket:id=\"upButton\"><img src=\"img/up-icon.png\" alt=\"move up icon\"/></a>\n+                  <div class=\"tablerow alt\">\n+                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                      <label for=\"reportlets\"><wicket:message key=\"reportlets\"/></label>\n+                    </div>\n+                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                      <div style=\"display: inline-table;\">\n+                        <div id=\"selections\" style=\"display: table-cell;\">\n+                          <select wicket:id=\"reportletConfs\" class=\"selectionSelect\"></select>\t\n                         </div>\n-                        <div style=\"padding-top: 5px;\">\n-                          <a wicket:id=\"downButton\"><img src=\"img/down-icon.png\" alt=\"move down icon\"/></a>\n+                        <div id=\"orderingButtons\" style=\"display: table-cell; width: 30px; vertical-align: middle; padding-left: 5px;\">\n+                          <div style=\"padding-bottom: 5px;\">\n+                            <a wicket:id=\"upButton\"><img src=\"img/up-icon.png\" alt=\"move up icon\"/></a>\n+                          </div>\n+                          <div style=\"padding-top: 5px;\">\n+                            <a wicket:id=\"downButton\"><img src=\"img/down-icon.png\" alt=\"move down icon\"/></a>\n+                          </div>\n                         </div>\n                       </div>\n-                    </div>\n-                    <div id=\"actionButtons\" style=\"padding-top: 5px;\">\n-                      <div style=\"padding-left: 35px;float: left;\">\n-                        <a wicket:id=\"addButton\"><img src=\"img/plus-icon.png\" alt=\"plus icon\"/></a>\n-                      </div>\n-                      <div style=\"padding-left: 15px;float: left;\">\n-                        <a wicket:id=\"editButton\"><img src=\"img/actions/edit.png\" alt=\"edit icon\"/></a>\n-                      </div>\n-                      <div style=\"padding-left: 15px;float: left;\">\n-                        <a wicket:id=\"removeButton\"><img src=\"img/minus-icon.png\" alt=\"minus icon\"/></a>\n+                      <div id=\"actionButtons\" style=\"padding-top: 5px;\">\n+                        <div style=\"padding-left: 35px;float: left;\">\n+                          <a wicket:id=\"addButton\"><img src=\"img/plus-icon.png\" alt=\"plus icon\"/></a>\n+                        </div>\n+                        <div style=\"padding-left: 15px;float: left;\">\n+                          <a wicket:id=\"editButton\"><img src=\"img/actions/edit.png\" alt=\"edit icon\"/></a>\n+                        </div>\n+                        <div style=\"padding-left: 15px;float: left;\">\n+                          <a wicket:id=\"removeButton\"><img src=\"img/minus-icon.png\" alt=\"minus icon\"/></a>\n+                        </div>\n                       </div>\n                     </div>\n                   </div>\n                 </div>\n+              </span>\n+            </div>\n+          </div>\n+          <div id=\"crontab\">\n+            <span wicket:id=\"crontab\">\n+              <div id=\"formtable\">\n+                <div class=\"tablerow alt\">\n+                  <label for=\"cron\"><wicket:message key=\"cron\"/></label>\n+                </div>\n+                <div class=\"tablerow\">\n+                  <input type=\"text\" id=\"seconds\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"seconds\" style=\"width: 50px;float: left\" />\n+                  <input type=\"text\" id=\"minutes\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"minutes\" style=\"width: 50px;float: left\" />\n+                  <input type=\"text\" id=\"hours\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"hours\" style=\"width: 50px;float: left\" />\n+                  <input type=\"text\" id=\"daysOfMonth\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"daysOfMonth\" style=\"width: 50px;float: left\" />\n+                  <input type=\"text\" id=\"months\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"months\" style=\"width: 50px;float: left\" />\n+                  <input type=\"text\" id=\"daysOfWeek\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"daysOfWeek\" style=\"width: 50px\" />\n+                </div>\n+                <div class=\"tablerow alt\">\n+                  <label for=\"cronExpression\"><wicket:message key=\"templates\"/></label>\n+                </div>\n+                <div class=\"tablerow\">\n+                  <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"cronTemplateChooser\" style=\"width: 250px\"/>\n+                </div>\n               </div>\n             </span>\n           </div>\n+          <div id=\"executions\" class=\"ui-widget\">\n+            <span wicket:id=\"executionContainer\" id=\"executionContainer\">\n+              <table class=\"ui-widget ui-widget-content\"\n+                     wicket:id=\"executionsTable\" style=\"width: 100%\"/>\n+            </span>\n+          </div>\n         </div>\n-        <div id=\"crontab\">\n-          <span wicket:id=\"crontab\">\n-            <div id=\"formtable\">\n-              <div class=\"tablerow alt\">\n-                <label for=\"cron\"><wicket:message key=\"cron\"/></label>\n-              </div>\n-              <div class=\"tablerow\">\n-                <input type=\"text\" id=\"seconds\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"seconds\" style=\"width: 50px;float: left\" />\n-                <input type=\"text\" id=\"minutes\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"minutes\" style=\"width: 50px;float: left\" />\n-                <input type=\"text\" id=\"hours\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"hours\" style=\"width: 50px;float: left\" />\n-                <input type=\"text\" id=\"daysOfMonth\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"daysOfMonth\" style=\"width: 50px;float: left\" />\n-                <input type=\"text\" id=\"months\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"months\" style=\"width: 50px;float: left\" />\n-                <input type=\"text\" id=\"daysOfWeek\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"daysOfWeek\" style=\"width: 50px\" />\n-              </div>\n-              <div class=\"tablerow alt\">\n-                <label for=\"cronExpression\"><wicket:message key=\"templates\"/></label>\n-              </div>\n-              <div class=\"tablerow\">\n-                <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"cronTemplateChooser\" style=\"width: 250px\"/>\n-              </div>\n-            </div>\n-          </span>\n-        </div>\n-        <div id=\"executions\" class=\"ui-widget\">\n-          <span wicket:id=\"executionContainer\" id=\"executionContainer\">\n-            <table class=\"ui-widget ui-widget-content\"\n-                   wicket:id=\"executionsTable\" style=\"width: 100%\"/>\n-          </span>\n+        <div style=\"margin: 20px 10px 0\">\n+          <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"apply\"/>\n+          <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n         </div>\n-      </div>\n-      <div style=\"margin: 20px 10px 0\">\n-        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"apply\"/>\n-        <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n-      </div>\n-    </form>\n-  </div>\n-  <div wicket:id=\"reportletConfWin\"/>\n-  <div wicket:id=\"reportExecMessageWin\"/>\n-  <div wicket:id=\"reportExecExportWin\"/>\n-</wicket:extend>\n+      </form>\n+    </div>\n+    <div wicket:id=\"reportletConfWin\"/>\n+    <div wicket:id=\"reportExecMessageWin\"/>\n+    <div wicket:id=\"reportExecExportWin\"/>\n+  </wicket:extend>\n+</html>"},{"sha":"b8d9df3ed782e45196b7d27a10da2140c1a28bfd","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AttributesPanel.html","status":"modified","additions":22,"deletions":20,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -16,27 +16,29 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <div class=\"tablerow\" wicket:id=\"schemas\">\n-    <div class=\"tablecolumn_label short_dynamicsize\">\n-      <span wicket:id=\"name\"/>\n-    </div>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"tablerow\" wicket:id=\"schemas\">\n+      <div class=\"tablecolumn_label short_dynamicsize\">\n+        <span wicket:id=\"name\"/>\n+      </div>\n \n-    <div class=\"tablecolumn_field medium_dynamicsize\">\n-      <span wicket:id=\"panel\">\n-        [panel for dynamic input type markup]\n-      </span>\n-      <a wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\"><img src=\"img/help.png\"/></a>\n-      <div class=\"help\">\n-        <div wicket:id=\"jexlHelp\" class=\"tooltip\">\n-          <wicket:message key=\"jexl_info\"/>\n-          <ul>\n-            <li><wicket:message key=\"jexl_ex1\"/></li>\n-            <li><wicket:message key=\"jexl_ex2\"/></li>\n-          </ul>\n-          <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+      <div class=\"tablecolumn_field medium_dynamicsize\">\n+        <span wicket:id=\"panel\">\n+          [panel for dynamic input type markup]\n+        </span>\n+        <a wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\"><img src=\"img/help.png\"/></a>\n+        <div class=\"help\">\n+          <div wicket:id=\"jexlHelp\" class=\"tooltip\">\n+            <wicket:message key=\"jexl_info\"/>\n+            <ul>\n+              <li><wicket:message key=\"jexl_ex1\"/></li>\n+              <li><wicket:message key=\"jexl_ex2\"/></li>\n+            </ul>\n+            <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+          </div>\n         </div>\n       </div>\n     </div>\n-  </div>\n-</wicket:panel>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"88dd05281dc42a266c03b311a4b08cdcf941ba87","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/VirtualAttributesPanel.html","status":"modified","additions":37,"deletions":35,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -16,43 +16,45 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <table class=\"ui-widget ui-widget-content ui-corner-all\"\n-         style=\"font-size: 1em;margin-top:2px;\"\n-         width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n-    <thead>\n-      <tr class=\"ui-widget-header\">\n-        <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n-    <th><wicket:message key=\"virtualAttributeName\"/></th>\n-    <th><wicket:message key=\"virtualAttributeValue\"/></th>\n-    </tr>\n-    </thead>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <table class=\"ui-widget ui-widget-content ui-corner-all\"\n+           style=\"font-size: 1em;margin-top:2px;\"\n+           width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n+      <thead>\n+        <tr class=\"ui-widget-header\">\n+          <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n+          <th><wicket:message key=\"virtualAttributeName\"/></th>\n+          <th><wicket:message key=\"virtualAttributeValue\"/></th>\n+        </tr>\n+      </thead>\n \n-    <tfoot>\n-      <tr>\n-        <td>\n-          <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"addAttributeBtn\" />\n-        </td>\n-      </tr>\n-    </tfoot>\n+      <tfoot>\n+        <tr>\n+          <td>\n+            <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                   wicket:id=\"addAttributeBtn\" />\n+          </td>\n+        </tr>\n+      </tfoot>\n \n-    <tbody wicket:id=\"virAttrContainer\">\n-      <tr wicket:id=\"attributes\">\n-        <td align=\"center\" valign=\"top\">\n-          <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-        </td>\n+      <tbody wicket:id=\"virAttrContainer\">\n+        <tr wicket:id=\"attributes\">\n+          <td align=\"center\" valign=\"top\">\n+            <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+          </td>\n \n-        <td align=\"center\" valign=\"top\">\n-          <select class=\"text ui-widget-content ui-corner-all\"\n-                  style=\"width:100%\" wicket:id=\"schema\"/>\n-        </td>\n+          <td align=\"center\" valign=\"top\">\n+            <select class=\"text ui-widget-content ui-corner-all\"\n+                    style=\"width:100%\" wicket:id=\"schema\"/>\n+          </td>\n \n-        <td align=\"center \" valign=\"top\">\n-          <span wicket:id=\"values\" style=\"text-align:left;display:block;width:95%\">[values]</span>\n-        </td>\n+          <td align=\"center \" valign=\"top\">\n+            <span wicket:id=\"values\" style=\"text-align:left;display:block;width:95%\">[values]</span>\n+          </td>\n \n-      </tr>\n-    </tbody>\n-  </table>\n-</wicket:panel>\n+        </tr>\n+      </tbody>\n+    </table>\n+  </wicket:panel>\n+</html>"},{"sha":"1058281665530ed3708e45d852694b91437cb668","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -233,7 +233,7 @@ public <T extends AbstractAttributableMod> T getAttributableMod(final Long id, f\n         }\n         if (AttributableType.ROLE == attrUtil.getType()) {\n             // reading from connector object cannot change entitlements\n-            ((RoleTO) updated).setEntitlements(((RoleTO) original).getEntitlements());\n+            ((RoleTO) updated).getEntitlements().addAll(((RoleTO) original).getEntitlements());\n             return (T) AttributableOperations.diff(((RoleTO) updated), ((RoleTO) original), true);\n         }\n \n@@ -290,12 +290,12 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                         attributeTO = new AttributeTO();\n                         attributeTO.setSchema(StringUtils.EMPTY);\n                         if (attribute.getValue().isEmpty() || attribute.getValue().get(0) == null) {\n-                            attributeTO.addValue(StringUtils.EMPTY);\n+                            attributeTO.getValues().add(StringUtils.EMPTY);\n                         } else {\n-                            attributeTO.addValue(attribute.getValue().get(0).toString());\n+                            attributeTO.getValues().add(attribute.getValue().get(0).toString());\n                         }\n \n-                        ((RoleTO) attributableTO).addAttribute(attributeTO);\n+                        ((RoleTO) attributableTO).getAttributes().add(attributeTO);\n                     }\n                     break;\n \n@@ -308,18 +308,18 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                             ? Collections.emptyList()\n                             : attribute.getValue()) {\n                         if (value != null) {\n-                            attributeTO.addValue(value.toString());\n+                            attributeTO.getValues().add(value.toString());\n                         }\n                     }\n \n-                    attributableTO.addAttribute(attributeTO);\n+                    attributableTO.getAttributes().add(attributeTO);\n                     break;\n \n                 case UserDerivedSchema:\n                 case RoleDerivedSchema:\n                     attributeTO = new AttributeTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n-                    attributableTO.addDerivedAttribute(attributeTO);\n+                    attributableTO.getDerivedAttributes().add(attributeTO);\n                     break;\n \n                 case UserVirtualSchema:\n@@ -332,11 +332,11 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                             : attribute.getValue()) {\n \n                         if (value != null) {\n-                            attributeTO.addValue(value.toString());\n+                            attributeTO.getValues().add(value.toString());\n                         }\n                     }\n \n-                    attributableTO.addVirtualAttribute(attributeTO);\n+                    attributableTO.getVirtualAttributes().add(attributeTO);\n                     break;\n \n                 default:\n@@ -371,7 +371,7 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                     } else {\n                         membTBU = new MembershipTO();\n                         membTBU.setRoleId(membTO.getRoleId());\n-                        ((UserTO) attributableTO).addMembership(membTBU);\n+                        ((UserTO) attributableTO).getMemberships().add(membTBU);\n                     }\n                     fillFromTemplate(membTBU, membTO);\n                 }\n@@ -389,7 +389,7 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                 ((RoleTO) attributableTO).setUserOwner(((RoleTO) template).getUserOwner());\n                 ((RoleTO) attributableTO).setRoleOwner(((RoleTO) template).getRoleOwner());\n \n-                ((RoleTO) attributableTO).setEntitlements(((RoleTO) template).getEntitlements());\n+                ((RoleTO) attributableTO).getEntitlements().addAll(((RoleTO) template).getEntitlements());\n \n                 ((RoleTO) attributableTO).setAccountPolicy(((RoleTO) template).getAccountPolicy());\n                 ((RoleTO) attributableTO).setPasswordPolicy(((RoleTO) template).getPasswordPolicy());\n@@ -405,7 +405,7 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n             fillFromTemplate(attributableTO, template);\n \n             for (String resource : template.getResources()) {\n-                attributableTO.addResource(resource);\n+                attributableTO.getResources().add(resource);\n             }\n         }\n \n@@ -463,15 +463,15 @@ public ConnObjectTO getConnObjectTO(final ConnectorObject connObject) {\n                 for (Object value : attr.getValue()) {\n                     if (value != null) {\n                         if (value instanceof GuardedString || value instanceof GuardedByteArray) {\n-                            attrTO.addValue(getPassword(value));\n+                            attrTO.getValues().add(getPassword(value));\n                         } else {\n-                            attrTO.addValue(value.toString());\n+                            attrTO.getValues().add(value.toString());\n                         }\n                     }\n                 }\n             }\n \n-            connObjectTO.addAttribute(attrTO);\n+            connObjectTO.getAttributes().add(attrTO);\n         }\n \n         return connObjectTO;\n@@ -562,7 +562,7 @@ private void retrieveVirAttrValue(\n                             if (attribute != null && attribute.getValue() != null) {\n                                 for (Object obj : attribute.getValue()) {\n                                     if (obj != null) {\n-                                        virAttr.addValue(obj.toString());\n+                                        virAttr.getValues().add(obj.toString());\n                                     }\n                                 }\n                             }\n@@ -607,14 +607,14 @@ private void fillFromTemplate(final AbstractAttributableTO attributableTO, final\n                     && (!currentAttrMap.containsKey(templateAttr.getSchema())\n                     || currentAttrMap.get(templateAttr.getSchema()).getValues().isEmpty())) {\n \n-                attributableTO.addAttribute(evaluateAttrTemplate(attributableTO, templateAttr));\n+                attributableTO.getAttributes().add(evaluateAttrTemplate(attributableTO, templateAttr));\n             }\n         }\n \n         currentAttrMap = attributableTO.getDerivedAttributeMap();\n         for (AttributeTO templateDerAttr : template.getDerivedAttributes()) {\n             if (!currentAttrMap.containsKey(templateDerAttr.getSchema())) {\n-                attributableTO.addDerivedAttribute(templateDerAttr);\n+                attributableTO.getDerivedAttributes().add(templateDerAttr);\n             }\n         }\n \n@@ -624,7 +624,7 @@ private void fillFromTemplate(final AbstractAttributableTO attributableTO, final\n                     && (!currentAttrMap.containsKey(templateVirAttr.getSchema())\n                     || currentAttrMap.get(templateVirAttr.getSchema()).getValues().isEmpty())) {\n \n-                attributableTO.addVirtualAttribute(evaluateAttrTemplate(attributableTO, templateVirAttr));\n+                attributableTO.getVirtualAttributes().add(evaluateAttrTemplate(attributableTO, templateVirAttr));\n             }\n         }\n     }\n@@ -637,7 +637,7 @@ private AttributeTO evaluateAttrTemplate(final AbstractAttributableTO attributab\n             for (String value : template.getValues()) {\n                 String evaluated = jexlUtil.evaluate(value, attributableTO);\n                 if (StringUtils.isNotBlank(evaluated)) {\n-                    result.addValue(evaluated);\n+                    result.getValues().add(evaluated);\n                 }\n             }\n         }"},{"sha":"19b4e4d9bbf9550e34cefe864176f2dc8aec5c5d","filename":"core/src/main/java/org/apache/syncope/core/connid/PasswordGenerator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FPasswordGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FPasswordGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FPasswordGenerator.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -96,8 +96,8 @@ private PasswordPolicySpec merge(final List<PasswordPolicySpec> ppSpecs) {\n             if ((policySpec.getMaxLength() != 0) && ((policySpec.getMaxLength() < fpps.getMaxLength()))) {\n                 fpps.setMaxLength(policySpec.getMaxLength());\n             }\n-            fpps.setPrefixesNotPermitted(policySpec.getPrefixesNotPermitted());\n-            fpps.setSuffixesNotPermitted(policySpec.getSuffixesNotPermitted());\n+            fpps.getPrefixesNotPermitted().addAll(policySpec.getPrefixesNotPermitted());\n+            fpps.getSuffixesNotPermitted().addAll(policySpec.getSuffixesNotPermitted());\n \n             if (!fpps.isNonAlphanumericRequired()) {\n                 fpps.setNonAlphanumericRequired(policySpec.isNonAlphanumericRequired());"},{"sha":"5baf08a81ad501dbc157f092cece9704d1ca2934","filename":"core/src/main/java/org/apache/syncope/core/policy/PolicyEvaluator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -22,13 +22,13 @@\n import org.apache.syncope.common.types.AbstractPolicySpec;\n import org.apache.syncope.common.types.AccountPolicySpec;\n import org.apache.syncope.common.types.PasswordPolicySpec;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.stereotype.Component;\n \n @Component"},{"sha":"dea0a3b9a8c03dddd4726587e669ba0c252b2556","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -545,7 +545,7 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n \n                 final AttributeMod attributeMod = new AttributeMod();\n                 attributeMod.setSchema(schema);\n-                attributeMod.setValuesToBeAdded(virAttr.getValues());\n+                attributeMod.getValuesToBeAdded().addAll(virAttr.getValues());\n \n                 vAttrsToBeUpdated.put(schema, attributeMod);\n             }"},{"sha":"6c2e51fc20d370392855e515d0d304333731fad0","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnectorController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -239,7 +239,7 @@ public List<ConnBundleTO> getBundles(final String lang) {\n                     connConfPropSchema.setOrder(configurationProperty.getOrder());\n                     connConfPropSchema.setConfidential(configurationProperty.isConfidential());\n \n-                    connBundleTO.addProperty(connConfPropSchema);\n+                    connBundleTO.getProperties().add(connConfPropSchema);\n                 }\n \n                 LOG.debug(\"Connector bundle: {}\", connBundleTO);"},{"sha":"d5c409db7109e6ee0357f3b96ec2538c366dc4e4","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/LoggerController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -36,7 +36,6 @@\n import org.apache.syncope.core.persistence.dao.LoggerDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.security.access.prepost.PreAuthorize;\n@@ -45,6 +44,7 @@\n import ch.qos.logback.classic.Level;\n import ch.qos.logback.classic.Logger;\n import ch.qos.logback.classic.LoggerContext;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.springframework.stereotype.Component;\n \n @Component"},{"sha":"0194b14b38dd6bdfd4efa9065213f0266daf10ac","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -273,7 +273,7 @@ public RoleTO create(final RoleTO roleTO) {\n         }\n \n         final RoleTO savedTO = binder.getRoleTO(created.getResult());\n-        savedTO.setPropagationStatusTOs(propagations);\n+        savedTO.getPropagationStatusTOs().addAll(propagations);\n \n         LOG.debug(\"About to return created role\\n{}\", savedTO);\n \n@@ -303,7 +303,7 @@ public RoleTO update(final RoleMod roleMod) {\n             propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n         }\n         final RoleTO updatedTO = binder.getRoleTO(updated.getResult());\n-        updatedTO.setPropagationStatusTOs(propagations);\n+        updatedTO.getPropagationStatusTOs().addAll(propagations);\n \n         auditManager.audit(Category.role, RoleSubCategory.update, Result.success,\n                 \"Successfully updated role: \" + role.getId());\n@@ -338,7 +338,7 @@ public RoleTO delete(final Long roleId) {\n             LOG.error(\"Error propagation primary resource\", e);\n             propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n         }\n-        roleTO.setPropagationStatusTOs(propagations);\n+        roleTO.getPropagationStatusTOs().addAll(propagations);\n \n         rwfAdapter.delete(roleId);\n "},{"sha":"00937467eebb334f94cdb42a88320dfa3e5ef1a5","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -259,7 +259,7 @@ public UserTO create(final UserTO userTO) {\n         notificationManager.createTasks(created.getResult().getKey(), created.getPerformedTasks());\n \n         final UserTO savedTO = binder.getUserTO(created.getResult().getKey());\n-        savedTO.setPropagationStatusTOs(propagations);\n+        savedTO.getPropagationStatusTOs().addAll(propagations);\n \n         LOG.debug(\"About to return created user\\n{}\", savedTO);\n \n@@ -344,7 +344,7 @@ public UserTO update(final UserMod userMod) {\n \n         // 4. prepare result, including propagation status on external resources\n         final UserTO updatedTO = binder.getUserTO(updated.getResult().getKey());\n-        updatedTO.setPropagationStatusTOs(propagations);\n+        updatedTO.getPropagationStatusTOs().addAll(propagations);\n \n         auditManager.audit(Category.user, UserSubCategory.update, Result.success,\n                 \"Successfully updated user: \" + updatedTO.getUsername());\n@@ -533,7 +533,7 @@ protected UserTO doDelete(final Long userId) {\n             propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n         }\n \n-        userTO.setPropagationStatusTOs(propagations);\n+        userTO.getPropagationStatusTOs().addAll(propagations);\n \n         uwfAdapter.delete(userId);\n "},{"sha":"525846f61a1a609509e8591b84d7c8f08f170ceb","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -715,32 +715,32 @@ protected void fillTO(final AbstractAttributableTO abstractAttributableTO,\n         for (AbstractAttr attribute : attributes) {\n             attributeTO = new AttributeTO();\n             attributeTO.setSchema(attribute.getSchema().getName());\n-            attributeTO.setValues(attribute.getValuesAsStrings());\n+            attributeTO.getValues().addAll(attribute.getValuesAsStrings());\n             attributeTO.setReadonly(attribute.getSchema().isReadonly());\n \n-            abstractAttributableTO.addAttribute(attributeTO);\n+            abstractAttributableTO.getAttributes().add(attributeTO);\n         }\n \n         for (AbstractDerAttr derivedAttribute : derivedAttributes) {\n             attributeTO = new AttributeTO();\n             attributeTO.setSchema(derivedAttribute.getDerivedSchema().getName());\n-            attributeTO.addValue(derivedAttribute.getValue(attributes));\n+            attributeTO.getValues().add(derivedAttribute.getValue(attributes));\n             attributeTO.setReadonly(true);\n \n-            abstractAttributableTO.addDerivedAttribute(attributeTO);\n+            abstractAttributableTO.getDerivedAttributes().add(attributeTO);\n         }\n \n         for (AbstractVirAttr virtualAttribute : virtualAttributes) {\n             attributeTO = new AttributeTO();\n             attributeTO.setSchema(virtualAttribute.getVirtualSchema().getName());\n-            attributeTO.setValues(virtualAttribute.getValues());\n+            attributeTO.getValues().addAll(virtualAttribute.getValues());\n             attributeTO.setReadonly(virtualAttribute.getVirtualSchema().isReadonly());\n \n-            abstractAttributableTO.addVirtualAttribute(attributeTO);\n+            abstractAttributableTO.getVirtualAttributes().add(attributeTO);\n         }\n \n         for (ExternalResource resource : resources) {\n-            abstractAttributableTO.addResource(resource.getName());\n+            abstractAttributableTO.getResources().add(resource.getName());\n         }\n     }\n }"},{"sha":"6315846ea15dd9758c97092f6c05a6551276348b","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -25,14 +25,14 @@\n import org.apache.syncope.common.types.ConnConfPropSchema;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.util.ConnIdBundleManager;\n import org.identityconnectors.framework.api.ConfigurationProperties;\n import org.identityconnectors.framework.impl.api.ConfigurationPropertyImpl;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n@@ -213,7 +213,7 @@ public ConnInstanceTO getConnInstanceTO(final ConnInstance connInstance) {\n \n                 ConnConfProperty property = new ConnConfProperty();\n                 property.setSchema(connConfPropSchema);\n-                connInstanceTO.addConfiguration(property);\n+                connInstanceTO.getConfiguration().add(property);\n             }\n         }\n         return connInstanceTO;"},{"sha":"003c3c056344b48a3c633ae29b78e31e5f114839","filename":"core/src/main/java/org/apache/syncope/core/rest/data/NotificationDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -19,8 +19,8 @@\n package org.apache.syncope.core.rest.data;\n \n import org.apache.syncope.common.to.NotificationTO;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.core.persistence.beans.Notification;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.stereotype.Component;\n \n @Component"},{"sha":"cfcaee4ee882d46397a8d9288d8352cb9bfae61e","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ReportDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.common.report.ReportletConf;\n import org.apache.syncope.common.to.ReportExecTO;\n import org.apache.syncope.common.to.ReportTO;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.core.init.ImplementationClassNamesLoader;\n import org.apache.syncope.core.init.JobInstanceLoader;\n import org.apache.syncope.core.persistence.beans.Report;\n@@ -38,7 +39,6 @@\n import org.quartz.TriggerKey;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.stereotype.Component;\n@@ -134,7 +134,7 @@ public ReportTO getReportTO(final Report report) {\n                 : latestExec.getEndDate());\n \n         for (ReportExec reportExec : report.getExecs()) {\n-            reportTO.addExecution(getReportExecTO(reportExec));\n+            reportTO.getExecutions().add(getReportExecTO(reportExec));\n         }\n \n         String triggerName = JobInstanceLoader.getTriggerName(JobInstanceLoader.getJobName(report));"},{"sha":"6a3cd5872eeb04771e744b07058a830e5de80c36","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.AbstractMapping;\n@@ -51,7 +52,6 @@\n import org.apache.syncope.core.util.JexlUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n@@ -336,7 +336,7 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n         resourceTO.setSyncPolicy(resource.getSyncPolicy() == null\n                 ? null : resource.getSyncPolicy().getId());\n \n-        resourceTO.setConnConfProperties(resource.getConnInstanceConfiguration());\n+        resourceTO.getConnConfProperties().addAll(resource.getConnInstanceConfiguration());\n \n         resourceTO.setUsyncToken(resource.getUserializedSyncToken());\n         resourceTO.setRsyncToken(resource.getRserializedSyncToken());"},{"sha":"4ea849920ec0b798fd6d57afa87a94b5c60272e0","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -240,7 +240,7 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n         }\n \n         // entitlements\n-        if (roleMod.getEntitlements() != null) {\n+        if (roleMod.isModEntitlements()) {\n             role.getEntitlements().clear();\n             for (String entitlementName : roleMod.getEntitlements()) {\n                 Entitlement entitlement = entitlementDAO.find(entitlementName);\n@@ -334,7 +334,7 @@ public RoleTO getRoleTO(final SyncopeRole role) {\n         fillTO(roleTO, allAttributes, allDerAttributes, allVirAttributes, role.getResources());\n \n         for (Entitlement entitlement : role.getEntitlements()) {\n-            roleTO.addEntitlement(entitlement.getName());\n+            roleTO.getEntitlements().add(entitlement.getName());\n         }\n \n         roleTO.setPasswordPolicy(role.getPasswordPolicy() == null"},{"sha":"4f78242a6329aef327b76ab3a68421d309837be4","filename":"core/src/main/java/org/apache/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -23,6 +23,7 @@\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.VirSchemaTO;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n@@ -32,7 +33,6 @@\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.JexlUtil;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;"},{"sha":"4a2e6ae6be72fc006310e6d7606bd48ce1c20805","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n import org.apache.syncope.common.types.TaskType;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.init.JobInstanceLoader;\n@@ -51,7 +52,6 @@\n import org.quartz.TriggerKey;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n@@ -244,7 +244,7 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtil ta\n                 : latestExec.getEndDate());\n \n         for (TaskExec execution : task.getExecs()) {\n-            taskTO.addExecution(getTaskExecTO(execution));\n+            taskTO.getExecutions().add(getTaskExecTO(execution));\n         }\n \n         switch (taskUtil.getType()) {"},{"sha":"7e0fdd1ab968ec680cdbe04f99bd5636cb723c16","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.common.types.PasswordPolicySpec;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n@@ -54,7 +55,6 @@\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.PasswordEncoder;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.security.core.context.SecurityContextHolder;\n@@ -65,8 +65,8 @@\n @Transactional(rollbackFor = {Throwable.class})\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n-    private static final String[] IGNORE_USER_PROPERTIES = {\"memberships\", \"attributes\", \"derivedAttributes\",\n-        \"virtualAttributes\", \"resources\"};\n+    private static final String[] IGNORE_USER_PROPERTIES = {\n+        \"memberships\", \"attributes\", \"derivedAttributes\", \"virtualAttributes\", \"resources\"};\n \n     @Autowired\n     private ConnObjectUtil connObjectUtil;\n@@ -399,7 +399,7 @@ public UserTO getUserTO(final SyncopeUser user) {\n             fillTO(membershipTO, membership.getAttributes(), membership.getDerivedAttributes(), membership.\n                     getVirtualAttributes(), membership.getResources());\n \n-            userTO.addMembership(membershipTO);\n+            userTO.getMemberships().add(membershipTO);\n         }\n \n         return userTO;"},{"sha":"1c3e6b06317fbbc70703d1a0a6e4dc85d54df0d4","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserRequestDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -22,12 +22,12 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserRequestTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.core.persistence.beans.UserRequest;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Component;"},{"sha":"5204a88c6c43ed0d7b51e80b5d33e458aa3025c3","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPMembershipSyncActions.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -97,12 +97,12 @@ protected String getGroupMembershipAttrName(final Connector connector) {\n         while (propertyIterator.hasNext()) {\n             ConnConfProperty property = propertyIterator.next();\n             if (\"groupMemberAttribute\".equals(property.getSchema().getName())\n-                && property.getValues() != null && !property.getValues().isEmpty()) {\n-                groupMembershipName = (String)property.getValues().get(0);\n+                    && property.getValues() != null && !property.getValues().isEmpty()) {\n+                groupMembershipName = (String) property.getValues().get(0);\n                 break;\n             }\n         }\n-        \n+\n         return groupMembershipName;\n     }\n \n@@ -152,7 +152,7 @@ protected UserMod getUserMod(final Long userId, final RoleTO roleTO) {\n \n             MembershipMod membershipMod = new MembershipMod();\n             membershipMod.setRole(roleTO.getId());\n-            userMod.addMembershipToBeAdded(membershipMod);\n+            userMod.getMembershipsToBeAdded().add(membershipMod);\n         }\n \n         return userMod;\n@@ -170,7 +170,7 @@ protected UserMod getUserMod(final Long userId, final RoleTO roleTO) {\n     protected List<Object> getMembAttrValues(final SyncDelta delta, final Connector connector) {\n         List<Object> result = Collections.<Object>emptyList();\n         String groupMemberName = getGroupMembershipAttrName(connector);\n-        \n+\n         // first, try to read the configured attribute from delta, returned by the ongoing synchronization\n         Attribute membAttr = delta.getObject().getAttributeByName(groupMemberName);\n         // if not found, perform an additional read on the underlying connector for the same connector object\n@@ -242,7 +242,7 @@ protected void synchronizeMemberships(final SyncopeSyncResultHandler handler, fi\n         for (Map.Entry<Long, Long> member : membersBeforeRoleUpdate.entrySet()) {\n             UserMod userMod = new UserMod();\n             userMod.setId(member.getKey());\n-            userMod.addMembershipToBeRemoved(member.getValue());\n+            userMod.getMembershipsToBeRemoved().add(member.getValue());\n             userUpdate(userMod, resource.getName());\n         }\n     }"},{"sha":"7b7d88646adf6dfbceddd2035c05f5965eed2f3d","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -62,6 +62,7 @@\n import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.types.WorkflowFormPropertyType;\n+import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.propagation.PropagationByResource;\n@@ -73,7 +74,6 @@\n import org.identityconnectors.common.security.EncryptorFactory;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.crypto.codec.Base64;\n import org.springframework.transaction.annotation.Transactional;\n@@ -515,7 +515,7 @@ private WorkflowFormTO getFormTO(final Task task, final TaskFormData formData) {\n                 propertyTO.setDatePattern((String) fProp.getType().getInformation(\"datePattern\"));\n             }\n             if (propertyTO.getType() == WorkflowFormPropertyType.Enum) {\n-                propertyTO.setEnumValues((Map<String, String>) fProp.getType().getInformation(\"values\"));\n+                propertyTO.getEnumValues().putAll((Map<String, String>) fProp.getType().getInformation(\"values\"));\n             }\n \n             formTO.addProperty(propertyTO);"},{"sha":"78bce9ea65a46c9ee3beb9e01d96e9262c4e35d0","filename":"core/src/test/java/org/apache/syncope/core/notification/NotificationTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -227,7 +227,7 @@ public void notifyByMail() throws Exception {\n         UserTO userTO = UserTestITCase.getSampleTO(mailAddress);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userController.create(userTO);\n \n@@ -282,7 +282,7 @@ public void issueSYNCOPE192() throws Exception {\n         UserTO userTO = UserTestITCase.getSampleTO(mailAddress);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userController.create(userTO);\n "},{"sha":"0884ffe67595bac5ece2c3191b0b10bbc7e5f004","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/ConnInstanceTest.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -21,7 +21,6 @@\n import static org.junit.Assert.*;\n \n import java.io.File;\n-import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -87,15 +86,15 @@ public void save() throws ClassNotFoundException {\n         endpointSchema.setRequired(true);\n         ConnConfProperty endpoint = new ConnConfProperty();\n         endpoint.setSchema(endpointSchema);\n-        endpoint.setValues(Collections.singletonList(\"http://host.domain\"));\n+        endpoint.getValues().add(\"http://host.domain\");\n \n         ConnConfPropSchema servicenameSchema = new ConnConfPropSchema();\n         servicenameSchema.setName(\"servicename\");\n         servicenameSchema.setType(String.class.getName());\n         servicenameSchema.setRequired(true);\n         ConnConfProperty servicename = new ConnConfProperty();\n         servicename.setSchema(servicenameSchema);\n-        servicename.setValues(Collections.singletonList(\"Provisioning\"));\n+        endpoint.getValues().add(\"Provisioning\");\n \n         conf.add(endpoint);\n         conf.add(servicename);"},{"sha":"323592483ef79a6238ae4186fcbb5d55733453da","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -169,14 +169,14 @@ protected static String getUUIDString() {\n     protected static AttributeTO attributeTO(final String schema, final String value) {\n         AttributeTO attr = new AttributeTO();\n         attr.setSchema(schema);\n-        attr.addValue(value);\n+        attr.getValues().add(value);\n         return attr;\n     }\n \n     protected static AttributeMod attributeMod(final String schema, final String valueToBeAdded) {\n         AttributeMod attr = new AttributeMod();\n         attr.setSchema(schema);\n-        attr.addValueToBeAdded(valueToBeAdded);\n+        attr.getValuesToBeAdded().add(valueToBeAdded);\n         return attr;\n     }\n "},{"sha":"4372dc9f86926ee69577a73f9497c30f00c43b05","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -76,7 +76,7 @@ public void testUserSchemaAuthorization() {\n         RoleTO authRoleTO = new RoleTO();\n         authRoleTO.setName(\"authRole\" + getUUIDString());\n         authRoleTO.setParent(8L);\n-        authRoleTO.addEntitlement(\"SCHEMA_READ\");\n+        authRoleTO.getEntitlements().add(\"SCHEMA_READ\");\n \n         authRoleTO = createRole(roleService, authRoleTO);\n         assertNotNull(authRoleTO);\n@@ -99,9 +99,9 @@ public void testUserSchemaAuthorization() {\n         membershipTO.setRoleId(authRoleTO.getId());\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n-        testAttributeTO.addValue(\"a value\");\n-        membershipTO.addAttribute(testAttributeTO);\n-        userTO.addMembership(membershipTO);\n+        testAttributeTO.getValues().add(\"a value\");\n+        membershipTO.getAttributes().add(testAttributeTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -140,9 +140,9 @@ public void testUserRead() {\n         membershipTO.setRoleId(7L);\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n-        testAttributeTO.addValue(\"a value\");\n-        membershipTO.addAttribute(testAttributeTO);\n-        userTO.addMembership(membershipTO);\n+        testAttributeTO.getValues().add(\"a value\");\n+        membershipTO.getAttributes().add(testAttributeTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -172,9 +172,9 @@ public void testUserSearch() throws InvalidSearchConditionException {\n         membershipTO.setRoleId(7L);\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n-        testAttributeTO.addValue(\"a value\");\n-        membershipTO.addAttribute(testAttributeTO);\n-        userTO.addMembership(membershipTO);\n+        testAttributeTO.getValues().add(\"a value\");\n+        membershipTO.getAttributes().add(testAttributeTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -216,9 +216,9 @@ public void checkFailedLogins() {\n         membershipTO.setRoleId(7L);\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n-        testAttributeTO.addValue(\"a value\");\n-        membershipTO.addAttribute(testAttributeTO);\n-        userTO.addMembership(membershipTO);\n+        testAttributeTO.getValues().add(\"a value\");\n+        membershipTO.getAttributes().add(testAttributeTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -246,9 +246,9 @@ public void checkUserSuspension() {\n         membershipTO.setRoleId(7L);\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n-        testAttributeTO.addValue(\"a value\");\n-        membershipTO.addAttribute(testAttributeTO);\n-        userTO.addMembership(membershipTO);\n+        testAttributeTO.getValues().add(\"a value\");\n+        membershipTO.getAttributes().add(testAttributeTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         long userId = userTO.getId();\n@@ -293,8 +293,8 @@ public void issueSYNCOPE48() {\n         // Parent role, able to create users with role 1\n         RoleTO parentRole = new RoleTO();\n         parentRole.setName(\"parentAdminRole\" + getUUIDString());\n-        parentRole.addEntitlement(\"USER_CREATE\");\n-        parentRole.addEntitlement(\"ROLE_1\");\n+        parentRole.getEntitlements().add(\"USER_CREATE\");\n+        parentRole.getEntitlements().add(\"ROLE_1\");\n         parentRole.setParent(1L);\n \n         parentRole = createRole(roleService, parentRole);\n@@ -313,7 +313,7 @@ public void issueSYNCOPE48() {\n         role1Admin.setPassword(\"password\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(childRole.getId());\n-        role1Admin.addMembership(membershipTO);\n+        role1Admin.getMemberships().add(membershipTO);\n \n         role1Admin = createUser(role1Admin);\n         assertNotNull(role1Admin);\n@@ -324,7 +324,7 @@ public void issueSYNCOPE48() {\n         UserTO role1User = UserTestITCase.getUniqueSampleTO(\"syncope48user@apache.org\");\n         membershipTO = new MembershipTO();\n         membershipTO.setRoleId(1L);\n-        role1User.addMembership(membershipTO);\n+        role1User.getMemberships().add(membershipTO);\n \n         Response response = userService2.create(role1User);\n         assertNotNull(response);"},{"sha":"2998b5e0c0dc8132a14cafee98b1211f92c94063","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":62,"deletions":64,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -28,7 +28,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.URI;\n-import java.util.Collections;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n@@ -123,26 +122,26 @@ public void create() {\n         endpointSchema.setRequired(true);\n         ConnConfProperty endpoint = new ConnConfProperty();\n         endpoint.setSchema(endpointSchema);\n-        endpoint.setValues(Collections.singletonList(\"http://localhost:8888/wssample/services\"));\n+        endpoint.getValues().add(\"http://localhost:8888/wssample/services\");\n \n         ConnConfPropSchema servicenameSchema = new ConnConfPropSchema();\n         servicenameSchema.setName(\"servicename\");\n         servicenameSchema.setType(String.class.getName());\n         servicenameSchema.setRequired(true);\n         ConnConfProperty servicename = new ConnConfProperty();\n         servicename.setSchema(servicenameSchema);\n-        servicename.setValues(Collections.singletonList(\"Provisioning\"));\n+        endpoint.getValues().add(\"Provisioning\");\n \n         conf.add(endpoint);\n         conf.add(servicename);\n \n         // set connector configuration\n-        connectorTO.setConfiguration(conf);\n+        connectorTO.getConfiguration().addAll(conf);\n \n         // set connector capabilities\n-        connectorTO.addCapability(ConnectorCapability.TWO_PHASES_CREATE);\n-        connectorTO.addCapability(ConnectorCapability.ONE_PHASE_CREATE);\n-        connectorTO.addCapability(ConnectorCapability.TWO_PHASES_UPDATE);\n+        connectorTO.getCapabilities().add(ConnectorCapability.TWO_PHASES_CREATE);\n+        connectorTO.getCapabilities().add(ConnectorCapability.ONE_PHASE_CREATE);\n+        connectorTO.getCapabilities().add(ConnectorCapability.TWO_PHASES_UPDATE);\n \n         Response response = connectorService.create(connectorTO);\n         if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n@@ -165,7 +164,7 @@ public void create() {\n         // check for the updating\n         connectorTO.setId(actual.getId());\n \n-        connectorTO.removeCapability(ConnectorCapability.TWO_PHASES_UPDATE);\n+        connectorTO.getCapabilities().remove(ConnectorCapability.TWO_PHASES_UPDATE);\n         actual = null;\n         try {\n             connectorService.update(connectorTO.getId(), connectorTO);\n@@ -224,21 +223,20 @@ public void update() {\n         endpointSchema.setRequired(true);\n         ConnConfProperty endpoint = new ConnConfProperty();\n         endpoint.setSchema(endpointSchema);\n-        endpoint.setValues(Collections.singletonList(\"http://localhost:8888/wssample/services\"));\n+        endpoint.getValues().add(\"http://localhost:8888/wssample/services\");\n+        conf.add(endpoint);\n \n         ConnConfPropSchema servicenameSchema = new ConnConfPropSchema();\n         servicenameSchema.setName(\"servicename\");\n         servicenameSchema.setType(String.class.getName());\n         servicenameSchema.setRequired(true);\n         ConnConfProperty servicename = new ConnConfProperty();\n         servicename.setSchema(servicenameSchema);\n-        servicename.setValues(Collections.singletonList(\"Provisioning\"));\n-\n-        conf.add(endpoint);\n+        servicename.getValues().add(\"Provisioning\");\n         conf.add(servicename);\n \n         // set connector configuration\n-        connectorTO.setConfiguration(conf);\n+        connectorTO.getConfiguration().addAll(conf);\n \n         connectorService.update(connectorTO.getId(), connectorTO);\n         ConnInstanceTO actual = connectorService.read(connectorTO.getId());\n@@ -324,7 +322,7 @@ public void issueSYNCOPE10() {\n         // ----------------------------------\n         // Check for spring bean update after connector instance update.\n         // ----------------------------------\n-        connInstanceTO.addCapability(ConnectorCapability.SEARCH);\n+        connInstanceTO.getCapabilities().add(ConnectorCapability.SEARCH);\n \n         connectorService.update(connInstanceTO.getId(), connInstanceTO);\n         ConnInstanceTO actual = connectorService.read(connInstanceTO.getId());\n@@ -445,77 +443,77 @@ public void validate() {\n         // set the connector configuration using PropertyTO\n         Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n \n+        ConnConfPropSchema jdbcDriverSchema = new ConnConfPropSchema();\n+        jdbcDriverSchema.setName(\"jdbcDriver\");\n+        jdbcDriverSchema.setType(String.class.getName());\n+        jdbcDriverSchema.setRequired(true);\n+        ConnConfProperty jdbcDriver = new ConnConfProperty();\n+        jdbcDriver.setSchema(jdbcDriverSchema);\n+        jdbcDriver.getValues().add(\"org.h2.Driver\");\n+        conf.add(jdbcDriver);\n+\n+        ConnConfPropSchema jdbcUrlTemplateSchema = new ConnConfPropSchema();\n+        jdbcUrlTemplateSchema.setName(\"jdbcUrlTemplate\");\n+        jdbcUrlTemplateSchema.setType(String.class.getName());\n+        jdbcUrlTemplateSchema.setRequired(true);\n+        ConnConfProperty jdbcUrlTemplate = new ConnConfProperty();\n+        jdbcUrlTemplate.setSchema(jdbcUrlTemplateSchema);\n+        jdbcUrlTemplate.getValues().add(\"jdbc:h2:tcp://localhost:9092/testdb\");\n+        conf.add(jdbcUrlTemplate);\n+\n         ConnConfPropSchema userSchema = new ConnConfPropSchema();\n         userSchema.setName(\"user\");\n         userSchema.setType(String.class.getName());\n         userSchema.setRequired(false);\n         ConnConfProperty user = new ConnConfProperty();\n         user.setSchema(userSchema);\n-        user.setValues(Collections.singletonList(\"sa\"));\n+        user.getValues().add(\"sa\");\n+        conf.add(user);\n+\n+        ConnConfPropSchema passwordSchema = new ConnConfPropSchema();\n+        passwordSchema.setName(\"password\");\n+        passwordSchema.setType(GuardedString.class.getName());\n+        passwordSchema.setRequired(true);\n+        ConnConfProperty password = new ConnConfProperty();\n+        password.setSchema(passwordSchema);\n+        password.getValues().add(\"sa\");\n+        conf.add(password);\n+        \n+        ConnConfPropSchema tableSchema = new ConnConfPropSchema();\n+        tableSchema.setName(\"table\");\n+        tableSchema.setType(String.class.getName());\n+        tableSchema.setRequired(true);\n+        ConnConfProperty table = new ConnConfProperty();\n+        table.setSchema(tableSchema);\n+        table.getValues().add(\"test\");\n+        conf.add(table);\n \n         ConnConfPropSchema keyColumnSchema = new ConnConfPropSchema();\n         keyColumnSchema.setName(\"keyColumn\");\n         keyColumnSchema.setType(String.class.getName());\n         keyColumnSchema.setRequired(true);\n         ConnConfProperty keyColumn = new ConnConfProperty();\n         keyColumn.setSchema(keyColumnSchema);\n-        keyColumn.setValues(Collections.singletonList(\"id\"));\n-\n-        ConnConfPropSchema jdbcUrlTemplateSchema = new ConnConfPropSchema();\n-        jdbcUrlTemplateSchema.setName(\"jdbcUrlTemplate\");\n-        jdbcUrlTemplateSchema.setType(String.class.getName());\n-        jdbcUrlTemplateSchema.setRequired(true);\n-        ConnConfProperty jdbcUrlTemplate = new ConnConfProperty();\n-        jdbcUrlTemplate.setSchema(jdbcUrlTemplateSchema);\n-        jdbcUrlTemplate.setValues(Collections.singletonList(\"jdbc:h2:tcp://localhost:9092/testdb\"));\n+        keyColumn.getValues().add(\"id\");\n+        conf.add(keyColumn);\n \n         ConnConfPropSchema passwordColumnSchema = new ConnConfPropSchema();\n         passwordColumnSchema.setName(\"passwordColumn\");\n         passwordColumnSchema.setType(String.class.getName());\n         passwordColumnSchema.setRequired(true);\n         ConnConfProperty passwordColumn = new ConnConfProperty();\n         passwordColumn.setSchema(passwordColumnSchema);\n-        passwordColumn.setValues(Collections.singletonList(\"password\"));\n-\n-        ConnConfPropSchema tableSchema = new ConnConfPropSchema();\n-        tableSchema.setName(\"table\");\n-        tableSchema.setType(String.class.getName());\n-        tableSchema.setRequired(true);\n-        ConnConfProperty table = new ConnConfProperty();\n-        table.setSchema(tableSchema);\n-        table.setValues(Collections.singletonList(\"test\"));\n-\n-        ConnConfPropSchema passwordSchema = new ConnConfPropSchema();\n-        passwordSchema.setName(\"password\");\n-        passwordSchema.setType(GuardedString.class.getName());\n-        passwordSchema.setRequired(true);\n-        ConnConfProperty password = new ConnConfProperty();\n-        password.setSchema(passwordSchema);\n-        password.setValues(Collections.singletonList(\"sa\"));\n-\n-        ConnConfPropSchema jdbcDriverSchema = new ConnConfPropSchema();\n-        jdbcDriverSchema.setName(\"jdbcDriver\");\n-        jdbcDriverSchema.setType(String.class.getName());\n-        jdbcDriverSchema.setRequired(true);\n-        ConnConfProperty jdbcDriver = new ConnConfProperty();\n-        jdbcDriver.setSchema(jdbcDriverSchema);\n-        jdbcDriver.setValues(Collections.singletonList(\"org.h2.Driver\"));\n-\n-        conf.add(user);\n-        conf.add(keyColumn);\n-        conf.add(jdbcUrlTemplate);\n+        passwordColumn.getValues().add(\"password\");\n         conf.add(passwordColumn);\n-        conf.add(table);\n-        conf.add(password);\n-        conf.add(jdbcDriver);\n \n         // set connector configuration\n-        connectorTO.setConfiguration(conf);\n+        connectorTO.getConfiguration().addAll(conf);\n \n         assertTrue(connectorService.check(connectorTO));\n \n         conf.remove(password);\n-        password.setValues(Collections.singletonList(\"password\"));\n+        password.getValues().clear();\n+        password.getValues().add(\"password\");\n         conf.add(password);\n \n         assertFalse(connectorService.check(connectorTO));\n@@ -596,7 +594,7 @@ public void issueSYNCOPE112() {\n         userSchema.setRequired(true);\n         ConnConfProperty endpoint = new ConnConfProperty();\n         endpoint.setSchema(userSchema);\n-        endpoint.setValues(Collections.singletonList(\"http://localhost:9080/does_not_work\"));\n+        endpoint.getValues().add(\"http://localhost:9080/does_not_work\");\n         endpoint.setOverridable(true);\n \n         ConnConfPropSchema keyColumnSchema = new ConnConfPropSchema();\n@@ -605,15 +603,14 @@ public void issueSYNCOPE112() {\n         keyColumnSchema.setRequired(true);\n         ConnConfProperty servicename = new ConnConfProperty();\n         servicename.setSchema(keyColumnSchema);\n-        servicename.setValues(\n-                Collections.singletonList(\"org.connid.bundles.soap.provisioning.interfaces.Provisioning\"));\n+        servicename.getValues().add(\"org.connid.bundles.soap.provisioning.interfaces.Provisioning\");\n         servicename.setOverridable(false);\n \n         conf.add(endpoint);\n         conf.add(servicename);\n \n         // set connector configuration\n-        connectorTO.setConfiguration(conf);\n+        connectorTO.getConfiguration().addAll(conf);\n \n         try {\n             assertFalse(connectorService.check(connectorTO));\n@@ -637,10 +634,11 @@ public void issueSYNCOPE112() {\n             resourceTO.setConnectorId(connectorTO.getId());\n \n             conf = new HashSet<ConnConfProperty>();\n-            endpoint.setValues(Collections.singletonList(\"http://localhost:9080/wssample/services/provisioning\"));\n+            endpoint.getValues().clear();\n+            endpoint.getValues().add(\"http://localhost:9080/wssample/services/provisioning\");\n             conf.add(endpoint);\n \n-            resourceTO.setConnConfProperties(conf);\n+            resourceTO.getConnConfProperties().addAll(conf);\n \n             MappingTO mapping = new MappingTO();\n             resourceTO.setUmapping(mapping);"},{"sha":"7642e406e2701eba2f14d4d1b4a8e08f28397cde","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -146,7 +146,7 @@ public void issueSYNCOPE83() {\n     private NotificationTO buildNotificationTO() {\n         NotificationTO notificationTO = new NotificationTO();\n         notificationTO.setTraceLevel(TraceLevel.SUMMARY);\n-        notificationTO.addEvent(\"create\");\n+        notificationTO.getEvents().add(\"create\");\n \n         AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n         fullnameLeafCond1.setSchema(\"fullname\");"},{"sha":"8eeaa6f3576cc493c0836ab3a1091aed6f15e565","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -94,8 +94,8 @@ public void readExecution() {\n     public void create() {\n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForCreate\" + getUUIDString());\n-        report.addReportletConf(new UserReportletConf(\"first\"));\n-        report.addReportletConf(new UserReportletConf(\"second\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"first\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"second\"));\n \n         report = createReport(report);\n         assertNotNull(report);\n@@ -110,14 +110,14 @@ public void create() {\n     public void update() {\n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForUpdate\" + getUUIDString());\n-        report.addReportletConf(new UserReportletConf(\"first\"));\n-        report.addReportletConf(new UserReportletConf(\"second\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"first\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"second\"));\n \n         report = createReport(report);\n         assertNotNull(report);\n         assertEquals(2, report.getReportletConfs().size());\n \n-        report.addReportletConf(new UserReportletConf(\"last\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"last\"));\n \n         reportService.update(report.getId(), report);\n         ReportTO updated = reportService.read(report.getId());\n@@ -129,8 +129,8 @@ public void update() {\n     public void delete() {\n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForDelete\" + getUUIDString());\n-        report.addReportletConf(new UserReportletConf(\"first\"));\n-        report.addReportletConf(new UserReportletConf(\"second\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"first\"));\n+        report.getReportletConfs().add(new UserReportletConf(\"second\"));\n \n         report = createReport(report);\n         assertNotNull(report);"},{"sha":"271e7ed3b476c9b0ad97ac9094a168f605cc9b2b","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -18,16 +18,15 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.apache.syncope.core.rest.AbstractTest.getUUIDString;\n-import static org.junit.Assert.*;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n import java.util.Arrays;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -117,10 +116,10 @@ public void createOverridingProps() {\n         schema.setName(\"endpoint\");\n         schema.setRequired(true);\n         p.setSchema(schema);\n-        p.setValues(Collections.singletonList(\"http://invalidurl/\"));\n+        p.getValues().add(\"http://invalidurl/\");\n \n         Set<ConnConfProperty> connectorConfigurationProperties = new HashSet<ConnConfProperty>(Arrays.asList(p));\n-        resourceTO.setConnConfProperties(connectorConfigurationProperties);\n+        resourceTO.getConnConfProperties().addAll(connectorConfigurationProperties);\n \n         Response response = resourceService.create(resourceTO);\n         ResourceTO actual = getObject(response, ResourceTO.class, resourceService);\n@@ -481,7 +480,7 @@ public void issueSYNCOPE368() {\n         mapping.addItem(item);\n \n         resourceTO.setRmapping(mapping);\n-        \n+\n         resourceTO = createResource(resourceTO);\n         assertNotNull(resourceTO);\n         assertEquals(2, resourceTO.getRmapping().getItems().size());"},{"sha":"3be4260ec132085a82d17bb6d9e7e3e5d6271327","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -26,7 +26,6 @@\n import static org.junit.Assert.fail;\n \n import java.security.AccessControlException;\n-import java.util.ArrayList;\n import java.util.List;\n \n import org.apache.syncope.common.mod.RoleMod;\n@@ -66,9 +65,9 @@ private RoleTO buildRoleTO(final String name) {\n         // inherited so setter execution should be ignored\n         roleTO.setPasswordPolicy(2L);\n \n-        roleTO.addAttribute(attributeTO(\"icon\", \"anIcon\"));\n+        roleTO.getAttributes().add(attributeTO(\"icon\", \"anIcon\"));\n \n-        roleTO.addResource(\"resource-ldap\");\n+        roleTO.getResources().add(\"resource-ldap\");\n         return roleTO;\n     }\n \n@@ -79,7 +78,7 @@ private ConnObjectTO readConnectorObject(final String resourceName, final Long r\n     @Test\n     public void createWithException() {\n         RoleTO newRoleTO = new RoleTO();\n-        newRoleTO.addAttribute(attributeTO(\"attr1\", \"value1\"));\n+        newRoleTO.getAttributes().add(attributeTO(\"attr1\", \"value1\"));\n \n         try {\n             createRole(roleService, newRoleTO);\n@@ -92,7 +91,7 @@ public void createWithException() {\n     @Test\n     public void create() {\n         RoleTO roleTO = buildRoleTO(\"lastRole\");\n-        roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", \"rvirtualvalue\"));\n+        roleTO.getVirtualAttributes().add(attributeTO(\"rvirtualdata\", \"rvirtualvalue\"));\n         roleTO.setRoleOwner(8L);\n \n         roleTO = createRole(roleService, roleTO);\n@@ -144,7 +143,7 @@ public void delete() {\n         roleTO.setName(\"toBeDeleted\" + getUUIDString());\n         roleTO.setParent(8L);\n \n-        roleTO.addResource(\"resource-ldap\");\n+        roleTO.getResources().add(\"resource-ldap\");\n \n         roleTO = createRole(roleService, roleTO);\n         assertNotNull(roleTO);\n@@ -228,7 +227,7 @@ public void update() {\n         roleMod.setId(roleTO.getId());\n         String modName = \"finalRole\" + getUUIDString();\n         roleMod.setName(modName);\n-        roleMod.addAttributeToBeUpdated(attributeMod(\"show\", \"FALSE\"));\n+        roleMod.getAttributesToBeUpdated().add(attributeMod(\"show\", \"FALSE\"));\n \n         // change password policy inheritance\n         roleMod.setInheritPasswordPolicy(Boolean.FALSE);\n@@ -249,7 +248,7 @@ public void update() {\n     @Test\n     public void updateRemovingVirAttribute() {\n         RoleTO roleTO = buildBasicRoleTO(\"withvirtual\" + getUUIDString());\n-        roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", null));\n+        roleTO.getVirtualAttributes().add(attributeTO(\"rvirtualdata\", null));\n \n         roleTO = createRole(roleService, roleTO);\n \n@@ -258,7 +257,7 @@ public void updateRemovingVirAttribute() {\n \n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleTO.getId());\n-        roleMod.addVirtualAttributeToBeRemoved(\"rvirtualdata\");\n+        roleMod.getVirtualAttributesToBeRemoved().add(\"rvirtualdata\");\n \n         roleTO = roleService.update(roleMod.getId(), roleMod);\n \n@@ -269,7 +268,7 @@ public void updateRemovingVirAttribute() {\n     @Test\n     public void updateRemovingDerAttribute() {\n         RoleTO roleTO = buildBasicRoleTO(\"withderived\" + getUUIDString());\n-        roleTO.addDerivedAttribute(attributeTO(\"rderivedschema\", null));\n+        roleTO.getDerivedAttributes().add(attributeTO(\"rderivedschema\", null));\n \n         roleTO = createRole(roleService, roleTO);\n \n@@ -278,7 +277,7 @@ public void updateRemovingDerAttribute() {\n \n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleTO.getId());\n-        roleMod.addDerivedAttributeToBeRemoved(\"rderivedschema\");\n+        roleMod.getDerivedAttributesToBeRemoved().add(\"rderivedschema\");\n \n         roleTO = roleService.update(roleMod.getId(), roleMod);\n \n@@ -360,8 +359,8 @@ public void issue178() {\n     @Test\n     public void issueSYNCOPE228() {\n         RoleTO roleTO = buildRoleTO(\"issueSYNCOPE228\");\n-        roleTO.addEntitlement(\"USER_READ\");\n-        roleTO.addEntitlement(\"SCHEMA_READ\");\n+        roleTO.getEntitlements().add(\"USER_READ\");\n+        roleTO.getEntitlements().add(\"SCHEMA_READ\");\n \n         roleTO = createRole(roleService, roleTO);\n         assertNotNull(roleTO);\n@@ -380,7 +379,8 @@ public void issueSYNCOPE228() {\n \n         roleMod = new RoleMod();\n         roleMod.setId(roleTO.getId());\n-        roleMod.setEntitlements(new ArrayList<String>());\n+        roleMod.setModEntitlements(true);\n+        roleMod.getEntitlements().clear();\n \n         roleTO = roleService.update(roleMod.getId(), roleMod);\n         assertNotNull(roleTO);"},{"sha":"e473a657c8ea88d5cb9ed1755e458c983716395d","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -182,7 +182,7 @@ public void issue258() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue258@syncope.apache.org\");\n-        userTO.addAttribute(attributeTO(schemaTO.getName(), \"1.2\"));\n+        userTO.getAttributes().add(attributeTO(schemaTO.getName(), \"1.2\"));\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -206,14 +206,14 @@ public void issue259() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue259@syncope.apache.org\");\n-        userTO.addAttribute(attributeTO(schemaTO.getName(), \"1\"));\n+        userTO.getAttributes().add(attributeTO(schemaTO.getName(), \"1\"));\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         UserTO newUserTO = AttributableOperations.clone(userTO);\n         MembershipTO membership = new MembershipTO();\n         membership.setRoleId(2L);\n-        newUserTO.addMembership(membership);\n+        newUserTO.getMemberships().add(membership);\n \n         UserMod userMod = AttributableOperations.diff(newUserTO, userTO);\n \n@@ -230,7 +230,7 @@ public void issue260() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue260@syncope.apache.org\");\n-        userTO.addAttribute(attributeTO(schemaTO.getName(), \"1.2\"));\n+        userTO.getAttributes().add(attributeTO(schemaTO.getName(), \"1.2\"));\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n "},{"sha":"c6a7f18d404473b912d92ee9d99d404895965c64","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":52,"deletions":52,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -26,7 +26,6 @@\n import static org.junit.Assert.fail;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import javax.ws.rs.core.Response;\n@@ -96,14 +95,14 @@ public void create() {\n         task.setResource(\"ws-target-resource-2\");\n \n         UserTO userTemplate = new UserTO();\n-        userTemplate.addResource(\"ws-target-resource-2\");\n+        userTemplate.getResources().add(\"ws-target-resource-2\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        userTemplate.addMembership(membershipTO);\n+        userTemplate.getMemberships().add(membershipTO);\n         task.setUserTemplate(userTemplate);\n \n         RoleTO roleTemplate = new RoleTO();\n-        roleTemplate.addResource(\"resource-ldap\");\n+        roleTemplate.getResources().add(\"resource-ldap\");\n         task.setRoleTemplate(roleTemplate);\n \n         Response response = taskService.create(task);\n@@ -233,13 +232,13 @@ public void sync() {\n         inUserTO.setPassword(\"password123\");\n         String userName = \"test9\";\n         inUserTO.setUsername(userName);\n-        inUserTO.addAttribute(attributeTO(\"firstname\", \"nome9\"));\n-        inUserTO.addAttribute(attributeTO(\"surname\", \"cognome\"));\n-        inUserTO.addAttribute(attributeTO(\"type\", \"a type\"));\n-        inUserTO.addAttribute(attributeTO(\"fullname\", \"nome cognome\"));\n-        inUserTO.addAttribute(attributeTO(\"userId\", \"puccini@syncope.apache.org\"));\n-        inUserTO.addAttribute(attributeTO(\"email\", \"puccini@syncope.apache.org\"));\n-        inUserTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+        inUserTO.getAttributes().add(attributeTO(\"firstname\", \"nome9\"));\n+        inUserTO.getAttributes().add(attributeTO(\"surname\", \"cognome\"));\n+        inUserTO.getAttributes().add(attributeTO(\"type\", \"a type\"));\n+        inUserTO.getAttributes().add(attributeTO(\"fullname\", \"nome cognome\"));\n+        inUserTO.getAttributes().add(attributeTO(\"userId\", \"puccini@syncope.apache.org\"));\n+        inUserTO.getAttributes().add(attributeTO(\"email\", \"puccini@syncope.apache.org\"));\n+        inUserTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n \n         inUserTO = createUser(inUserTO);\n         assertNotNull(inUserTO);\n@@ -258,14 +257,15 @@ public void sync() {\n \n             // add user template\n             UserTO template = new UserTO();\n-            template.addAttribute(attributeTO(\"type\", \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n-            template.addDerivedAttribute(attributeTO(\"cn\", null));\n-            template.addResource(\"resource-testdb\");\n+            template.getAttributes().add(attributeTO(\"type\",\n+                    \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n+            template.getDerivedAttributes().add(attributeTO(\"cn\", null));\n+            template.getResources().add(\"resource-testdb\");\n \n             MembershipTO membershipTO = new MembershipTO();\n             membershipTO.setRoleId(8L);\n-            membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n-            template.addMembership(membershipTO);\n+            membershipTO.getAttributes().add(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n+            template.getMemberships().add(membershipTO);\n \n             task.setUserTemplate(template);\n \n@@ -333,10 +333,10 @@ public void reconcileFromDB() {\n \n         // add user template\n         UserTO template = new UserTO();\n-        template.addAttribute(attributeTO(\"type\", \"'type a'\"));\n-        template.addAttribute(attributeTO(\"userId\", \"'reconciled@syncope.apache.org'\"));\n-        template.addAttribute(attributeTO(\"fullname\", \"'reconciled fullname'\"));\n-        template.addAttribute(attributeTO(\"surname\", \"'surname'\"));\n+        template.getAttributes().add(attributeTO(\"type\", \"'type a'\"));\n+        template.getAttributes().add(attributeTO(\"userId\", \"'reconciled@syncope.apache.org'\"));\n+        template.getAttributes().add(attributeTO(\"fullname\", \"'reconciled fullname'\"));\n+        template.getAttributes().add(attributeTO(\"surname\", \"'surname'\"));\n \n         task.setUserTemplate(template);\n \n@@ -380,7 +380,7 @@ public void reconcileFromLDAP()\n         //  add user template\n         RoleTO template = new RoleTO();\n         template.setParent(8L);\n-        template.addAttribute(attributeTO(\"show\", \"'true'\"));\n+        template.getAttributes().add(attributeTO(\"show\", \"'true'\"));\n \n         task.setRoleTemplate(template);\n \n@@ -526,7 +526,7 @@ private String createNotificationTask() {\n         // 1. Create notification\n         NotificationTO notification = new NotificationTO();\n         notification.setTraceLevel(TraceLevel.FAILURES);\n-        notification.addEvent(\"create\");\n+        notification.getEvents().add(\"create\");\n \n         MembershipCond membCond = new MembershipCond();\n         membCond.setRoleId(7L);\n@@ -554,7 +554,7 @@ private String createNotificationTask() {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope86@syncope.apache.org\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -570,20 +570,20 @@ public void issueSYNCOPE68() {\n         userTO.setPassword(\"password123\");\n         userTO.setUsername(\"testuser2\");\n \n-        userTO.addAttribute(attributeTO(\"firstname\", \"testuser2\"));\n-        userTO.addAttribute(attributeTO(\"surname\", \"testuser2\"));\n-        userTO.addAttribute(attributeTO(\"type\", \"a type\"));\n-        userTO.addAttribute(attributeTO(\"fullname\", \"a type\"));\n-        userTO.addAttribute(attributeTO(\"userId\", \"testuser2@syncope.apache.org\"));\n-        userTO.addAttribute(attributeTO(\"email\", \"testuser2@syncope.apache.org\"));\n+        userTO.getAttributes().add(attributeTO(\"firstname\", \"testuser2\"));\n+        userTO.getAttributes().add(attributeTO(\"surname\", \"testuser2\"));\n+        userTO.getAttributes().add(attributeTO(\"type\", \"a type\"));\n+        userTO.getAttributes().add(attributeTO(\"fullname\", \"a type\"));\n+        userTO.getAttributes().add(attributeTO(\"userId\", \"testuser2@syncope.apache.org\"));\n+        userTO.getAttributes().add(attributeTO(\"email\", \"testuser2@syncope.apache.org\"));\n \n-        userTO.addResource(\"ws-target-resource-nopropagation2\");\n-        userTO.addResource(\"ws-target-resource-nopropagation4\");\n+        userTO.getResources().add(\"ws-target-resource-nopropagation2\");\n+        userTO.getResources().add(\"ws-target-resource-nopropagation4\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n \n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -601,9 +601,9 @@ public void issueSYNCOPE68() {\n             membershipTO = new MembershipTO();\n             membershipTO.setRoleId(10L);\n \n-            template.addMembership(membershipTO);\n+            template.getMemberships().add(membershipTO);\n \n-            template.addResource(\"ws-target-resource-nopropagation4\");\n+            template.getResources().add(\"ws-target-resource-nopropagation4\");\n             //-----------------------------\n \n             // Update sync task\n@@ -729,7 +729,7 @@ public void issueSYNCOPE272() {\n \n         // create user with testdb resource\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope272@syncope.apache.org\");\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.getResources().add(\"resource-testdb\");\n \n         userTO = createUser(userTO);\n         try {\n@@ -745,14 +745,14 @@ public void issueSYNCOPE272() {\n \n             AttributeTO newAttrTO = new AttributeTO();\n             newAttrTO.setSchema(\"firstname\");\n-            newAttrTO.setValues(Collections.singletonList(\"\"));\n+            newAttrTO.getValues().add(\"\");\n \n             UserTO template = new UserTO();\n-            template.addAttribute(newAttrTO);\n-            template.addAttribute(attributeTO(\"userId\", \"'test'\"));\n-            template.addAttribute(attributeTO(\"fullname\", \"'test'\"));\n-            template.addAttribute(attributeTO(\"surname\", \"'test'\"));\n-            template.addResource(\"resource-testdb\");\n+            template.getAttributes().add(newAttrTO);\n+            template.getAttributes().add(attributeTO(\"userId\", \"'test'\"));\n+            template.getAttributes().add(attributeTO(\"fullname\", \"'test'\"));\n+            template.getAttributes().add(attributeTO(\"surname\", \"'test'\"));\n+            template.getResources().add(\"resource-testdb\");\n \n             task.setUserTemplate(template);\n \n@@ -801,21 +801,21 @@ public void issueSYNCOPE258() {\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"s258_1@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.getResources().add(\"ws-target-resource-2\");\n \n         userTO = createUser(userTO);\n \n         userTO = UserTestITCase.getUniqueSampleTO(\"s258_2@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.getResources().add(\"ws-target-resource-2\");\n \n         userTO = createUser(userTO);\n \n         // change email in order to unmatch the second user\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addAttributeToBeRemoved(\"email\");\n-        userMod.addAttributeToBeUpdated(attributeMod(\"email\", \"s258@apache.org\"));\n+        userMod.getAttributesToBeRemoved().add(\"email\");\n+        userMod.getAttributesToBeUpdated().add(attributeMod(\"email\", \"s258@apache.org\"));\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n@@ -835,11 +835,11 @@ public void issueSYNCOPE307() {\n \n         AttributeTO csvuserid = new AttributeTO();\n         csvuserid.setSchema(\"csvuserid\");\n-        userTO.addDerivedAttribute(csvuserid);\n+        userTO.getDerivedAttributes().add(csvuserid);\n \n         userTO.getResources().clear();\n-        userTO.addResource(\"ws-target-resource-2\");\n-        userTO.addResource(\"resource-csv\");\n+        userTO.getResources().add(\"ws-target-resource-2\");\n+        userTO.getResources().add(\"resource-csv\");\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -853,13 +853,13 @@ public void issueSYNCOPE307() {\n \n         //  add user template\n         UserTO template = new UserTO();\n-        template.addResource(\"resource-db-virattr\");\n+        template.getResources().add(\"resource-db-virattr\");\n \n         AttributeTO userId = attributeTO(\"userId\", \"'s307@apache.org'\");\n-        template.addAttribute(userId);\n+        template.getAttributes().add(userId);\n \n         AttributeTO email = attributeTO(\"email\", \"'s307@apache.org'\");\n-        template.addAttribute(email);\n+        template.getAttributes().add(email);\n \n         task.setUserTemplate(template);\n \n@@ -887,7 +887,7 @@ public void bulkAction() {\n \n         // create user with testdb resource\n         final UserTO userTO = UserTestITCase.getUniqueSampleTO(\"taskBulk@apache.org\");\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.getResources().add(\"resource-testdb\");\n         createUser(userTO);\n \n         final List<PropagationTaskTO> after = new ArrayList<PropagationTaskTO>("},{"sha":"3f60170ca41e44ced2ccc91f589ac16d9452e2a0","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":150,"deletions":150,"changes":300,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -113,16 +113,16 @@ public static UserTO getSampleTO(final String email) {\n         userTO.setPassword(\"password123\");\n         userTO.setUsername(uid);\n \n-        userTO.addAttribute(attributeTO(\"fullname\", uid));\n-        userTO.addAttribute(attributeTO(\"firstname\", uid));\n-        userTO.addAttribute(attributeTO(\"surname\", \"surname\"));\n-        userTO.addAttribute(attributeTO(\"type\", \"a type\"));\n-        userTO.addAttribute(attributeTO(\"userId\", uid));\n-        userTO.addAttribute(attributeTO(\"email\", uid));\n+        userTO.getAttributes().add(attributeTO(\"fullname\", uid));\n+        userTO.getAttributes().add(attributeTO(\"firstname\", uid));\n+        userTO.getAttributes().add(attributeTO(\"surname\", \"surname\"));\n+        userTO.getAttributes().add(attributeTO(\"type\", \"a type\"));\n+        userTO.getAttributes().add(attributeTO(\"userId\", uid));\n+        userTO.getAttributes().add(attributeTO(\"email\", uid));\n         DateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n-        userTO.addAttribute(attributeTO(\"loginDate\", sdf.format(new Date())));\n-        userTO.addDerivedAttribute(attributeTO(\"cn\", null));\n-        userTO.addVirtualAttribute(attributeTO(\"virtualdata\", \"virtualvalue\"));\n+        userTO.getAttributes().add(attributeTO(\"loginDate\", sdf.format(new Date())));\n+        userTO.getDerivedAttributes().add(attributeTO(\"cn\", null));\n+        userTO.getVirtualAttributes().add(attributeTO(\"virtualdata\", \"virtualvalue\"));\n         return userTO;\n     }\n \n@@ -159,7 +159,7 @@ public void createUserWithNoPropagation() {\n         UserTO userTO = getUniqueSampleTO(\"xxx@xxx.xxx\");\n \n         userTO.setPassword(\"password123\");\n-        userTO.addResource(\"ws-target-resource-nopropagation\");\n+        userTO.getResources().add(\"ws-target-resource-nopropagation\");\n \n         createUser(userTO);\n \n@@ -206,9 +206,9 @@ public void issue186() {\n         userTO.setUsername(userId);\n         userTO.setPassword(\"password\");\n \n-        userTO.addAttribute(attributeTO(\"userId\", userId));\n-        userTO.addAttribute(attributeTO(\"fullname\", userId));\n-        userTO.addAttribute(attributeTO(\"surname\", userId));\n+        userTO.getAttributes().add(attributeTO(\"userId\", userId));\n+        userTO.getAttributes().add(attributeTO(\"fullname\", userId));\n+        userTO.getAttributes().add(attributeTO(\"surname\", userId));\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -218,7 +218,7 @@ public void issue186() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.addResourceToBeAdded(\"ws-target-resource-2\");\n+        userMod.getResourcesToBeAdded().add(\"ws-target-resource-2\");\n \n         SyncopeClientException sce = null;\n         try {\n@@ -233,7 +233,7 @@ public void issue186() {\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n+        userMod.getResourcesToBeAdded().add(\"ws-target-resource-1\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n@@ -243,7 +243,7 @@ public void issue186() {\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.addResourceToBeAdded(\"resource-db\");\n+        userMod.getResourcesToBeAdded().add(\"resource-db\");\n \n         sce = null;\n         try {\n@@ -257,7 +257,7 @@ public void issue186() {\n     @Test\n     public void testEnforceMandatoryCondition() {\n         UserTO userTO = getUniqueSampleTO(\"enforce@apache.org\");\n-        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.getResources().add(\"ws-target-resource-2\");\n         userTO.setPassword(\"newPassword\");\n \n         AttributeTO type = null;\n@@ -267,7 +267,7 @@ public void testEnforceMandatoryCondition() {\n             }\n         }\n         assertNotNull(type);\n-        userTO.removeAttribute(type);\n+        userTO.getAttributes().remove(type);\n \n         SyncopeClientException sce = null;\n         try {\n@@ -277,7 +277,7 @@ public void testEnforceMandatoryCondition() {\n         }\n         assertNotNull(sce);\n \n-        userTO.addAttribute(type);\n+        userTO.getAttributes().add(type);\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n     }\n@@ -294,7 +294,7 @@ public void testEnforceMandatoryConditionOnDerived() {\n         assertNotNull(resourceTO);\n \n         UserTO userTO = getUniqueSampleTO(\"syncope222@apache.org\");\n-        userTO.addResource(resourceTO.getName());\n+        userTO.getResources().add(resourceTO.getName());\n         userTO.setPassword(\"newPassword\");\n \n         SyncopeClientException sce = null;\n@@ -305,7 +305,7 @@ public void testEnforceMandatoryConditionOnDerived() {\n         }\n         assertNotNull(sce);\n \n-        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -315,7 +315,7 @@ public void testEnforceMandatoryConditionOnDerived() {\n     @Test\n     public void createUserWithDbPropagation() {\n         UserTO userTO = getUniqueSampleTO(\"yyy@yyy.yyy\");\n-        userTO.addResource(RESOURCE_NAME_TESTDB);\n+        userTO.getResources().add(RESOURCE_NAME_TESTDB);\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n@@ -337,7 +337,7 @@ public void createWithInvalidUsername() {\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n \n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         createUser(userTO);\n     }\n@@ -349,7 +349,7 @@ public void createWithInvalidPasswordByRes() {\n         // configured to be minLength=16\n         userTO.setPassword(\"password1\");\n \n-        userTO.setResources(Collections.singleton(\"ws-target-resource-nopropagation\"));\n+        userTO.getResources().add(\"ws-target-resource-nopropagation\");\n \n         createUser(userTO);\n     }\n@@ -364,15 +364,15 @@ public void createWithInvalidPasswordByRole() {\n         final MembershipTO membership = new MembershipTO();\n         membership.setRoleId(8L);\n \n-        userTO.addMembership(membership);\n+        userTO.getMemberships().add(membership);\n \n         createUser(userTO);\n     }\n \n     @Test(expected = SyncopeClientCompositeErrorException.class)\n     public void createWithException() {\n         UserTO newUserTO = new UserTO();\n-        newUserTO.addAttribute(attributeTO(\"userId\", \"userId@nowhere.org\"));\n+        newUserTO.getAttributes().add(attributeTO(\"userId\", \"userId@nowhere.org\"));\n         createUser(newUserTO);\n     }\n \n@@ -396,17 +396,17 @@ public void create() {\n         // add a membership\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         // add an attribute with no values: must be ignored\n-        membershipTO.addAttribute(attributeTO(\"subscriptionDate\", null));\n+        membershipTO.getAttributes().add(attributeTO(\"subscriptionDate\", null));\n \n         // add an attribute with a non-existing schema: must be ignored\n         AttributeTO attrWithInvalidSchemaTO = attributeTO(\"invalid schema\", \"a value\");\n-        userTO.addAttribute(attrWithInvalidSchemaTO);\n+        userTO.getAttributes().add(attrWithInvalidSchemaTO);\n \n         // add an attribute with null value: must be ignored\n-        userTO.addAttribute(attributeTO(\"activationDate\", null));\n+        userTO.getAttributes().add(attributeTO(\"activationDate\", null));\n \n         // 1. create user\n         UserTO newUserTO = createUser(userTO);\n@@ -474,7 +474,7 @@ public void create() {\n         userTO = getSampleTO(userTO.getUsername());\n         AttributeTO userIdAttr = getManadatoryAttrByName(userTO.getAttributes(), \"userId\");\n         userIdAttr.getValues().clear();\n-        userIdAttr.addValue(\"a.b@c.com\");\n+        userIdAttr.getValues().add(\"a.b@c.com\");\n \n         SyncopeClientException sce = null;\n         try {\n@@ -499,11 +499,11 @@ public void createWithRequiredValueMissing() {\n         UserTO userTO = getSampleTO(\"a.b@c.it\");\n \n         AttributeTO type = getManadatoryAttrByName(userTO.getAttributes(), \"type\");\n-        userTO.removeAttribute(type);\n+        userTO.getAttributes().remove(type);\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         SyncopeClientCompositeErrorException ex = null;\n         try {\n@@ -515,10 +515,10 @@ public void createWithRequiredValueMissing() {\n         assertNotNull(ex);\n         assertNotNull(ex.getException(SyncopeClientExceptionType.RequiredValuesMissing));\n \n-        userTO.addAttribute(attributeTO(\"type\", \"F\"));\n+        userTO.getAttributes().add(attributeTO(\"type\", \"F\"));\n \n         AttributeTO surname = getManadatoryAttrByName(userTO.getAttributes(), \"surname\");\n-        userTO.removeAttribute(surname);\n+        userTO.getAttributes().remove(surname);\n \n         // 2. create user without surname (mandatory when type == 'F')\n         ex = null;\n@@ -536,12 +536,12 @@ public void createWithReject() {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n \n         UserTO userTO = getUniqueSampleTO(\"createWithReject@syncope.apache.org\");\n-        userTO.addResource(RESOURCE_NAME_TESTDB);\n+        userTO.getResources().add(RESOURCE_NAME_TESTDB);\n \n         // User with role 9 are defined in workflow as subject to approval\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(9L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         // 1. create user with role 9\n         userTO = createUser(userTO);\n@@ -602,12 +602,12 @@ public void createWithApproval() {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n \n         UserTO userTO = getUniqueSampleTO(\"createWithApproval@syncope.apache.org\");\n-        userTO.addResource(RESOURCE_NAME_TESTDB);\n+        userTO.getResources().add(RESOURCE_NAME_TESTDB);\n \n         // User with role 9 are defined in workflow as subject to approval\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(9L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         // 1. create user with role 9 (and verify that no propagation occurred)\n         userTO = createUser(userTO);\n@@ -685,7 +685,7 @@ public void delete() {\n         UserTO userTO = getSampleTO(\"qqgf.z@nn.com\");\n \n         // specify a propagation\n-        userTO.addResource(RESOURCE_NAME_TESTDB);\n+        userTO.getResources().add(RESOURCE_NAME_TESTDB);\n \n         userTO = createUser(userTO);\n \n@@ -713,7 +713,7 @@ public void deleteByUsername() {\n         UserTO userTO = getSampleTO(\"delete.by.username@apache.org\");\n \n         // specify a propagation\n-        userTO.addResource(RESOURCE_NAME_TESTDB);\n+        userTO.getResources().add(RESOURCE_NAME_TESTDB);\n \n         userTO = createUser(userTO);\n \n@@ -803,7 +803,7 @@ public void updateWithouPassword() {\n \n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addDerivedAttributeToBeRemoved(\"cn\");\n+        userMod.getDerivedAttributesToBeRemoved().add(\"cn\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n@@ -846,8 +846,8 @@ public void update() {\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n-        userTO.addMembership(membershipTO);\n+        membershipTO.getAttributes().add(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n \n@@ -856,23 +856,23 @@ public void update() {\n \n         MembershipMod membershipMod = new MembershipMod();\n         membershipMod.setRole(8L);\n-        membershipMod.addAttributeToBeUpdated(attributeMod(\"subscriptionDate\", \"2010-08-18T16:33:12.203+0200\"));\n+        membershipMod.getAttributesToBeUpdated().add(attributeMod(\"subscriptionDate\", \"2010-08-18T16:33:12.203+0200\"));\n \n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"new2Password\");\n \n-        userMod.addAttributeToBeRemoved(\"userId\");\n+        userMod.getAttributesToBeRemoved().add(\"userId\");\n         String newUserId = getUUIDString() + \"t.w@spre.net\";\n-        userMod.addAttributeToBeUpdated(attributeMod(\"userId\", newUserId));\n+        userMod.getAttributesToBeUpdated().add(attributeMod(\"userId\", newUserId));\n \n-        userMod.addAttributeToBeRemoved(\"fullname\");\n+        userMod.getAttributesToBeRemoved().add(\"fullname\");\n         String newFullName = getUUIDString() + \"g.h@t.com\";\n-        userMod.addAttributeToBeUpdated(attributeMod(\"fullname\", newFullName));\n+        userMod.getAttributesToBeUpdated().add(attributeMod(\"fullname\", newFullName));\n \n-        userMod.addDerivedAttributeToBeAdded(\"cn\");\n-        userMod.addMembershipToBeAdded(membershipMod);\n-        userMod.addMembershipToBeRemoved(userTO.getMemberships().iterator().next().getId());\n+        userMod.getDerivedAttributesToBeAdded().add(\"cn\");\n+        userMod.getMembershipsToBeAdded().add(membershipMod);\n+        userMod.getMembershipsToBeRemoved().add(userTO.getMemberships().iterator().next().getId());\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -909,8 +909,8 @@ public void updatePasswordOnly() {\n         UserTO userTO = getUniqueSampleTO(\"pwdonly@t.com\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n-        userTO.addMembership(membershipTO);\n+        membershipTO.getAttributes().add(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n \n@@ -954,7 +954,7 @@ public void verifyTaskRegistration() {\n         // add a membership\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         // 1. create user\n         userTO = createUser(userTO);\n@@ -979,7 +979,7 @@ public void verifyTaskRegistration() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n \n-        userMod.addAttributeToBeUpdated(attributeMod(\"surname\", \"surname\"));\n+        userMod.getAttributesToBeUpdated().add(attributeMod(\"surname\", \"surname\"));\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n@@ -1024,7 +1024,7 @@ public void createActivate() {\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(11L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n \n@@ -1051,7 +1051,7 @@ public void createActivateByUsername() {\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(11L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n \n@@ -1076,7 +1076,7 @@ public void suspendReactivate() {\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n \n@@ -1102,7 +1102,7 @@ public void suspendReactivateByUsername() {\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n \n@@ -1134,8 +1134,8 @@ public void suspendReactivateOnResource() {\n         UserTO userTO = getUniqueSampleTO(\"suspreactonresource@syncope.apache.org\");\n         userTO.getMemberships().clear();\n         userTO.getResources().clear();\n-        userTO.addResource(RESOURCE_NAME_TESTDB);\n-        userTO.addResource(RESOURCE_NAME_LDAP);\n+        userTO.getResources().add(RESOURCE_NAME_TESTDB);\n+        userTO.getResources().add(RESOURCE_NAME_LDAP);\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers()\n@@ -1146,8 +1146,8 @@ public void suspendReactivateOnResource() {\n         // Suspend with effect on syncope, ldap and db => user should be suspended in syncope and all resources\n         PropagationRequestTO propagationRequestTO = new PropagationRequestTO();\n         propagationRequestTO.setOnSyncope(true);\n-        propagationRequestTO.addResource(RESOURCE_NAME_TESTDB);\n-        propagationRequestTO.addResource(RESOURCE_NAME_LDAP);\n+        propagationRequestTO.getResources().add(RESOURCE_NAME_TESTDB);\n+        propagationRequestTO.getResources().add(RESOURCE_NAME_LDAP);\n         userTO = userService.suspend(userId, propagationRequestTO);\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n@@ -1161,7 +1161,7 @@ public void suspendReactivateOnResource() {\n         // Suspend and reactivate only on ldap => db and syncope should still show suspended\n         propagationRequestTO = new PropagationRequestTO();\n         propagationRequestTO.setOnSyncope(false);\n-        propagationRequestTO.addResource(RESOURCE_NAME_LDAP);\n+        propagationRequestTO.getResources().add(RESOURCE_NAME_LDAP);\n         userTO = userService.suspend(userId, propagationRequestTO);\n         userTO = userService.reactivate(userId, propagationRequestTO);\n         assertNotNull(userTO);\n@@ -1173,7 +1173,7 @@ public void suspendReactivateOnResource() {\n         // Reactivate on syncope and db => syncope and db should show the user as active\n         propagationRequestTO = new PropagationRequestTO();\n         propagationRequestTO.setOnSyncope(true);\n-        propagationRequestTO.addResource(RESOURCE_NAME_TESTDB);\n+        propagationRequestTO.getResources().add(RESOURCE_NAME_TESTDB);\n \n         userTO = userService.reactivate(userId, propagationRequestTO);\n         assertNotNull(userTO);\n@@ -1199,10 +1199,10 @@ public void updateMultivalueAttribute() {\n         UserMod userMod = new UserMod();\n \n         AttributeMod loginDateMod = new AttributeMod();\n-        loginDateMod.addValueToBeAdded(\"2000-01-01\");\n+        loginDateMod.getValuesToBeAdded().add(\"2000-01-01\");\n \n         userMod.setId(userTO.getId());\n-        userMod.addAttributeToBeUpdated(loginDateMod);\n+        userMod.getAttributesToBeUpdated().add(loginDateMod);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1215,7 +1215,7 @@ public void updateMultivalueAttribute() {\n     @Test(expected = EmptyResultDataAccessException.class)\n     public void issue213() {\n         UserTO userTO = getUniqueSampleTO(\"issue213@syncope.apache.org\");\n-        userTO.addResource(RESOURCE_NAME_TESTDB);\n+        userTO.getResources().add(RESOURCE_NAME_TESTDB);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -1231,7 +1231,7 @@ public void issue213() {\n         UserMod userMod = new UserMod();\n \n         userMod.setId(userTO.getId());\n-        userMod.addResourceToBeRemoved(RESOURCE_NAME_TESTDB);\n+        userMod.getResourcesToBeRemoved().add(RESOURCE_NAME_TESTDB);\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n@@ -1243,7 +1243,7 @@ public void issue213() {\n     @Test\n     public void issue234() {\n         UserTO inUserTO = getUniqueSampleTO(\"issue234@syncope.apache.org\");\n-        inUserTO.addResource(RESOURCE_NAME_LDAP);\n+        inUserTO.getResources().add(RESOURCE_NAME_LDAP);\n \n         UserTO userTO = createUser(inUserTO);\n         assertNotNull(userTO);\n@@ -1265,7 +1265,7 @@ public void issue270() {\n         // 1. create a new user without virtual attributes\n         UserTO original = getUniqueSampleTO(\"issue270@syncope.apache.org\");\n         // be sure to remove all virtual attributes\n-        original.setVirtualAttributes(Collections.<AttributeTO>emptyList());\n+        original.getVirtualAttributes().clear();\n \n         original = createUser(original);\n \n@@ -1276,7 +1276,7 @@ public void issue270() {\n         UserTO toBeUpdated = userService.read(original.getId());\n \n         AttributeTO virtual = attributeTO(\"virtualdata\", \"virtualvalue\");\n-        toBeUpdated.addVirtualAttribute(virtual);\n+        toBeUpdated.getVirtualAttributes().add(virtual);\n \n         // 2. try to update by adding a resource, but no password: must fail\n         UserMod userMod = AttributableOperations.diff(toBeUpdated, original);\n@@ -1306,7 +1306,7 @@ public final void issue280() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"123password\");\n-        userMod.addResourceToBeAdded(RESOURCE_NAME_TESTDB);\n+        userMod.getResourcesToBeAdded().add(RESOURCE_NAME_TESTDB);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1330,7 +1330,7 @@ public void issue281() {\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n-        userTO.addResource(RESOURCE_NAME_CSV);\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -1351,7 +1351,7 @@ public void issue281() {\n     @Test\n     public void issue288() {\n         UserTO userTO = getSampleTO(\"issue288@syncope.apache.org\");\n-        userTO.addAttribute(attributeTO(\"aLong\", \"STRING\"));\n+        userTO.getAttributes().add(attributeTO(\"aLong\", \"STRING\"));\n \n         try {\n             createUser(userTO);\n@@ -1369,14 +1369,14 @@ public void roleAttrPropagation() {\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n \n-        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(1L);\n \n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n-        userTO.addResource(RESOURCE_NAME_CSV);\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n@@ -1394,16 +1394,16 @@ public void membershipAttrPropagation() {\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n-        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(1L);\n-        membershipTO.addAttribute(attributeTO(\"mderived_sx\", \"sx\"));\n-        membershipTO.addAttribute(attributeTO(\"mderived_dx\", \"dx\"));\n-        membershipTO.addDerivedAttribute(attributeTO(\"mderToBePropagated\", null));\n-        userTO.addMembership(membershipTO);\n+        membershipTO.getAttributes().add(attributeTO(\"mderived_sx\", \"sx\"));\n+        membershipTO.getAttributes().add(attributeTO(\"mderived_dx\", \"dx\"));\n+        membershipTO.getDerivedAttributes().add(attributeTO(\"mderToBePropagated\", null));\n+        userTO.getMemberships().add(membershipTO);\n \n-        userTO.addResource(RESOURCE_NAME_CSV);\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n@@ -1420,7 +1420,7 @@ public void issueSYNCOPE16() {\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         // 1. create user\n         UserTO actual = createUser(userTO);\n@@ -1433,8 +1433,8 @@ public void issueSYNCOPE16() {\n \n         UserMod userMod = new UserMod();\n         userMod.setId(actual.getId());\n-        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n-        userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"virtualupdated\"));\n+        userMod.getVirtualAttributesToBeRemoved().add(\"virtualdata\");\n+        userMod.getVirtualAttributesToBeUpdated().add(attributeMod(\"virtualdata\", \"virtualupdated\"));\n \n         // 3. update virtual attribute\n         actual = userService.update(userMod.getId(), userMod);\n@@ -1453,19 +1453,19 @@ public void issueSYNCOPE108() {\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n-        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n \n         MembershipTO memb12 = new MembershipTO();\n         memb12.setRoleId(12L);\n \n-        userTO.addMembership(memb12);\n+        userTO.getMemberships().add(memb12);\n \n         MembershipTO memb13 = new MembershipTO();\n         memb13.setRoleId(13L);\n \n-        userTO.addMembership(memb13);\n+        userTO.getMemberships().add(memb13);\n \n-        userTO.addResource(RESOURCE_NAME_CSV);\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n@@ -1481,7 +1481,7 @@ public void issueSYNCOPE108() {\n         UserMod userMod = new UserMod();\n         userMod.setId(actual.getId());\n \n-        userMod.addMembershipToBeRemoved(actual.getMemberships().get(0).getId());\n+        userMod.getMembershipsToBeRemoved().add(actual.getMemberships().get(0).getId());\n \n         actual = userService.update(userMod.getId(), userMod);\n         assertNotNull(actual);\n@@ -1497,7 +1497,7 @@ public void issueSYNCOPE108() {\n         userMod = new UserMod();\n         userMod.setId(actual.getId());\n \n-        userMod.addResourceToBeRemoved(actual.getResources().iterator().next());\n+        userMod.getResourcesToBeRemoved().add(actual.getResources().iterator().next());\n \n         actual = userService.update(userMod.getId(), userMod);\n         assertNotNull(actual);\n@@ -1514,7 +1514,7 @@ public void issueSYNCOPE108() {\n         userMod = new UserMod();\n         userMod.setId(actual.getId());\n \n-        userMod.addMembershipToBeRemoved(actual.getMemberships().get(0).getId());\n+        userMod.getMembershipsToBeRemoved().add(actual.getMemberships().get(0).getId());\n \n         actual = userService.update(userMod.getId(), userMod);\n         assertNotNull(actual);\n@@ -1536,18 +1536,18 @@ public void issueSYNCOPE111() {\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n-        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n \n         MembershipTO memb12 = new MembershipTO();\n         memb12.setRoleId(12L);\n-        memb12.addAttribute(attributeTO(\"postalAddress\", \"postalAddress\"));\n-        userTO.addMembership(memb12);\n+        memb12.getAttributes().add(attributeTO(\"postalAddress\", \"postalAddress\"));\n+        userTO.getMemberships().add(memb12);\n \n         MembershipTO memb13 = new MembershipTO();\n         memb13.setRoleId(13L);\n-        userTO.addMembership(memb13);\n+        userTO.getMemberships().add(memb13);\n \n-        userTO.addResource(RESOURCE_NAME_LDAP);\n+        userTO.getResources().add(RESOURCE_NAME_LDAP);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n@@ -1576,7 +1576,7 @@ public void issueSYNCOPE111() {\n                 ? actual.getMemberships().get(0)\n                 : actual.getMemberships().get(1);\n \n-        userMod.addMembershipToBeRemoved(membershipTO.getId());\n+        userMod.getMembershipsToBeRemoved().add(membershipTO.getId());\n \n         actual = userService.update(userMod.getId(), userMod);\n         assertNotNull(actual);\n@@ -1601,7 +1601,7 @@ public void issueSYNCOPE185() {\n         // 1. create user with LDAP resource, succesfully propagated\n         UserTO userTO = getSampleTO(\"syncope185@syncope.apache.org\");\n         userTO.getVirtualAttributes().clear();\n-        userTO.addResource(RESOURCE_NAME_LDAP);\n+        userTO.getResources().add(RESOURCE_NAME_LDAP);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -1658,7 +1658,7 @@ public void issueSYNCOPE260() {\n         // create user and check virtual attribute value propagation\n         // ----------------------------------\n         UserTO userTO = getUniqueSampleTO(\"260@a.com\");\n-        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.getResources().add(\"ws-target-resource-2\");\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -1679,10 +1679,10 @@ public void issueSYNCOPE260() {\n \n         AttributeMod attrMod = new AttributeMod();\n         attrMod.setSchema(\"virtualdata\");\n-        attrMod.addValueToBeRemoved(\"virtualvalue\");\n-        attrMod.addValueToBeAdded(\"virtualvalue2\");\n+        attrMod.getValuesToBeRemoved().add(\"virtualvalue\");\n+        attrMod.getValuesToBeAdded().add(\"virtualvalue2\");\n \n-        userMod.addVirtualAttributeToBeUpdated(attrMod);\n+        userMod.getVirtualAttributesToBeUpdated().add(attrMod);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1723,10 +1723,10 @@ public void issueSYNCOPE260() {\n \n         attrMod = new AttributeMod();\n         attrMod.setSchema(\"surname\");\n-        attrMod.addValueToBeRemoved(\"Surname\");\n-        attrMod.addValueToBeAdded(\"Surname2\");\n+        attrMod.getValuesToBeRemoved().add(\"Surname\");\n+        attrMod.getValuesToBeAdded().add(\"Surname2\");\n \n-        userMod.addAttributeToBeUpdated(attrMod);\n+        userMod.getAttributesToBeUpdated().add(attrMod);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1748,7 +1748,7 @@ public void issueSYNCOPE260() {\n         // ----------------------------------\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n+        userMod.getVirtualAttributesToBeRemoved().add(\"virtualdata\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1773,7 +1773,7 @@ public void issueSYNCOPE267() {\n         // ----------------------------------\n         UserTO userTO = getUniqueSampleTO(\"syncope267@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"resource-db-virattr\");\n+        userTO.getResources().add(\"resource-db-virattr\");\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -1805,7 +1805,7 @@ public void issueSYNCOPE266() {\n         userMod.setId(userTO.getId());\n \n         // this resource has not a mapping for Password\n-        userMod.addResourceToBeAdded(\"ws-target-resource-update\");\n+        userMod.getResourcesToBeAdded().add(\"ws-target-resource-update\");\n \n         userTO = userService.update(userTO.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1815,7 +1815,7 @@ public void issueSYNCOPE266() {\n     public void issueSYNCOPE279() {\n         UserTO userTO = getUniqueSampleTO(\"syncope279@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"ws-target-resource-timeout\");\n+        userTO.getResources().add(\"ws-target-resource-timeout\");\n         userTO = createUser(userTO);\n         assertEquals(\"ws-target-resource-timeout\", userTO.getPropagationStatusTOs().get(0).getResource());\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n@@ -1827,8 +1827,8 @@ public void issueSYNCOPE122() {\n         // 1. create user on testdb and testdb2\n         UserTO userTO = getUniqueSampleTO(\"syncope123@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(RESOURCE_NAME_TESTDB);\n-        userTO.addResource(\"resource-testdb2\");\n+        userTO.getResources().add(RESOURCE_NAME_TESTDB);\n+        userTO.getResources().add(\"resource-testdb2\");\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -1858,7 +1858,7 @@ public void issueSYNCOPE122() {\n         userMod.setId(userTO.getId());\n         userMod.setPassword(getUUIDString());\n         PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n-        pwdPropRequest.addResource(RESOURCE_NAME_TESTDB);\n+        pwdPropRequest.getResources().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(pwdPropRequest);\n \n         userTO = userService.update(userMod.getId(), userMod);\n@@ -1908,7 +1908,7 @@ public void isseSYNCOPE136AES() {\n         // 4. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n+        userMod.getResourcesToBeAdded().add(\"ws-target-resource-1\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1939,7 +1939,7 @@ public void isseSYNCOPE136Random() {\n         // 2. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addResourceToBeAdded(RESOURCE_NAME_LDAP);\n+        userMod.getResourcesToBeAdded().add(RESOURCE_NAME_LDAP);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1961,12 +1961,12 @@ public void virAttrCache() {\n \n         AttributeTO virAttrTO = new AttributeTO();\n         virAttrTO.setSchema(\"virtualdata\");\n-        virAttrTO.addValue(\"virattrcache\");\n-        userTO.addVirtualAttribute(virAttrTO);\n+        virAttrTO.getValues().add(\"virattrcache\");\n+        userTO.getVirtualAttributes().add(virAttrTO);\n \n         userTO.getMemberships().clear();\n         userTO.getResources().clear();\n-        userTO.addResource(\"resource-db-virattr\");\n+        userTO.getResources().add(\"resource-db-virattr\");\n \n         // 1. create user\n         UserTO actual = createUser(userTO);\n@@ -2004,10 +2004,10 @@ public void virAttrCache() {\n \n         AttributeMod virtualdata = new AttributeMod();\n         virtualdata.setSchema(\"virtualdata\");\n-        virtualdata.addValueToBeAdded(\"virtualupdated\");\n+        virtualdata.getValuesToBeAdded().add(\"virtualupdated\");\n \n-        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n-        userMod.addVirtualAttributeToBeUpdated(virtualdata);\n+        userMod.getVirtualAttributesToBeRemoved().add(\"virtualdata\");\n+        userMod.getVirtualAttributesToBeUpdated().add(virtualdata);\n \n         // 3. update virtual attribute\n         actual = userService.update(actual.getId(), userMod);\n@@ -2025,10 +2025,10 @@ public void mappingPurpose() {\n \n         AttributeTO csvuserid = new AttributeTO();\n         csvuserid.setSchema(\"csvuserid\");\n-        userTO.addDerivedAttribute(csvuserid);\n+        userTO.getDerivedAttributes().add(csvuserid);\n \n         userTO.getResources().clear();\n-        userTO.addResource(RESOURCE_NAME_CSV);\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n@@ -2045,10 +2045,10 @@ public void issueSYNCOPE265() {\n \n             AttributeMod attributeMod = new AttributeMod();\n             attributeMod.setSchema(\"type\");\n-            attributeMod.addValueToBeAdded(\"a type\");\n+            attributeMod.getValuesToBeAdded().add(\"a type\");\n \n-            userMod.addAttributeToBeRemoved(\"type\");\n-            userMod.addAttributeToBeUpdated(attributeMod);\n+            userMod.getAttributesToBeRemoved().add(\"type\");\n+            userMod.getAttributesToBeUpdated().add(attributeMod);\n \n             UserTO userTO = userService.update(i, userMod);\n             assertEquals(\"a type\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n@@ -2104,17 +2104,17 @@ public void issueSYNCOPE354() {\n         RoleTO roleTO = new RoleTO();\n         roleTO.setName(\"SYNCOPE354-\" + getUUIDString());\n         roleTO.setParent(8L);\n-        roleTO.addResource(RESOURCE_NAME_LDAP);\n+        roleTO.getResources().add(RESOURCE_NAME_LDAP);\n \n         roleTO = createRole(roleService, roleTO);\n         assertNotNull(roleTO);\n \n         // 2. create user with LDAP resource and membership of the above role\n         UserTO userTO = getUniqueSampleTO(\"syncope354@syncope.apache.org\");\n-        userTO.addResource(RESOURCE_NAME_LDAP);\n+        userTO.getResources().add(RESOURCE_NAME_LDAP);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(roleTO.getId());\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n@@ -2129,7 +2129,7 @@ public void issueSYNCOPE354() {\n         // 4. remove membership\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addMembershipToBeRemoved(userTO.getMemberships().iterator().next().getId());\n+        userMod.getMembershipsToBeRemoved().add(userTO.getMemberships().iterator().next().getId());\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n@@ -2155,7 +2155,7 @@ public void issueSYNCOPE357() {\n         RoleTO roleTO = new RoleTO();\n         roleTO.setName(\"SYNCOPE357-\" + getUUIDString());\n         roleTO.setParent(8L);\n-        roleTO.addResource(RESOURCE_NAME_LDAP);\n+        roleTO.getResources().add(RESOURCE_NAME_LDAP);\n \n         roleTO = createRole(roleService, roleTO);\n         assertNotNull(roleTO);\n@@ -2164,7 +2164,7 @@ public void issueSYNCOPE357() {\n         UserTO userTO = getUniqueSampleTO(\"syncope357@syncope.apache.org\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(roleTO.getId());\n-        userTO.addMembership(membershipTO);\n+        userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n@@ -2203,7 +2203,7 @@ public void issueSYNCOPE383() {\n         // 2. assign resource without specifying a new pwd and check propagation failure\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addResourceToBeAdded(RESOURCE_NAME_TESTDB);\n+        userMod.getResourcesToBeAdded().add(RESOURCE_NAME_TESTDB);\n         userTO = userService.update(userMod.getId(), userMod);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n         assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n@@ -2214,7 +2214,7 @@ public void issueSYNCOPE383() {\n         userMod.setId(userTO.getId());\n         userMod.setPassword(getUUIDString());\n         PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n-        pwdPropRequest.addResource(RESOURCE_NAME_TESTDB);\n+        pwdPropRequest.getResources().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(pwdPropRequest);\n \n         userTO = userService.update(userMod.getId(), userMod);\n@@ -2258,11 +2258,11 @@ public void issueSYNCOPE397() {\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n \n-        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n-        userTO.addDerivedAttribute(attributeTO(\"cn\", null));\n-        userTO.addVirtualAttribute(attributeTO(\"virtualdata\", \"test@testone.org\"));\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerivedAttributes().add(attributeTO(\"cn\", null));\n+        userTO.getVirtualAttributes().add(attributeTO(\"virtualdata\", \"test@testone.org\"));\n         // assign resource-csv to user\n-        userTO.addResource(RESOURCE_NAME_CSV);\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n         // save user\n         UserTO created = createUser(userTO);\n         // make std controls about user\n@@ -2274,15 +2274,15 @@ public void issueSYNCOPE397() {\n         userMod.setId(toBeUpdated.getId());\n         userMod.setPassword(\"password2\");\n         // assign new resource to user\n-        userMod.addResourceToBeAdded(\"ws-target-resource-2\");\n+        userMod.getResourcesToBeAdded().add(\"ws-target-resource-2\");\n         //modify virtual attribute\n-        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n-        userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n+        userMod.getVirtualAttributesToBeRemoved().add(\"virtualdata\");\n+        userMod.getVirtualAttributesToBeUpdated().add(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n         // check Syncope change password\n \n         PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n         //change pwd on Syncope\n-        pwdPropRequest.addResource(\"ws-target-resource-2\");\n+        pwdPropRequest.getResources().add(\"ws-target-resource-2\");\n         //change pwd on Syncope\n         pwdPropRequest.setOnSyncope(true);\n         userMod.setPwdPropRequest(pwdPropRequest);\n@@ -2302,9 +2302,9 @@ public void issueSYNCOPE402() {\n         userTO.setUsername(userId);\n         userTO.setPassword(\"password\");\n \n-        userTO.addAttribute(attributeTO(\"userId\", userId));\n-        userTO.addAttribute(attributeTO(\"fullname\", userId));\n-        userTO.addAttribute(attributeTO(\"surname\", userId));\n+        userTO.getAttributes().add(attributeTO(\"userId\", userId));\n+        userTO.getAttributes().add(attributeTO(\"fullname\", userId));\n+        userTO.getAttributes().add(attributeTO(\"surname\", userId));\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -2315,8 +2315,8 @@ public void issueSYNCOPE402() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n-        userMod.addResourceToBeAdded(\"resource-testdb\");\n+        userMod.getResourcesToBeAdded().add(\"ws-target-resource-1\");\n+        userMod.getResourcesToBeAdded().add(\"resource-testdb\");\n         userTO = userService.update(userMod.getId(), userMod);\n         assertEquals(\"ws-target-resource-1\", userTO.getPropagationStatusTOs().get(1).getResource());\n         assertNotNull(userTO.getPropagationStatusTOs().get(1).getFailureReason());"},{"sha":"44716c1902a81435e86c6cf3384d26e8fa3f30e4","filename":"core/src/test/java/org/apache/syncope/core/sync/TestSyncActions.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19e18bc23f20a2d8377baffdb74b78481bdc7b98/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java?ref=19e18bc23f20a2d8377baffdb74b78481bdc7b98","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.sync;\n \n-import java.util.Collections;\n-\n import org.apache.syncope.common.mod.AbstractAttributableMod;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n@@ -45,9 +43,10 @@ public <T extends AbstractAttributableTO> SyncDelta beforeCreate(final SyncResul\n         if (attrTO == null) {\n             attrTO = new AttributeTO();\n             attrTO.setSchema(\"fullname\");\n-            subject.addAttribute(attrTO);\n+            subject.getAttributes().add(attrTO);\n         }\n-        attrTO.setValues(Collections.singletonList(String.valueOf(counter++)));\n+        attrTO.getValues().clear();\n+        attrTO.getValues().add(String.valueOf(counter++));\n \n         return delta;\n     }\n@@ -57,7 +56,7 @@ public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> Syn\n             final SyncResultsHandler handler, final SyncDelta delta, final T subject, final K subjectMod)\n             throws JobExecutionException {\n \n-        subjectMod.addAttributeToBeRemoved(\"fullname\");\n+        subjectMod.getAttributesToBeRemoved().add(\"fullname\");\n \n         AttributeMod fullnameMod = null;\n         for (AttributeMod attrMod : subjectMod.getAttributesToBeUpdated()) {\n@@ -68,10 +67,11 @@ public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> Syn\n         if (fullnameMod == null) {\n             fullnameMod = new AttributeMod();\n             fullnameMod.setSchema(\"fullname\");\n-            subjectMod.addAttributeToBeUpdated(fullnameMod);\n+            subjectMod.getAttributesToBeUpdated().add(fullnameMod);\n         }\n \n-        fullnameMod.setValuesToBeAdded(Collections.singletonList(String.valueOf(counter++)));\n+        fullnameMod.getValuesToBeAdded().clear();\n+        fullnameMod.getValuesToBeAdded().add(String.valueOf(counter++));\n \n         return delta;\n     }"}]}