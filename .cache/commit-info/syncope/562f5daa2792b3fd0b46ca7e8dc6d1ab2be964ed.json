{"sha":"562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU2MmY1ZGFhMjc5MmIzZmQwYjQ2Y2E3ZThkYzZkMWFiMmJlOTY0ZWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-11T07:53:55Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-11T08:18:55Z"},"message":"Allow for ActionLinksTogglePanel extension in subclasses","tree":{"sha":"38cd415cca597826dfafa22346c319b1e4dedaac","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/38cd415cca597826dfafa22346c319b1e4dedaac"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"98c5a1a0356e48e8e0e7aae0eb604726d81e230a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/98c5a1a0356e48e8e0e7aae0eb604726d81e230a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/98c5a1a0356e48e8e0e7aae0eb604726d81e230a"}],"stats":{"total":97,"additions":46,"deletions":51},"files":[{"sha":"4766d6f6f83c9db6be5697e9afa29e62248c3a00","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed","patch":"@@ -104,7 +104,7 @@\n \n     protected final BaseModal<W> displayAttributeModal = new BaseModal<>(Constants.OUTER);\n \n-    protected ActionLinksTogglePanel<T> actionTogglePanel;\n+    protected final ActionLinksTogglePanel<T> actionTogglePanel;\n \n     /**\n      * Create simple unfiltered search result panel.\n@@ -145,7 +145,7 @@ protected DirectoryPanel(final String id, final Builder<T, W, E> builder, final\n         super(id, wizardInModal);\n         setOutputMarkupId(true);\n \n-        actionTogglePanel = new ActionLinksTogglePanel<>(Constants.OUTER, builder.getPageRef());\n+        actionTogglePanel = actionTogglePanel();\n         addOuterObject(actionTogglePanel);\n \n         addOuterObject(altDefaultModal);\n@@ -354,12 +354,12 @@ protected ActionsPanel<T> getActions(final IModel<T> model) {\n         return model == null ? new ActionsPanel<>(\"actions\", new Model<>()) : new ActionsPanel<>(\"actions\", model);\n     }\n \n-    protected ActionLinksTogglePanel<T> getTogglePanel() {\n-        return actionTogglePanel;\n+    protected ActionLinksTogglePanel<T> actionTogglePanel() {\n+        return new ActionLinksTogglePanel<>(Constants.OUTER, pageRef);\n     }\n \n-    protected void setTogglePanel(final ActionLinksTogglePanel<T> actionTogglePanel) {\n-        this.actionTogglePanel = actionTogglePanel;\n+    protected ActionLinksTogglePanel<T> getTogglePanel() {\n+        return actionTogglePanel;\n     }\n \n     public static class EventDataWrapper {"},{"sha":"f79fc2c241647fd22f5a7514ba68b88559494877","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed","patch":"@@ -307,8 +307,6 @@ protected WizardMgtPanel<JobTO> newInstance(final String id, final boolean wizar\n                 }\n             }.disableCheckBoxes().hidePaginator());\n \n-            super.setTogglePanel(actionTogglePanel);\n-\n             this.reportModal = JobWidget.this.reportModal;\n             setWindowClosedReloadCallback(reportModal);\n "},{"sha":"7cefbe71633f7122ddb1ff8415b04b32087ae993","filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.java","status":"modified","additions":22,"deletions":24,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java?ref=562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed","patch":"@@ -91,24 +91,6 @@ protected WizardMgtPanel<OIDCProviderTO> newInstance(final String id, final bool\n \n         modal.size(Modal.Size.Large);\n \n-        actionTogglePanel = new ActionLinksTogglePanel<OIDCProviderTO>(\"outer\", pageRef) {\n-\n-            private static final long serialVersionUID = -7688359318035249200L;\n-\n-            @Override\n-            public void toggleWithContent(\n-                    final AjaxRequestTarget target,\n-                    final ActionsPanel<OIDCProviderTO> actionsPanel,\n-                    final OIDCProviderTO modelObject) {\n-\n-                super.toggleWithContent(target, actionsPanel, modelObject);\n-                setHeader(target, StringUtils.abbreviate(modelObject.getName(), 25));\n-                this.toggle(target, true);\n-            }\n-\n-        };\n-        addOuterObject(actionTogglePanel);\n-\n         templateModal = new BaseModal<Serializable>(\"outer\") {\n \n             private static final long serialVersionUID = 5787433530654262016L;\n@@ -125,7 +107,6 @@ protected void onConfigure() {\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n-//                target.add(content);\n                 templateModal.show(false);\n             }\n         });\n@@ -141,6 +122,24 @@ protected OIDCProvidersProvider dataProvider() {\n         return new OIDCProvidersProvider(rows);\n     }\n \n+    @Override\n+    protected ActionLinksTogglePanel<OIDCProviderTO> actionTogglePanel() {\n+        return new ActionLinksTogglePanel<OIDCProviderTO>(Constants.OUTER, pageRef) {\n+\n+            private static final long serialVersionUID = -7688359318035249200L;\n+\n+            @Override\n+            public void updateHeader(final AjaxRequestTarget target, final Serializable object) {\n+                if (object instanceof OIDCProviderTO) {\n+                    setHeader(target,\n+                            StringUtils.abbreviate(((OIDCProviderTO) object).getName(), HEADER_FIRST_ABBREVIATION));\n+                } else {\n+                    super.updateHeader(target, object);\n+                }\n+            }\n+        };\n+    }\n+\n     @Override\n     protected String paginatorRowsKey() {\n         return PREF_OIDC_PROVIDERS_PAGINATOR_ROWS;\n@@ -150,18 +149,17 @@ protected String paginatorRowsKey() {\n     @Override\n     protected List<IColumn<OIDCProviderTO, String>> getColumns() {\n         List<IColumn<OIDCProviderTO, String>> columns = new ArrayList<>();\n-        columns.add(new KeyPropertyColumn<OIDCProviderTO>(new ResourceModel(\"key\"), \"key\", \"key\"));\n-        columns.add(new PropertyColumn<OIDCProviderTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n-        columns.add(new PropertyColumn<OIDCProviderTO, String>(new ResourceModel(\"issuer\"), \"issuer\", \"issuer\"));\n-        columns.add(new PropertyColumn<OIDCProviderTO, String>(new ResourceModel(\"clientID\"), \"clientID\", \"clientID\"));\n+        columns.add(new KeyPropertyColumn<>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"issuer\"), \"issuer\", \"issuer\"));\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"clientID\"), \"clientID\", \"clientID\"));\n         return columns;\n \n     }\n \n     @Override\n     protected Collection<ActionLink.ActionType> getBatches() {\n         return List.of();\n-\n     }\n \n     @Override"},{"sha":"488c9a013c37d510624c01af5b24ba7c2471fe73","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.java","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java?ref=562f5daa2792b3fd0b46ca7e8dc6d1ab2be964ed","patch":"@@ -105,25 +105,6 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n \n-        // need to override to change the menu header\n-        actionTogglePanel = new ActionLinksTogglePanel<SAML2IdPTO>(\"outer\", pageRef) {\n-\n-            private static final long serialVersionUID = -7688359318035249200L;\n-\n-            @Override\n-            public void toggleWithContent(\n-                    final AjaxRequestTarget target,\n-                    final ActionsPanel<SAML2IdPTO> actionsPanel,\n-                    final SAML2IdPTO modelObject) {\n-\n-                super.toggleWithContent(target, actionsPanel, modelObject);\n-                setHeader(target, StringUtils.abbreviate(modelObject.getName(), 25));\n-                this.toggle(target, true);\n-            }\n-\n-        };\n-        addOuterObject(actionTogglePanel);\n-\n         addOuterObject(metadataModal);\n         setWindowClosedReloadCallback(metadataModal);\n         metadataModal.size(Modal.Size.Large);\n@@ -171,6 +152,24 @@ protected SAML2IdPsProvider dataProvider() {\n         return new SAML2IdPsProvider(rows);\n     }\n \n+    @Override\n+    protected ActionLinksTogglePanel<SAML2IdPTO> actionTogglePanel() {\n+        return new ActionLinksTogglePanel<SAML2IdPTO>(Constants.OUTER, pageRef) {\n+\n+            private static final long serialVersionUID = -7688359318035249200L;\n+\n+            @Override\n+            public void updateHeader(final AjaxRequestTarget target, final Serializable modelObject) {\n+                if (modelObject instanceof SAML2IdPTO) {\n+                    setHeader(target,\n+                            StringUtils.abbreviate(((SAML2IdPTO) modelObject).getName(), HEADER_FIRST_ABBREVIATION));\n+                } else {\n+                    super.updateHeader(target, modelObject);\n+                }\n+            }\n+        };\n+    }\n+\n     @Override\n     protected String paginatorRowsKey() {\n         return PREF_SAML2_IDPS_PAGINATOR_ROWS;"}]}