{"sha":"78af1481312217b78cb41bd1dc292c6e25324c23","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc4YWYxNDgxMzEyMjE3Yjc4Y2I0MWJkMWRjMjkyYzZlMjUzMjRjMjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-01-29T15:38:02Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-01-29T15:39:41Z"},"message":"[SYNCOPE-1265] Populating the IdP cache upon startup","tree":{"sha":"32758d52c8b42546ab88f18686a2c6f6e5b3b7f7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/32758d52c8b42546ab88f18686a2c6f6e5b3b7f7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/78af1481312217b78cb41bd1dc292c6e25324c23","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/78af1481312217b78cb41bd1dc292c6e25324c23","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/78af1481312217b78cb41bd1dc292c6e25324c23","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/78af1481312217b78cb41bd1dc292c6e25324c23/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c1975406a9fa6e46b8157ee5c4f866615cc5db2c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c1975406a9fa6e46b8157ee5c4f866615cc5db2c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c1975406a9fa6e46b8157ee5c4f866615cc5db2c"}],"stats":{"total":26,"additions":26,"deletions":0},"files":[{"sha":"5c4784391e40605c4afed94630852178a1731922","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/init/SAML2SPLoader.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/78af1481312217b78cb41bd1dc292c6e25324c23/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/78af1481312217b78cb41bd1dc292c6e25324c23/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java?ref=78af1481312217b78cb41bd1dc292c6e25324c23","patch":"@@ -30,9 +30,13 @@\n import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.common.lib.types.SAML2SPEntitlement;\n+import org.apache.syncope.core.logic.saml2.SAML2IdPCache;\n import org.apache.syncope.core.logic.saml2.SAML2ReaderWriter;\n+import org.apache.syncope.core.persistence.api.DomainsHolder;\n+import org.apache.syncope.core.persistence.api.dao.SAML2IdPDAO;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.wss4j.common.saml.OpenSAMLUtil;\n import org.opensaml.core.criterion.EntityIdCriterion;\n import org.opensaml.security.credential.Credential;\n@@ -63,6 +67,15 @@ private static <T> T assertNotNull(final T argument, final String name) {\n     @Autowired\n     private SAML2ReaderWriter saml2rw;\n \n+    @Autowired\n+    private DomainsHolder domainsHolder;\n+\n+    @Autowired\n+    private SAML2IdPCache cache;\n+\n+    @Autowired\n+    private SAML2IdPDAO idpDAO;\n+\n     private boolean inited;\n \n     private KeyStore keystore;\n@@ -127,6 +140,19 @@ public void load() {\n             LOG.error(\"Could not initialize the SAML 2.0 Service Provider certificate\", e);\n             inited = false;\n         }\n+\n+        domainsHolder.getDomains().keySet().forEach(domain -> {\n+            AuthContextUtils.execWithAuthContext(domain, () -> {\n+                idpDAO.findAll().forEach(idp -> {\n+                    try {\n+                        cache.put(idp);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Could not cache the SAML 2.0 IdP with key \", idp.getEntityID(), e);\n+                    }\n+                });\n+                return null;\n+            });\n+        });\n     }\n \n     public boolean isInited() {"}]}