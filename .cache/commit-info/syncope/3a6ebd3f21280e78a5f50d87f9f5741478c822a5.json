{"sha":"3a6ebd3f21280e78a5f50d87f9f5741478c822a5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNhNmViZDNmMjEyODBlNzhhNWY1MGQ4N2Y5ZjU3NDE0NzhjODIyYTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-10-18T15:57:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-10-18T15:57:27Z"},"message":"[SYNCOPE-93] Upgraded to Quartz 2.1.6 with all needed API changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1399709 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9d51ddcfdf1f1f637092ba7d1fcd46a4535d5e25","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9d51ddcfdf1f1f637092ba7d1fcd46a4535d5e25"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3a6ebd3f21280e78a5f50d87f9f5741478c822a5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3a6ebd3f21280e78a5f50d87f9f5741478c822a5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3a6ebd3f21280e78a5f50d87f9f5741478c822a5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a9e2a00dd0029a17e055b4960b25b70ac268472e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9e2a00dd0029a17e055b4960b25b70ac268472e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a9e2a00dd0029a17e055b4960b25b70ac268472e"}],"stats":{"total":1635,"additions":855,"deletions":780},"files":[{"sha":"0549f723a26855ad6aba1e16270fddbc2ab5bf42","filename":"core/src/main/java/org/apache/syncope/core/init/ImplementationClassNamesLoader.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -24,8 +24,13 @@\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.syncope.core.persistence.validation.attrvalue.Validator;\n+import org.apache.syncope.core.report.Reportlet;\n+import org.apache.syncope.core.scheduling.NotificationJob;\n+import org.apache.syncope.core.scheduling.ReportJob;\n+import org.apache.syncope.core.scheduling.SyncJob;\n+import org.apache.syncope.core.scheduling.SyncJobActions;\n import org.quartz.Job;\n-import org.quartz.StatefulJob;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -35,12 +40,6 @@\n import org.springframework.core.type.classreading.CachingMetadataReaderFactory;\n import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n-import org.apache.syncope.core.persistence.validation.attrvalue.Validator;\n-import org.apache.syncope.core.report.Reportlet;\n-import org.apache.syncope.core.scheduling.NotificationJob;\n-import org.apache.syncope.core.scheduling.ReportJob;\n-import org.apache.syncope.core.scheduling.SyncJob;\n-import org.apache.syncope.core.scheduling.SyncJobActions;\n \n /**\n  * Cache class names for all implementations of Syncope interfaces found in classpath, for later usage.\n@@ -87,7 +86,7 @@ public void load() {\n                         classNames.get(Type.REPORTLET).add(clazz.getName());\n                     }\n \n-                    if ((interfaces.contains(Job.class) || interfaces.contains(StatefulJob.class))\n+                    if ((interfaces.contains(Job.class))\n                             && !metadata.isAbstract() && !SyncJob.class.getName().equals(metadata.getClassName())\n                             && !ReportJob.class.getName().equals(metadata.getClassName())\n                             && !NotificationJob.class.getName().equals(metadata.getClassName())) {"},{"sha":"27b1ca1eed4c2967cb87c3e5b9c60da84b4c292e","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -40,18 +40,19 @@\n import org.apache.syncope.core.scheduling.SyncJobActions;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.quartz.Job;\n-import org.quartz.JobDetail;\n import org.quartz.JobExecutionContext;\n+import org.quartz.JobKey;\n import org.quartz.Scheduler;\n import org.quartz.SchedulerException;\n+import org.quartz.TriggerKey;\n+import org.quartz.impl.JobDetailImpl;\n+import org.quartz.impl.triggers.CronTriggerImpl;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n import org.springframework.context.ConfigurableApplicationContext;\n-import org.springframework.scheduling.quartz.CronTriggerBean;\n-import org.springframework.scheduling.quartz.JobDetailBean;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -124,12 +125,12 @@ private void registerJob(final String jobName, final Job jobInstance, final Stri\n             for (JobExecutionContext jobCtx : (List<JobExecutionContext>) scheduler.getScheduler().\n                     getCurrentlyExecutingJobs()) {\n \n-                if (jobName.equals(jobCtx.getJobDetail().getName())\n-                        && Scheduler.DEFAULT_GROUP.equals(jobCtx.getJobDetail().getGroup())) {\n+                if (jobName.equals(jobCtx.getJobDetail().getKey().getName())\n+                        && Scheduler.DEFAULT_GROUP.equals(jobCtx.getJobDetail().getKey().getGroup())) {\n \n                     jobAlreadyRunning = true;\n \n-                    LOG.debug(\"Job {} already running, cancel\", jobCtx.getJobDetail().getFullName());\n+                    LOG.debug(\"Job {} already running, cancel\", jobCtx.getJobDetail().getKey());\n                 }\n             }\n \n@@ -145,7 +146,7 @@ private void registerJob(final String jobName, final Job jobInstance, final Stri\n         getBeanFactory().registerSingleton(jobName, jobInstance);\n \n         // 2. JobDetail bean\n-        JobDetail jobDetail = new JobDetailBean();\n+        JobDetailImpl jobDetail = new JobDetailImpl();\n         jobDetail.setName(jobName);\n         jobDetail.setGroup(Scheduler.DEFAULT_GROUP);\n         jobDetail.setJobClass(jobInstance.getClass());\n@@ -154,7 +155,7 @@ private void registerJob(final String jobName, final Job jobInstance, final Stri\n         if (cronExpression == null) {\n             scheduler.getScheduler().addJob(jobDetail, true);\n         } else {\n-            CronTriggerBean cronTrigger = new CronTriggerBean();\n+            CronTriggerImpl cronTrigger = new CronTriggerImpl();\n             cronTrigger.setName(getTriggerName(jobName));\n             cronTrigger.setCronExpression(cronExpression);\n \n@@ -200,8 +201,8 @@ public void registerJob(final Report report) throws SchedulerException, ParseExc\n \n     private void unregisterJob(final String jobName) {\n         try {\n-            scheduler.getScheduler().unscheduleJob(jobName, Scheduler.DEFAULT_GROUP);\n-            scheduler.getScheduler().deleteJob(jobName, Scheduler.DEFAULT_GROUP);\n+            scheduler.getScheduler().unscheduleJob(new TriggerKey(jobName, Scheduler.DEFAULT_GROUP));\n+            scheduler.getScheduler().deleteJob(new JobKey(jobName, Scheduler.DEFAULT_GROUP));\n         } catch (SchedulerException e) {\n             LOG.error(\"Could not remove job \" + jobName, e);\n         }"},{"sha":"50a81657e32d3f1726618b8b7fd65b9faecc8bc8","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ReportController.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -57,7 +57,7 @@\n import org.apache.syncope.types.ReportExecStatus;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n import org.apache.xmlgraphics.util.MimeConstants;\n-import org.quartz.JobDataMap;\n+import org.quartz.JobKey;\n import org.quartz.Scheduler;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n@@ -365,7 +365,8 @@ public ReportExecTO execute(@PathVariable(\"reportId\") final Long reportId) throw\n         try {\n             jobInstanceLoader.registerJob(report);\n \n-            scheduler.getScheduler().triggerJob(JobInstanceLoader.getJobName(report), Scheduler.DEFAULT_GROUP);\n+            scheduler.getScheduler().triggerJob(\n+                    new JobKey(JobInstanceLoader.getJobName(report), Scheduler.DEFAULT_GROUP));\n \n             auditManager.audit(Category.report, ReportSubCategory.execute, Result.success,\n                     \"Successfully started execution for report: \" + report.getId());"},{"sha":"026c5a4d0521df433c7ff5491b1ef115a8956ef4","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/TaskController.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -52,6 +52,7 @@\n import org.apache.syncope.types.PropagationTaskExecStatus;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n import org.quartz.JobDataMap;\n+import org.quartz.JobKey;\n import org.quartz.Scheduler;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n@@ -322,8 +323,8 @@ public TaskExecTO execute(@PathVariable(\"taskId\") final Long taskId,\n \n                     JobDataMap map = new JobDataMap();\n                     map.put(AbstractTaskJob.DRY_RUN_JOBDETAIL_KEY, dryRun);\n-                    scheduler.getScheduler().triggerJob(JobInstanceLoader.getJobName(task), Scheduler.DEFAULT_GROUP,\n-                            map);\n+                    scheduler.getScheduler().triggerJob(\n+                            new JobKey(JobInstanceLoader.getJobName(task), Scheduler.DEFAULT_GROUP), map);\n                 } catch (Exception e) {\n                     LOG.error(\"While executing task {}\", task, e);\n \n@@ -425,7 +426,7 @@ public TaskTO delete(@PathVariable(\"taskId\") final Long taskId)\n             throw new NotFoundException(\"Task \" + taskId);\n         }\n         TaskUtil taskUtil = getTaskUtil(task);\n-        \n+\n         TaskTO taskToDelete = binder.getTaskTO(task, taskUtil);\n \n         if (TaskUtil.SCHED == taskUtil || TaskUtil.SYNC == taskUtil) {\n@@ -436,7 +437,7 @@ public TaskTO delete(@PathVariable(\"taskId\") final Long taskId)\n \n         auditManager.audit(Category.task, TaskSubCategory.delete, Result.success,\n                 \"Successfully deleted task: \" + task.getId() + \"/\" + taskUtil);\n-        \n+\n         return taskToDelete;\n     }\n \n@@ -449,7 +450,7 @@ public TaskExecTO deleteExecution(@PathVariable(\"executionId\") final Long execut\n         if (taskExec == null) {\n             throw new NotFoundException(\"Task execution \" + executionId);\n         }\n-        \n+\n         TaskExecTO taskExecutionToDelete = binder.getTaskExecTO(taskExec);\n \n         taskExecDAO.delete(taskExec);"},{"sha":"830133bb8d16aa255b039be9618e843a42723b7f","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ReportDataBinder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -33,6 +33,7 @@\n import org.quartz.Scheduler;\n import org.quartz.SchedulerException;\n import org.quartz.Trigger;\n+import org.quartz.TriggerKey;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n@@ -137,7 +138,7 @@ public ReportTO getReportTO(final Report report) {\n \n         Trigger trigger;\n         try {\n-            trigger = scheduler.getScheduler().getTrigger(triggerName, Scheduler.DEFAULT_GROUP);\n+            trigger = scheduler.getScheduler().getTrigger(new TriggerKey(triggerName, Scheduler.DEFAULT_GROUP));\n         } catch (SchedulerException e) {\n             LOG.warn(\"While trying to get to \" + triggerName, e);\n             trigger = null;"},{"sha":"99257f1a9ad174a57d8b435db3332d2750ebc4c6","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -47,6 +47,7 @@\n import org.quartz.Scheduler;\n import org.quartz.SchedulerException;\n import org.quartz.Trigger;\n+import org.quartz.TriggerKey;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n@@ -207,12 +208,11 @@ public TaskExecTO getTaskExecTO(final TaskExec execution) {\n     private void setExecTime(final SchedTaskTO taskTO, final Task task) {\n         String triggerName = JobInstanceLoader.getTriggerName(JobInstanceLoader.getJobName(task));\n \n-        Trigger trigger;\n+        Trigger trigger = null;\n         try {\n-            trigger = scheduler.getScheduler().getTrigger(triggerName, Scheduler.DEFAULT_GROUP);\n+            trigger = scheduler.getScheduler().getTrigger(new TriggerKey(triggerName, Scheduler.DEFAULT_GROUP));\n         } catch (SchedulerException e) {\n             LOG.warn(\"While trying to get to \" + triggerName, e);\n-            trigger = null;\n         }\n \n         if (trigger != null) {"},{"sha":"03ba96d144b39f1cee15e4d11f35c071b5562fca","filename":"core/src/main/java/org/apache/syncope/core/scheduling/AbstractTaskJob.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -25,9 +25,10 @@\n import org.apache.syncope.core.persistence.beans.TaskExec;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.TaskExecDAO;\n+import org.quartz.DisallowConcurrentExecution;\n+import org.quartz.Job;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n-import org.quartz.StatefulJob;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -36,7 +37,8 @@\n  * Base job implementation that delegates to concrete implementation the actual job execution and provides some\n  * background settings (like as the corresponding Task, for example).\n  */\n-public abstract class AbstractTaskJob implements StatefulJob {\n+@DisallowConcurrentExecution\n+public abstract class AbstractTaskJob implements Job {\n \n     public static final String DRY_RUN_JOBDETAIL_KEY = \"dryRun\";\n "},{"sha":"7a71f604e842883da3730fa6abb3123175912a2a","filename":"core/src/main/java/org/apache/syncope/core/scheduling/NotificationJob.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -33,9 +33,10 @@\n import org.apache.syncope.types.AuditElements.NotificationSubCategory;\n import org.apache.syncope.types.AuditElements.Result;\n import org.apache.syncope.types.TraceLevel;\n+import org.quartz.DisallowConcurrentExecution;\n+import org.quartz.Job;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n-import org.quartz.StatefulJob;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -47,7 +48,8 @@\n  *\n  * @see NotificationTask\n  */\n-public class NotificationJob implements StatefulJob {\n+@DisallowConcurrentExecution\n+public class NotificationJob implements Job {\n \n     enum Status {\n "},{"sha":"9c6a792772c45d3b948ad2aee4dca34124901c49","filename":"core/src/main/java/org/apache/syncope/core/scheduling/ReportJob.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -44,9 +44,10 @@\n import static org.apache.syncope.core.scheduling.ReportXMLConst.XSD_STRING;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.types.ReportExecStatus;\n+import org.quartz.DisallowConcurrentExecution;\n+import org.quartz.Job;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n-import org.quartz.StatefulJob;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -57,7 +58,8 @@\n /**\n  * Quartz job for executing a given report.\n  */\n-public class ReportJob implements StatefulJob {\n+@DisallowConcurrentExecution\n+public class ReportJob implements Job {\n \n     /**\n      * Logger."},{"sha":"2d37a6637f77e69572a30ae769eae9fd1864dc0e","filename":"core/src/main/java/org/apache/syncope/core/scheduling/SpringBeanJobFactory.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanJobFactory.java?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -51,8 +51,8 @@ public void setSchedulerContext(final SchedulerContext schedulerContext) {\n     }\n \n     /**\n-     * An implementation of SpringBeanJobFactory that retrieves the bean from\n-     * the Spring context so that autowiring and transactions work.\n+     * An implementation of SpringBeanJobFactory that retrieves the bean from the Spring context so that autowiring and\n+     * transactions work.\n      *\n      * {@inheritDoc}\n      */\n@@ -63,8 +63,8 @@ protected Object createJobInstance(final TriggerFiredBundle bundle) throws Excep\n \n         // Try to re-create job bean from underlying task (useful for managing\n         // failover scenarios)\n-        if (!ctx.containsBean(bundle.getJobDetail().getName())) {\n-            Long taskId = JobInstanceLoader.getTaskIdFromJobName(bundle.getJobDetail().getName());\n+        if (!ctx.containsBean(bundle.getJobDetail().getKey().getName())) {\n+            Long taskId = JobInstanceLoader.getTaskIdFromJobName(bundle.getJobDetail().getKey().getName());\n             if (taskId != null) {\n                 TaskDAO taskDAO = ctx.getBean(TaskDAO.class);\n                 SchedTask task = taskDAO.find(taskId);\n@@ -73,7 +73,7 @@ protected Object createJobInstance(final TriggerFiredBundle bundle) throws Excep\n                 jobInstanceLoader.registerJob(task, task.getJobClassName(), task.getCronExpression());\n             }\n \n-            Long reportId = JobInstanceLoader.getReportIdFromJobName(bundle.getJobDetail().getName());\n+            Long reportId = JobInstanceLoader.getReportIdFromJobName(bundle.getJobDetail().getKey().getName());\n             if (reportId != null) {\n                 ReportDAO reportDAO = ctx.getBean(ReportDAO.class);\n                 Report report = reportDAO.find(reportId);\n@@ -83,7 +83,7 @@ protected Object createJobInstance(final TriggerFiredBundle bundle) throws Excep\n             }\n         }\n \n-        final Object job = ctx.getBean(bundle.getJobDetail().getName());\n+        final Object job = ctx.getBean(bundle.getJobDetail().getKey().getName());\n         final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(job);\n         if (isEligibleForPropertyPopulation(wrapper.getWrappedInstance())) {\n             final MutablePropertyValues pvs = new MutablePropertyValues();"},{"sha":"0debf4bff1d3528b1dfa7f5daa1c79e4f2e636e3","filename":"core/src/main/resources/quartz/tables_h2.sql","status":"modified","additions":56,"deletions":46,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_h2.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_h2.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_h2.sql?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -26,90 +26,104 @@\n -- org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n \n CREATE TABLE QRTZ_CALENDARS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   CALENDAR_NAME VARCHAR (200)  NOT NULL ,\n   CALENDAR IMAGE NOT NULL\n );\n \n CREATE TABLE QRTZ_CRON_TRIGGERS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   TRIGGER_NAME VARCHAR (200)  NOT NULL ,\n   TRIGGER_GROUP VARCHAR (200)  NOT NULL ,\n   CRON_EXPRESSION VARCHAR (120)  NOT NULL ,\n   TIME_ZONE_ID VARCHAR (80) \n );\n \n CREATE TABLE QRTZ_FIRED_TRIGGERS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   ENTRY_ID VARCHAR (95)  NOT NULL ,\n   TRIGGER_NAME VARCHAR (200)  NOT NULL ,\n   TRIGGER_GROUP VARCHAR (200)  NOT NULL ,\n-  IS_VOLATILE BOOLEAN  NOT NULL ,\n   INSTANCE_NAME VARCHAR (200)  NOT NULL ,\n   FIRED_TIME BIGINT NOT NULL ,\n   PRIORITY INTEGER NOT NULL ,\n   STATE VARCHAR (16)  NOT NULL,\n   JOB_NAME VARCHAR (200)  NULL ,\n   JOB_GROUP VARCHAR (200)  NULL ,\n-  IS_STATEFUL BOOLEAN  NULL ,\n+  IS_NONCONCURRENT BOOLEAN  NULL ,\n   REQUESTS_RECOVERY BOOLEAN  NULL \n );\n \n CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   TRIGGER_GROUP VARCHAR (200)  NOT NULL \n );\n \n CREATE TABLE QRTZ_SCHEDULER_STATE (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   INSTANCE_NAME VARCHAR (200)  NOT NULL ,\n   LAST_CHECKIN_TIME BIGINT NOT NULL ,\n   CHECKIN_INTERVAL BIGINT NOT NULL\n );\n \n CREATE TABLE QRTZ_LOCKS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   LOCK_NAME VARCHAR (40)  NOT NULL \n );\n \n CREATE TABLE QRTZ_JOB_DETAILS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   JOB_NAME VARCHAR (200)  NOT NULL ,\n   JOB_GROUP VARCHAR (200)  NOT NULL ,\n   DESCRIPTION VARCHAR (250) NULL ,\n   JOB_CLASS_NAME VARCHAR (250)  NOT NULL ,\n   IS_DURABLE BOOLEAN  NOT NULL ,\n-  IS_VOLATILE BOOLEAN  NOT NULL ,\n-  IS_STATEFUL BOOLEAN  NOT NULL ,\n+  IS_NONCONCURRENT BOOLEAN  NOT NULL ,\n+  IS_UPDATE_DATA BOOLEAN  NOT NULL ,\n   REQUESTS_RECOVERY BOOLEAN  NOT NULL ,\n   JOB_DATA IMAGE NULL\n );\n \n-CREATE TABLE QRTZ_JOB_LISTENERS (\n-  JOB_NAME VARCHAR (200)  NOT NULL ,\n-  JOB_GROUP VARCHAR (200)  NOT NULL ,\n-  JOB_LISTENER VARCHAR (200)  NOT NULL\n-);\n-\n CREATE TABLE QRTZ_SIMPLE_TRIGGERS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   TRIGGER_NAME VARCHAR (200)  NOT NULL ,\n   TRIGGER_GROUP VARCHAR (200)  NOT NULL ,\n   REPEAT_COUNT BIGINT NOT NULL ,\n   REPEAT_INTERVAL BIGINT NOT NULL ,\n   TIMES_TRIGGERED BIGINT NOT NULL\n );\n \n-CREATE TABLE QRTZ_BLOB_TRIGGERS (\n-  TRIGGER_NAME VARCHAR (200)  NOT NULL ,\n-  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,\n-  BLOB_DATA IMAGE NULL\n+CREATE TABLE qrtz_simprop_triggers\n+  (          \n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n+    TRIGGER_GROUP VARCHAR(200) NOT NULL,\n+    STR_PROP_1 VARCHAR(512) NULL,\n+    STR_PROP_2 VARCHAR(512) NULL,\n+    STR_PROP_3 VARCHAR(512) NULL,\n+    INT_PROP_1 INTEGER NULL,\n+    INT_PROP_2 INTEGER NULL,\n+    LONG_PROP_1 BIGINT NULL,\n+    LONG_PROP_2 BIGINT NULL,\n+    DEC_PROP_1 NUMERIC(13,4) NULL,\n+    DEC_PROP_2 NUMERIC(13,4) NULL,\n+    BOOL_PROP_1 BOOLEAN NULL,\n+    BOOL_PROP_2 BOOLEAN NULL,\n );\n \n-CREATE TABLE QRTZ_TRIGGER_LISTENERS (\n+CREATE TABLE QRTZ_BLOB_TRIGGERS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   TRIGGER_NAME VARCHAR (200)  NOT NULL ,\n   TRIGGER_GROUP VARCHAR (200)  NOT NULL ,\n-  TRIGGER_LISTENER VARCHAR (200)  NOT NULL\n+  BLOB_DATA IMAGE NULL\n );\n \n CREATE TABLE QRTZ_TRIGGERS (\n+  SCHED_NAME VARCHAR(120) NOT NULL,\n   TRIGGER_NAME VARCHAR (200)  NOT NULL ,\n   TRIGGER_GROUP VARCHAR (200)  NOT NULL ,\n   JOB_NAME VARCHAR (200)  NOT NULL ,\n   JOB_GROUP VARCHAR (200)  NOT NULL ,\n-  IS_VOLATILE BOOLEAN  NOT NULL ,\n   DESCRIPTION VARCHAR (250) NULL ,\n   NEXT_FIRE_TIME BIGINT NULL ,\n   PREV_FIRE_TIME BIGINT NULL ,\n@@ -126,130 +140,126 @@ CREATE TABLE QRTZ_TRIGGERS (\n ALTER TABLE QRTZ_CALENDARS  ADD\n   CONSTRAINT PK_QRTZ_CALENDARS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     CALENDAR_NAME\n   );\n \n ALTER TABLE QRTZ_CRON_TRIGGERS  ADD\n   CONSTRAINT PK_QRTZ_CRON_TRIGGERS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   );\n \n ALTER TABLE QRTZ_FIRED_TRIGGERS  ADD\n   CONSTRAINT PK_QRTZ_FIRED_TRIGGERS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     ENTRY_ID\n   );\n \n ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS  ADD\n   CONSTRAINT PK_QRTZ_PAUSED_TRIGGER_GRPS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     TRIGGER_GROUP\n   );\n \n ALTER TABLE QRTZ_SCHEDULER_STATE  ADD\n   CONSTRAINT PK_QRTZ_SCHEDULER_STATE PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     INSTANCE_NAME\n   );\n \n ALTER TABLE QRTZ_LOCKS  ADD\n   CONSTRAINT PK_QRTZ_LOCKS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     LOCK_NAME\n   );\n \n ALTER TABLE QRTZ_JOB_DETAILS  ADD\n   CONSTRAINT PK_QRTZ_JOB_DETAILS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     JOB_NAME,\n     JOB_GROUP\n   );\n \n-ALTER TABLE QRTZ_JOB_LISTENERS  ADD\n-  CONSTRAINT PK_QRTZ_JOB_LISTENERS PRIMARY KEY  \n-  (\n-    JOB_NAME,\n-    JOB_GROUP,\n-    JOB_LISTENER\n-  );\n-\n ALTER TABLE QRTZ_SIMPLE_TRIGGERS  ADD\n   CONSTRAINT PK_QRTZ_SIMPLE_TRIGGERS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   );\n \n-ALTER TABLE QRTZ_TRIGGER_LISTENERS  ADD\n-  CONSTRAINT PK_QRTZ_TRIGGER_LISTENERS PRIMARY KEY  \n+ALTER TABLE QRTZ_SIMPROP_TRIGGERS  ADD\n+  CONSTRAINT PK_QRTZ_SIMPROP_TRIGGERS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n-    TRIGGER_GROUP,\n-    TRIGGER_LISTENER\n+    TRIGGER_GROUP\n   );\n \n ALTER TABLE QRTZ_TRIGGERS  ADD\n   CONSTRAINT PK_QRTZ_TRIGGERS PRIMARY KEY  \n   (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   );\n \n ALTER TABLE QRTZ_CRON_TRIGGERS ADD\n   CONSTRAINT FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS FOREIGN KEY\n   (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   ) REFERENCES QRTZ_TRIGGERS (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   ) ON DELETE CASCADE;\n \n-ALTER TABLE QRTZ_JOB_LISTENERS ADD\n-  CONSTRAINT FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS FOREIGN KEY\n-  (\n-    JOB_NAME,\n-    JOB_GROUP\n-  ) REFERENCES QRTZ_JOB_DETAILS (\n-    JOB_NAME,\n-    JOB_GROUP\n-  ) ON DELETE CASCADE;\n \n ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD\n   CONSTRAINT FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS FOREIGN KEY\n   (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   ) REFERENCES QRTZ_TRIGGERS (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   ) ON DELETE CASCADE;\n \n-ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD\n-  CONSTRAINT FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS FOREIGN KEY\n+ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD\n+  CONSTRAINT FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS FOREIGN KEY\n   (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   ) REFERENCES QRTZ_TRIGGERS (\n+    SCHED_NAME,\n     TRIGGER_NAME,\n     TRIGGER_GROUP\n   ) ON DELETE CASCADE;\n \n+\n ALTER TABLE QRTZ_TRIGGERS ADD\n   CONSTRAINT FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS FOREIGN KEY\n   (\n+    SCHED_NAME,\n     JOB_NAME,\n     JOB_GROUP\n   ) REFERENCES QRTZ_JOB_DETAILS (\n+    SCHED_NAME,\n     JOB_NAME,\n     JOB_GROUP\n   );\n-\n-INSERT INTO QRTZ_LOCKS VALUES('TRIGGER_ACCESS');\n-INSERT INTO QRTZ_LOCKS VALUES('JOB_ACCESS');\n-INSERT INTO QRTZ_LOCKS VALUES('CALENDAR_ACCESS');\n-INSERT INTO QRTZ_LOCKS VALUES('STATE_ACCESS');\n-INSERT INTO QRTZ_LOCKS VALUES('MISFIRE_ACCESS');\n+  \n COMMIT;"},{"sha":"2cc96bd85f0fe842546c1acdd8ad96b9035da457","filename":"core/src/main/resources/quartz/tables_hsqldb.sql","status":"removed","additions":0,"deletions":156,"changes":156,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9e2a00dd0029a17e055b4960b25b70ac268472e/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_hsqldb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9e2a00dd0029a17e055b4960b25b70ac268472e/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_hsqldb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_hsqldb.sql?ref=a9e2a00dd0029a17e055b4960b25b70ac268472e","patch":"@@ -1,156 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n-CREATE TABLE qrtz_job_details\n-(\n-JOB_NAME VARCHAR(200) NOT NULL,\n-JOB_GROUP VARCHAR(200) NOT NULL,\n-DESCRIPTION VARCHAR(250) NULL,\n-JOB_CLASS_NAME VARCHAR(250) NOT NULL,\n-IS_DURABLE BOOLEAN NOT NULL,\n-IS_VOLATILE BOOLEAN NOT NULL,\n-IS_STATEFUL BOOLEAN NOT NULL,\n-REQUESTS_RECOVERY BOOLEAN NOT NULL,\n-JOB_DATA LONGVARBINARY NULL,\n-PRIMARY KEY (JOB_NAME,JOB_GROUP)\n-);\n-\n-CREATE TABLE qrtz_job_listeners\n-(\n-JOB_NAME VARCHAR(200) NOT NULL,\n-JOB_GROUP VARCHAR(200) NOT NULL,\n-JOB_LISTENER VARCHAR(200) NOT NULL,\n-PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),\n-FOREIGN KEY (JOB_NAME,JOB_GROUP)\n-REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)\n-);\n-\n-CREATE TABLE qrtz_triggers\n-(\n-TRIGGER_NAME VARCHAR(200) NOT NULL,\n-TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-JOB_NAME VARCHAR(200) NOT NULL,\n-JOB_GROUP VARCHAR(200) NOT NULL,\n-IS_VOLATILE BOOLEAN NOT NULL,\n-DESCRIPTION VARCHAR(250) NULL,\n-NEXT_FIRE_TIME NUMERIC(13) NULL,\n-PREV_FIRE_TIME NUMERIC(13) NULL,\n-PRIORITY INTEGER NULL,\n-TRIGGER_STATE VARCHAR(16) NOT NULL,\n-TRIGGER_TYPE VARCHAR(8) NOT NULL,\n-START_TIME NUMERIC(13) NOT NULL,\n-END_TIME NUMERIC(13) NULL,\n-CALENDAR_NAME VARCHAR(200) NULL,\n-MISFIRE_INSTR NUMERIC(2) NULL,\n-JOB_DATA LONGVARBINARY NULL,\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-FOREIGN KEY (JOB_NAME,JOB_GROUP)\n-REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)\n-);\n-\n-CREATE TABLE qrtz_simple_triggers\n-(\n-TRIGGER_NAME VARCHAR(200) NOT NULL,\n-TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-REPEAT_COUNT NUMERIC(7) NOT NULL,\n-REPEAT_INTERVAL NUMERIC(12) NOT NULL,\n-TIMES_TRIGGERED NUMERIC(10) NOT NULL,\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n-);\n-\n-CREATE TABLE qrtz_cron_triggers\n-(\n-TRIGGER_NAME VARCHAR(200) NOT NULL,\n-TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-CRON_EXPRESSION VARCHAR(120) NOT NULL,\n-TIME_ZONE_ID VARCHAR(80),\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n-);\n-\n-CREATE TABLE qrtz_blob_triggers\n-(\n-TRIGGER_NAME VARCHAR(200) NOT NULL,\n-TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-LONGVARBINARY_DATA LONGVARBINARY NULL,\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n-);\n-\n-CREATE TABLE qrtz_trigger_listeners\n-(\n-TRIGGER_NAME VARCHAR(200) NOT NULL,\n-TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-TRIGGER_LISTENER VARCHAR(200) NOT NULL,\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),\n-FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n-);\n-\n-CREATE TABLE qrtz_calendars\n-(\n-CALENDAR_NAME VARCHAR(200) NOT NULL,\n-CALENDAR LONGVARBINARY NOT NULL,\n-PRIMARY KEY (CALENDAR_NAME)\n-);\n-\n-CREATE TABLE qrtz_paused_trigger_grps\n-(\n-TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-PRIMARY KEY (TRIGGER_GROUP)\n-);\n-\n-CREATE TABLE qrtz_fired_triggers\n-(\n-ENTRY_ID VARCHAR(95) NOT NULL,\n-TRIGGER_NAME VARCHAR(200) NOT NULL,\n-TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-IS_VOLATILE BOOLEAN NOT NULL,\n-INSTANCE_NAME VARCHAR(200) NOT NULL,\n-FIRED_TIME NUMERIC(13) NOT NULL,\n-PRIORITY INTEGER NOT NULL,\n-STATE VARCHAR(16) NOT NULL,\n-JOB_NAME VARCHAR(200) NULL,\n-JOB_GROUP VARCHAR(200) NULL,\n-IS_STATEFUL BOOLEAN NULL,\n-REQUESTS_RECOVERY BOOLEAN NULL,\n-PRIMARY KEY (ENTRY_ID)\n-);\n-\n-CREATE TABLE qrtz_scheduler_state\n-(\n-INSTANCE_NAME VARCHAR(200) NOT NULL,\n-LAST_CHECKIN_TIME NUMERIC(13) NOT NULL,\n-CHECKIN_INTERVAL NUMERIC(13) NOT NULL,\n-PRIMARY KEY (INSTANCE_NAME)\n-);\n-\n-CREATE TABLE qrtz_locks\n-(\n-LOCK_NAME VARCHAR(40) NOT NULL,\n-PRIMARY KEY (LOCK_NAME)\n-);\n-\n-INSERT INTO qrtz_locks values('TRIGGER_ACCESS');\n-INSERT INTO qrtz_locks values('JOB_ACCESS');\n-INSERT INTO qrtz_locks values('CALENDAR_ACCESS');\n-INSERT INTO qrtz_locks values('STATE_ACCESS');\n-INSERT INTO qrtz_locks values('MISFIRE_ACCESS');"},{"sha":"ad0705f21148ba2de2e44b5935267a23cfff6b91","filename":"core/src/main/resources/quartz/tables_mysql.sql","status":"modified","additions":73,"deletions":52,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mysql.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mysql.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mysql.sql?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -15,37 +15,50 @@\n -- specific language governing permissions and limitations\n -- under the License.\n \n+#\n+# Quartz seems to work best with the driver mm.mysql-2.0.7-bin.jar\n+#\n+# PLEASE consider using mysql with innodb tables to avoid locking issues\n+#\n+# In your Quartz properties file, you'll need to set \n+# org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+#\n+\n+DROP TABLE IF EXISTS QRTZ_FIRED_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;\n+DROP TABLE IF EXISTS QRTZ_SCHEDULER_STATE;\n+DROP TABLE IF EXISTS QRTZ_LOCKS;\n+DROP TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_JOB_DETAILS;\n+DROP TABLE IF EXISTS QRTZ_CALENDARS;\n+\n+\n CREATE TABLE QRTZ_JOB_DETAILS\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     JOB_NAME  VARCHAR(200) NOT NULL,\n     JOB_GROUP VARCHAR(200) NOT NULL,\n     DESCRIPTION VARCHAR(250) NULL,\n     JOB_CLASS_NAME   VARCHAR(250) NOT NULL,\n     IS_DURABLE VARCHAR(1) NOT NULL,\n-    IS_VOLATILE VARCHAR(1) NOT NULL,\n-    IS_STATEFUL VARCHAR(1) NOT NULL,\n+    IS_NONCONCURRENT VARCHAR(1) NOT NULL,\n+    IS_UPDATE_DATA VARCHAR(1) NOT NULL,\n     REQUESTS_RECOVERY VARCHAR(1) NOT NULL,\n     JOB_DATA BLOB NULL,\n-    PRIMARY KEY (JOB_NAME,JOB_GROUP)\n-);\n-\n-CREATE TABLE QRTZ_JOB_LISTENERS\n-  (\n-    JOB_NAME  VARCHAR(200) NOT NULL,\n-    JOB_GROUP VARCHAR(200) NOT NULL,\n-    JOB_LISTENER VARCHAR(200) NOT NULL,\n-    PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),\n-    FOREIGN KEY (JOB_NAME,JOB_GROUP)\n-        REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)\n+    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)\n );\n \n CREATE TABLE QRTZ_TRIGGERS\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n     JOB_NAME  VARCHAR(200) NOT NULL,\n     JOB_GROUP VARCHAR(200) NOT NULL,\n-    IS_VOLATILE VARCHAR(1) NOT NULL,\n     DESCRIPTION VARCHAR(250) NULL,\n     NEXT_FIRE_TIME BIGINT(13) NULL,\n     PREV_FIRE_TIME BIGINT(13) NULL,\n@@ -57,107 +70,115 @@ CREATE TABLE QRTZ_TRIGGERS\n     CALENDAR_NAME VARCHAR(200) NULL,\n     MISFIRE_INSTR SMALLINT(2) NULL,\n     JOB_DATA BLOB NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (JOB_NAME,JOB_GROUP)\n-        REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)\n+        REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)\n );\n \n CREATE TABLE QRTZ_SIMPLE_TRIGGERS\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n     REPEAT_COUNT BIGINT(7) NOT NULL,\n     REPEAT_INTERVAL BIGINT(12) NOT NULL,\n     TIMES_TRIGGERED BIGINT(10) NOT NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-        REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n \n CREATE TABLE QRTZ_CRON_TRIGGERS\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n     CRON_EXPRESSION VARCHAR(200) NOT NULL,\n     TIME_ZONE_ID VARCHAR(80),\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-        REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n \n-CREATE TABLE QRTZ_BLOB_TRIGGERS\n-  (\n+CREATE TABLE QRTZ_SIMPROP_TRIGGERS\n+  (          \n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-    BLOB_DATA BLOB NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-        REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    STR_PROP_1 VARCHAR(512) NULL,\n+    STR_PROP_2 VARCHAR(512) NULL,\n+    STR_PROP_3 VARCHAR(512) NULL,\n+    INT_PROP_1 INT NULL,\n+    INT_PROP_2 INT NULL,\n+    LONG_PROP_1 BIGINT NULL,\n+    LONG_PROP_2 BIGINT NULL,\n+    DEC_PROP_1 NUMERIC(13,4) NULL,\n+    DEC_PROP_2 NUMERIC(13,4) NULL,\n+    BOOL_PROP_1 VARCHAR(1) NULL,\n+    BOOL_PROP_2 VARCHAR(1) NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n \n-CREATE TABLE QRTZ_TRIGGER_LISTENERS\n+CREATE TABLE QRTZ_BLOB_TRIGGERS\n   (\n-    TRIGGER_NAME  VARCHAR(200) NOT NULL,\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-    TRIGGER_LISTENER VARCHAR(200) NOT NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-        REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    BLOB_DATA BLOB NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n \n-\n CREATE TABLE QRTZ_CALENDARS\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     CALENDAR_NAME  VARCHAR(200) NOT NULL,\n     CALENDAR BLOB NOT NULL,\n-    PRIMARY KEY (CALENDAR_NAME)\n+    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)\n );\n \n-\n-\n CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_GROUP  VARCHAR(200) NOT NULL, \n-    PRIMARY KEY (TRIGGER_GROUP)\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)\n );\n \n CREATE TABLE QRTZ_FIRED_TRIGGERS\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     ENTRY_ID VARCHAR(95) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-    IS_VOLATILE VARCHAR(1) NOT NULL,\n     INSTANCE_NAME VARCHAR(200) NOT NULL,\n     FIRED_TIME BIGINT(13) NOT NULL,\n     PRIORITY INTEGER NOT NULL,\n     STATE VARCHAR(16) NOT NULL,\n     JOB_NAME VARCHAR(200) NULL,\n     JOB_GROUP VARCHAR(200) NULL,\n-    IS_STATEFUL VARCHAR(1) NULL,\n+    IS_NONCONCURRENT VARCHAR(1) NULL,\n     REQUESTS_RECOVERY VARCHAR(1) NULL,\n-    PRIMARY KEY (ENTRY_ID)\n+    PRIMARY KEY (SCHED_NAME,ENTRY_ID)\n );\n \n CREATE TABLE QRTZ_SCHEDULER_STATE\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     INSTANCE_NAME VARCHAR(200) NOT NULL,\n     LAST_CHECKIN_TIME BIGINT(13) NOT NULL,\n     CHECKIN_INTERVAL BIGINT(13) NOT NULL,\n-    PRIMARY KEY (INSTANCE_NAME)\n+    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)\n );\n \n CREATE TABLE QRTZ_LOCKS\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     LOCK_NAME  VARCHAR(40) NOT NULL, \n-    PRIMARY KEY (LOCK_NAME)\n+    PRIMARY KEY (SCHED_NAME,LOCK_NAME)\n );\n \n \n-INSERT INTO QRTZ_LOCKS values('TRIGGER_ACCESS');\n-INSERT INTO QRTZ_LOCKS values('JOB_ACCESS');\n-INSERT INTO QRTZ_LOCKS values('CALENDAR_ACCESS');\n-INSERT INTO QRTZ_LOCKS values('STATE_ACCESS');\n-INSERT INTO QRTZ_LOCKS values('MISFIRE_ACCESS');\n-\n-\n commit;"},{"sha":"2f48a524391ba04e0f4845b327b97b08b5664474","filename":"core/src/main/resources/quartz/tables_mysql_innodb.sql","status":"modified","additions":110,"deletions":63,"changes":173,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mysql_innodb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mysql_innodb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mysql_innodb.sql?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -15,35 +15,46 @@\n -- specific language governing permissions and limitations\n -- under the License.\n \n+#\n+# In your Quartz properties file, you'll need to set \n+# org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+#\n+#\n+# By: Ron Cordell - roncordell\n+#  I didn't see this anywhere, so I thought I'd post it here. This is the script from Quartz to create the tables in a MySQL database, modified to use INNODB instead of MYISAM.\n+\n+DROP TABLE IF EXISTS QRTZ_FIRED_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;\n+DROP TABLE IF EXISTS QRTZ_SCHEDULER_STATE;\n+DROP TABLE IF EXISTS QRTZ_LOCKS;\n+DROP TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_JOB_DETAILS;\n+DROP TABLE IF EXISTS QRTZ_CALENDARS;\n+\n CREATE TABLE QRTZ_JOB_DETAILS(\n+SCHED_NAME VARCHAR(120) NOT NULL,\n JOB_NAME VARCHAR(200) NOT NULL,\n JOB_GROUP VARCHAR(200) NOT NULL,\n DESCRIPTION VARCHAR(250) NULL,\n JOB_CLASS_NAME VARCHAR(250) NOT NULL,\n IS_DURABLE VARCHAR(1) NOT NULL,\n-IS_VOLATILE VARCHAR(1) NOT NULL,\n-IS_STATEFUL VARCHAR(1) NOT NULL,\n+IS_NONCONCURRENT VARCHAR(1) NOT NULL,\n+IS_UPDATE_DATA VARCHAR(1) NOT NULL,\n REQUESTS_RECOVERY VARCHAR(1) NOT NULL,\n JOB_DATA BLOB NULL,\n-PRIMARY KEY (JOB_NAME,JOB_GROUP))\n-ENGINE=InnoDB;\n-\n-CREATE TABLE QRTZ_JOB_LISTENERS (\n-JOB_NAME VARCHAR(200) NOT NULL,\n-JOB_GROUP VARCHAR(200) NOT NULL,\n-JOB_LISTENER VARCHAR(200) NOT NULL,\n-PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),\n-INDEX (JOB_NAME, JOB_GROUP),\n-FOREIGN KEY (JOB_NAME,JOB_GROUP)\n-REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_TRIGGERS (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n TRIGGER_NAME VARCHAR(200) NOT NULL,\n TRIGGER_GROUP VARCHAR(200) NOT NULL,\n JOB_NAME VARCHAR(200) NOT NULL,\n JOB_GROUP VARCHAR(200) NOT NULL,\n-IS_VOLATILE VARCHAR(1) NOT NULL,\n DESCRIPTION VARCHAR(250) NULL,\n NEXT_FIRE_TIME BIGINT(13) NULL,\n PREV_FIRE_TIME BIGINT(13) NULL,\n@@ -55,97 +66,133 @@ END_TIME BIGINT(13) NULL,\n CALENDAR_NAME VARCHAR(200) NULL,\n MISFIRE_INSTR SMALLINT(2) NULL,\n JOB_DATA BLOB NULL,\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-INDEX (JOB_NAME, JOB_GROUP),\n-FOREIGN KEY (JOB_NAME,JOB_GROUP)\n-REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+INDEX (SCHED_NAME,JOB_NAME, JOB_GROUP),\n+FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)\n+REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_SIMPLE_TRIGGERS (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n TRIGGER_NAME VARCHAR(200) NOT NULL,\n TRIGGER_GROUP VARCHAR(200) NOT NULL,\n REPEAT_COUNT BIGINT(7) NOT NULL,\n REPEAT_INTERVAL BIGINT(12) NOT NULL,\n TIMES_TRIGGERED BIGINT(10) NOT NULL,\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-INDEX (TRIGGER_NAME, TRIGGER_GROUP),\n-FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),\n+FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_CRON_TRIGGERS (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n TRIGGER_NAME VARCHAR(200) NOT NULL,\n TRIGGER_GROUP VARCHAR(200) NOT NULL,\n CRON_EXPRESSION VARCHAR(120) NOT NULL,\n TIME_ZONE_ID VARCHAR(80),\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-INDEX (TRIGGER_NAME, TRIGGER_GROUP),\n-FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),\n+FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))\n+TYPE=InnoDB;\n+\n+CREATE TABLE QRTZ_SIMPROP_TRIGGERS\n+  (          \n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n+    TRIGGER_GROUP VARCHAR(200) NOT NULL,\n+    STR_PROP_1 VARCHAR(512) NULL,\n+    STR_PROP_2 VARCHAR(512) NULL,\n+    STR_PROP_3 VARCHAR(512) NULL,\n+    INT_PROP_1 INT NULL,\n+    INT_PROP_2 INT NULL,\n+    LONG_PROP_1 BIGINT NULL,\n+    LONG_PROP_2 BIGINT NULL,\n+    DEC_PROP_1 NUMERIC(13,4) NULL,\n+    DEC_PROP_2 NUMERIC(13,4) NULL,\n+    BOOL_PROP_1 VARCHAR(1) NULL,\n+    BOOL_PROP_2 VARCHAR(1) NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_BLOB_TRIGGERS (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n TRIGGER_NAME VARCHAR(200) NOT NULL,\n TRIGGER_GROUP VARCHAR(200) NOT NULL,\n BLOB_DATA BLOB NULL,\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-INDEX (TRIGGER_NAME, TRIGGER_GROUP),\n-FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))\n-ENGINE=InnoDB;\n-\n-CREATE TABLE QRTZ_TRIGGER_LISTENERS (\n-TRIGGER_NAME VARCHAR(200) NOT NULL,\n-TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-TRIGGER_LISTENER VARCHAR(200) NOT NULL,\n-PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),\n-INDEX (TRIGGER_NAME, TRIGGER_GROUP),\n-FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)\n-REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),\n+FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_CALENDARS (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n CALENDAR_NAME VARCHAR(200) NOT NULL,\n CALENDAR BLOB NOT NULL,\n-PRIMARY KEY (CALENDAR_NAME))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,CALENDAR_NAME))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-PRIMARY KEY (TRIGGER_GROUP))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_FIRED_TRIGGERS (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n ENTRY_ID VARCHAR(95) NOT NULL,\n TRIGGER_NAME VARCHAR(200) NOT NULL,\n TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-IS_VOLATILE VARCHAR(1) NOT NULL,\n INSTANCE_NAME VARCHAR(200) NOT NULL,\n FIRED_TIME BIGINT(13) NOT NULL,\n PRIORITY INTEGER NOT NULL,\n STATE VARCHAR(16) NOT NULL,\n JOB_NAME VARCHAR(200) NULL,\n JOB_GROUP VARCHAR(200) NULL,\n-IS_STATEFUL VARCHAR(1) NULL,\n+IS_NONCONCURRENT VARCHAR(1) NULL,\n REQUESTS_RECOVERY VARCHAR(1) NULL,\n-PRIMARY KEY (ENTRY_ID))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,ENTRY_ID))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_SCHEDULER_STATE (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n INSTANCE_NAME VARCHAR(200) NOT NULL,\n LAST_CHECKIN_TIME BIGINT(13) NOT NULL,\n CHECKIN_INTERVAL BIGINT(13) NOT NULL,\n-PRIMARY KEY (INSTANCE_NAME))\n-ENGINE=InnoDB;\n+PRIMARY KEY (SCHED_NAME,INSTANCE_NAME))\n+TYPE=InnoDB;\n \n CREATE TABLE QRTZ_LOCKS (\n+SCHED_NAME VARCHAR(120) NOT NULL,\n LOCK_NAME VARCHAR(40) NOT NULL,\n-PRIMARY KEY (LOCK_NAME))\n-ENGINE=InnoDB;\n-\n-INSERT INTO QRTZ_LOCKS values('TRIGGER_ACCESS');\n-INSERT INTO QRTZ_LOCKS values('JOB_ACCESS');\n-INSERT INTO QRTZ_LOCKS values('CALENDAR_ACCESS');\n-INSERT INTO QRTZ_LOCKS values('STATE_ACCESS');\n-INSERT INTO QRTZ_LOCKS values('MISFIRE_ACCESS');\n+PRIMARY KEY (SCHED_NAME,LOCK_NAME))\n+TYPE=InnoDB;\n+\n+CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);\n+CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);\n+\n+CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);\n+CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);\n+CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);\n+CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);\n+CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);\n+CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);\n+CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);\n+CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);\n+CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);\n+CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);\n+CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);\n+CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);\n+\n+CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);\n+CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);\n+CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);\n+CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);\n+CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);\n+CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);\n+\n commit; "},{"sha":"43a1f580563f0066b398c393ffc4c45f56bdf66b","filename":"core/src/main/resources/quartz/tables_oracle.sql","status":"modified","additions":108,"deletions":61,"changes":169,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_oracle.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_oracle.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_oracle.sql?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -15,35 +15,62 @@\n -- specific language governing permissions and limitations\n -- under the License.\n \n+--\n+-- A hint submitted by a user: Oracle DB MUST be created as \"shared\" and the \n+-- job_queue_processes parameter  must be greater than 2\n+-- However, these settings are pretty much standard after any\n+-- Oracle install, so most users need not worry about this.\n+--\n+-- Many other users (including the primary author of Quartz) have had success\n+-- runing in dedicated mode, so only consider the above as a hint ;-)\n+--\n+\n+delete from qrtz_fired_triggers;\n+delete from qrtz_simple_triggers;\n+delete from qrtz_simprop_triggers;\n+delete from qrtz_cron_triggers;\n+delete from qrtz_blob_triggers;\n+delete from qrtz_triggers;\n+delete from qrtz_job_details;\n+delete from qrtz_calendars;\n+delete from qrtz_paused_trigger_grps;\n+delete from qrtz_locks;\n+delete from qrtz_scheduler_state;\n+\n+drop table qrtz_calendars;\n+drop table qrtz_fired_triggers;\n+drop table qrtz_blob_triggers;\n+drop table qrtz_cron_triggers;\n+drop table qrtz_simple_triggers;\n+drop table qrtz_simprop_triggers;\n+drop table qrtz_triggers;\n+drop table qrtz_job_details;\n+drop table qrtz_paused_trigger_grps;\n+drop table qrtz_locks;\n+drop table qrtz_scheduler_state;\n+\n+\n CREATE TABLE qrtz_job_details\n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     JOB_NAME  VARCHAR2(200) NOT NULL,\n     JOB_GROUP VARCHAR2(200) NOT NULL,\n     DESCRIPTION VARCHAR2(250) NULL,\n     JOB_CLASS_NAME   VARCHAR2(250) NOT NULL, \n     IS_DURABLE VARCHAR2(1) NOT NULL,\n-    IS_VOLATILE VARCHAR2(1) NOT NULL,\n-    IS_STATEFUL VARCHAR2(1) NOT NULL,\n+    IS_NONCONCURRENT VARCHAR2(1) NOT NULL,\n+    IS_UPDATE_DATA VARCHAR2(1) NOT NULL,\n     REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,\n     JOB_DATA BLOB NULL,\n-    PRIMARY KEY (JOB_NAME,JOB_GROUP)\n-);\n-CREATE TABLE qrtz_job_listeners\n-  (\n-    JOB_NAME  VARCHAR2(200) NOT NULL, \n-    JOB_GROUP VARCHAR2(200) NOT NULL,\n-    JOB_LISTENER VARCHAR2(200) NOT NULL,\n-    PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),\n-    FOREIGN KEY (JOB_NAME,JOB_GROUP) \n-\tREFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)\n+    CONSTRAINT QRTZ_JOB_DETAILS_PK PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)\n );\n CREATE TABLE qrtz_triggers\n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     TRIGGER_NAME VARCHAR2(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR2(200) NOT NULL,\n     JOB_NAME  VARCHAR2(200) NOT NULL, \n     JOB_GROUP VARCHAR2(200) NOT NULL,\n-    IS_VOLATILE VARCHAR2(1) NOT NULL,\n     DESCRIPTION VARCHAR2(250) NULL,\n     NEXT_FIRE_TIME NUMBER(13) NULL,\n     PREV_FIRE_TIME NUMBER(13) NULL,\n@@ -55,108 +82,128 @@ CREATE TABLE qrtz_triggers\n     CALENDAR_NAME VARCHAR2(200) NULL,\n     MISFIRE_INSTR NUMBER(2) NULL,\n     JOB_DATA BLOB NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (JOB_NAME,JOB_GROUP) \n-\tREFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP) \n+    CONSTRAINT QRTZ_TRIGGERS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    CONSTRAINT QRTZ_TRIGGER_TO_JOBS_FK FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) \n+      REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) \n );\n CREATE TABLE qrtz_simple_triggers\n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     TRIGGER_NAME VARCHAR2(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR2(200) NOT NULL,\n     REPEAT_COUNT NUMBER(7) NOT NULL,\n     REPEAT_INTERVAL NUMBER(12) NOT NULL,\n     TIMES_TRIGGERED NUMBER(10) NOT NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) \n-\tREFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    CONSTRAINT QRTZ_SIMPLE_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    CONSTRAINT QRTZ_SIMPLE_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+\tREFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n CREATE TABLE qrtz_cron_triggers\n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     TRIGGER_NAME VARCHAR2(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR2(200) NOT NULL,\n     CRON_EXPRESSION VARCHAR2(120) NOT NULL,\n     TIME_ZONE_ID VARCHAR2(80),\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) \n-\tREFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    CONSTRAINT QRTZ_CRON_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    CONSTRAINT QRTZ_CRON_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+      REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n-CREATE TABLE qrtz_blob_triggers\n-  (\n+CREATE TABLE qrtz_simprop_triggers\n+  (          \n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     TRIGGER_NAME VARCHAR2(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR2(200) NOT NULL,\n-    BLOB_DATA BLOB NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) \n-        REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    STR_PROP_1 VARCHAR2(512) NULL,\n+    STR_PROP_2 VARCHAR2(512) NULL,\n+    STR_PROP_3 VARCHAR2(512) NULL,\n+    INT_PROP_1 NUMBER(10) NULL,\n+    INT_PROP_2 NUMBER(10) NULL,\n+    LONG_PROP_1 NUMBER(13) NULL,\n+    LONG_PROP_2 NUMBER(13) NULL,\n+    DEC_PROP_1 NUMERIC(13,4) NULL,\n+    DEC_PROP_2 NUMERIC(13,4) NULL,\n+    BOOL_PROP_1 VARCHAR2(1) NULL,\n+    BOOL_PROP_2 VARCHAR2(1) NULL,\n+    CONSTRAINT QRTZ_SIMPROP_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    CONSTRAINT QRTZ_SIMPROP_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+      REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n-CREATE TABLE qrtz_trigger_listeners\n+CREATE TABLE qrtz_blob_triggers\n   (\n-    TRIGGER_NAME  VARCHAR2(200) NOT NULL, \n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR2(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR2(200) NOT NULL,\n-    TRIGGER_LISTENER VARCHAR2(200) NOT NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) \n-\tREFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    BLOB_DATA BLOB NULL,\n+    CONSTRAINT QRTZ_BLOB_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    CONSTRAINT QRTZ_ BLOB_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n CREATE TABLE qrtz_calendars\n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     CALENDAR_NAME  VARCHAR2(200) NOT NULL, \n     CALENDAR BLOB NOT NULL,\n-    PRIMARY KEY (CALENDAR_NAME)\n+    CONSTRAINT QRTZ_CALENDARS_PK PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)\n );\n CREATE TABLE qrtz_paused_trigger_grps\n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     TRIGGER_GROUP  VARCHAR2(200) NOT NULL, \n-    PRIMARY KEY (TRIGGER_GROUP)\n+    CONSTRAINT QRTZ_PAUSED_TRIG_GRPS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)\n );\n CREATE TABLE qrtz_fired_triggers \n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     ENTRY_ID VARCHAR2(95) NOT NULL,\n     TRIGGER_NAME VARCHAR2(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR2(200) NOT NULL,\n-    IS_VOLATILE VARCHAR2(1) NOT NULL,\n     INSTANCE_NAME VARCHAR2(200) NOT NULL,\n     FIRED_TIME NUMBER(13) NOT NULL,\n     PRIORITY NUMBER(13) NOT NULL,\n     STATE VARCHAR2(16) NOT NULL,\n     JOB_NAME VARCHAR2(200) NULL,\n     JOB_GROUP VARCHAR2(200) NULL,\n-    IS_STATEFUL VARCHAR2(1) NULL,\n+    IS_NONCONCURRENT VARCHAR2(1) NULL,\n     REQUESTS_RECOVERY VARCHAR2(1) NULL,\n-    PRIMARY KEY (ENTRY_ID)\n+    CONSTRAINT QRTZ_FIRED_TRIGGER_PK PRIMARY KEY (SCHED_NAME,ENTRY_ID)\n );\n CREATE TABLE qrtz_scheduler_state \n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     INSTANCE_NAME VARCHAR2(200) NOT NULL,\n     LAST_CHECKIN_TIME NUMBER(13) NOT NULL,\n     CHECKIN_INTERVAL NUMBER(13) NOT NULL,\n-    PRIMARY KEY (INSTANCE_NAME)\n+    CONSTRAINT QRTZ_SCHEDULER_STATE_PK PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)\n );\n CREATE TABLE qrtz_locks\n   (\n+    SCHED_NAME VARCHAR2(120) NOT NULL,\n     LOCK_NAME  VARCHAR2(40) NOT NULL, \n-    PRIMARY KEY (LOCK_NAME)\n+    CONSTRAINT QRTZ_LOCKS_PK PRIMARY KEY (SCHED_NAME,LOCK_NAME)\n );\n-INSERT INTO qrtz_locks values('TRIGGER_ACCESS');\n-INSERT INTO qrtz_locks values('JOB_ACCESS');\n-INSERT INTO qrtz_locks values('CALENDAR_ACCESS');\n-INSERT INTO qrtz_locks values('STATE_ACCESS');\n-INSERT INTO qrtz_locks values('MISFIRE_ACCESS');\n-create index idx_qrtz_j_req_recovery on qrtz_job_details(REQUESTS_RECOVERY);\n-create index idx_qrtz_t_next_fire_time on qrtz_triggers(NEXT_FIRE_TIME);\n-create index idx_qrtz_t_state on qrtz_triggers(TRIGGER_STATE);\n-create index idx_qrtz_t_nft_st on qrtz_triggers(NEXT_FIRE_TIME,TRIGGER_STATE);\n-create index idx_qrtz_t_volatile on qrtz_triggers(IS_VOLATILE);\n-create index idx_qrtz_ft_trig_name on qrtz_fired_triggers(TRIGGER_NAME);\n-create index idx_qrtz_ft_trig_group on qrtz_fired_triggers(TRIGGER_GROUP);\n-create index idx_qrtz_ft_trig_nm_gp on qrtz_fired_triggers(TRIGGER_NAME,TRIGGER_GROUP);\n-create index idx_qrtz_ft_trig_volatile on qrtz_fired_triggers(IS_VOLATILE);\n-create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(INSTANCE_NAME);\n-create index idx_qrtz_ft_job_name on qrtz_fired_triggers(JOB_NAME);\n-create index idx_qrtz_ft_job_group on qrtz_fired_triggers(JOB_GROUP);\n-create index idx_qrtz_ft_job_stateful on qrtz_fired_triggers(IS_STATEFUL);\n-create index idx_qrtz_ft_job_req_recovery on qrtz_fired_triggers(REQUESTS_RECOVERY);\n \n+create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);\n+create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);\n+\n+create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);\n+create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);\n+create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);\n+create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);\n+create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);\n+create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);\n+create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);\n+create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);\n+create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);\n+create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);\n+create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);\n+create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);\n+\n+create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);\n+create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);\n+create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);\n+create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);\n+create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);\n+create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);\n \n \n-commit;"},{"sha":"d67b7012f9de2174bead0f2384035d4afc14a867","filename":"core/src/main/resources/quartz/tables_postgres.sql","status":"modified","additions":90,"deletions":63,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_postgres.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_postgres.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_postgres.sql?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -15,37 +15,45 @@\n -- specific language governing permissions and limitations\n -- under the License.\n \n+-- Thanks to Patrick Lightbody for submitting this...\n+--\n+-- In your Quartz properties file, you'll need to set \n+-- org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+\n+drop table qrtz_fired_triggers;\n+DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;\n+DROP TABLE QRTZ_SCHEDULER_STATE;\n+DROP TABLE QRTZ_LOCKS;\n+drop table qrtz_simple_triggers;\n+drop table qrtz_cron_triggers;\n+drop table qrtz_simprop_triggers;\n+DROP TABLE QRTZ_BLOB_TRIGGERS;\n+drop table qrtz_triggers;\n+drop table qrtz_job_details;\n+drop table qrtz_calendars;\n+\n CREATE TABLE qrtz_job_details\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     JOB_NAME  VARCHAR(200) NOT NULL,\n     JOB_GROUP VARCHAR(200) NOT NULL,\n     DESCRIPTION VARCHAR(250) NULL,\n     JOB_CLASS_NAME   VARCHAR(250) NOT NULL, \n     IS_DURABLE BOOL NOT NULL,\n-    IS_VOLATILE BOOL NOT NULL,\n-    IS_STATEFUL BOOL NOT NULL,\n+    IS_NONCONCURRENT BOOL NOT NULL,\n+    IS_UPDATE_DATA BOOL NOT NULL,\n     REQUESTS_RECOVERY BOOL NOT NULL,\n     JOB_DATA BYTEA NULL,\n-    PRIMARY KEY (JOB_NAME,JOB_GROUP)\n-);\n-\n-CREATE TABLE qrtz_job_listeners\n-  (\n-    JOB_NAME  VARCHAR(200) NOT NULL, \n-    JOB_GROUP VARCHAR(200) NOT NULL,\n-    JOB_LISTENER VARCHAR(200) NOT NULL,\n-    PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),\n-    FOREIGN KEY (JOB_NAME,JOB_GROUP) \n-\tREFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP) \n+    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)\n );\n \n CREATE TABLE qrtz_triggers\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n     JOB_NAME  VARCHAR(200) NOT NULL, \n     JOB_GROUP VARCHAR(200) NOT NULL,\n-    IS_VOLATILE BOOL NOT NULL,\n     DESCRIPTION VARCHAR(250) NULL,\n     NEXT_FIRE_TIME BIGINT NULL,\n     PREV_FIRE_TIME BIGINT NULL,\n@@ -57,120 +65,139 @@ CREATE TABLE qrtz_triggers\n     CALENDAR_NAME VARCHAR(200) NULL,\n     MISFIRE_INSTR SMALLINT NULL,\n     JOB_DATA BYTEA NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (JOB_NAME,JOB_GROUP) \n-\tREFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP) \n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) \n+\tREFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) \n );\n \n CREATE TABLE qrtz_simple_triggers\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n     REPEAT_COUNT BIGINT NOT NULL,\n     REPEAT_INTERVAL BIGINT NOT NULL,\n     TIMES_TRIGGERED BIGINT NOT NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) \n-\tREFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+\tREFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n \n CREATE TABLE qrtz_cron_triggers\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n     CRON_EXPRESSION VARCHAR(120) NOT NULL,\n     TIME_ZONE_ID VARCHAR(80),\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) \n-\tREFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+\tREFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n \n-CREATE TABLE qrtz_blob_triggers\n-  (\n+CREATE TABLE qrtz_simprop_triggers\n+  (          \n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-    BLOB_DATA BYTEA NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) \n-        REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    STR_PROP_1 VARCHAR(512) NULL,\n+    STR_PROP_2 VARCHAR(512) NULL,\n+    STR_PROP_3 VARCHAR(512) NULL,\n+    INT_PROP_1 INT NULL,\n+    INT_PROP_2 INT NULL,\n+    LONG_PROP_1 BIGINT NULL,\n+    LONG_PROP_2 BIGINT NULL,\n+    DEC_PROP_1 NUMERIC(13,4) NULL,\n+    DEC_PROP_2 NUMERIC(13,4) NULL,\n+    BOOL_PROP_1 BOOL NULL,\n+    BOOL_PROP_2 BOOL NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n \n-CREATE TABLE qrtz_trigger_listeners\n+CREATE TABLE qrtz_blob_triggers\n   (\n-    TRIGGER_NAME  VARCHAR(200) NOT NULL, \n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-    TRIGGER_LISTENER VARCHAR(200) NOT NULL,\n-    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),\n-    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) \n-\tREFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)\n+    BLOB_DATA BYTEA NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n );\n \n-\n CREATE TABLE qrtz_calendars\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     CALENDAR_NAME  VARCHAR(200) NOT NULL, \n     CALENDAR BYTEA NOT NULL,\n-    PRIMARY KEY (CALENDAR_NAME)\n+    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)\n );\n \n \n CREATE TABLE qrtz_paused_trigger_grps\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     TRIGGER_GROUP  VARCHAR(200) NOT NULL, \n-    PRIMARY KEY (TRIGGER_GROUP)\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)\n );\n \n CREATE TABLE qrtz_fired_triggers \n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     ENTRY_ID VARCHAR(95) NOT NULL,\n     TRIGGER_NAME VARCHAR(200) NOT NULL,\n     TRIGGER_GROUP VARCHAR(200) NOT NULL,\n-    IS_VOLATILE BOOL NOT NULL,\n     INSTANCE_NAME VARCHAR(200) NOT NULL,\n     FIRED_TIME BIGINT NOT NULL,\n     PRIORITY INTEGER NOT NULL,\n     STATE VARCHAR(16) NOT NULL,\n     JOB_NAME VARCHAR(200) NULL,\n     JOB_GROUP VARCHAR(200) NULL,\n-    IS_STATEFUL BOOL NULL,\n+    IS_NONCONCURRENT BOOL NULL,\n     REQUESTS_RECOVERY BOOL NULL,\n-    PRIMARY KEY (ENTRY_ID)\n+    PRIMARY KEY (SCHED_NAME,ENTRY_ID)\n );\n \n CREATE TABLE qrtz_scheduler_state \n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     INSTANCE_NAME VARCHAR(200) NOT NULL,\n     LAST_CHECKIN_TIME BIGINT NOT NULL,\n     CHECKIN_INTERVAL BIGINT NOT NULL,\n-    PRIMARY KEY (INSTANCE_NAME)\n+    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)\n );\n \n CREATE TABLE qrtz_locks\n   (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n     LOCK_NAME  VARCHAR(40) NOT NULL, \n-    PRIMARY KEY (LOCK_NAME)\n+    PRIMARY KEY (SCHED_NAME,LOCK_NAME)\n );\n \n+create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);\n+create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);\n+\n+create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);\n+create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);\n+create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);\n+create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);\n+create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);\n+create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);\n+create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);\n+create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);\n+create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);\n+create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);\n+create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);\n+create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);\n+\n+create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);\n+create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);\n+create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);\n+create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);\n+create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);\n+create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);\n \n-INSERT INTO qrtz_locks values('TRIGGER_ACCESS');\n-INSERT INTO qrtz_locks values('JOB_ACCESS');\n-INSERT INTO qrtz_locks values('CALENDAR_ACCESS');\n-INSERT INTO qrtz_locks values('STATE_ACCESS');\n-INSERT INTO qrtz_locks values('MISFIRE_ACCESS');\n-\n-create index idx_qrtz_j_req_recovery on qrtz_job_details(REQUESTS_RECOVERY);\n-create index idx_qrtz_t_next_fire_time on qrtz_triggers(NEXT_FIRE_TIME);\n-create index idx_qrtz_t_state on qrtz_triggers(TRIGGER_STATE);\n-create index idx_qrtz_t_nft_st on qrtz_triggers(NEXT_FIRE_TIME,TRIGGER_STATE);\n-create index idx_qrtz_t_volatile on qrtz_triggers(IS_VOLATILE);\n-create index idx_qrtz_ft_trig_name on qrtz_fired_triggers(TRIGGER_NAME);\n-create index idx_qrtz_ft_trig_group on qrtz_fired_triggers(TRIGGER_GROUP);\n-create index idx_qrtz_ft_trig_nm_gp on qrtz_fired_triggers(TRIGGER_NAME,TRIGGER_GROUP);\n-create index idx_qrtz_ft_trig_volatile on qrtz_fired_triggers(IS_VOLATILE);\n-create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(INSTANCE_NAME);\n-create index idx_qrtz_ft_job_name on qrtz_fired_triggers(JOB_NAME);\n-create index idx_qrtz_ft_job_group on qrtz_fired_triggers(JOB_GROUP);\n-create index idx_qrtz_ft_job_stateful on qrtz_fired_triggers(IS_STATEFUL);\n-create index idx_qrtz_ft_job_req_recovery on qrtz_fired_triggers(REQUESTS_RECOVERY);\n \n commit;"},{"sha":"b73991d850577acf4dd5cd77dce043cfd7155056","filename":"core/src/main/resources/quartz/tables_sqlServer.sql","status":"added","additions":365,"deletions":0,"changes":365,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_sqlServer.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_sqlServer.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_sqlServer.sql?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -0,0 +1,365 @@\n+-- Licensed to the Apache Software Foundation (ASF) under one\n+-- or more contributor license agreements.  See the NOTICE file\n+-- distributed with this work for additional information\n+-- regarding copyright ownership.  The ASF licenses this file\n+-- to you under the Apache License, Version 2.0 (the\n+-- \"License\"); you may not use this file except in compliance\n+-- with the License.  You may obtain a copy of the License at\n+--\n+--   http://www.apache.org/licenses/LICENSE-2.0\n+--\n+-- Unless required by applicable law or agreed to in writing,\n+-- software distributed under the License is distributed on an\n+-- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+-- KIND, either express or implied.  See the License for the\n+-- specific language governing permissions and limitations\n+-- under the License.\n+\n+--# thanks to George Papastamatopoulos for submitting this ... and Marko Lahma for\n+--# updating it.\n+--#\n+--# In your Quartz properties file, you'll need to set \n+--# org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.MSSQLDelegate\n+--#\n+--# you shouse enter your DB instance's name on the next line in place of \"enter_db_name_here\"\n+--#\n+--#\n+--# From a helpful (but anonymous) Quartz user:\n+--#\n+--# Regarding this error message:  \n+--#\n+--#     [Microsoft][SQLServer 2000 Driver for JDBC]Can't start a cloned connection while in manual transaction mode.\n+--#\n+--#\n+--#     I added \"SelectMethod=cursor;\" to my Connection URL in the config file. \n+--#     It Seems to work, hopefully no side effects.\n+--#\n+--#\t\texample:\n+--#\t\t\"jdbc:microsoft:sqlserver://dbmachine:1433;SelectMethod=cursor\"; \n+--#\n+--# Another user has pointed out that you will probably need to use the \n+--# JTDS driver\n+--#\n+\n+USE [enter_db_name_here]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n+ALTER TABLE [dbo].[QRTZ_TRIGGERS] DROP CONSTRAINT FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n+ALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] DROP CONSTRAINT FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n+ALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] DROP CONSTRAINT FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n+ALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] DROP CONSTRAINT FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_CALENDARS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_CALENDARS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_CRON_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_CRON_TRIGGERS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_BLOB_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_BLOB_TRIGGERS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_FIRED_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_FIRED_TRIGGERS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_PAUSED_TRIGGER_GRPS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_SCHEDULER_STATE]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_SCHEDULER_STATE]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_LOCKS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_LOCKS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_JOB_DETAILS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_SIMPLE_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_SIMPROP_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS]\n+GO\n+\n+IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n+DROP TABLE [dbo].[QRTZ_TRIGGERS]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_CALENDARS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [CALENDAR_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [CALENDAR] [IMAGE] NOT NULL\n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_CRON_TRIGGERS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n+  [CRON_EXPRESSION] [VARCHAR] (120)  NOT NULL ,\n+  [TIME_ZONE_ID] [VARCHAR] (80) \n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_FIRED_TRIGGERS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [ENTRY_ID] [VARCHAR] (95)  NOT NULL ,\n+  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n+  [INSTANCE_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [FIRED_TIME] [BIGINT] NOT NULL ,\n+  [PRIORITY] [INTEGER] NOT NULL ,\n+  [STATE] [VARCHAR] (16)  NOT NULL,\n+  [JOB_NAME] [VARCHAR] (200)  NULL ,\n+  [JOB_GROUP] [VARCHAR] (200)  NULL ,\n+  [IS_NONCONCURRENT] [VARCHAR] (1)  NULL ,\n+  [REQUESTS_RECOVERY] [VARCHAR] (1)  NULL \n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL \n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_SCHEDULER_STATE] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [INSTANCE_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [LAST_CHECKIN_TIME] [BIGINT] NOT NULL ,\n+  [CHECKIN_INTERVAL] [BIGINT] NOT NULL\n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_LOCKS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [LOCK_NAME] [VARCHAR] (40)  NOT NULL \n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_JOB_DETAILS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [JOB_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [JOB_GROUP] [VARCHAR] (200)  NOT NULL ,\n+  [DESCRIPTION] [VARCHAR] (250) NULL ,\n+  [JOB_CLASS_NAME] [VARCHAR] (250)  NOT NULL ,\n+  [IS_DURABLE] [VARCHAR] (1)  NOT NULL ,\n+  [IS_NONCONCURRENT] [VARCHAR] (1)  NOT NULL ,\n+  [IS_UPDATE_DATA] [VARCHAR] (1)  NOT NULL ,\n+  [REQUESTS_RECOVERY] [VARCHAR] (1)  NOT NULL ,\n+  [JOB_DATA] [IMAGE] NULL\n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n+  [REPEAT_COUNT] [BIGINT] NOT NULL ,\n+  [REPEAT_INTERVAL] [BIGINT] NOT NULL ,\n+  [TIMES_TRIGGERED] [BIGINT] NOT NULL\n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n+  [STR_PROP_1] [VARCHAR] (512) NULL,\n+  [STR_PROP_2] [VARCHAR] (512) NULL,\n+  [STR_PROP_3] [VARCHAR] (512) NULL,\n+  [INT_PROP_1] [INT] NULL,\n+  [INT_PROP_2] [INT] NULL,\n+  [LONG_PROP_1] [BIGINT] NULL,\n+  [LONG_PROP_2] [BIGINT] NULL,\n+  [DEC_PROP_1] [NUMERIC] (13,4) NULL,\n+  [DEC_PROP_2] [NUMERIC] (13,4) NULL,\n+  [BOOL_PROP_1] [VARCHAR] (1) NULL,\n+  [BOOL_PROP_2] [VARCHAR] (1) NULL,\n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_BLOB_TRIGGERS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n+  [BLOB_DATA] [IMAGE] NULL\n+) ON [PRIMARY]\n+GO\n+\n+CREATE TABLE [dbo].[QRTZ_TRIGGERS] (\n+  [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,\n+  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n+  [JOB_NAME] [VARCHAR] (200)  NOT NULL ,\n+  [JOB_GROUP] [VARCHAR] (200)  NOT NULL ,\n+  [DESCRIPTION] [VARCHAR] (250) NULL ,\n+  [NEXT_FIRE_TIME] [BIGINT] NULL ,\n+  [PREV_FIRE_TIME] [BIGINT] NULL ,\n+  [PRIORITY] [INTEGER] NULL ,\n+  [TRIGGER_STATE] [VARCHAR] (16)  NOT NULL ,\n+  [TRIGGER_TYPE] [VARCHAR] (8)  NOT NULL ,\n+  [START_TIME] [BIGINT] NOT NULL ,\n+  [END_TIME] [BIGINT] NULL ,\n+  [CALENDAR_NAME] [VARCHAR] (200)  NULL ,\n+  [MISFIRE_INSTR] [SMALLINT] NULL ,\n+  [JOB_DATA] [IMAGE] NULL\n+) ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_CALENDARS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_CALENDARS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [CALENDAR_NAME]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_CRON_TRIGGERS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_FIRED_TRIGGERS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_FIRED_TRIGGERS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [ENTRY_ID]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_PAUSED_TRIGGER_GRPS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [TRIGGER_GROUP]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_SCHEDULER_STATE] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_SCHEDULER_STATE] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [INSTANCE_NAME]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_LOCKS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_LOCKS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [LOCK_NAME]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_JOB_DETAILS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_JOB_DETAILS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [JOB_NAME],\n+    [JOB_GROUP]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_SIMPLE_TRIGGERS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_SIMPROP_TRIGGERS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_TRIGGERS] WITH NOCHECK ADD\n+  CONSTRAINT [PK_QRTZ_TRIGGERS] PRIMARY KEY  CLUSTERED\n+  (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  )  ON [PRIMARY]\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] ADD\n+  CONSTRAINT [FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\n+  (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  ) ON DELETE CASCADE\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] ADD\n+  CONSTRAINT [FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\n+  (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  ) ON DELETE CASCADE\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] ADD\n+  CONSTRAINT [FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\n+  (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\n+    [SCHED_NAME],\n+    [TRIGGER_NAME],\n+    [TRIGGER_GROUP]\n+  ) ON DELETE CASCADE\n+GO\n+\n+ALTER TABLE [dbo].[QRTZ_TRIGGERS] ADD\n+  CONSTRAINT [FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS] FOREIGN KEY\n+  (\n+    [SCHED_NAME],\n+    [JOB_NAME],\n+    [JOB_GROUP]\n+  ) REFERENCES [dbo].[QRTZ_JOB_DETAILS] (\n+    [SCHED_NAME],\n+    [JOB_NAME],\n+    [JOB_GROUP]\n+  )\n+GO\n+"},{"sha":"58249d363fc9c00d4c671529f9903b86a9ba3f84","filename":"core/src/main/resources/quartz/tables_sqlserver.sql","status":"removed","additions":0,"deletions":295,"changes":295,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9e2a00dd0029a17e055b4960b25b70ac268472e/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_sqlserver.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9e2a00dd0029a17e055b4960b25b70ac268472e/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_sqlserver.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_sqlserver.sql?ref=a9e2a00dd0029a17e055b4960b25b70ac268472e","patch":"@@ -1,295 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n-ALTER TABLE [QRTZ_JOB_LISTENERS] DROP CONSTRAINT FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n-ALTER TABLE [QRTZ_TRIGGERS] DROP CONSTRAINT FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n-ALTER TABLE [QRTZ_CRON_TRIGGERS] DROP CONSTRAINT FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n-ALTER TABLE [QRTZ_SIMPLE_TRIGGERS] DROP CONSTRAINT FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)\n-ALTER TABLE [QRTZ_TRIGGER_LISTENERS] DROP CONSTRAINT FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_CALENDARS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_CALENDARS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_CRON_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_CRON_TRIGGERS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_BLOB_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_BLOB_TRIGGERS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_FIRED_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_FIRED_TRIGGERS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_PAUSED_TRIGGER_GRPS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_PAUSED_TRIGGER_GRPS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_SCHEDULER_STATE]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_SCHEDULER_STATE]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_LOCKS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_LOCKS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_JOB_DETAILS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_JOB_LISTENERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_JOB_LISTENERS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_SIMPLE_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_SIMPLE_TRIGGERS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_TRIGGER_LISTENERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_TRIGGER_LISTENERS]\n-\n-IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)\n-DROP TABLE [QRTZ_TRIGGERS]\n-\n-CREATE TABLE [QRTZ_CALENDARS] (\n-  [CALENDAR_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [CALENDAR] [IMAGE] NOT NULL\n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_CRON_TRIGGERS] (\n-  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [CRON_EXPRESSION] [VARCHAR] (120)  NOT NULL ,\n-  [TIME_ZONE_ID] [VARCHAR] (80) \n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_FIRED_TRIGGERS] (\n-  [ENTRY_ID] [VARCHAR] (95)  NOT NULL ,\n-  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [IS_VOLATILE] [VARCHAR] (1)  NOT NULL ,\n-  [INSTANCE_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [FIRED_TIME] [BIGINT] NOT NULL ,\n-  [PRIORITY] [INTEGER] NOT NULL ,\n-  [STATE] [VARCHAR] (16)  NOT NULL,\n-  [JOB_NAME] [VARCHAR] (200)  NULL ,\n-  [JOB_GROUP] [VARCHAR] (200)  NULL ,\n-  [IS_STATEFUL] [VARCHAR] (1)  NULL ,\n-  [REQUESTS_RECOVERY] [VARCHAR] (1)  NULL \n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_PAUSED_TRIGGER_GRPS] (\n-  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL \n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_SCHEDULER_STATE] (\n-  [INSTANCE_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [LAST_CHECKIN_TIME] [BIGINT] NOT NULL ,\n-  [CHECKIN_INTERVAL] [BIGINT] NOT NULL\n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_LOCKS] (\n-  [LOCK_NAME] [VARCHAR] (40)  NOT NULL \n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_JOB_DETAILS] (\n-  [JOB_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [JOB_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [DESCRIPTION] [VARCHAR] (250) NULL ,\n-  [JOB_CLASS_NAME] [VARCHAR] (250)  NOT NULL ,\n-  [IS_DURABLE] [VARCHAR] (1)  NOT NULL ,\n-  [IS_VOLATILE] [VARCHAR] (1)  NOT NULL ,\n-  [IS_STATEFUL] [VARCHAR] (1)  NOT NULL ,\n-  [REQUESTS_RECOVERY] [VARCHAR] (1)  NOT NULL ,\n-  [JOB_DATA] [IMAGE] NULL\n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_JOB_LISTENERS] (\n-  [JOB_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [JOB_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [JOB_LISTENER] [VARCHAR] (200)  NOT NULL\n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_SIMPLE_TRIGGERS] (\n-  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [REPEAT_COUNT] [BIGINT] NOT NULL ,\n-  [REPEAT_INTERVAL] [BIGINT] NOT NULL ,\n-  [TIMES_TRIGGERED] [BIGINT] NOT NULL\n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_BLOB_TRIGGERS] (\n-  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [BLOB_DATA] [IMAGE] NULL\n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_TRIGGER_LISTENERS] (\n-  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [TRIGGER_LISTENER] [VARCHAR] (200)  NOT NULL\n-) ON [PRIMARY]\n-\n-CREATE TABLE [QRTZ_TRIGGERS] (\n-  [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [JOB_NAME] [VARCHAR] (200)  NOT NULL ,\n-  [JOB_GROUP] [VARCHAR] (200)  NOT NULL ,\n-  [IS_VOLATILE] [VARCHAR] (1)  NOT NULL ,\n-  [DESCRIPTION] [VARCHAR] (250) NULL ,\n-  [NEXT_FIRE_TIME] [BIGINT] NULL ,\n-  [PREV_FIRE_TIME] [BIGINT] NULL ,\n-  [PRIORITY] [INTEGER] NULL ,\n-  [TRIGGER_STATE] [VARCHAR] (16)  NOT NULL ,\n-  [TRIGGER_TYPE] [VARCHAR] (8)  NOT NULL ,\n-  [START_TIME] [BIGINT] NOT NULL ,\n-  [END_TIME] [BIGINT] NULL ,\n-  [CALENDAR_NAME] [VARCHAR] (200)  NULL ,\n-  [MISFIRE_INSTR] [SMALLINT] NULL ,\n-  [JOB_DATA] [IMAGE] NULL\n-) ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_CALENDARS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_CALENDARS] PRIMARY KEY  CLUSTERED\n-  (\n-    [CALENDAR_NAME]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_CRON_TRIGGERS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_CRON_TRIGGERS] PRIMARY KEY  CLUSTERED\n-  (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_FIRED_TRIGGERS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_FIRED_TRIGGERS] PRIMARY KEY  CLUSTERED\n-  (\n-    [ENTRY_ID]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_PAUSED_TRIGGER_GRPS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_PAUSED_TRIGGER_GRPS] PRIMARY KEY  CLUSTERED\n-  (\n-    [TRIGGER_GROUP]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_SCHEDULER_STATE] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_SCHEDULER_STATE] PRIMARY KEY  CLUSTERED\n-  (\n-    [INSTANCE_NAME]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_LOCKS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_LOCKS] PRIMARY KEY  CLUSTERED\n-  (\n-    [LOCK_NAME]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_JOB_DETAILS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_JOB_DETAILS] PRIMARY KEY  CLUSTERED\n-  (\n-    [JOB_NAME],\n-    [JOB_GROUP]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_JOB_LISTENERS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_JOB_LISTENERS] PRIMARY KEY  CLUSTERED\n-  (\n-    [JOB_NAME],\n-    [JOB_GROUP],\n-    [JOB_LISTENER]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_SIMPLE_TRIGGERS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_SIMPLE_TRIGGERS] PRIMARY KEY  CLUSTERED\n-  (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_TRIGGER_LISTENERS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_TRIGGER_LISTENERS] PRIMARY KEY  CLUSTERED\n-  (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP],\n-    [TRIGGER_LISTENER]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_TRIGGERS] WITH NOCHECK ADD\n-  CONSTRAINT [PK_QRTZ_TRIGGERS] PRIMARY KEY  CLUSTERED\n-  (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  )  ON [PRIMARY]\n-\n-ALTER TABLE [QRTZ_CRON_TRIGGERS] ADD\n-  CONSTRAINT [FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\n-  (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  ) REFERENCES [QRTZ_TRIGGERS] (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  ) ON DELETE CASCADE\n-\n-ALTER TABLE [QRTZ_JOB_LISTENERS] ADD\n-  CONSTRAINT [FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS] FOREIGN KEY\n-  (\n-    [JOB_NAME],\n-    [JOB_GROUP]\n-  ) REFERENCES [QRTZ_JOB_DETAILS] (\n-    [JOB_NAME],\n-    [JOB_GROUP]\n-  ) ON DELETE CASCADE\n-\n-ALTER TABLE [QRTZ_SIMPLE_TRIGGERS] ADD\n-  CONSTRAINT [FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\n-  (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  ) REFERENCES [QRTZ_TRIGGERS] (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  ) ON DELETE CASCADE\n-\n-ALTER TABLE [QRTZ_TRIGGER_LISTENERS] ADD\n-  CONSTRAINT [FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS] FOREIGN KEY\n-  (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  ) REFERENCES [QRTZ_TRIGGERS] (\n-    [TRIGGER_NAME],\n-    [TRIGGER_GROUP]\n-  ) ON DELETE CASCADE\n-\n-ALTER TABLE [QRTZ_TRIGGERS] ADD\n-  CONSTRAINT [FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS] FOREIGN KEY\n-  (\n-    [JOB_NAME],\n-    [JOB_GROUP]\n-  ) REFERENCES [QRTZ_JOB_DETAILS] (\n-    [JOB_NAME],\n-    [JOB_GROUP]\n-  )\n-\n-INSERT INTO [QRTZ_LOCKS] VALUES('TRIGGER_ACCESS');\n-INSERT INTO [QRTZ_LOCKS] VALUES('JOB_ACCESS');\n-INSERT INTO [QRTZ_LOCKS] VALUES('CALENDAR_ACCESS');\n-INSERT INTO [QRTZ_LOCKS] VALUES('STATE_ACCESS');\n-INSERT INTO [QRTZ_LOCKS] VALUES('MISFIRE_ACCESS');"},{"sha":"c7d790161cafe84f0e067892de6f6b281fa66181","filename":"core/src/test/resources/sqlserver/persistence.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -21,5 +21,5 @@ jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n-quartz.sql=tables_sqlserver.sql\n-logback.sql=sqlserver.sql\n\\ No newline at end of file\n+quartz.sql=tables_sqlServer.sql\n+logback.sql=sqlserver.sql"},{"sha":"96716d572f811ee515ae2186c01cbf94e5c0fc23","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3a6ebd3f21280e78a5f50d87f9f5741478c822a5/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=3a6ebd3f21280e78a5f50d87f9f5741478c822a5","patch":"@@ -251,7 +251,7 @@ under the License.\n     <jackson.version>1.9.10</jackson.version>\n     <xstream.version>1.4.3</xstream.version>\n     <velocity.version>1.7</velocity.version>\n-    <quartz.version>1.8.6</quartz.version>\n+    <quartz.version>2.1.6</quartz.version>\n \n     <openjpa.version>2.2.0</openjpa.version>\n     <bval.version>0.5</bval.version>"}]}