{"sha":"5a7b8e22987e28d3c7a04638e497971bd50651d9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVhN2I4ZTIyOTg3ZTI4ZDNjN2EwNDYzOGU0OTc5NzFiZDUwNjUxZDk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-28T11:41:20Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-28T11:41:20Z"},"message":"Removed any reference to Map from TOs\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246252 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"69688db64bae4724972123ba604807d773b13b95","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/69688db64bae4724972123ba604807d773b13b95"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5a7b8e22987e28d3c7a04638e497971bd50651d9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5a7b8e22987e28d3c7a04638e497971bd50651d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5a7b8e22987e28d3c7a04638e497971bd50651d9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5a7b8e22987e28d3c7a04638e497971bd50651d9/comments","author":null,"committer":null,"parents":[{"sha":"1e523ce98846ae2bec6d2463982de544f160b8fe","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1e523ce98846ae2bec6d2463982de544f160b8fe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1e523ce98846ae2bec6d2463982de544f160b8fe"}],"stats":{"total":213,"additions":147,"deletions":66},"files":[{"sha":"156c3ae2b8c76a7e77f74bb5c5a8a5a73676af10","filename":"client/src/main/java/org/syncope/client/to/AttributeTO.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -0,0 +1,52 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.client.to;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class AttributeTO extends AbstractBaseTO {\n+\n+    private String schema;\n+    private Set<String> values;\n+\n+    public AttributeTO() {\n+        values = new HashSet<String>();\n+    }\n+\n+    public String getSchema() {\n+        return schema;\n+    }\n+\n+    public void setSchema(String schema) {\n+        this.schema = schema;\n+    }\n+\n+    public boolean addValue(String value) {\n+        return values.add(value);\n+    }\n+\n+    public boolean removeValue(String value) {\n+        return values.remove(value);\n+    }\n+\n+    public Set<String> getValues() {\n+        return values;\n+    }\n+\n+    public void setValues(Set<String> values) {\n+        this.values = values;\n+    }\n+}"},{"sha":"f4272d6ed1ceeb4c672c97256a3127e2acdd1926","filename":"client/src/main/java/org/syncope/client/to/SchemaTO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -22,6 +22,7 @@ public class SchemaTO extends AbstractBaseTO {\n \n     private String name;\n     private AttributeType type;\n+    private boolean virtual;\n     private boolean mandatory;\n     private boolean multivalue;\n     private String conversionPattern;\n@@ -41,6 +42,14 @@ public void setConversionPattern(String conversionPattern) {\n         this.conversionPattern = conversionPattern;\n     }\n \n+    public boolean isVirtual() {\n+        return virtual;\n+    }\n+\n+    public void setVirtual(boolean virtual) {\n+        this.virtual = virtual;\n+    }\n+\n     public boolean isMandatory() {\n         return mandatory;\n     }"},{"sha":"68ae865e46090df54a058b569595dd06af11439b","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":28,"deletions":21,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -15,25 +15,24 @@\n package org.syncope.client.to;\n \n import java.util.Date;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.HashSet;\n import java.util.Set;\n \n public class UserTO extends AbstractBaseTO {\n \n     private long id;\n     private String password;\n-    private Map<String, String> roles;\n-    private Map<String, Set<String>> attributes;\n-    private Map<String, String> derivedAttributes;\n+    private Set<Long> roles;\n+    private Set<AttributeTO> attributes;\n+    private Set<AttributeTO> derivedAttributes;\n     private Date creationTime;\n     private String token;\n     private Date tokenExpireTime;\n \n     public UserTO() {\n-        roles = new HashMap<String, String>();\n-        attributes = new HashMap<String, Set<String>>();\n-        derivedAttributes = new HashMap<String, String>();\n+        roles = new HashSet<Long>();\n+        attributes = new HashSet<AttributeTO>();\n+        derivedAttributes = new HashSet<AttributeTO>();\n     }\n \n     public long getId() {\n@@ -52,43 +51,51 @@ public void setPassword(String password) {\n         this.password = password;\n     }\n \n-    public String addRole(String role, String parent) {\n-        return roles.put(role, parent);\n+    public boolean addRole(Long role) {\n+        return roles.add(role);\n     }\n \n-    public String removeRole(String role) {\n+    public boolean removeRole(Long role) {\n         return roles.remove(role);\n     }\n \n-    public Map<String, String> getRoles() {\n+    public Set<Long> getRoles() {\n         return roles;\n     }\n \n-    public void setRoles(Map<String, String> roles) {\n+    public void setRoles(Set<Long> roles) {\n         this.roles = roles;\n     }\n \n-    public Set<String> addAttribute(String name, Set<String> values) {\n-        return attributes.put(name, values);\n+    public boolean addAttribute(AttributeTO attribute) {\n+        return attributes.add(attribute);\n     }\n \n-    public Set<String> removeAttribute(String name) {\n-        return attributes.remove(name);\n+    public boolean removeAttribute(AttributeTO attribute) {\n+        return attributes.remove(attribute);\n     }\n \n-    public Map<String, Set<String>> getAttributes() {\n+    public Set<AttributeTO> getAttributes() {\n         return attributes;\n     }\n \n-    public void setAttributes(Map<String, Set<String>> attributes) {\n+    public void setAttributes(Set<AttributeTO> attributes) {\n         this.attributes = attributes;\n     }\n \n-    public Map<String, String> getDerivedAttributes() {\n+    public boolean addDerivedAttribute(AttributeTO derivedAttribute) {\n+        return derivedAttributes.add(derivedAttribute);\n+    }\n+\n+    public boolean removeDerivedAttribute(AttributeTO derivedAttribute) {\n+        return derivedAttributes.remove(derivedAttribute);\n+    }\n+\n+    public Set<AttributeTO> getDerivedAttributes() {\n         return derivedAttributes;\n     }\n \n-    public void setDerivedAttributes(Map<String, String> derivedAttributes) {\n+    public void setDerivedAttributes(Set<AttributeTO> derivedAttributes) {\n         this.derivedAttributes = derivedAttributes;\n     }\n "},{"sha":"c41c4cfc87ad90af64121fd5015cf56cc4542af8","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -17,11 +17,22 @@\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n import java.util.Set;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n import javax.persistence.MappedSuperclass;\n \n @MappedSuperclass\n public abstract class AbstractAttributable extends AbstractBaseBean {\n \n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    private Long id;\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n     public <T extends AbstractAttribute> T getAttribute(String schemaName)\n             throws NoSuchElementException {\n "},{"sha":"9e6dfb6ba7e0e4a3afcee1f810cbe77a93917578","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractSchema.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -39,6 +39,7 @@ public abstract class AbstractSchema extends AbstractBaseBean {\n     @Column(nullable = false)\n     @Enumerated(STRING)\n     private AttributeType type;\n+    private boolean virtual;\n     private boolean mandatory;\n     private boolean multivalue;\n     @Column(nullable = true)\n@@ -50,6 +51,7 @@ public abstract class AbstractSchema extends AbstractBaseBean {\n \n     public AbstractSchema() {\n         type = AttributeType.String;\n+        virtual = false;\n         mandatory = false;\n         multivalue = false;\n     }\n@@ -70,6 +72,14 @@ public void setType(AttributeType type) {\n         this.type = type;\n     }\n \n+    public boolean isVirtual() {\n+        return virtual;\n+    }\n+\n+    public void setVirtual(boolean virtual) {\n+        this.virtual = virtual;\n+    }\n+\n     public boolean isMandatory() {\n         return mandatory;\n     }"},{"sha":"f1b2bbba35ddff74312ae68c97eb65d9767ac432","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -20,9 +20,6 @@\n import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n-import javax.persistence.GeneratedValue;\n-import javax.persistence.GenerationType;\n-import javax.persistence.Id;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import javax.persistence.Table;\n@@ -37,9 +34,6 @@\n @UniqueConstraint(columnNames = {\"name\", \"parent\"}))\n public class SyncopeRole extends AbstractAttributable {\n \n-    @Id\n-    @GeneratedValue(strategy = GenerationType.AUTO)\n-    private Long id;\n     private String name;\n     private String parent;\n     @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"roles\")\n@@ -60,10 +54,6 @@ public SyncopeRole() {\n         derivedAttributes = new HashSet<RoleDerivedAttribute>();\n     }\n \n-    public Long getId() {\n-        return id;\n-    }\n-\n     public String getName() {\n         return name;\n     }"},{"sha":"c418ec1b786ea434a6af7bf8c3d066e2a8a0d85f","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -20,9 +20,6 @@\n import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n-import javax.persistence.GeneratedValue;\n-import javax.persistence.GenerationType;\n-import javax.persistence.Id;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import javax.persistence.Temporal;\n@@ -40,9 +37,6 @@ public class SyncopeUser extends AbstractAttributable {\n     @Transient\n     final private static PasswordEncryptor passwordEncryptor =\n             new StrongPasswordEncryptor();\n-    @Id\n-    @GeneratedValue(strategy = GenerationType.AUTO)\n-    private Long id;\n     private String password;\n     @ManyToMany(fetch = FetchType.EAGER)\n     private Set<SyncopeRole> roles;\n@@ -64,10 +58,6 @@ public SyncopeUser() {\n         derivedAttributes = new HashSet<UserDerivedAttribute>();\n     }\n \n-    public Long getId() {\n-        return id;\n-    }\n-\n     public boolean addRole(SyncopeRole role) {\n         return roles.add(role);\n     }"},{"sha":"85a926b8e9974ba3f69d2ba8fe18c8f4ba81ea05","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":16,"deletions":11,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -14,13 +14,13 @@\n  */\n package org.syncope.core.rest.data;\n \n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.Collections;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.core.persistence.beans.AbstractAttribute;\n import org.syncope.core.persistence.beans.AbstractDerivedAttribute;\n@@ -55,24 +55,29 @@ public UserTO getUserTO(SyncopeUser user) {\n         UserTO userTO = new UserTO();\n         BeanUtils.copyProperties(user, userTO, ignoreSchemaProperties);\n \n+        AttributeTO attributeTO = null;\n         for (AbstractAttribute attribute : user.getAttributes()) {\n-            userTO.addAttribute(attribute.getSchema().getName(),\n-                    attribute.getStringAttributeValues());\n+            attributeTO = new AttributeTO();\n+            attributeTO.setSchema(attribute.getSchema().getName());\n+            attributeTO.setValues(attribute.getStringAttributeValues());\n+\n+            userTO.addAttribute(attributeTO);\n         }\n \n-        Map<String, String> stringDerivedAttributes =\n-                new HashMap<String, String>(user.getDerivedAttributes().size());\n         for (AbstractDerivedAttribute derivedAttribute :\n                 user.getDerivedAttributes()) {\n \n-            stringDerivedAttributes.put(\n-                    derivedAttribute.getDerivedSchema().getName(),\n-                    derivedAttribute.getValue(user.getAttributes()));\n+            attributeTO = new AttributeTO();\n+            attributeTO.setSchema(\n+                    derivedAttribute.getDerivedSchema().getName());\n+            attributeTO.setValues(Collections.singleton(\n+                    derivedAttribute.getValue(user.getAttributes())));\n+\n+            userTO.addDerivedAttribute(attributeTO);\n         }\n-        userTO.setDerivedAttributes(stringDerivedAttributes);\n \n         for (SyncopeRole role : user.getRoles()) {\n-            userTO.addRole(role.getName(), role.getParent());\n+            userTO.addRole(role.getId());\n         }\n \n         return userTO;"},{"sha":"d5ac5bf591851147b4ad06a437ebb900b754869d","filename":"core/src/main/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -16,11 +16,11 @@\n     <SyncopeConfiguration confKey=\"token.length\" confValue=\"256\"/>\n     <SyncopeConfiguration confKey=\"token.expireTime\" confValue=\"60\"/>\n \n-    <UserSchema name=\"surname\" type=\"String\"\n+    <UserSchema name=\"surname\" type=\"String\" virtual=\"false\"\n                 mandatory=\"true\" multivalue=\"false\"/>\n-    <UserSchema name=\"firstname\" type=\"String\"\n+    <UserSchema name=\"firstname\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"false\"/>\n-    <UserSchema name=\"email\" type=\"String\"\n+    <UserSchema name=\"email\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"true\"\n                 validatorClass=\"org.syncope.core.validation.EmailAddressValidator\"/>\n "},{"sha":"a41c43ee9e8223e695fa057c108d7317549ba8a6","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -22,16 +22,20 @@\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpStatusCodeException;\n+import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.SearchParameters;\n import org.syncope.client.to.UserTO;\n \n public class UserTestITCase extends AbstractTestITCase {\n \n     @Test\n     public void create() {\n+        AttributeTO attributeTO = new AttributeTO();\n+        attributeTO.setSchema(\"attr1\");\n+        attributeTO.setValues(Collections.singleton(\"value1\"));\n+\n         UserTO newUserTO = new UserTO();\n-        newUserTO.setAttributes(Collections.singletonMap(\"attr1\",\n-                Collections.singleton(\"value1\")));\n+        newUserTO.addAttribute(attributeTO);\n \n         UserTO userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 newUserTO, UserTO.class);\n@@ -105,9 +109,12 @@ public void search() {\n \n     @Test\n     public void update() {\n+        AttributeTO attributeTO = new AttributeTO();\n+        attributeTO.setSchema(\"attr1\");\n+        attributeTO.setValues(Collections.singleton(\"value1\"));\n+\n         UserTO newUserTO = new UserTO();\n-        newUserTO.setAttributes(Collections.singletonMap(\"attr1\",\n-                Collections.singleton(\"value1\")));\n+        newUserTO.addAttribute(attributeTO);\n \n         UserTO userTO = restTemplate.postForObject(BASE_URL + \"user/update\",\n                 newUserTO, UserTO.class);"},{"sha":"ba9a5cd65fb60109d210afb29caf3becad3369ee","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a7b8e22987e28d3c7a04638e497971bd50651d9/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=5a7b8e22987e28d3c7a04638e497971bd50651d9","patch":"@@ -34,22 +34,22 @@\n     <SyncopeUser_SyncopeRole users_id=\"2\" roles_id=\"2\"/>\n     <SyncopeUser_SyncopeRole users_id=\"4\" roles_id=\"7\"/>\n \n-    <UserSchema name=\"username\" type=\"String\"\n+    <UserSchema name=\"username\" type=\"String\" virtual=\"false\"\n                 mandatory=\"true\" multivalue=\"false\"/>\n-    <UserSchema name=\"loginDate\" type=\"Date\"\n+    <UserSchema name=\"loginDate\" type=\"Date\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"true\"\n                 conversionPattern=\"yyyy-MM-dd\"/>\n-    <UserSchema name=\"firstname\" type=\"String\"\n+    <UserSchema name=\"firstname\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"false\"/>\n-    <UserSchema name=\"surname\" type=\"String\"\n+    <UserSchema name=\"surname\" type=\"String\" virtual=\"false\"\n                 mandatory=\"true\" multivalue=\"false\"/>\n-    <UserSchema name=\"email\" type=\"String\"\n+    <UserSchema name=\"email\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"true\"\n                 validatorClass=\"org.syncope.core.persistence.validation.EmailAddressValidator\"/>\n \n-    <RoleSchema name=\"icon\" type=\"String\"\n+    <RoleSchema name=\"icon\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"false\"/>\n-    <RoleSchema name=\"show\" type=\"Boolean\"\n+    <RoleSchema name=\"show\" type=\"Boolean\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"false\"/>\n \n     <UserAttribute id=\"100\" owner_id=\"1\" schema_name=\"username\"/>"}]}