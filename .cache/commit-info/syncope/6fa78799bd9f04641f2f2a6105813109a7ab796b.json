{"sha":"6fa78799bd9f04641f2f2a6105813109a7ab796b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZmYTc4Nzk5YmQ5ZjA0NjQxZjJmMmE2MTA1ODEzMTA5YTdhYjc5NmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-15T14:22:06Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-15T14:22:06Z"},"message":"[SYNCOPE-746] Fixing left pane management for extensions","tree":{"sha":"1f7444f67b626a4076071bd815d05945201928d0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1f7444f67b626a4076071bd815d05945201928d0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6fa78799bd9f04641f2f2a6105813109a7ab796b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6fa78799bd9f04641f2f2a6105813109a7ab796b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6fa78799bd9f04641f2f2a6105813109a7ab796b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6fa78799bd9f04641f2f2a6105813109a7ab796b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9cf1291abadd64c07a0ee7811c2524d39653d711","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9cf1291abadd64c07a0ee7811c2524d39653d711","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9cf1291abadd64c07a0ee7811c2524d39653d711"}],"stats":{"total":124,"additions":83,"deletions":41},"files":[{"sha":"76ea15d444289b853e9e5aed512b3699711613c7","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":78,"deletions":36,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fa78799bd9f04641f2f2a6105813109a7ab796b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fa78799bd9f04641f2f2a6105813109a7ab796b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=6fa78799bd9f04641f2f2a6105813109a7ab796b","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.annotations.ExtPage;\n@@ -88,7 +89,7 @@ public BasePage(final PageParameters parameters) {\n         add(new Label(\"version\", SyncopeConsoleApplication.get().getVersion()));\n         add(new Label(\"username\", SyncopeConsoleSession.get().getSelfTO().getUsername()));\n \n-        final WebMarkupContainer todosContainer = new WebMarkupContainer(\"todosContainer\");\n+        WebMarkupContainer todosContainer = new WebMarkupContainer(\"todosContainer\");\n         add(todosContainer);\n         Label todos = new Label(\"todos\", \"0\");\n         todosContainer.add(todos);\n@@ -123,27 +124,25 @@ public BasePage(final PageParameters parameters) {\n         add(confLIContainer);\n         WebMarkupContainer confULContainer = new WebMarkupContainer(getULContainerId(\"configuration\"));\n         confLIContainer.add(confULContainer);\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                liContainer, WebPage.RENDER, StandardEntitlement.CONFIGURATION_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"workflow\"));\n         confULContainer.add(liContainer);\n-        final BookmarkablePageLink<Page> workflowLink = new BookmarkablePageLink<>(\"workflow\", Workflow.class);\n+        BookmarkablePageLink<Page> workflowLink = new BookmarkablePageLink<>(\"workflow\", Workflow.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 workflowLink, WebPage.ENABLE, StandardEntitlement.WORKFLOW_DEF_READ);\n         liContainer.add(workflowLink);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"logs\"));\n         confULContainer.add(liContainer);\n-        final BookmarkablePageLink<Page> logsLink = new BookmarkablePageLink<>(\"logs\", Logs.class);\n+        BookmarkablePageLink<Page> logsLink = new BookmarkablePageLink<>(\"logs\", Logs.class);\n         MetaDataRoleAuthorizationStrategy.authorize(logsLink, WebPage.ENABLE, StandardEntitlement.LOG_LIST);\n         liContainer.add(logsLink);\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.LOG_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"securityquestions\"));\n         confULContainer.add(liContainer);\n-        final BookmarkablePageLink<Page> secuityQuestionsLink = new BookmarkablePageLink<>(\"securityquestions\",\n-                SecurityQuestions.class);\n+        BookmarkablePageLink<Page> secuityQuestionsLink =\n+                new BookmarkablePageLink<>(\"securityquestions\", SecurityQuestions.class);\n         liContainer.add(secuityQuestionsLink);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"types\"));\n@@ -171,38 +170,10 @@ public BasePage(final PageParameters parameters) {\n         liContainer.add(new BookmarkablePageLink<>(\"notifications\", Notifications.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.NOTIFICATION_LIST);\n \n-        ClassPathScanImplementationLookup classPathScanImplementationLookup =\n-                (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n-                getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n-        ListView<Class<? extends AbstractExtPage>> extPages = new ListView<Class<? extends AbstractExtPage>>(\n-                \"extPages\", classPathScanImplementationLookup.getExtPageClasses()) {\n-\n-            private static final long serialVersionUID = 4949588177564901031L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<Class<? extends AbstractExtPage>> item) {\n-                WebMarkupContainer liContainer = new WebMarkupContainer(\"extPageLI\");\n-                item.add(liContainer);\n-\n-                BookmarkablePageLink<?> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n-                liContainer.add(link);\n-\n-                ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n-\n-                link.add(new Label(\"extPageLabel\", ann.label()));\n-\n-                Label extPageIcon = new Label(\"extPageIcon\");\n-                extPageIcon.add(new AttributeModifier(\"class\", \"fa \" + ann.icon()));\n-                link.add(extPageIcon);\n-            }\n-        };\n-        extPages.setOutputMarkupId(true);\n-        add(extPages);\n-\n         add(new Label(\"domain\", SyncopeConsoleSession.get().getDomain()));\n         add(new BookmarkablePageLink<Page>(\"logout\", Logout.class));\n \n-        // set 'active' menu item\n+        // set 'active' menu item for everything but extensions\n         // 1. check if current class is set to top-level menu\n         Component containingLI = get(getLIContainerId(getClass().getSimpleName().toLowerCase()));\n         // 2. if not, check if it is under 'Configuration'\n@@ -245,6 +216,77 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n                 });\n             }\n         }\n+\n+        // Extensions\n+        ClassPathScanImplementationLookup classPathScanImplementationLookup =\n+                (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n+                getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n+        List<Class<? extends AbstractExtPage>> extPageClasses = classPathScanImplementationLookup.getExtPageClasses();\n+\n+        WebMarkupContainer extensionsLI = new WebMarkupContainer(getLIContainerId(\"extensions\"));\n+        extensionsLI.setOutputMarkupPlaceholderTag(true);\n+        extensionsLI.setVisible(!extPageClasses.isEmpty());\n+        add(extensionsLI);\n+\n+        ListView<Class<? extends AbstractExtPage>> extPages = new ListView<Class<? extends AbstractExtPage>>(\n+                \"extPages\", extPageClasses) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<Class<? extends AbstractExtPage>> item) {\n+                WebMarkupContainer containingLI = new WebMarkupContainer(\"extPageLI\");\n+                item.add(containingLI);\n+                if (item.getModelObject().equals(BasePage.this.getClass())) {\n+                    containingLI.add(new Behavior() {\n+\n+                        private static final long serialVersionUID = 1469628524240283489L;\n+\n+                        @Override\n+                        public void onComponentTag(final Component component, final ComponentTag tag) {\n+                            tag.put(\"class\", \"active\");\n+                        }\n+                    });\n+                }\n+\n+                BookmarkablePageLink<?> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n+                containingLI.add(link);\n+\n+                ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n+\n+                link.add(new Label(\"extPageLabel\", ann.label()));\n+\n+                Label extPageIcon = new Label(\"extPageIcon\");\n+                extPageIcon.add(new AttributeModifier(\"class\", \"fa \" + ann.icon()));\n+                link.add(extPageIcon);\n+            }\n+        };\n+        extPages.setOutputMarkupId(true);\n+        extensionsLI.add(extPages);\n+\n+        if (getPage() instanceof AbstractExtPage) {\n+            extPages.add(new Behavior() {\n+\n+                private static final long serialVersionUID = 1469628524240283489L;\n+\n+                @Override\n+                public void onComponentTag(final Component component, final ComponentTag tag) {\n+                    tag.put(\"class\", \"treeview-menu menu-open\");\n+                    tag.put(\"style\", \"display: block;\");\n+                }\n+\n+            });\n+\n+            extensionsLI.add(new Behavior() {\n+\n+                private static final long serialVersionUID = 1469628524240283489L;\n+\n+                @Override\n+                public void onComponentTag(final Component component, final ComponentTag tag) {\n+                    tag.put(\"class\", \"treeview active\");\n+                }\n+            });\n+        }\n     }\n \n     @Override"},{"sha":"7a184150b5a8d412dc3f4eadde4ff2c9abcffda6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fa78799bd9f04641f2f2a6105813109a7ab796b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fa78799bd9f04641f2f2a6105813109a7ab796b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=6fa78799bd9f04641f2f2a6105813109a7ab796b","patch":"@@ -92,10 +92,10 @@\n       <aside class=\"main-sidebar block-sidebar\">\n         <section class=\"sidebar\">\n           <ul class=\"sidebar-menu\">\n-            <li wicket:id=\"dashboardLI\"><a href=\"#\" wicket:id=\"dashboard\"><i class=\"fa fa-dashboard\"></i><span>Dashboard</span></a></li>\n-            <li wicket:id=\"realmsLI\"><a href=\"#\" wicket:id=\"realms\"><i class=\"fa fa-folder-o\"></i><span>Realms</span></a></li>\n-            <li wicket:id=\"topologyLI\"><a href=\"#\" wicket:id=\"topology\"><i class=\"fa fa-plug\"></i><span>Topology</span></a></li>\n-            <li wicket:id=\"reportsLI\"><a href=\"#\" wicket:id=\"reports\"><i class=\"fa fa-pie-chart\"></i><span>Reports</span></a></li>\n+            <li wicket:id=\"dashboardLI\"><a href=\"#\" wicket:id=\"dashboard\"><i class=\"fa fa-dashboard\"></i>Dashboard</a></li>\n+            <li wicket:id=\"realmsLI\"><a href=\"#\" wicket:id=\"realms\"><i class=\"fa fa-folder-o\"></i>Realms</a></li>\n+            <li wicket:id=\"topologyLI\"><a href=\"#\" wicket:id=\"topology\"><i class=\"fa fa-plug\"></i>Topology</a></li>\n+            <li wicket:id=\"reportsLI\"><a href=\"#\" wicket:id=\"reports\"><i class=\"fa fa-pie-chart\"></i>Reports</a></li>\n             <li wicket:id=\"configurationLI\" class=\"treeview\">\n               <a href=\"#\"><i class=\"fa fa-edit\"></i><span>Configuration</span> <i class=\"fa fa-angle-left pull-right\"></i></a>\n               <ul wicket:id=\"configurationUL\" class=\"treeview-menu\">\n@@ -109,7 +109,7 @@\n                 <li wicket:id=\"notificationsLI\"><a href=\"#\" wicket:id=\"notifications\"><i class=\"fa fa-envelope-o\"></i>Notifications</a></li>\n               </ul>\n             </li>\n-            <li class=\"treeview\">\n+            <li wicket:id=\"extensionsLI\" class=\"treeview\">\n               <a href=\"#\"><i class=\"fa fa-puzzle-piece\"></i><span>Extensions</span> <i class=\"fa fa-angle-left pull-right\"></i></a>\n               <ul class=\"treeview-menu\" wicket:id=\"extPages\">\n                 <li wicket:id=\"extPageLI\">"}]}