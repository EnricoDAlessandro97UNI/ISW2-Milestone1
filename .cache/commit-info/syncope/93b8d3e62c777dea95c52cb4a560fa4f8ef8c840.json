{"sha":"93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkzYjhkM2U2MmM3NzdkZWE5NWM1MmNiNGE1NjBmYTRmOGVmOGM4NDA=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2019-09-04T12:10:25Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@users.noreply.github.com","date":"2019-09-04T12:10:25Z"},"message":"NOJIRA: Fix checkstyle issues related to line length (#110)","tree":{"sha":"3dd61c1ec39f52f8a53e7ba562738628e4438740","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3dd61c1ec39f52f8a53e7ba562738628e4438740"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"edfb42c8b04289793ed9529803df8a61c04be6a7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edfb42c8b04289793ed9529803df8a61c04be6a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/edfb42c8b04289793ed9529803df8a61c04be6a7"}],"stats":{"total":427,"additions":247,"deletions":180},"files":[{"sha":"2d0fb6d8a251e1b4e455fa1bd000c2c9abee79ba","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvision.java","status":"modified","additions":18,"deletions":15,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvision.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvision.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvision.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -18,17 +18,17 @@\n  */\n package org.apache.syncope.client.console.wizards.resources;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Optional;\n-\n+import org.apache.syncope.client.console.panels.ToggleableTarget;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.to.MappingTO;\n import org.apache.syncope.common.lib.to.OrgUnitTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n-import org.apache.syncope.client.console.panels.ToggleableTarget;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n \n public class ResourceProvision implements ToggleableTarget {\n \n@@ -89,16 +89,16 @@ public final void setOrgUnitTO(final OrgUnitTO orgUnitTO) {\n     @Override\n     public String getKey() {\n         return provisionTO == null\n-                ? Optional.ofNullable(orgUnitTO).map(OrgUnitTO::getKey).orElse(null)\n-                : provisionTO.getKey();\n+            ? Optional.ofNullable(orgUnitTO).map(OrgUnitTO::getKey).orElse(null)\n+            : provisionTO.getKey();\n     }\n \n     @Override\n     public String getAnyType() {\n         return provisionTO == null\n-                ? orgUnitTO == null\n-                        ? null\n-                        : SyncopeConstants.REALM_ANYTYPE : provisionTO.getAnyType();\n+            ? orgUnitTO == null\n+            ? null\n+            : SyncopeConstants.REALM_ANYTYPE : provisionTO.getAnyType();\n     }\n \n     public void setAnyType(final String anyType) {\n@@ -113,7 +113,9 @@ public void setAnyType(final String anyType) {\n \n     public String getObjectClass() {\n         return provisionTO == null\n-                ? Optional.ofNullable(orgUnitTO).map(OrgUnitTO::getObjectClass).orElse(null) : provisionTO.getObjectClass();\n+            ? Optional.ofNullable(orgUnitTO)\n+            .map(OrgUnitTO::getObjectClass)\n+            .orElse(null) : provisionTO.getObjectClass();\n     }\n \n     public void setObjectClass(final String objectClass) {\n@@ -129,7 +131,8 @@ public List<String> getAuxClasses() {\n     }\n \n     public boolean isIgnoreCaseMatch() {\n-        return Optional.ofNullable(provisionTO).map(ProvisionTO::isIgnoreCaseMatch).orElseGet(() -> orgUnitTO.isIgnoreCaseMatch());\n+        return Optional.ofNullable(provisionTO)\n+            .map(ProvisionTO::isIgnoreCaseMatch).orElseGet(() -> orgUnitTO.isIgnoreCaseMatch());\n     }\n \n     public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n@@ -142,8 +145,8 @@ public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n \n     public String getConnObjectLink() {\n         return provisionTO == null\n-                ? Optional.ofNullable(orgUnitTO).map(OrgUnitTO::getConnObjectLink).orElse(null)\n-                : provisionTO.getMapping().getConnObjectLink();\n+            ? Optional.ofNullable(orgUnitTO).map(OrgUnitTO::getConnObjectLink).orElse(null)\n+            : provisionTO.getMapping().getConnObjectLink();\n     }\n \n     public void setConnObjectLink(final String connObjectLink) {"},{"sha":"122411aeebc9bb448aee32293c0e8250069c7576","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -96,7 +96,9 @@ public ResourceProvisionPanel(\n             protected ResourceProvision getActualItem(\n                     final ResourceProvision item, final List<ResourceProvision> list) {\n \n-                return Optional.ofNullable(item).map(resourceProvision -> list.stream().filter(in -> ((resourceProvision.getKey() == null && in.getKey() == null)\n+                return Optional.ofNullable(item)\n+                    .map(resourceProvision -> list.stream()\n+                        .filter(in -> ((resourceProvision.getKey() == null && in.getKey() == null)\n                     || (in.getKey() != null && in.getKey().equals(resourceProvision.getKey())))\n                     && ((resourceProvision.getAnyType() == null && in.getAnyType() == null)\n                     || (in.getAnyType() != null && in.getAnyType().equals(resourceProvision.getAnyType()))))."},{"sha":"bb52e5b088ed12c2df07fcc3005315cb93c5f4a8","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -116,7 +116,8 @@ public Boolean getObject() {\n             @Override\n             @SuppressWarnings(\"unchecked\")\n             public void setObject(final Boolean object) {\n-                item.setModelObject(Optional.ofNullable(object).map(Object::toString).orElseGet(Boolean.FALSE::toString));\n+                item.setModelObject(Optional.ofNullable(object)\n+                    .map(Object::toString).orElseGet(Boolean.FALSE::toString));\n             }\n         };\n "},{"sha":"d964136c239dea8d92e1503896d637ac430766ae","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/status/StatusUtils.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -68,7 +68,8 @@ public static StatusBean getStatusBean(\n \n         if (connObjectTO != null) {\n             Boolean enabled = isEnabled(connObjectTO);\n-            statusBean.setStatus(Optional.ofNullable(enabled).filter(aBoolean -> !aBoolean).map(aBoolean -> Status.SUSPENDED).orElse(Status.ACTIVE));\n+            statusBean.setStatus(Optional.ofNullable(enabled)\n+                .filter(aBoolean -> !aBoolean).map(aBoolean -> Status.SUSPENDED).orElse(Status.ACTIVE));\n \n             statusBean.setConnObjectLink(getConnObjectLink(connObjectTO));\n         }"},{"sha":"6df9e1c78183fbbdf4b6ac1e7ab8dd35eae20373","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -110,7 +110,8 @@ public Iterator<A> iterator(final long first, final long count) {\n             SyncopeConsoleSession.get().error(e.getMessage());\n \n             Optional<AjaxRequestTarget> target = RequestCycle.get().find(AjaxRequestTarget.class);\n-            target.ifPresent(ajaxRequestTarget -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n+            target.ifPresent(ajaxRequestTarget ->\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n         }\n \n         Collections.sort(result, comparator);\n@@ -132,7 +133,8 @@ public long size() {\n             SyncopeConsoleSession.get().error(e.getMessage());\n \n             Optional<AjaxRequestTarget> target = RequestCycle.get().find(AjaxRequestTarget.class);\n-            target.ifPresent(ajaxRequestTarget -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n+            target.ifPresent(ajaxRequestTarget ->\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n         }\n \n         return result;"},{"sha":"8dd4ee51f05bff323097f184fab42e4880282407","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoImplementationInfoProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -63,7 +63,8 @@ public List<String> getClasses(final ImplementationTO implementation, final View\n         if (viewMode == ViewMode.JAVA_CLASS) {\n             Optional<JavaImplInfo> javaClasses = SyncopeConsoleSession.get().getPlatformInfo().\n                     getJavaImplInfo(implementation.getType());\n-            classes = javaClasses.map(javaImplInfo -> new ArrayList<>(javaImplInfo.getClasses())).orElseGet(ArrayList::new);\n+            classes = javaClasses.map(javaImplInfo -> new ArrayList<>(javaImplInfo.getClasses()))\n+                .orElseGet(ArrayList::new);\n         } else if (viewMode == ViewMode.JSON_BODY) {\n             switch (implementation.getType()) {\n                 case IdRepoImplementationType.REPORTLET:"},{"sha":"da114c3d5acc3eef18903089275a069d79a5b112","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -400,7 +400,8 @@ private List<String> getSchemas() {\n             LOG.error(\"While reading all any types\", e);\n         }\n \n-        String[] anyTypeClasses = Optional.ofNullable(type).map(anyTypeTO -> anyTypeTO.getClasses().toArray(new String[]{})).orElseGet(() -> new String[0]);\n+        String[] anyTypeClasses = Optional.ofNullable(type)\n+            .map(anyTypeTO -> anyTypeTO.getClasses().toArray(new String[]{})).orElseGet(() -> new String[0]);\n \n         List<String> result = new ArrayList<>();\n         result.add(\"username\");"},{"sha":"14b17c1a68e17b69019262902d53659b007bc25f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -278,7 +278,8 @@ private void updateResultTable(final boolean create) {\n     private void updateResultTable(final boolean create, final int rows) {\n         dataProvider = dataProvider();\n \n-        final int currentPage = Optional.ofNullable(resultTable).map(table -> (create ? (int) table.getPageCount() - 1 : (int) table.getCurrentPage())).orElse(0);\n+        final int currentPage = Optional.ofNullable(resultTable)\n+            .map(table -> (create ? (int) table.getPageCount() - 1 : (int) table.getCurrentPage())).orElse(0);\n \n         // take care of restClient handle: maybe not useful to keep into\n         AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<T, String>("},{"sha":"d1d04e23cbc82e694b5755a547bf226173cafba0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -384,11 +384,14 @@ protected Component getValueComponent(final String key, final T bean) {\n \n             LOG.debug(\"Field value {}\", value);\n \n-            return Optional.ofNullable(value).map(o -> new Label(\"field\", new ResourceModel(o.toString(), o.toString()))).orElseGet(() -> new Label(\"field\", StringUtils.EMPTY));\n+            return Optional.ofNullable(value)\n+                .map(o -> new Label(\"field\", new ResourceModel(o.toString(), o.toString())))\n+                .orElseGet(() -> new Label(\"field\", StringUtils.EMPTY));\n         }\n \n         protected T getActualItem(final T item, final List<T> list) {\n-            return Optional.ofNullable(item).map(t -> list.stream().filter(t::equals).findAny().orElse(null)).orElse(null);\n+            return Optional.ofNullable(item)\n+                .map(t -> list.stream().filter(t::equals).findAny().orElse(null)).orElse(null);\n         }\n \n         @Override"},{"sha":"1290702fde2ece1fb228f72ede2cc8f36df2dcf6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/TogglePanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -153,7 +153,8 @@ public TogglePanel<T> addInnerObject(final Component... childs) {\n     }\n \n     protected void setHeader(final AjaxRequestTarget target, final String header) {\n-        this.header.setDefaultModelObject(Optional.ofNullable(header).map(s -> s.length() >= 40 ? (s.substring(0, 30) + \" ... \") : s).orElse(StringUtils.EMPTY));\n+        this.header.setDefaultModelObject(Optional.ofNullable(header).map(s -> s.length() >= 40\n+            ? (s.substring(0, 30) + \" ... \") : s).orElse(StringUtils.EMPTY));\n         target.add(this.header);\n     }\n "},{"sha":"8dfe3ec616025198d65f82f11a7df8d224f01bce","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -77,7 +77,8 @@ private static class PolicyComparator implements Comparator<PolicyTO>, Serializa\n \n         @Override\n         public int compare(final PolicyTO left, final PolicyTO right) {\n-            return Optional.ofNullable(left).map(to -> Optional.ofNullable(right).map(policyTO -> to.getDescription().compareTo(policyTO.getDescription())).orElse(1)).orElse(-1);\n+            return Optional.ofNullable(left).map(to -> Optional.ofNullable(right)\n+                .map(policyTO -> to.getDescription().compareTo(policyTO.getDescription())).orElse(1)).orElse(-1);\n         }\n \n     }"},{"sha":"2882bff64195fa026976a3457a1097a5c9d9bb7c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -47,7 +47,8 @@ public AnyObjectWizardBuilder(\n             final AnyObjectFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n \n-        super(Optional.ofNullable(anyObjectTO).map(AnyObjectWrapper::new).orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n+        super(Optional.ofNullable(anyObjectTO).map(AnyObjectWrapper::new)\n+            .orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     /**"},{"sha":"36c347e2076b7ce3af6466d3ebe3affc97d33589","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -96,8 +96,10 @@ protected void populateItem(final ListItem<String> item) {\n                 final String prop = item.getModelObject();\n \n                 final Fragment valueFragment;\n-                final Attr left = Optional.ofNullable(leftProfile).map(stringAttrMap -> stringAttrMap.get(prop)).orElse(null);\n-                final Attr right = Optional.ofNullable(rightProfile).map(profile -> profile.get(prop)).orElse(null);\n+                final Attr left = Optional.ofNullable(leftProfile)\n+                    .map(stringAttrMap -> stringAttrMap.get(prop)).orElse(null);\n+                final Attr right = Optional.ofNullable(rightProfile)\n+                    .map(profile -> profile.get(prop)).orElse(null);\n \n                 valueFragment = new Fragment(\"value\", \"doubleValue\", ConnObjectPanel.this);\n                 valueFragment.add(getValuePanel(\"leftAttribute\", prop, left)."},{"sha":"971af2e46e345c75168c914bd3187426ef414dfe","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -50,7 +50,8 @@ public GroupWizardBuilder(\n             final GroupFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n \n-        super(Optional.ofNullable(groupTO).map(GroupWrapper::new).orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n+        super(Optional.ofNullable(groupTO).map(GroupWrapper::new)\n+            .orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     /**"},{"sha":"598bcbe1f6a22fa05eb123be2ba0466d79025b02","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -131,7 +131,8 @@ protected Details<UserTO> addOptionalDetailsPanel(final AnyWrapper<UserTO> model\n      */\n     @Override\n     public UserWizardBuilder setItem(final AnyWrapper<UserTO> item) {\n-        super.setItem(Optional.ofNullable(item).map(userTOAnyWrapper -> new UserWrapper(userTOAnyWrapper.getInnerObject())).orElse(null));\n+        super.setItem(Optional.ofNullable(item)\n+            .map(userTOAnyWrapper -> new UserWrapper(userTOAnyWrapper.getInnerObject())).orElse(null));\n         return this;\n     }\n }"},{"sha":"e2a82bbf53d43fc2ea7d20242afea6b405f106f7","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/UserWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -125,7 +125,8 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n      */\n     @Override\n     public UserWizardBuilder setItem(final AnyWrapper<UserTO> item) {\n-        super.setItem(Optional.ofNullable(item).map(userTOAnyWrapper -> new UserWrapper(userTOAnyWrapper.getInnerObject())).orElse(null));\n+        super.setItem(Optional.ofNullable(item)\n+            .map(userTOAnyWrapper -> new UserWrapper(userTOAnyWrapper.getInnerObject())).orElse(null));\n         return this;\n     }\n "},{"sha":"85b3c176cc3c48386054746032994acf443a329a","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -63,7 +63,8 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n \n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n-        return Optional.ofNullable(connObjectKeyItem).map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+        return Optional.ofNullable(connObjectKeyItem)\n+            .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n     @XmlElementWrapper(name = \"items\")\n@@ -76,7 +77,8 @@ public List<ItemTO> getItems() {\n \n     @Override\n     public boolean add(final ItemTO item) {\n-        return Optional.ofNullable(item).filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+        return Optional.ofNullable(item)\n+            .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {"},{"sha":"6897d5370bb878835647cc9fde9db80af46e6ca9","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/OrgUnitTO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -102,7 +102,8 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n \n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n-        return Optional.ofNullable(connObjectKeyItem).map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+        return Optional.ofNullable(connObjectKeyItem)\n+            .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n     @XmlElementWrapper(name = \"items\")\n@@ -115,7 +116,8 @@ public List<ItemTO> getItems() {\n \n     @Override\n     public boolean add(final ItemTO item) {\n-        return Optional.ofNullable(item).filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+        return Optional.ofNullable(item)\n+            .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {"},{"sha":"368b97c3e556bb3f089b2b286e01b5b6807a747c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/SyncopeClientCompositeException.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientCompositeException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientCompositeException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientCompositeException.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -70,7 +70,8 @@ public boolean addException(final SyncopeClientException exception) {\n         Optional<SyncopeClientException> alreadyAdded =\n                 exceptions.stream().filter(ex -> ex.getType() == exception.getType()).findFirst();\n \n-        return alreadyAdded.map(e -> e.getElements().addAll(exception.getElements())).orElseGet(() -> exceptions.add(exception));\n+        return alreadyAdded.map(e -> e.getElements()\n+            .addAll(exception.getElements())).orElseGet(() -> exceptions.add(exception));\n     }\n \n     @Override"},{"sha":"d13b39aa9ad68d2467263c2255404ae542862b47","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -373,7 +373,8 @@ protected Triple<JobType, String, String> getReference(final JobKey jobKey) {\n         String key = JobNamer.getReportKeyFromJobName(jobKey.getName());\n \n         Report report = reportDAO.find(key);\n-        return Optional.ofNullable(report).map(report1 -> Triple.of(JobType.REPORT, key, binder.buildRefDesc(report1))).orElse(null);\n+        return Optional.ofNullable(report)\n+            .map(report1 -> Triple.of(JobType.REPORT, key, binder.buildRefDesc(report1))).orElse(null);\n     }\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.REPORT_LIST + \"')\")"},{"sha":"09c8aff15184bc04878e61e6c78156c9336c4964","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -319,6 +319,7 @@ private String getPersistenceErrorMessage(final Throwable ex) {\n             message = env.getProperty(\"errMessage.\" + UNIQUE_MSG_KEY);\n         }\n \n-        return Optional.ofNullable(message).orElseGet(() -> (ex.getCause() == null) ? ex.getMessage() : ex.getCause().getMessage());\n+        return Optional.ofNullable(message)\n+            .orElseGet(() -> (ex.getCause() == null) ? ex.getMessage() : ex.getCause().getMessage());\n     }\n }"},{"sha":"05f633870e7c33a18984b38df7134a1ac5e4a60e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultPullCorrelationRule.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -61,7 +61,8 @@ public SearchCond getSearchCond(final SyncDelta syncDelta, final Provision provi\n \n         conf.getSchemas().forEach(schema -> {\n             Item item = mappingItems.get(schema);\n-            Attribute attr = Optional.ofNullable(item).map(item1 -> syncDelta.getObject().getAttributeByName(item1.getExtAttrName())).orElse(null);\n+            Attribute attr = Optional.ofNullable(item)\n+                .map(item1 -> syncDelta.getObject().getAttributeByName(item1.getExtAttrName())).orElse(null);\n             if (attr == null) {\n                 throw new IllegalArgumentException(\n                         \"Connector object does not contains the attributes to perform the search: \" + schema);"},{"sha":"ab2721848210d1e18c21abf58c87e0436c9bdef6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyMatchDAO.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -183,7 +183,8 @@ private boolean matches(\n \n     private boolean matches(final Any<?> any, final AssignableCond cond, final boolean not) {\n         Realm realm = realmDAO.findByFullPath(cond.getRealmFullPath());\n-        boolean found = Optional.ofNullable(realm).filter(realm1 -> (cond.isFromGroup() ? realmDAO.findDescendants(realm1) : realmDAO.findAncestors(realm1)).\n+        boolean found = Optional.ofNullable(realm)\n+            .filter(realm1 -> (cond.isFromGroup() ? realmDAO.findDescendants(realm1) : realmDAO.findAncestors(realm1)).\n             stream().anyMatch(item -> item.equals(any.getRealm()))).isPresent();\n         return not ? !found : found;\n     }"},{"sha":"9f9b14a6b8af19b0d121248352e4a4d94192f176","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAnnotatedEntity.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -106,6 +106,7 @@ public Date getLastChangeDate() {\n \n     @Override\n     public void setLastChangeDate(final Date lastChangeDate) {\n-        this.lastChangeDate = Optional.ofNullable(lastChangeDate).map(changeDate -> new Date(changeDate.getTime())).orElse(null);\n+        this.lastChangeDate = Optional.ofNullable(lastChangeDate)\n+            .map(changeDate -> new Date(changeDate.getTime())).orElse(null);\n     }\n }"},{"sha":"f4768c1ffbcd066284a2b5fdc9116ae0ce3e2748","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAOrgUnit.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -88,7 +88,8 @@ public void setObjectClass(final ObjectClass objectClass) {\n \n     @Override\n     public SyncToken getSyncToken() {\n-        return Optional.ofNullable(serializedSyncToken).map(syncToken -> POJOHelper.deserialize(syncToken, SyncToken.class)).orElse(null);\n+        return Optional.ofNullable(serializedSyncToken)\n+            .map(syncToken -> POJOHelper.deserialize(syncToken, SyncToken.class)).orElse(null);\n     }\n \n     @Override"},{"sha":"6daf255881d2d39d0e507749fae55907d822eb48","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAProvision.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -133,7 +133,8 @@ public List<? extends AnyTypeClass> getAuxClasses() {\n \n     @Override\n     public SyncToken getSyncToken() {\n-        return Optional.ofNullable(serializedSyncToken).map(syncToken -> POJOHelper.deserialize(syncToken, SyncToken.class)).orElse(null);\n+        return Optional.ofNullable(serializedSyncToken)\n+            .map(syncToken -> POJOHelper.deserialize(syncToken, SyncToken.class)).orElse(null);\n     }\n \n     @Override"},{"sha":"073a889f4c38a17e431ad128a25a740679a5beeb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUser.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -312,7 +312,8 @@ public Date getTokenExpireTime() {\n \n     @Override\n     public boolean checkToken(final String token) {\n-        return Optional.ofNullable(this.token).map(s -> s.equals(token) && !hasTokenExpired()).orElseGet(() -> token == null);\n+        return Optional.ofNullable(this.token)\n+            .map(s -> s.equals(token) && !hasTokenExpired()).orElseGet(() -> token == null);\n     }\n \n     @Override\n@@ -332,7 +333,8 @@ public Date getChangePwdDate() {\n \n     @Override\n     public void setChangePwdDate(final Date changePwdDate) {\n-        this.changePwdDate = Optional.ofNullable(changePwdDate).map(pwdDate -> new Date(pwdDate.getTime())).orElse(null);\n+        this.changePwdDate = Optional.ofNullable(changePwdDate)\n+            .map(pwdDate -> new Date(pwdDate.getTime())).orElse(null);\n     }\n \n     @Override\n@@ -352,7 +354,8 @@ public Date getLastLoginDate() {\n \n     @Override\n     public void setLastLoginDate(final Date lastLoginDate) {\n-        this.lastLoginDate = Optional.ofNullable(lastLoginDate).map(loginDate -> new Date(loginDate.getTime())).orElse(null);\n+        this.lastLoginDate = Optional.ofNullable(lastLoginDate)\n+            .map(loginDate -> new Date(loginDate.getTime())).orElse(null);\n     }\n \n     @Override"},{"sha":"f5ee2e7979479b552b73f8c0bc13c165a22c0f6d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/openjpa/BooleanValueHandler.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -48,7 +48,8 @@ public static BooleanValueHandler getInstance() {\n     @Override\n     public Column[] map(final ValueMapping vm, final String name, final ColumnIO io, final boolean adapt) {\n         DBDictionary dict = vm.getMappingRepository().getDBDictionary();\n-        DBIdentifier colName = DBIdentifier.newColumn(name, Optional.ofNullable(dict).filter(DBDictionary::delimitAll).isPresent());\n+        DBIdentifier colName = DBIdentifier.newColumn(name, Optional.ofNullable(dict)\n+            .filter(DBDictionary::delimitAll).isPresent());\n         return map(vm, colName, io, adapt);\n     }\n "},{"sha":"6a7a00aa1a5e9d752a2475a6a55e4850d28d4a90","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/openjpa/LocaleValueHandler.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -49,7 +49,8 @@ public static LocaleValueHandler getInstance() {\n     @Override\n     public Column[] map(final ValueMapping vm, final String name, final ColumnIO io, final boolean adapt) {\n         DBDictionary dict = vm.getMappingRepository().getDBDictionary();\n-        DBIdentifier colName = DBIdentifier.newColumn(name, Optional.ofNullable(dict).filter(DBDictionary::delimitAll).isPresent());\n+        DBIdentifier colName = DBIdentifier.newColumn(name, Optional.ofNullable(dict)\n+            .filter(DBDictionary::delimitAll).isPresent());\n         return map(vm, colName, io, adapt);\n     }\n "},{"sha":"9c727ce18e21aa13442084b8b195516346e56530","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -636,7 +636,8 @@ private String getGroupOwnerValue(final Provision provision, final Any<?> any) {\n             preparedAttr = prepareAttr(provision, connObjectKeyItem.get(), any, null);\n         }\n \n-        return Optional.ofNullable(preparedAttr).map(attr -> MappingUtils.evaluateNAME(any, provision, attr.getKey()).getNameValue()).orElse(null);\n+        return Optional.ofNullable(preparedAttr)\n+            .map(attr -> MappingUtils.evaluateNAME(any, provision, attr.getKey()).getNameValue()).orElse(null);\n     }\n \n     @Transactional(readOnly = true)\n@@ -665,7 +666,8 @@ public Optional<String> getConnObjectKeyValue(final Any<?> any, final Provision\n     public Optional<String> getConnObjectKeyValue(final Realm realm, final OrgUnit orgUnit) {\n         OrgUnitItem orgUnitItem = orgUnit.getConnObjectKeyItem().get();\n \n-        return Optional.ofNullable(Optional.ofNullable(orgUnitItem).map(unitItem -> getIntValue(realm, unitItem)).orElse(null));\n+        return Optional.ofNullable(Optional.ofNullable(orgUnitItem)\n+            .map(unitItem -> getIntValue(realm, unitItem)).orElse(null));\n     }\n \n     @Transactional(readOnly = true)"},{"sha":"1f000a53dc60df5555e603ed5ba2a7173f79f344","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -625,7 +625,8 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n         ConnInstance connector = resource.getConnector();\n \n         resourceTO.setConnector(Optional.ofNullable(connector).map(Entity::getKey).orElse(null));\n-        resourceTO.setConnectorDisplayName(Optional.ofNullable(connector).map(ConnInstance::getDisplayName).orElse(null));\n+        resourceTO.setConnectorDisplayName(Optional.ofNullable(connector)\n+            .map(ConnInstance::getDisplayName).orElse(null));\n \n         // set the provision information\n         resource.getProvisions().forEach(provision -> {"},{"sha":"ccdaf88de87771c961fb32de44b5553ce03adecb","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -124,7 +124,8 @@ protected void doExecute(\n                 execStatus = ExecStatus.FAILURE;\n             }\n             if (execStatus != ExecStatus.SUCCESS) {\n-                throw new PropagationException(task.getResource(), Optional.ofNullable(execution).map(Exec::getMessage).orElse(null));\n+                throw new PropagationException(task.getResource(), Optional.ofNullable(execution)\n+                    .map(Exec::getMessage).orElse(null));\n             }\n         });\n "},{"sha":"1a5d3c7a90178438cbe9e75d5e88c910db83456f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":116,"deletions":112,"changes":228,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -18,46 +18,36 @@\n  */\n package org.apache.syncope.core.provisioning.java.propagation;\n \n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.Set;\n-import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n+import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n+import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n-import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n-import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n-import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n-import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n-import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n+import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnit;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n+import org.apache.syncope.core.provisioning.api.PropagationByResource;\n+import org.apache.syncope.core.provisioning.api.WorkflowResult;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskInfo;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n+import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -67,10 +57,21 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n /**\n  * Manage the data propagation to external resources.\n  */\n-@Transactional(rollbackFor = { Throwable.class })\n+@Transactional(rollbackFor = {Throwable.class})\n public class PropagationManagerImpl implements PropagationManager {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(PropagationManager.class);\n@@ -135,35 +136,35 @@ protected AnyDAO<? extends Any<?>> dao(final AnyTypeKind kind) {\n \n     @Override\n     public List<PropagationTaskInfo> getCreateTasks(\n-            final AnyTypeKind kind,\n-            final String key,\n-            final Boolean enable,\n-            final PropagationByResource propByRes,\n-            final Collection<Attr> vAttrs,\n-            final Collection<String> noPropResourceKeys) {\n+        final AnyTypeKind kind,\n+        final String key,\n+        final Boolean enable,\n+        final PropagationByResource propByRes,\n+        final Collection<Attr> vAttrs,\n+        final Collection<String> noPropResourceKeys) {\n \n         return getCreateTasks(dao(kind).authFind(key), null, enable, propByRes, vAttrs, noPropResourceKeys);\n     }\n \n     @Override\n     public List<PropagationTaskInfo> getUserCreateTasks(\n-            final String key,\n-            final String password,\n-            final Boolean enable,\n-            final PropagationByResource propByRes,\n-            final Collection<Attr> vAttrs,\n-            final Collection<String> noPropResourceKeys) {\n+        final String key,\n+        final String password,\n+        final Boolean enable,\n+        final PropagationByResource propByRes,\n+        final Collection<Attr> vAttrs,\n+        final Collection<String> noPropResourceKeys) {\n \n         return getCreateTasks(userDAO.authFind(key), password, enable, propByRes, vAttrs, noPropResourceKeys);\n     }\n \n     protected List<PropagationTaskInfo> getCreateTasks(\n-            final Any<?> any,\n-            final String password,\n-            final Boolean enable,\n-            final PropagationByResource propByRes,\n-            final Collection<Attr> vAttrs,\n-            final Collection<String> noPropResourceKeys) {\n+        final Any<?> any,\n+        final String password,\n+        final Boolean enable,\n+        final PropagationByResource propByRes,\n+        final Collection<Attr> vAttrs,\n+        final Collection<String> noPropResourceKeys) {\n \n         if (propByRes == null || propByRes.isEmpty()) {\n             return Collections.<PropagationTaskInfo>emptyList();\n@@ -178,33 +179,33 @@ protected List<PropagationTaskInfo> getCreateTasks(\n \n     @Override\n     public List<PropagationTaskInfo> getUpdateTasks(\n-            final AnyTypeKind kind,\n-            final String key,\n-            final boolean changePwd,\n-            final Boolean enable,\n-            final PropagationByResource propByRes,\n-            final Collection<Attr> vAttrs,\n-            final Collection<String> noPropResourceKeys) {\n+        final AnyTypeKind kind,\n+        final String key,\n+        final boolean changePwd,\n+        final Boolean enable,\n+        final PropagationByResource propByRes,\n+        final Collection<Attr> vAttrs,\n+        final Collection<String> noPropResourceKeys) {\n \n         return getUpdateTasks(dao(kind).authFind(key), null, changePwd, enable, propByRes, vAttrs, noPropResourceKeys);\n     }\n \n     @Override\n     public List<PropagationTaskInfo> getUserUpdateTasks(\n-            final WorkflowResult<Pair<UserUR, Boolean>> wfResult,\n-            final boolean changePwd,\n-            final Collection<String> noPropResourceKeys) {\n+        final WorkflowResult<Pair<UserUR, Boolean>> wfResult,\n+        final boolean changePwd,\n+        final Collection<String> noPropResourceKeys) {\n \n         return getUpdateTasks(\n-                userDAO.authFind(wfResult.getResult().getLeft().getKey()),\n-                wfResult.getResult().getKey().getPassword() == null\n+            userDAO.authFind(wfResult.getResult().getLeft().getKey()),\n+            wfResult.getResult().getKey().getPassword() == null\n                 ? null\n                 : wfResult.getResult().getKey().getPassword().getValue(),\n-                changePwd,\n-                wfResult.getResult().getValue(),\n-                wfResult.getPropByRes(),\n-                wfResult.getResult().getKey().getVirAttrs(),\n-                noPropResourceKeys);\n+            changePwd,\n+            wfResult.getResult().getValue(),\n+            wfResult.getPropByRes(),\n+            wfResult.getResult().getKey().getVirAttrs(),\n+            noPropResourceKeys);\n     }\n \n     @Override\n@@ -222,7 +223,7 @@ public List<PropagationTaskInfo> getUserUpdateTasks(final WorkflowResult<Pair<Us\n             // b. generate the propagation task list in two phases: first the ones containing password,\n             // the the rest (with no password)\n             WorkflowResult<Pair<UserUR, Boolean>> pwdWFResult = new WorkflowResult<>(\n-                    wfResult.getResult(), new PropagationByResource(), wfResult.getPerformedTasks());\n+                wfResult.getResult(), new PropagationByResource(), wfResult.getPerformedTasks());\n \n             Set<String> pwdResourceNames = new HashSet<>(userUR.getPassword().getResources());\n             Collection<String> allResourceNames = userDAO.findAllResourceKeys(userUR.getKey());\n@@ -232,14 +233,14 @@ public List<PropagationTaskInfo> getUserUpdateTasks(final WorkflowResult<Pair<Us\n             if (!pwdWFResult.getPropByRes().isEmpty()) {\n                 Set<String> toBeExcluded = new HashSet<>(allResourceNames);\n                 toBeExcluded.addAll(userUR.getResources().stream().\n-                        map(patchItem -> patchItem.getValue()).collect(Collectors.toList()));\n+                    map(patchItem -> patchItem.getValue()).collect(Collectors.toList()));\n                 toBeExcluded.removeAll(pwdResourceNames);\n \n                 tasks.addAll(getUserUpdateTasks(pwdWFResult, true, toBeExcluded));\n             }\n \n             WorkflowResult<Pair<UserUR, Boolean>> noPwdWFResult = new WorkflowResult<>(\n-                    wfResult.getResult(), new PropagationByResource(), wfResult.getPerformedTasks());\n+                wfResult.getResult(), new PropagationByResource(), wfResult.getPerformedTasks());\n \n             noPwdWFResult.getPropByRes().merge(wfResult.getPropByRes());\n             noPwdWFResult.getPropByRes().removeAll(pwdResourceNames);\n@@ -255,34 +256,34 @@ public List<PropagationTaskInfo> getUserUpdateTasks(final WorkflowResult<Pair<Us\n     }\n \n     protected List<PropagationTaskInfo> getUpdateTasks(\n-            final Any<?> any,\n-            final String password,\n-            final boolean changePwd,\n-            final Boolean enable,\n-            final PropagationByResource propByRes,\n-            final Collection<Attr> vAttrs,\n-            final Collection<String> noPropResourceKeys) {\n+        final Any<?> any,\n+        final String password,\n+        final boolean changePwd,\n+        final Boolean enable,\n+        final PropagationByResource propByRes,\n+        final Collection<Attr> vAttrs,\n+        final Collection<String> noPropResourceKeys) {\n \n         if (noPropResourceKeys != null && propByRes != null) {\n             propByRes.removeAll(noPropResourceKeys);\n         }\n \n         return createTasks(\n-                any,\n-                password,\n-                changePwd,\n-                enable,\n-                false,\n+            any,\n+            password,\n+            changePwd,\n+            enable,\n+            false,\n             Optional.ofNullable(propByRes).orElseGet(PropagationByResource::new),\n-                vAttrs);\n+            vAttrs);\n     }\n \n     @Override\n     public List<PropagationTaskInfo> getDeleteTasks(\n-            final AnyTypeKind kind,\n-            final String key,\n-            final PropagationByResource propByRes,\n-            final Collection<String> noPropResourceKeys) {\n+        final AnyTypeKind kind,\n+        final String key,\n+        final PropagationByResource propByRes,\n+        final Collection<String> noPropResourceKeys) {\n \n         Any<?> any = dao(kind).authFind(key);\n \n@@ -302,29 +303,30 @@ public List<PropagationTaskInfo> getDeleteTasks(\n     }\n \n     protected List<PropagationTaskInfo> getDeleteTasks(\n-            final Any<?> any,\n-            final PropagationByResource propByRes,\n-            final Collection<String> noPropResourceKeys) {\n+        final Any<?> any,\n+        final PropagationByResource propByRes,\n+        final Collection<String> noPropResourceKeys) {\n \n         return createTasks(any, null, false, false, true, propByRes, null);\n     }\n \n     /**\n      * Create propagation tasks.\n      *\n-     * @param any to be provisioned\n-     * @param password clear text password to be provisioned\n-     * @param changePwd whether password should be included for propagation attributes or not\n-     * @param enable whether user must be enabled or not\n+     * @param any              to be provisioned\n+     * @param password         clear text password to be provisioned\n+     * @param changePwd        whether password should be included for propagation attributes or not\n+     * @param enable           whether user must be enabled or not\n      * @param deleteOnResource whether any must be deleted anyway from external resource or not\n-     * @param propByRes operation to be performed per resource\n-     * @param vAttrs virtual attributes to be set\n+     * @param propByRes        operation to be performed per resource\n+     * @param vAttrs           virtual attributes to be set\n      * @return list of propagation tasks created\n      */\n     protected List<PropagationTaskInfo> createTasks(final Any<?> any,\n-            final String password, final boolean changePwd,\n-            final Boolean enable, final boolean deleteOnResource, final PropagationByResource propByRes,\n-            final Collection<Attr> vAttrs) {\n+                                                    final String password, final boolean changePwd,\n+                                                    final Boolean enable, final boolean deleteOnResource,\n+                                                    final PropagationByResource propByRes,\n+                                                    final Collection<Attr> vAttrs) {\n \n         LOG.debug(\"Provisioning {}:\\n{}\", any, propByRes);\n \n@@ -347,8 +349,8 @@ protected List<PropagationTaskInfo> createTasks(final Any<?> any,\n                 } else if (schema.isReadonly()) {\n                     LOG.warn(\"Ignoring read-only {} {}\", VirSchema.class.getSimpleName(), vAttr.getSchema());\n                 } else if (anyUtilsFactory.getInstance(any).dao().\n-                        findAllowedSchemas(any, VirSchema.class).contains(schema)\n-                        && virtualResources.contains(schema.getProvision().getResource().getKey())) {\n+                    findAllowedSchemas(any, VirSchema.class).contains(schema)\n+                    && virtualResources.contains(schema.getProvision().getResource().getKey())) {\n \n                     Set<Attribute> values = vAttrMap.get(schema.getProvision().getResource().getKey());\n                     if (values == null) {\n@@ -362,7 +364,7 @@ protected List<PropagationTaskInfo> createTasks(final Any<?> any,\n                     }\n                 } else {\n                     LOG.warn(\"{} not owned by or {} not allowed for {}\",\n-                            schema.getProvision().getResource(), schema, any);\n+                        schema.getProvision().getResource(), schema, any);\n                 }\n             });\n         }\n@@ -372,19 +374,21 @@ protected List<PropagationTaskInfo> createTasks(final Any<?> any,\n \n         propByRes.asMap().forEach((resourceKey, operation) -> {\n             ExternalResource resource = resourceDAO.find(resourceKey);\n-            Provision provision = Optional.ofNullable(resource).map(externalResource -> externalResource.getProvision(any.getType()).orElse(null)).orElse(null);\n+            Provision provision = Optional.ofNullable(resource)\n+                .map(externalResource -> externalResource.getProvision(any.getType())\n+                    .orElse(null)).orElse(null);\n             List<? extends Item> mappingItems = provision == null\n-                    ? Collections.<Item>emptyList()\n-                    : MappingUtils.getPropagationItems(provision.getMapping().getItems());\n+                ? Collections.<Item>emptyList()\n+                : MappingUtils.getPropagationItems(provision.getMapping().getItems());\n \n             if (resource == null) {\n                 LOG.error(\"Invalid resource name specified: {}, ignoring...\", resourceKey);\n             } else if (provision == null) {\n                 LOG.error(\"No provision specified on resource {} for type {}, ignoring...\",\n-                        resource, any.getType());\n+                    resource, any.getType());\n             } else if (mappingItems.isEmpty()) {\n                 LOG.warn(\"Requesting propagation for {} but no propagation mapping provided for {}\",\n-                        any.getType(), resource);\n+                    any.getType(), resource);\n             } else {\n                 PropagationTaskInfo task = new PropagationTaskInfo();\n                 task.setResource(resource.getKey());\n@@ -398,30 +402,30 @@ protected List<PropagationTaskInfo> createTasks(final Any<?> any,\n                 task.setOldConnObjectKey(propByRes.getOldConnObjectKey(resource.getKey()));\n \n                 Pair<String, Set<Attribute>> preparedAttrs =\n-                        mappingManager.prepareAttrs(any, password, changePwd, enable, provision);\n+                    mappingManager.prepareAttrs(any, password, changePwd, enable, provision);\n                 task.setConnObjectKey(preparedAttrs.getKey());\n \n                 // Check if any of mandatory attributes (in the mapping) is missing or not received any value: \n                 // if so, add special attributes that will be evaluated by PropagationTaskExecutor\n                 List<String> mandatoryMissing = new ArrayList<>();\n                 List<String> mandatoryNullOrEmpty = new ArrayList<>();\n                 mappingItems.stream().filter(item -> (!item.isConnObjectKey()\n-                        && JexlUtils.evaluateMandatoryCondition(item.getMandatoryCondition(), any))).\n-                        forEachOrdered(item -> {\n-                            Attribute attr = AttributeUtil.find(item.getExtAttrName(), preparedAttrs.getValue());\n-                            if (attr == null) {\n-                                mandatoryMissing.add(item.getExtAttrName());\n-                            } else if (attr.getValue() == null || attr.getValue().isEmpty()) {\n-                                mandatoryNullOrEmpty.add(item.getExtAttrName());\n-                            }\n-                        });\n+                    && JexlUtils.evaluateMandatoryCondition(item.getMandatoryCondition(), any))).\n+                    forEachOrdered(item -> {\n+                        Attribute attr = AttributeUtil.find(item.getExtAttrName(), preparedAttrs.getValue());\n+                        if (attr == null) {\n+                            mandatoryMissing.add(item.getExtAttrName());\n+                        } else if (attr.getValue() == null || attr.getValue().isEmpty()) {\n+                            mandatoryNullOrEmpty.add(item.getExtAttrName());\n+                        }\n+                    });\n                 if (!mandatoryMissing.isEmpty()) {\n                     preparedAttrs.getValue().add(AttributeBuilder.build(\n-                            PropagationTaskExecutor.MANDATORY_MISSING_ATTR_NAME, mandatoryMissing));\n+                        PropagationTaskExecutor.MANDATORY_MISSING_ATTR_NAME, mandatoryMissing));\n                 }\n                 if (!mandatoryNullOrEmpty.isEmpty()) {\n                     preparedAttrs.getValue().add(AttributeBuilder.build(\n-                            PropagationTaskExecutor.MANDATORY_NULL_OR_EMPTY_ATTR_NAME, mandatoryNullOrEmpty));\n+                        PropagationTaskExecutor.MANDATORY_NULL_OR_EMPTY_ATTR_NAME, mandatoryNullOrEmpty));\n                 }\n \n                 if (vAttrMap.containsKey(resource.getKey())) {\n@@ -441,9 +445,9 @@ protected List<PropagationTaskInfo> createTasks(final Any<?> any,\n \n     @Override\n     public List<PropagationTaskInfo> createTasks(\n-            final Realm realm,\n-            final PropagationByResource propByRes,\n-            final Collection<String> noPropResourceKeys) {\n+        final Realm realm,\n+        final PropagationByResource propByRes,\n+        final Collection<String> noPropResourceKeys) {\n \n         if (noPropResourceKeys != null) {\n             propByRes.removeAll(noPropResourceKeys);\n@@ -467,7 +471,7 @@ public List<PropagationTaskInfo> createTasks(\n                 LOG.error(\"No orgUnit specified on resource {}, ignoring...\", resource);\n             } else if (StringUtils.isBlank(orgUnit.getConnObjectLink())) {\n                 LOG.warn(\"Requesting propagation for {} but no ConnObjectLink provided for {}\",\n-                        realm.getFullPath(), resource);\n+                    realm.getFullPath(), resource);\n             } else {\n                 PropagationTaskInfo task = new PropagationTaskInfo();\n                 task.setResource(resource.getKey());"},{"sha":"7e143174f3a3045179e09870c4813a4bf2c7eae0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DBPasswordPullActions.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -85,7 +85,8 @@ public void beforeUpdate(\n \n         if (anyUR instanceof UserUR) {\n             PasswordPatch modPassword = ((UserUR) anyUR).getPassword();\n-            parseEncodedPassword(Optional.ofNullable(modPassword).map(AbstractPatchItem::getValue).orElse(null), profile.getConnector());\n+            parseEncodedPassword(Optional.ofNullable(modPassword)\n+                .map(AbstractPatchItem::getValue).orElse(null), profile.getConnector());\n         }\n     }\n "},{"sha":"5b992bddce51323027809456fe6ab260f02d8958","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushUtils.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushUtils.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -70,7 +70,9 @@ public List<ConnectorObject> match(\n         }\n \n         try {\n-            return rule.map(pushCorrelationRule -> findByCorrelationRule(connector, any, provision, pushCorrelationRule)).orElseGet(() -> findByConnObjectKey(connector, any, provision));\n+            return rule\n+                .map(pushCorrelationRule -> findByCorrelationRule(connector, any, provision, pushCorrelationRule))\n+                .orElseGet(() -> findByConnObjectKey(connector, any, provision));\n         } catch (RuntimeException e) {\n             LOG.error(\"Could not match {} with any existing {}\", any, provision.getObjectClass(), e);\n             return Collections.<ConnectorObject>emptyList();"},{"sha":"511c78769bd6a49e270baa72a6d59c1b06e509d2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -117,7 +117,8 @@ public static String getPassword(final Object pwd) {\n      * @return transfer object\n      */\n     public static ConnObjectTO getConnObjectTO(final ConnectorObject connObject) {\n-        return Optional.ofNullable(connObject).map(object -> getConnObjectTO(object.getAttributes())).orElseGet(ConnObjectTO::new);\n+        return Optional.ofNullable(connObject)\n+            .map(object -> getConnObjectTO(object.getAttributes())).orElseGet(ConnObjectTO::new);\n     }\n \n     /**"},{"sha":"c82adbe032f31cd7859aefe6a8f6e556f75b8680","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/ApplicationContextProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -40,7 +40,8 @@ public static void setApplicationContext(final ConfigurableApplicationContext ct\n     }\n \n     public static DefaultListableBeanFactory getBeanFactory() {\n-        return Optional.ofNullable(BEAN_FACTORY).orElseGet(() -> Optional.ofNullable(CTX).map(ctx -> (DefaultListableBeanFactory) ctx.getBeanFactory()).orElse(null));\n+        return Optional.ofNullable(BEAN_FACTORY).orElseGet(()\n+            -> Optional.ofNullable(CTX).map(ctx -> (DefaultListableBeanFactory) ctx.getBeanFactory()).orElse(null));\n     }\n \n     public static void setBeanFactory(final DefaultListableBeanFactory beanFactory) {"},{"sha":"532cd65df110161f2760f57450957eaf902fc6a7","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -300,7 +300,9 @@ protected UserRequestFormPropertyType fromFlowableFormType(final FormType flowab\n     }\n \n     protected UserRequestForm getForm(final Task task) {\n-        return Optional.ofNullable(task).map(task1 -> FlowableUserRequestHandler.this.getForm(task1, engine.getFormService().getTaskFormData(task1.getId()))).orElse(null);\n+        return Optional.ofNullable(task)\n+            .map(t -> FlowableUserRequestHandler.this.getForm(t, engine.getFormService().getTaskFormData(t.getId())))\n+            .orElse(null);\n     }\n \n     protected UserRequestForm getForm(final Task task, final TaskFormData fd) {"},{"sha":"b0e85e79b52ba0eb31e5a8634e0dc3b8fa8f7f0f","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCProviderTO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -206,7 +206,8 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n \n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n-        return Optional.ofNullable(connObjectKeyItem).map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+        return Optional.ofNullable(connObjectKeyItem)\n+            .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n     @XmlElementWrapper(name = \"items\")\n@@ -219,7 +220,8 @@ public List<ItemTO> getItems() {\n \n     @Override\n     public boolean add(final ItemTO item) {\n-        return Optional.ofNullable(item).filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+        return Optional.ofNullable(item)\n+            .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {"},{"sha":"36ccecf0280be30f689b1ecf317ac28f3816c026","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/OIDCClientLogic.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -330,7 +330,9 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n \n                 return responseTO;\n             } else {\n-                throw new NotFoundException(Optional.ofNullable(keyValue).map(value -> \"User matching the provided value \" + value).orElse(\"User marching the provided claims\"));\n+                throw new NotFoundException(Optional.ofNullable(keyValue)\n+                    .map(value -> \"User matching the provided value \" + value)\n+                    .orElse(\"User marching the provided claims\"));\n             }\n         } else if (matchingUsers.size() > 1) {\n             throw new IllegalArgumentException(\"Several users match the provided value \" + keyValue);"},{"sha":"b7afd9da442b87fcc7a76dead01d1e809049fd01","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2IdPTO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -179,7 +179,8 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n \n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n-        return Optional.ofNullable(connObjectKeyItem).map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+        return Optional.ofNullable(connObjectKeyItem)\n+            .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n     @XmlElementWrapper(name = \"items\")\n@@ -192,7 +193,8 @@ public List<ItemTO> getItems() {\n \n     @Override\n     public boolean add(final ItemTO item) {\n-        return Optional.ofNullable(item).filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+        return Optional.ofNullable(item)\n+            .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {"},{"sha":"d7600572dff198b76ee9311b71c5824e43e5e687","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2IdPLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -80,7 +80,8 @@ private SAML2IdPTO complete(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n             }\n         }\n \n-        idpTO.setLogoutSupported(Optional.ofNullable(idpEntity).filter(entity -> entity.getSLOLocation(SAML2BindingType.POST) != null\n+        idpTO.setLogoutSupported(Optional.ofNullable(idpEntity)\n+            .filter(entity -> entity.getSLOLocation(SAML2BindingType.POST) != null\n             || entity.getSLOLocation(SAML2BindingType.REDIRECT) != null).isPresent());\n         return idpTO;\n     }"},{"sha":"02505f909e62f1315bc58767bf5530db39e05366","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/scim/SearchCondVisitor.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSearchCondVisitor.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -56,7 +56,10 @@ public SearchCond visitScimFilter(final SCIMFilterParser.ScimFilterContext ctx)\n     }\n \n     private boolean schemaEquals(final Resource resource, final String value, final String schema) {\n-        return Optional.ofNullable(resource).map(resource1 -> value.equalsIgnoreCase(schema) || (resource1.schema() + \":\" + value).equalsIgnoreCase(schema)).orElseGet(() -> value.contains(\":\")\n+        return Optional.ofNullable(resource)\n+            .map(resource1 -> value.equalsIgnoreCase(schema)\n+                || (resource1.schema() + \":\" + value).equalsIgnoreCase(schema))\n+            .orElseGet(() -> value.contains(\":\")\n             ? StringUtils.substringAfterLast(value, \":\").equalsIgnoreCase(schema)\n             : value.equalsIgnoreCase(schema));\n     }"},{"sha":"9806d45e7dbd554935734097c1791587d4bca93e","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/ProvisioningImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -186,7 +186,8 @@ public List<WSUser> query(final Operand query) {\n         Connection conn = null;\n         try {\n \n-            String queryString = \"SELECT * FROM user\" + (Optional.ofNullable(query).map(operand -> \" WHERE \" + operand.toString()).orElse(\"\"));\n+            String queryString = \"SELECT * FROM user\" + (Optional.ofNullable(query)\n+                .map(operand -> \" WHERE \" + operand.toString()).orElse(\"\"));\n \n             queryString = queryString.replaceAll(\"__NAME__\", \"userId\").\n                     replaceAll(\"__UID__\", \"userId\")."},{"sha":"ba2c7c0a49b188ee9b6958994e256fc13ba232a7","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/view/ResourceExplorerTopComponent.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93b8d3e62c777dea95c52cb4a560fa4f8ef8c840/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java?ref=93b8d3e62c777dea95c52cb4a560fa4f8ef8c840","patch":"@@ -182,7 +182,8 @@ private void resourceExplorerTreeMouseClicked(final java.awt.event.MouseEvent ev\n             DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) resourceExplorerTree.\n                     getLastSelectedPathComponent();\n             DefaultMutableTreeNode parentNode = (DefaultMutableTreeNode) selectedNode.getParent();\n-            String parentNodeName = Optional.ofNullable(parentNode).map(node -> String.valueOf(node.getUserObject())).orElse(null);\n+            String parentNodeName = Optional.ofNullable(parentNode)\n+                .map(node -> String.valueOf(node.getUserObject())).orElse(null);\n             if (selectedNode.isLeaf() && StringUtils.isNotBlank(parentNodeName)) {\n                 String leafNodeName = (String) selectedNode.getUserObject();\n                 DefaultMutableTreeNode grandParentNode = (DefaultMutableTreeNode) parentNode.getParent();"}]}