{"sha":"ec10c7b4249515faee7614c8affe4c60f1cf08fb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVjMTBjN2I0MjQ5NTE1ZmFlZTc2MTRjOGFmZmU0YzYwZjFjZjA4ZmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-05-13T07:43:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-05-13T07:44:52Z"},"message":"[SYNCOPE-1561] Propagating TLSClientParameters to BatchRequest and Batch Response","tree":{"sha":"3673a3bc5ecdc868b3e0a56efbffe66f9f01119e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3673a3bc5ecdc868b3e0a56efbffe66f9f01119e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ec10c7b4249515faee7614c8affe4c60f1cf08fb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ec10c7b4249515faee7614c8affe4c60f1cf08fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ec10c7b4249515faee7614c8affe4c60f1cf08fb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ec10c7b4249515faee7614c8affe4c60f1cf08fb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"401b8ea836511f57cf1a667e76326be5162432e7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/401b8ea836511f57cf1a667e76326be5162432e7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/401b8ea836511f57cf1a667e76326be5162432e7"}],"stats":{"total":47,"additions":39,"deletions":8},"files":[{"sha":"bf6ea234d8b3ba343879d32972a611ab327c32a7","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec10c7b4249515faee7614c8affe4c60f1cf08fb/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec10c7b4249515faee7614c8affe4c60f1cf08fb/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=ec10c7b4249515faee7614c8affe4c60f1cf08fb","patch":"@@ -406,6 +406,7 @@ public BatchRequest batch() {\n                 mediaType,\n                 restClientFactory.getAddress(),\n                 restClientFactory.getProviders(),\n-                getJWT());\n+                getJWT(),\n+                tlsClientParameters);\n     }\n }"},{"sha":"c3c33c9a1b27ee6ffc50756f530ce16e37955b49","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/batch/BatchRequest.java","status":"modified","additions":16,"deletions":4,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec10c7b4249515faee7614c8affe4c60f1cf08fb/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec10c7b4249515faee7614c8affe4c60f1cf08fb/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchRequest.java?ref=ec10c7b4249515faee7614c8affe4c60f1cf08fb","patch":"@@ -22,8 +22,11 @@\n import java.util.UUID;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n+import org.apache.cxf.configuration.jsse.TLSClientParameters;\n import org.apache.cxf.jaxrs.client.Client;\n+import org.apache.cxf.jaxrs.client.ClientConfiguration;\n import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.cxf.transport.http.HTTPConduit;\n import org.apache.syncope.common.rest.api.Preference;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.batch.BatchPayloadGenerator;\n@@ -46,18 +49,22 @@ public class BatchRequest {\n \n     private final List<?> providers;\n \n+    private final TLSClientParameters tlsClientParameters;\n+\n     private BatchClientFactoryBean bcfb;\n \n     public BatchRequest(\n             final MediaType mediaType,\n             final String address,\n             final List<?> providers,\n-            final String jwt) {\n+            final String jwt,\n+            final TLSClientParameters tlsClientParameters) {\n \n         this.mediaType = mediaType;\n         this.jwt = jwt;\n         this.address = address;\n         this.providers = providers;\n+        this.tlsClientParameters = tlsClientParameters;\n         initBatchClientFactoryBean();\n     }\n \n@@ -85,7 +92,7 @@ public List<BatchRequestItem> getItems() {\n      * Sends the current request, with items accumulated by invoking methods on proxies obtained via\n      * {@link #getService(java.lang.Class)}, to the Batch service, and awaits for synchronous response.\n      * It also clears out the accumulated items, in case of reuse of this instance for subsequent requests.\n-     * \n+     *\n      * @return batch response\n      */\n     public BatchResponse commit() {\n@@ -97,7 +104,7 @@ public BatchResponse commit() {\n      * {@link #getService(java.lang.Class)}, to the Batch service, and awaits for a synchronous or asynchronous\n      * response, depending on the {@code async} parameter.\n      * It also clears out the accumulated items, in case of reuse of this instance for subsequent requests.\n-     * \n+     *\n      * @param async whether asynchronous Batch process is requested, or not\n      * @return batch response\n      */\n@@ -110,12 +117,17 @@ public BatchResponse commit(final boolean async) {\n         if (async) {\n             webClient.header(RESTHeaders.PREFER, Preference.RESPOND_ASYNC);\n         }\n+        if (tlsClientParameters != null) {\n+            ClientConfiguration config = WebClient.getConfig(webClient);\n+            HTTPConduit httpConduit = (HTTPConduit) config.getConduit();\n+            httpConduit.setTlsClientParameters(tlsClientParameters);\n+        }\n \n         String body = BatchPayloadGenerator.generate(bcfb.getBatchRequestItems(), boundary);\n         LOG.debug(\"Batch request body:\\n{}\", body);\n \n         initBatchClientFactoryBean();\n \n-        return new BatchResponse(boundary, jwt, webClient.post(body));\n+        return new BatchResponse(boundary, jwt, tlsClientParameters, webClient.post(body));\n     }\n }"},{"sha":"5b6ee8be40832aa69813b15af1966b9eec88665f","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/batch/BatchResponse.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec10c7b4249515faee7614c8affe4c60f1cf08fb/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec10c7b4249515faee7614c8affe4c60f1cf08fb/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchResponse.java?ref=ec10c7b4249515faee7614c8affe4c60f1cf08fb","patch":"@@ -26,8 +26,11 @@\n import java.util.List;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n+import org.apache.cxf.configuration.jsse.TLSClientParameters;\n import org.apache.cxf.helpers.IOUtils;\n+import org.apache.cxf.jaxrs.client.ClientConfiguration;\n import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.cxf.transport.http.HTTPConduit;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.batch.BatchPayloadParser;\n import org.apache.syncope.common.rest.api.batch.BatchResponseItem;\n@@ -47,11 +50,19 @@ public class BatchResponse {\n \n     private final URI monitor;\n \n+    private final TLSClientParameters tlsClientParameters;\n+\n     private Response response;\n \n-    public BatchResponse(final String boundary, final String jwt, final Response response) {\n+    public BatchResponse(\n+            final String boundary,\n+            final String jwt,\n+            final TLSClientParameters tlsClientParameters,\n+            final Response response) {\n+\n         this.boundary = boundary;\n         this.jwt = jwt;\n+        this.tlsClientParameters = tlsClientParameters;\n         this.monitor = response.getLocation();\n         this.response = response;\n     }\n@@ -72,9 +83,16 @@ public Response getResponse() {\n      */\n     public Response poll() {\n         if (monitor != null) {\n-            response = WebClient.create(monitor).\n+            WebClient webClient = WebClient.create(monitor).\n                     header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwt).\n-                    type(RESTHeaders.multipartMixedWith(boundary.substring(2))).get();\n+                    type(RESTHeaders.multipartMixedWith(boundary.substring(2)));\n+            if (tlsClientParameters != null) {\n+                ClientConfiguration config = WebClient.getConfig(webClient);\n+                HTTPConduit httpConduit = (HTTPConduit) config.getConduit();\n+                httpConduit.setTlsClientParameters(tlsClientParameters);\n+            }\n+\n+            response = webClient.get();\n         }\n \n         return response;"}]}