{"sha":"9ec5f834f68a92e2d808f5fd347264b7518ab73d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjllYzVmODM0ZjY4YTkyZTJkODA4ZjVmZDM0NzI2NGI3NTE4YWI3M2Q=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-12T09:43:03Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-12T09:43:11Z"},"message":"[SYNCOPE-1106] Removed methods returning Map, added methods for getting attribute for specific schema","tree":{"sha":"9aa23febdeadebcdb7ede6bf323a57ae55b4e8ac","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9aa23febdeadebcdb7ede6bf323a57ae55b4e8ac"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9ec5f834f68a92e2d808f5fd347264b7518ab73d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ec5f834f68a92e2d808f5fd347264b7518ab73d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ec5f834f68a92e2d808f5fd347264b7518ab73d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ec5f834f68a92e2d808f5fd347264b7518ab73d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7a4805becf755ff56159bde8d314dce189f893f2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7a4805becf755ff56159bde8d314dce189f893f2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7a4805becf755ff56159bde8d314dce189f893f2"}],"stats":{"total":673,"additions":336,"deletions":337},"files":[{"sha":"0eb370de25c654d8bcb1a56ea13b3f055594f4cb","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SortableAnyProviderComparator.java","status":"modified","additions":6,"deletions":14,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -21,7 +21,6 @@\n import java.util.Arrays;\n import java.util.HashSet;\n import java.util.List;\n-import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -54,18 +53,11 @@ private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n \n         private static final long serialVersionUID = -7856686374020091808L;\n \n-        private final Map<String, AttrTO> plainAttrs;\n-\n-        private final Map<String, AttrTO> derAttrs;\n-\n-        private final Map<String, AttrTO> virAttrs;\n+        private final AnyTO anyTO;\n \n         AttrModel(final AnyTO anyTO) {\n             super();\n-\n-            this.plainAttrs = anyTO.getPlainAttrMap();\n-            this.derAttrs = anyTO.getDerAttrMap();\n-            this.virAttrs = anyTO.getVirAttrMap();\n+            this.anyTO = anyTO;\n         }\n \n         /**\n@@ -91,20 +83,20 @@ public Comparable getObject() {\n \n             final AttrTO attr;\n             if (schemaType == null) {\n-                attr = this.plainAttrs.get(schema);\n+                attr = this.anyTO.getPlainAttr(schema);\n             } else {\n                 switch (schemaType) {\n                     case PLAIN:\n                     default:\n-                        attr = this.plainAttrs.get(schema);\n+                        attr = this.anyTO.getPlainAttr(schema);\n                         break;\n \n                     case DERIVED:\n-                        attr = this.derAttrs.get(schema);\n+                        attr = this.anyTO.getDerAttr(schema);\n                         break;\n \n                     case VIRTUAL:\n-                        attr = this.virAttrs.get(schema);\n+                        attr = this.anyTO.getVirAttr(schema);\n                         break;\n                 }\n             }"},{"sha":"6da92462306fb91838d5270c90972cd418af3a07","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":2,"deletions":12,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -21,9 +21,7 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -113,22 +111,14 @@ public StatusBean getStatusBean(\n     }\n \n     private Boolean isEnabled(final ConnObjectTO objectTO) {\n-        final Map<String, AttrTO> attributeTOs = objectTO.getAttrMap();\n-\n-        final AttrTO status = attributeTOs.get(ConnIdSpecialName.ENABLE);\n-\n+        final AttrTO status = objectTO.getAttr(ConnIdSpecialName.ENABLE);\n         return status != null && status.getValues() != null && !status.getValues().isEmpty()\n                 ? Boolean.valueOf(status.getValues().get(0))\n                 : Boolean.FALSE;\n     }\n \n     private String getConnObjectLink(final ConnObjectTO objectTO) {\n-        final Map<String, AttrTO> attributeTOs = objectTO == null\n-                ? Collections.<String, AttrTO>emptyMap()\n-                : objectTO.getAttrMap();\n-\n-        final AttrTO name = attributeTOs.get(ConnIdSpecialName.NAME);\n-\n+        final AttrTO name = objectTO == null ? null : objectTO.getAttr(ConnIdSpecialName.NAME);\n         return name != null && name.getValues() != null && !name.getValues().isEmpty()\n                 ? name.getValues().get(0)\n                 : null;"},{"sha":"e6d57cd1facf2788e097890b9967e65d79e219c1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -25,8 +25,6 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.MapUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n@@ -85,8 +83,8 @@ public Realm(final String id, final RealmTO realmTO, final PageReference pageRef\n \n         setPageRef(pageRef);\n \n-        AjaxBootstrapTabbedPanel<ITab> tabbedPanel\n-                = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel =\n+                new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n         tabbedPanel.setSelectedTab(selectedIndex);\n         addInnerObject(tabbedPanel);\n         this.wizardBuilder = new RealmWizardBuilder(pageRef);\n@@ -167,15 +165,15 @@ public boolean isVisible() {\n             }\n         });\n \n-        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo\n-                = FormLayoutInfoUtils.fetch(anyTypeTOs);\n+        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo =\n+                FormLayoutInfoUtils.fetch(anyTypeTOs);\n \n         Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n             tabs.add(new ITabComponent(\n                     new Model<>(anyTypeTO.getKey()),\n                     AnyTypeKind.GROUP.name().equals(anyTypeTO.getKey())\n-                    ? null : new String[]{String.format(\"%s_SEARCH\", anyTypeTO.getKey())}) {\n+                    ? null : new String[] { String.format(\"%s_SEARCH\", anyTypeTO.getKey()) }) {\n \n                 private static final long serialVersionUID = 1169585538404171118L;\n \n@@ -223,12 +221,12 @@ protected Component getValueComponent(final String key, final PropagationStatus\n                 if (\"afterObj\".equalsIgnoreCase(key)) {\n                     ConnObjectTO afterObj = bean.getAfterObj();\n                     String remoteId = afterObj == null\n-                            || MapUtils.isEmpty(afterObj.getAttrMap())\n-                            || !afterObj.getAttrMap().containsKey(ConnIdSpecialName.NAME)\n-                            || CollectionUtils.isEmpty(afterObj.getAttrMap().get(ConnIdSpecialName.NAME).getValues())\n+                            || afterObj.getAttrs().isEmpty()\n+                            || afterObj.getAttr(ConnIdSpecialName.NAME) == null\n+                            || afterObj.getAttr(ConnIdSpecialName.NAME).getValues() == null\n+                            || afterObj.getAttr(ConnIdSpecialName.NAME).getValues().isEmpty()\n                             ? StringUtils.EMPTY\n-                            : afterObj.getAttrMap().get(ConnIdSpecialName.NAME).getValues().\n-                            iterator().next();\n+                            : afterObj.getAttr(ConnIdSpecialName.NAME).getValues().get(0);\n \n                     return new Label(\"field\", remoteId);\n                 } else if (\"status\".equalsIgnoreCase(key)) {"},{"sha":"1341791b90f8582df8e6c7a515c6f2f046ea6322","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AttrColumn.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n \n import java.util.List;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n@@ -50,27 +51,25 @@ public void populateItem(\n \n         List<String> values = null;\n \n+        AttrTO attr = null;\n         switch (schemaType) {\n             case PLAIN:\n-                if (rowModel.getObject().getPlainAttrMap().containsKey(name)) {\n-                    values = rowModel.getObject().getPlainAttrMap().get(name).getValues();\n-                }\n+                attr = rowModel.getObject().getPlainAttr(name);\n                 break;\n \n             case DERIVED:\n-                if (rowModel.getObject().getDerAttrMap().containsKey(name)) {\n-                    values = rowModel.getObject().getDerAttrMap().get(name).getValues();\n-                }\n+                attr = rowModel.getObject().getDerAttr(name);\n                 break;\n \n             case VIRTUAL:\n-                if (rowModel.getObject().getVirAttrMap().containsKey(name)) {\n-                    values = rowModel.getObject().getVirAttrMap().get(name).getValues();\n-                }\n+                attr = rowModel.getObject().getVirAttr(name);\n                 break;\n \n             default:\n         }\n+        if (attr != null) {\n+            values = attr.getValues();\n+        }\n \n         if (values == null || values.isEmpty()) {\n             cellItem.add(new Label(componentId, \"\"));"},{"sha":"5d9dbd4231af1bd21dc20934e05d986915f5ad77","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ConnObjectAttrColumn.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FConnObjectAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FConnObjectAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FConnObjectAttrColumn.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n \n import java.util.List;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n@@ -47,10 +48,8 @@ public void populateItem(\n             final String componentId,\n             final IModel<ConnObjectTO> rowModel) {\n \n-        List<String> values = null;\n-        if (rowModel.getObject().getAttrMap().containsKey(name)) {\n-            values = rowModel.getObject().getAttrMap().get(name).getValues();\n-        }\n+        AttrTO attr = rowModel.getObject().getAttr(name);\n+        List<String> values = attr == null ? null : attr.getValues();\n \n         if (values == null || values.isEmpty()) {\n             cellItem.add(new Label(componentId, \"\"));"},{"sha":"2c75daeaea4f95492f19be7f801d2fb034996bac","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.wicket.Component;\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.markup.ComponentTag;\n@@ -88,11 +89,10 @@ public String transform(final AttrTO input) {\n \n         final Map<String, AttrTO> beforeProfile = connObjectTOs == null || connObjectTOs.getLeft() == null\n                 ? null\n-                : connObjectTOs.getLeft().getAttrMap();\n-\n+                : EntityTOUtils.buildAttrMap(connObjectTOs.getLeft().getAttrs());\n         final Map<String, AttrTO> afterProfile = connObjectTOs == null || connObjectTOs.getRight() == null\n                 ? null\n-                : connObjectTOs.getRight().getAttrMap();\n+                : EntityTOUtils.buildAttrMap(connObjectTOs.getRight().getAttrs());\n \n         final ListView<String> propView = new ListView<String>(\"propView\", formProps) {\n "},{"sha":"012a6627023b0de91fb3b06a623065c3e2694e19","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -25,6 +25,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n@@ -83,7 +84,7 @@ protected void populateItem(final ListItem<MembershipTO> item) {\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n-                        return new DerAttrs.DerSchemas(panelId, new ListModel<AttrTO>(getAttrsFromTO(membershipTO)));\n+                        return new DerAttrs.DerSchemas(panelId, new ListModel<>(getAttrsFromTO(membershipTO)));\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -113,7 +114,7 @@ protected List<AttrTO> getAttrsFromTO(final MembershipTO membershipTO) {\n     protected void setAttrs() {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = anyTO.getDerAttrMap();\n+        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n \n         for (DerSchemaTO schema : schemas.values()) {\n             AttrTO attrTO = new AttrTO();\n@@ -133,7 +134,7 @@ protected void setAttrs() {\n     protected void setAttrs(final MembershipTO membershipTO) {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = membershipTO.getDerAttrMap();\n+        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n \n         for (DerSchemaTO schema : membershipSchemas.get(membershipTO.getGroupKey()).values()) {\n             AttrTO attrTO = new AttrTO();"},{"sha":"80891cf8198cbf6e860fadfca3fae81a22a3963a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -142,7 +143,7 @@ protected List<AttrTO> getAttrsFromTO(final MembershipTO membershipTO) {\n     protected void setAttrs() {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = anyTO.getPlainAttrMap();\n+        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getPlainAttrs());\n \n         for (PlainSchemaTO schema : schemas.values()) {\n             AttrTO attrTO = new AttrTO();\n@@ -167,7 +168,7 @@ protected void setAttrs() {\n     protected void setAttrs(final MembershipTO membershipTO) {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = membershipTO.getPlainAttrMap();\n+        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getPlainAttrs());\n \n         for (PlainSchemaTO schema : membershipSchemas.get(membershipTO.getGroupKey()).values()) {\n             AttrTO attrTO = new AttrTO();"},{"sha":"4b66f0d38c6ea330236eeb5b4ad5ecf0c31997d3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n@@ -117,7 +118,7 @@ protected List<AttrTO> getAttrsFromTO(final MembershipTO membershipTO) {\n     protected void setAttrs() {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = anyTO.getVirAttrMap();\n+        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getVirAttrs());\n \n         for (VirSchemaTO schema : schemas.values()) {\n             AttrTO attrTO = new AttrTO();\n@@ -139,7 +140,7 @@ protected void setAttrs() {\n     protected void setAttrs(final MembershipTO membershipTO) {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = membershipTO.getVirAttrMap();\n+        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getVirAttrs());\n \n         for (VirSchemaTO schema : membershipSchemas.get(membershipTO.getGroupKey()).values()) {\n             AttrTO attrTO = new AttrTO();"},{"sha":"7b2a83468381e55ace02c2fa7c10edb87210e9ca","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.util.HashSet;\n-import java.util.Map;\n import java.util.Set;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.MediaType;\n@@ -31,6 +30,7 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n import org.apache.syncope.client.enduser.util.UserRequestValidator;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n@@ -114,11 +114,10 @@ public boolean evaluate(final MembershipTO item) {\n                     userTO.getPlainAttrs().removeAll(membAttrs);\n \n                     // 2. millis -> Date conversion for PLAIN attributes of USER and its MEMBERSHIPS\n-                    Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n                     for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n-                        millisToDate(userPlainAttrMap, plainSchema);\n+                        millisToDate(EntityTOUtils.buildAttrMap(userTO.getPlainAttrs()), plainSchema);\n                         for (MembershipTO membership : userTO.getMemberships()) {\n-                            millisToDate(membership.getPlainAttrMap(), plainSchema);\n+                            millisToDate(EntityTOUtils.buildAttrMap(membership.getPlainAttrs()), plainSchema);\n                         }\n                     }\n "},{"sha":"eae1ec7987f812d89c1d2abf0032204beffc03e3","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.client.enduser.annotations.Resource;\n import org.apache.syncope.client.enduser.model.CustomAttribute;\n import org.apache.syncope.client.enduser.model.CustomAttributesInfo;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n@@ -62,13 +63,12 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             }\n \n             UserTO userTO = SerializationUtils.clone(SyncopeEnduserSession.get().getSelfTO());\n-            Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n \n             // 1. Date -> millis conversion for PLAIN attributes of USER and its MEMBERSHIPS\n             for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n-                dateToMillis(userPlainAttrMap, plainSchema);\n+                dateToMillis(EntityTOUtils.buildAttrMap(userTO.getPlainAttrs()), plainSchema);\n                 for (MembershipTO membership : userTO.getMemberships()) {\n-                    dateToMillis(membership.getPlainAttrMap(), plainSchema);\n+                    dateToMillis(EntityTOUtils.buildAttrMap(membership.getPlainAttrs()), plainSchema);\n                 }\n             }\n "},{"sha":"1e8ede2f063d02898a30322fc8491b960f1f48f6","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.util.HashSet;\n-import java.util.Map;\n import java.util.Set;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.MediaType;\n@@ -32,6 +31,7 @@\n import org.apache.syncope.client.enduser.annotations.Resource;\n import org.apache.syncope.client.enduser.util.UserRequestValidator;\n import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n@@ -95,11 +95,10 @@ public boolean evaluate(final MembershipTO item) {\n                 userTO.getPlainAttrs().removeAll(membAttrs);\n \n                 // 2. millis -> Date conversion for PLAIN attributes of USER and its MEMBERSHIPS\n-                Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n                 for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n-                    millisToDate(userPlainAttrMap, plainSchema);\n+                    millisToDate(EntityTOUtils.buildAttrMap(userTO.getPlainAttrs()), plainSchema);\n                     for (MembershipTO membership : userTO.getMemberships()) {\n-                        millisToDate(membership.getPlainAttrMap(), plainSchema);\n+                        millisToDate(EntityTOUtils.buildAttrMap(membership.getPlainAttrs()), plainSchema);\n                     }\n                 }\n "},{"sha":"32f5551e42de66fece009e9fd5c8139e753a4a37","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/util/UserRequestValidator.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Futil%2FUserRequestValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Futil%2FUserRequestValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Futil%2FUserRequestValidator.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -23,6 +23,7 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.enduser.model.CustomAttribute;\n import org.apache.syncope.client.enduser.model.CustomAttributesInfo;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n@@ -43,11 +44,12 @@ public static boolean compliant(final UserTO userTO, final Map<String, CustomAtt\n             return true;\n         }\n \n-        return validateAttributes(userTO.getPlainAttrMap(), customForm.get(SchemaType.PLAIN.name()), checkDefaultValues)\n-                && validateAttributes(userTO.getDerAttrMap(), customForm.get(SchemaType.DERIVED.name()),\n-                        checkDefaultValues)\n-                && validateAttributes(userTO.getVirAttrMap(), customForm.get(SchemaType.VIRTUAL.name()),\n-                        checkDefaultValues);\n+        return validateAttributes(EntityTOUtils.buildAttrMap(userTO.getPlainAttrs()),\n+                customForm.get(SchemaType.PLAIN.name()), checkDefaultValues)\n+                && validateAttributes(EntityTOUtils.buildAttrMap(userTO.getDerAttrs()),\n+                        customForm.get(SchemaType.DERIVED.name()), checkDefaultValues)\n+                && validateAttributes(EntityTOUtils.buildAttrMap(userTO.getVirAttrs()),\n+                        customForm.get(SchemaType.VIRTUAL.name()), checkDefaultValues);\n     }\n \n     private static boolean validateAttributes(final Map<String, AttrTO> attrMap,"},{"sha":"d8c021a8d75dab11f10844189c40f99f4167f22b","filename":"client/enduser/src/test/java/org/apache/syncope/client/enduser/util/UserRequestValidatorTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Futil%2FUserRequestValidatorTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/client%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Futil%2FUserRequestValidatorTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Futil%2FUserRequestValidatorTest.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -61,11 +61,11 @@ public void testCompliant() throws IOException {\n         assertTrue(UserRequestValidator.compliant(userTO, customForm, true));\n \n         // firstname must have only one defaultValue\n-        userTO.getPlainAttrMap().get(\"firstname\").getValues().add(\"notAllowedFirstnameValue\");\n+        userTO.getPlainAttr(\"firstname\").getValues().add(\"notAllowedFirstnameValue\");\n         assertFalse(UserRequestValidator.compliant(userTO, customForm, true));\n         assertTrue(UserRequestValidator.compliant(userTO, customForm, false));\n         // clean\n-        userTO.getPlainAttrMap().get(\"firstname\").getValues().remove(\"notAllowedFirstnameValue\");\n+        userTO.getPlainAttr(\"firstname\").getValues().remove(\"notAllowedFirstnameValue\");\n \n         // derived must not be present\n         AttrTO derivedNotAllowed = attrTO(\"derivedNotAllowed\");"},{"sha":"69d373e66d494305f6b86e10abe43b1a8a8c16e3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -89,8 +89,8 @@ private static void diff(\n         result.setGroup(updated.getGroupKey());\n \n         // 1. plain attributes\n-        Map<String, AttrTO> updatedAttrs = new HashMap<>(updated.getPlainAttrMap());\n-        Map<String, AttrTO> originalAttrs = new HashMap<>(original.getPlainAttrMap());\n+        Map<String, AttrTO> updatedAttrs = EntityTOUtils.buildAttrMap(updated.getPlainAttrs());\n+        Map<String, AttrTO> originalAttrs = EntityTOUtils.buildAttrMap(original.getPlainAttrs());\n \n         result.getPlainAttrs().clear();\n \n@@ -159,8 +159,8 @@ private static void diff(\n         }\n \n         // 3. plain attributes\n-        Map<String, AttrTO> updatedAttrs = new HashMap<>(updated.getPlainAttrMap());\n-        Map<String, AttrTO> originalAttrs = new HashMap<>(original.getPlainAttrMap());\n+        Map<String, AttrTO> updatedAttrs = EntityTOUtils.buildAttrMap(updated.getPlainAttrs());\n+        Map<String, AttrTO> originalAttrs = EntityTOUtils.buildAttrMap(original.getPlainAttrs());\n \n         result.getPlainAttrs().clear();\n \n@@ -483,7 +483,7 @@ private static <T extends AnyTO, K extends AnyPatch> void patch(final T to, fina\n \n         // 2. plain attributes\n         result.getPlainAttrs().clear();\n-        result.getPlainAttrs().addAll(patch(to.getPlainAttrMap(), patch.getPlainAttrs()));\n+        result.getPlainAttrs().addAll(patch(EntityTOUtils.buildAttrMap(to.getPlainAttrs()), patch.getPlainAttrs()));\n \n         // 3. virtual attributes\n         result.getVirAttrs().clear();\n@@ -571,7 +571,7 @@ public boolean evaluate(final MembershipTO object) {\n                         }\n                     } else {\n                         newMembershipTO.getPlainAttrs().addAll(\n-                                patch(memb.getPlainAttrMap(), membPatch.getPlainAttrs()));\n+                                patch(EntityTOUtils.buildAttrMap(memb.getPlainAttrs()), membPatch.getPlainAttrs()));\n                     }\n \n                     // 3. virtual attributes\n@@ -637,7 +637,7 @@ public boolean evaluate(final MembershipTO object) {\n                         }\n                     } else {\n                         newMembershipTO.getPlainAttrs().addAll(\n-                                patch(memb.getPlainAttrMap(), membPatch.getPlainAttrs()));\n+                                patch(EntityTOUtils.buildAttrMap(memb.getPlainAttrs()), membPatch.getPlainAttrs()));\n                     }\n \n                     // 3. virtual attributes"},{"sha":"d0c04bc3efa65a69ce053d03ac3af7a9484988bf","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/EntityTOUtils.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -18,7 +18,11 @@\n  */\n package org.apache.syncope.common.lib;\n \n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n \n public final class EntityTOUtils {\n@@ -33,6 +37,15 @@ public String transform(final E input) {\n         };\n     }\n \n+    public static Map<String, AttrTO> buildAttrMap(final Collection<AttrTO> attrs) {\n+        Map<String, AttrTO> result = new HashMap<>(attrs.size());\n+        for (AttrTO attributeTO : attrs) {\n+            result.put(attributeTO.getSchema(), attributeTO);\n+        }\n+\n+        return result;\n+    }\n+\n     /**\n      * Private default constructor, for static-only classes.\n      */"},{"sha":"7796b62799bfe535a9c5ad9e8b5dec8f09df7607","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":25,"deletions":23,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -22,16 +22,15 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n-import java.util.Map;\n import java.util.Set;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n \n @XmlType\n @XmlSeeAlso({ UserTO.class, GroupTO.class, AnyObjectTO.class })\n@@ -46,7 +45,7 @@ public abstract class AnyTO extends AbstractAnnotatedBean implements EntityTO, A\n \n     private String realm;\n \n-    private List<String> dynRealms = new ArrayList<>();\n+    private final List<String> dynRealms = new ArrayList<>();\n \n     private String status;\n \n@@ -118,13 +117,14 @@ public Set<AttrTO> getPlainAttrs() {\n \n     @JsonIgnore\n     @Override\n-    public Map<String, AttrTO> getPlainAttrMap() {\n-        Map<String, AttrTO> result = new HashMap<>(plainAttrs.size());\n-        for (AttrTO attributeTO : plainAttrs) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n-        }\n+    public AttrTO getPlainAttr(final String schema) {\n+        return IterableUtils.find(plainAttrs, new Predicate<AttrTO>() {\n \n-        return Collections.unmodifiableMap(result);\n+            @Override\n+            public boolean evaluate(final AttrTO object) {\n+                return object.getSchema().equals(schema);\n+            }\n+        });\n     }\n \n     @XmlElementWrapper(name = \"derAttrs\")\n@@ -137,13 +137,14 @@ public Set<AttrTO> getDerAttrs() {\n \n     @JsonIgnore\n     @Override\n-    public Map<String, AttrTO> getDerAttrMap() {\n-        Map<String, AttrTO> result = new HashMap<>(derAttrs.size());\n-        for (AttrTO attributeTO : derAttrs) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n-        }\n+    public AttrTO getDerAttr(final String schema) {\n+        return IterableUtils.find(derAttrs, new Predicate<AttrTO>() {\n \n-        return Collections.unmodifiableMap(result);\n+            @Override\n+            public boolean evaluate(final AttrTO object) {\n+                return object.getSchema().equals(schema);\n+            }\n+        });\n     }\n \n     @XmlElementWrapper(name = \"virAttrs\")\n@@ -156,13 +157,14 @@ public Set<AttrTO> getVirAttrs() {\n \n     @JsonIgnore\n     @Override\n-    public Map<String, AttrTO> getVirAttrMap() {\n-        Map<String, AttrTO> result = new HashMap<>(virAttrs.size());\n-        for (AttrTO attributeTO : virAttrs) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n-        }\n-\n-        return Collections.unmodifiableMap(result);\n+    public AttrTO getVirAttr(final String schema) {\n+        return IterableUtils.find(virAttrs, new Predicate<AttrTO>() {\n+\n+            @Override\n+            public boolean evaluate(final AttrTO object) {\n+                return object.getSchema().equals(schema);\n+            }\n+        });\n     }\n \n     @XmlElementWrapper(name = \"resources\")"},{"sha":"79e57b896b60d4255267c1e1048f671790b4d7a9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AttributableTO.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttributableTO.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -18,20 +18,19 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.util.Map;\n import java.util.Set;\n \n public interface AttributableTO {\n \n     Set<AttrTO> getPlainAttrs();\n \n-    Map<String, AttrTO> getPlainAttrMap();\n+    AttrTO getPlainAttr(String schema);\n \n     Set<AttrTO> getDerAttrs();\n \n-    Map<String, AttrTO> getDerAttrMap();\n+    AttrTO getDerAttr(String schema);\n \n     Set<AttrTO> getVirAttrs();\n \n-    Map<String, AttrTO> getVirAttrMap();\n+    AttrTO getVirAttr(String schema);\n }"},{"sha":"6301d68868552727cbd88403016f8257f198c1ef","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnObjectTO.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -20,15 +20,14 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.Collections;\n-import java.util.HashMap;\n import java.util.LinkedHashSet;\n-import java.util.Map;\n import java.util.Set;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"connObject\")\n@@ -47,12 +46,13 @@ public Set<AttrTO> getAttrs() {\n     }\n \n     @JsonIgnore\n-    public Map<String, AttrTO> getAttrMap() {\n-        Map<String, AttrTO> result = new HashMap<>(attrs.size());\n-        for (AttrTO attributeTO : attrs) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n-        }\n+    public AttrTO getAttr(final String schema) {\n+        return IterableUtils.find(attrs, new Predicate<AttrTO>() {\n \n-        return Collections.unmodifiableMap(result);\n+            @Override\n+            public boolean evaluate(final AttrTO object) {\n+                return object.getSchema().equals(schema);\n+            }\n+        });\n     }\n }"},{"sha":"5737c7f9ed77d52dfdb1f9f6da277624a0c42c55","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":26,"deletions":24,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -20,15 +20,14 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.Collections;\n-import java.util.HashMap;\n import java.util.HashSet;\n-import java.util.Map;\n import java.util.Set;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n @XmlRootElement(name = \"membership\")\n@@ -112,13 +111,14 @@ public Set<AttrTO> getPlainAttrs() {\n \n     @JsonIgnore\n     @Override\n-    public Map<String, AttrTO> getPlainAttrMap() {\n-        Map<String, AttrTO> result = new HashMap<>(plainAttrs.size());\n-        for (AttrTO attributeTO : plainAttrs) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n-        }\n-\n-        return Collections.unmodifiableMap(result);\n+    public AttrTO getPlainAttr(final String schema) {\n+        return IterableUtils.find(plainAttrs, new Predicate<AttrTO>() {\n+\n+            @Override\n+            public boolean evaluate(final AttrTO object) {\n+                return object.getSchema().equals(schema);\n+            }\n+        });\n     }\n \n     @XmlElementWrapper(name = \"derAttrs\")\n@@ -131,13 +131,14 @@ public Set<AttrTO> getDerAttrs() {\n \n     @JsonIgnore\n     @Override\n-    public Map<String, AttrTO> getDerAttrMap() {\n-        Map<String, AttrTO> result = new HashMap<>(derAttrs.size());\n-        for (AttrTO attributeTO : derAttrs) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n-        }\n-\n-        return Collections.unmodifiableMap(result);\n+    public AttrTO getDerAttr(final String schema) {\n+        return IterableUtils.find(derAttrs, new Predicate<AttrTO>() {\n+\n+            @Override\n+            public boolean evaluate(final AttrTO object) {\n+                return object.getSchema().equals(schema);\n+            }\n+        });\n     }\n \n     @XmlElementWrapper(name = \"virAttrs\")\n@@ -150,12 +151,13 @@ public Set<AttrTO> getVirAttrs() {\n \n     @JsonIgnore\n     @Override\n-    public Map<String, AttrTO> getVirAttrMap() {\n-        Map<String, AttrTO> result = new HashMap<>(virAttrs.size());\n-        for (AttrTO attributeTO : virAttrs) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n-        }\n-\n-        return Collections.unmodifiableMap(result);\n+    public AttrTO getVirAttr(final String schema) {\n+        return IterableUtils.find(virAttrs, new Predicate<AttrTO>() {\n+\n+            @Override\n+            public boolean evaluate(final AttrTO object) {\n+                return object.getSchema().equals(schema);\n+            }\n+        });\n     }\n }"},{"sha":"ec97437498faf01c538348d3670c59fa25041ac1","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -1264,15 +1264,15 @@ we are happy to inform you that the password request was successfully executed f\n &lt;/html&gt;\"/>\n   <MailTemplate id=\"test\"/>\n   <MailTemplate id=\"optin\"\n-                textTemplate=\"Hi ${user.plainAttrMap[&quot;firstname&quot;].values[0]} ${user.plainAttrMap[&quot;surname&quot;].values[0]}, welcome to Syncope!\n+                textTemplate=\"Hi ${user.getPlainAttr(&quot;firstname&quot;).values[0]} ${user.getPlainAttr(&quot;surname&quot;).values[0]}, welcome to Syncope!\n \n Your username is ${user.username}.\n-Your email address is ${user.plainAttrMap[&quot;email&quot;].values[0]}.\n-Your email address inside a link: http://localhost/?email=${user.plainAttrMap[&quot;email&quot;].values[0].replace('@', '%40')}\n+Your email address is ${user.getPlainAttr(&quot;email&quot;).values[0]}.\n+Your email address inside a link: http://localhost/?email=${user.getPlainAttr(&quot;email&quot;).values[0].replace('@', '%40')}\n \n This message was sent to the following recipients:&#10;\n $$ for (recipient: recipients) {&#10;\n-  * ${recipient.plainAttrMap[&quot;email&quot;].values[0]}&#10;\n+  * ${recipient.getPlainAttr(&quot;email&quot;).values[0]}&#10;\n $$ }&#10;\n &#10;\n because one of the following events occurred:&#10;\n@@ -1288,19 +1288,19 @@ $$ }&#10;\n $$ }&#10;\"\n                 htmlTemplate=\"&lt;html&gt;\n &lt;body&gt;\n-&lt;h3&gt;Hi ${user.plainAttrMap[&quot;firstname&quot;].values[0]} ${user.plainAttrMap[&quot;surname&quot;].values[0]}, welcome to Syncope!&lt;/h3&gt;\n+&lt;h3&gt;Hi ${user.getPlainAttr(&quot;firstname&quot;).values[0]} ${user.getPlainAttr(&quot;surname&quot;).values[0]}, welcome to Syncope!&lt;/h3&gt;\n \n &lt;p&gt;\n    Your username is ${user.username}.&lt;br/&gt;\n-   Your email address is ${user.plainAttrMap[&quot;email&quot;].values[0]}.\n-   Your email address inside a &lt;a href=&quot;http://localhost/?email=${user.plainAttrMap[&quot;email&quot;].values[0].replace('@', '%40')}&quot;&gt;link&lt;/a&gt;.\n+   Your email address is ${user.getPlainAttr(&quot;email&quot;).values[0]}.\n+   Your email address inside a &lt;a href=&quot;http://localhost/?email=${user.getPlainAttr(&quot;email&quot;).values[0].replace('@', '%40')}&quot;&gt;link&lt;/a&gt;.\n &lt;/p&gt;\n \n &lt;p&gt;\n     This message was sent to the following recipients:\n &lt;ul&gt;&#10;\n $$ for (recipient: recipients) {&#10;Na\n-  &lt;li&gt;${recipient.plainAttrMap[&quot;email&quot;].values[0]}&lt;/li&gt;&#10;\n+  &lt;li&gt;${recipient.getPlainAttr(&quot;email&quot;).values[0]}&lt;/li&gt;&#10;\n $$ }&#10;\n &lt;/ul&gt;&#10;\n "},{"sha":"2e213f70b3bfd2b2433b5b2196f0bdc4569c2608","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -95,7 +95,7 @@ public Pair<String, List<PropagationStatus>> create(\n         WorkflowResult<String> created = gwfAdapter.create(groupTO);\n \n         // see ConnObjectUtils#getAnyTOFromConnObject for GroupOwnerSchema\n-        AttrTO groupOwner = groupTO.getPlainAttrMap().get(StringUtils.EMPTY);\n+        AttrTO groupOwner = groupTO.getPlainAttr(StringUtils.EMPTY);\n         if (groupOwner != null) {\n             groupOwnerMap.put(created.getResult(), groupOwner.getValues().iterator().next());\n         }"},{"sha":"44a4dfa73da4930f6c0ce3a6e17d1bb44f6c59ee","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/GroupReportlet.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FGroupReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FGroupReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FGroupReportlet.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.report.GroupReportletConf;\n import org.apache.syncope.common.lib.report.GroupReportletConf.Feature;\n@@ -86,7 +87,7 @@ private void doExtractAttributes(final ContentHandler handler, final AnyTO anyTO\n \n         AttributesImpl atts = new AttributesImpl();\n         if (!attrs.isEmpty()) {\n-            Map<String, AttrTO> attrMap = anyTO.getPlainAttrMap();\n+            Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getPlainAttrs());\n \n             handler.startElement(\"\", \"\", \"attributes\", null);\n             for (String attrName : attrs) {\n@@ -112,7 +113,7 @@ private void doExtractAttributes(final ContentHandler handler, final AnyTO anyTO\n         }\n \n         if (!derAttrs.isEmpty()) {\n-            Map<String, AttrTO> derAttrMap = anyTO.getDerAttrMap();\n+            Map<String, AttrTO> derAttrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n \n             handler.startElement(\"\", \"\", \"derivedAttributes\", null);\n             for (String attrName : derAttrs) {\n@@ -138,7 +139,7 @@ private void doExtractAttributes(final ContentHandler handler, final AnyTO anyTO\n         }\n \n         if (!virAttrs.isEmpty()) {\n-            Map<String, AttrTO> virAttrMap = anyTO.getVirAttrMap();\n+            Map<String, AttrTO> virAttrMap = EntityTOUtils.buildAttrMap(anyTO.getVirAttrs());\n \n             handler.startElement(\"\", \"\", \"virtualAttributes\", null);\n             for (String attrName : virAttrs) {"},{"sha":"2e4314d4bf83dd00e7bdc11afa0d09bb9de9d45c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/UserReportlet.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.report.UserReportletConf;\n@@ -98,7 +99,7 @@ private void doExtractAttributes(final ContentHandler handler, final AnyTO anyTO\n \n         AttributesImpl atts = new AttributesImpl();\n         if (!attrs.isEmpty()) {\n-            Map<String, AttrTO> attrMap = anyTO.getPlainAttrMap();\n+            Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getPlainAttrs());\n \n             handler.startElement(\"\", \"\", \"attributes\", null);\n             for (String attrName : attrs) {\n@@ -124,7 +125,7 @@ private void doExtractAttributes(final ContentHandler handler, final AnyTO anyTO\n         }\n \n         if (!derAttrs.isEmpty()) {\n-            Map<String, AttrTO> derAttrMap = anyTO.getDerAttrMap();\n+            Map<String, AttrTO> derAttrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n \n             handler.startElement(\"\", \"\", \"derivedAttributes\", null);\n             for (String attrName : derAttrs) {\n@@ -150,7 +151,7 @@ private void doExtractAttributes(final ContentHandler handler, final AnyTO anyTO\n         }\n \n         if (!virAttrs.isEmpty()) {\n-            Map<String, AttrTO> virAttrMap = anyTO.getVirAttrMap();\n+            Map<String, AttrTO> virAttrMap = EntityTOUtils.buildAttrMap(anyTO.getVirAttrs());\n \n             handler.startElement(\"\", \"\", \"virtualAttributes\", null);\n             for (String attrName : virAttrs) {"},{"sha":"69485e4941b456f87d7facb8a26b3059077fee9f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/TemplateUtils.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -23,6 +23,7 @@\n import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -75,7 +76,7 @@ private void fill(final AnyTO anyTO, final AnyTO template) {\n             }\n         }\n \n-        Map<String, AttrTO> currentAttrMap = anyTO.getPlainAttrMap();\n+        Map<String, AttrTO> currentAttrMap = EntityTOUtils.buildAttrMap(anyTO.getPlainAttrs());\n         for (AttrTO templatePlainAttr : template.getPlainAttrs()) {\n             if (!templatePlainAttr.getValues().isEmpty()\n                     && (!currentAttrMap.containsKey(templatePlainAttr.getSchema())\n@@ -85,14 +86,14 @@ private void fill(final AnyTO anyTO, final AnyTO template) {\n             }\n         }\n \n-        currentAttrMap = anyTO.getDerAttrMap();\n+        currentAttrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n         for (AttrTO templateDerAttr : template.getDerAttrs()) {\n             if (!currentAttrMap.containsKey(templateDerAttr.getSchema())) {\n                 anyTO.getDerAttrs().add(templateDerAttr);\n             }\n         }\n \n-        currentAttrMap = anyTO.getVirAttrMap();\n+        currentAttrMap = EntityTOUtils.buildAttrMap(anyTO.getVirAttrs());\n         for (AttrTO templateVirAttr : template.getVirAttrs()) {\n             if (!templateVirAttr.getValues().isEmpty()\n                     && (!currentAttrMap.containsKey(templateVirAttr.getSchema())"},{"sha":"cb9177a1cbb55ea2e03afef9bb9615e644687faf","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/MailTemplateTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -111,7 +111,7 @@ public void optin() throws IOException {\n         ctx.put(\"input\", input);\n \n         UserTO recipient = SerializationUtils.clone(user);\n-        recipient.getPlainAttrMap().get(\"email\").getValues().set(0, \"another@syncope.apache.org\");\n+        recipient.getPlainAttr(\"email\").getValues().set(0, \"another@syncope.apache.org\");\n         ctx.put(\"recipients\", Collections.singletonList(recipient));\n \n         String htmlBody = evaluate("},{"sha":"0574d82f6b0646da476772d43f955079643d602b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -87,16 +87,16 @@ public AttrTO read(final String key, final SchemaType schemaType, final String s\n         AttrTO result;\n         switch (schemaType) {\n             case DERIVED:\n-                result = any.getDerAttrMap().get(schema);\n+                result = any.getDerAttr(schema);\n                 break;\n \n             case VIRTUAL:\n-                result = any.getVirAttrMap().get(schema);\n+                result = any.getVirAttr(schema);\n                 break;\n \n             case PLAIN:\n             default:\n-                result = any.getPlainAttrMap().get(schema);\n+                result = any.getPlainAttr(schema);\n         }\n \n         if (result == null) {"},{"sha":"612844be0f03ba7d3ed450e472085d8a67207b1e","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/CreateProducer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -72,7 +72,7 @@ public void process(final Exchange exchange) throws Exception {\n \n                 if (actual instanceof GroupTO && isPull()) {\n                     Map<String, String> groupOwnerMap = exchange.getProperty(\"groupOwnerMap\", Map.class);\n-                    AttrTO groupOwner = ((GroupTO) actual).getPlainAttrMap().get(StringUtils.EMPTY);\n+                    AttrTO groupOwner = ((GroupTO) actual).getPlainAttr(StringUtils.EMPTY);\n                     if (groupOwner != null) {\n                         groupOwnerMap.put(created.getResult(), groupOwner.getValues().iterator().next());\n                     }"},{"sha":"ffd55b19a8596134ec3f2b943b969202c8b4992a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyObjectITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -67,10 +67,10 @@ public void create() {\n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n         assertNotNull(connObjectTO);\n-        assertNotNull(connObjectTO.getAttrMap().get(\"LOCATION\"));\n+        assertNotNull(connObjectTO.getAttr(\"LOCATION\"));\n         assertEquals(\n-                anyObjectTO.getPlainAttrMap().get(\"location\").getValues(),\n-                connObjectTO.getAttrMap().get(\"LOCATION\").getValues());\n+                anyObjectTO.getPlainAttr(\"location\").getValues(),\n+                connObjectTO.getAttr(\"LOCATION\").getValues());\n     }\n \n     @Test\n@@ -123,8 +123,8 @@ public void delete() {\n     public void list() {\n         PagedResult<AnyObjectTO> anyObjectTOs = anyObjectService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(\"PRINTER\").query()).\n-                build());\n+                        fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(\"PRINTER\").query()).\n+                        build());\n         assertNotNull(anyObjectTOs);\n         assertTrue(anyObjectTOs.getResult().size() >= 2);\n         for (AnyObjectTO anyObjectTO : anyObjectTOs.getResult()) {\n@@ -154,7 +154,7 @@ public void update() {\n \n         anyObjectTO = updateAnyObject(anyObjectPatch).getEntity();\n \n-        assertEquals(newLocation, anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0));\n+        assertEquals(newLocation, anyObjectTO.getPlainAttr(\"location\").getValues().get(0));\n     }\n \n     @Test\n@@ -167,7 +167,7 @@ public void readAttrs() {\n         assertEquals(anyObjectTO.getPlainAttrs(), attrs);\n \n         AttrTO location = anyObjectService.read(anyObjectTO.getKey(), SchemaType.PLAIN, \"location\");\n-        assertEquals(anyObjectTO.getPlainAttrMap().get(\"location\"), location);\n+        assertEquals(anyObjectTO.getPlainAttr(\"location\"), location);\n     }\n \n     @Test\n@@ -190,7 +190,7 @@ public void deleteAttr() {\n         AnyObjectTO anyObjectTO = getSampleTO(\"deleteAttr\");\n         anyObjectTO = createAnyObject(anyObjectTO).getEntity();\n         assertNotNull(anyObjectTO);\n-        assertNotNull(anyObjectTO.getPlainAttrMap().get(\"location\"));\n+        assertNotNull(anyObjectTO.getPlainAttr(\"location\"));\n \n         anyObjectService.delete(anyObjectTO.getKey(), SchemaType.PLAIN, \"location\");\n "},{"sha":"50fa799e5547fa4006c9d2cb9b6219f149275866","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -278,7 +278,7 @@ public void delegatedUserCRUD() {\n \n             user = response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n             }).getEntity();\n-            assertEquals(\"surname\", user.getPlainAttrMap().get(\"surname\").getValues().get(0));\n+            assertEquals(\"surname\", user.getPlainAttr(\"surname\").getValues().get(0));\n \n             // 5. as delegated, update user attempting to move under realm / -> fail\n             UserPatch userPatch = new UserPatch();\n@@ -301,7 +301,7 @@ public void delegatedUserCRUD() {\n \n             user = response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n             }).getEntity();\n-            assertEquals(\"surname2\", user.getPlainAttrMap().get(\"surname\").getValues().get(0));\n+            assertEquals(\"surname2\", user.getPlainAttr(\"surname\").getValues().get(0));\n \n             // 7. as delegated, delete user\n             delegatedUserService.delete(user.getKey());"},{"sha":"4f4f475f4216061b6db0edf6230085416b7b3bda","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/CamelRouteITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -120,7 +120,7 @@ public void scriptingUpdate() {\n                 + \"    </setProperty>\\n\"\n                 + \"    <setBody>\\n\"\n                 + \"     <groovy>\\n\"\n-                + \"request.body.getPlainAttrMap().get(\\\"camelAttribute\\\").getValues().set(0,\\\"true\\\")\\n\"\n+                + \"request.body.getPlainAttr(\\\"camelAttribute\\\").getValues().set(0,\\\"true\\\")\\n\"\n                 + \"       return request.body\\n\"\n                 + \"     </groovy>\\n\"\n                 + \"    </setBody>\\n\"\n@@ -165,7 +165,7 @@ public void scriptingUpdate() {\n \n             userTO = createUser(userTO).getEntity();\n             assertNotNull(userTO);\n-            assertEquals(\"true\", userTO.getPlainAttrMap().get(\"camelAttribute\").getValues().get(0));\n+            assertEquals(\"true\", userTO.getPlainAttr(\"camelAttribute\").getValues().get(0));\n         } finally {\n             doUpdate(oldRoute.getKey(), oldRoute.getContent());\n         }"},{"sha":"88d08f9460f7505fad670da4086b77cf367beb5c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/DynRealmITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -210,7 +210,7 @@ public boolean evaluate(final UserTO object) {\n                     readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n                     }).getEntity();\n             assertNotNull(group);\n-            assertEquals(\"modified\", group.getPlainAttrMap().get(\"icon\").getValues().get(0));\n+            assertEquals(\"modified\", group.getPlainAttr(\"icon\").getValues().get(0));\n         } finally {\n             if (role != null) {\n                 roleService.delete(role.getKey());"},{"sha":"3dff2395ed2460172e9b2e4b97c7a642630bd21b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n@@ -119,17 +120,16 @@ public void create() {\n         groupTO = createGroup(groupTO).getEntity();\n         assertNotNull(groupTO);\n \n-        assertNotNull(groupTO.getVirAttrMap());\n-        assertNotNull(groupTO.getVirAttrMap().get(\"rvirtualdata\").getValues());\n-        assertFalse(groupTO.getVirAttrMap().get(\"rvirtualdata\").getValues().isEmpty());\n-        assertEquals(\"rvirtualvalue\", groupTO.getVirAttrMap().get(\"rvirtualdata\").getValues().get(0));\n+        assertNotNull(groupTO.getVirAttr(\"rvirtualdata\").getValues());\n+        assertFalse(groupTO.getVirAttr(\"rvirtualdata\").getValues().isEmpty());\n+        assertEquals(\"rvirtualvalue\", groupTO.getVirAttr(\"rvirtualdata\").getValues().get(0));\n \n         assertTrue(groupTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), groupTO.getKey());\n         assertNotNull(connObjectTO);\n-        assertNotNull(connObjectTO.getAttrMap().get(\"owner\"));\n+        assertNotNull(connObjectTO.getAttr(\"owner\"));\n \n         // SYNCOPE-515: remove ownership\n         GroupPatch groupPatch = new GroupPatch();\n@@ -240,12 +240,12 @@ public void update() {\n         assertEquals(modName, groupTO.getName());\n         assertEquals(2, groupTO.getPlainAttrs().size());\n \n-        groupTO.getPlainAttrMap().get(\"show\").getValues().clear();\n+        groupTO.getPlainAttr(\"show\").getValues().clear();\n \n         groupTO = groupService.update(groupTO).readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n         }).getEntity();\n \n-        assertFalse(groupTO.getPlainAttrMap().containsKey(\"show\"));\n+        assertNull(groupTO.getPlainAttr(\"show\"));\n     }\n \n     @Test\n@@ -269,7 +269,7 @@ public void patch() {\n         GroupPatch patch = AnyOperations.diff(updated, original, true);\n         GroupTO group = updateGroup(patch).getEntity();\n \n-        Map<String, AttrTO> attrs = group.getPlainAttrMap();\n+        Map<String, AttrTO> attrs = EntityTOUtils.buildAttrMap(group.getPlainAttrs());\n         assertFalse(attrs.containsKey(\"icon\"));\n         assertFalse(attrs.containsKey(\"show\"));\n         assertEquals(Collections.singletonList(\"sx\"), attrs.get(\"rderived_sx\").getValues());\n@@ -574,10 +574,10 @@ public void createWithMandatorySchema() {\n \n         // 2. create a group *without* an attribute for that schema: it works\n         GroupTO groupTO = getSampleTO(\"lastGroup\");\n-        assertFalse(groupTO.getPlainAttrMap().containsKey(badge.getKey()));\n+        assertNull(groupTO.getPlainAttr(badge.getKey()));\n         groupTO = createGroup(groupTO).getEntity();\n         assertNotNull(groupTO);\n-        assertFalse(groupTO.getPlainAttrMap().containsKey(badge.getKey()));\n+        assertNull(groupTO.getPlainAttr(badge.getKey()));\n \n         // 3. add the new mandatory schema to the default group type\n         AnyTypeTO type = anyTypeService.read(AnyTypeKind.GROUP.name());\n@@ -605,7 +605,7 @@ public void createWithMandatorySchema() {\n \n             groupTO = updateGroup(groupPatch).getEntity();\n             assertNotNull(groupTO);\n-            assertTrue(groupTO.getPlainAttrMap().containsKey(badge.getKey()));\n+            assertNotNull(groupTO.getPlainAttr(badge.getKey()));\n         } finally {\n             // restore the original group class\n             typeClass.getPlainSchemas().remove(badge.getKey());\n@@ -669,7 +669,7 @@ public void aDynMembership() {\n         AnyObjectTO newAny = AnyObjectITCase.getSampleTO(\"aDynMembership\");\n         newAny.getResources().clear();\n         newAny = createAnyObject(newAny).getEntity();\n-        assertNotNull(newAny.getPlainAttrMap().get(\"location\"));\n+        assertNotNull(newAny.getPlainAttr(\"location\"));\n         assertTrue(anyObjectService.read(\n                 \"fc6dbc3a-6c07-4965-8781-921e7401a4a5\").getDynGroups().contains(group.getKey()));\n         assertTrue(anyObjectService.read(\n@@ -697,7 +697,7 @@ public void aDynMembership() {\n                 attrTO(new AttrTO.Builder().schema(\"location\").build()).\n                 build());\n         newAny = updateAnyObject(anyPatch).getEntity();\n-        assertNull(newAny.getPlainAttrMap().get(\"location\"));\n+        assertNull(newAny.getPlainAttr(\"location\"));\n         assertFalse(anyObjectService.read(\n                 \"fc6dbc3a-6c07-4965-8781-921e7401a4a5\").getDynGroups().contains(group.getKey()));\n         assertFalse(anyObjectService.read(\n@@ -1036,7 +1036,7 @@ public void issueSYNCOPE717() {\n \n         groupTO = createGroup(groupTO).getEntity();\n         assertNotNull(groupTO);\n-        assertEquals(\"11.23\", groupTO.getPlainAttrMap().get(doubleSchemaName).getValues().get(0));\n+        assertEquals(\"11.23\", groupTO.getPlainAttr(doubleSchemaName).getValues().get(0));\n \n         // 3. update schema, set conversion pattern\n         schema = schemaService.read(SchemaType.PLAIN, schema.getKey());\n@@ -1046,7 +1046,7 @@ public void issueSYNCOPE717() {\n         // 4. re-read group, verify that pattern was applied\n         groupTO = groupService.read(groupTO.getKey());\n         assertNotNull(groupTO);\n-        assertEquals(\"11.230\", groupTO.getPlainAttrMap().get(doubleSchemaName).getValues().get(0));\n+        assertEquals(\"11.230\", groupTO.getPlainAttr(doubleSchemaName).getValues().get(0));\n \n         // 5. modify group with new double value\n         GroupPatch patch = new GroupPatch();\n@@ -1055,7 +1055,7 @@ public void issueSYNCOPE717() {\n \n         groupTO = updateGroup(patch).getEntity();\n         assertNotNull(groupTO);\n-        assertEquals(\"11.257\", groupTO.getPlainAttrMap().get(doubleSchemaName).getValues().get(0));\n+        assertEquals(\"11.257\", groupTO.getPlainAttr(doubleSchemaName).getValues().get(0));\n \n         // 6. update schema, unset conversion pattern\n         schema.setConversionPattern(null);\n@@ -1068,7 +1068,7 @@ public void issueSYNCOPE717() {\n \n         groupTO = updateGroup(patch).getEntity();\n         assertNotNull(groupTO);\n-        assertEquals(\"11.23\", groupTO.getPlainAttrMap().get(doubleSchemaName).getValues().get(0));\n+        assertEquals(\"11.23\", groupTO.getPlainAttr(doubleSchemaName).getValues().get(0));\n     }\n \n }"},{"sha":"e150bb2eaa1c7e7534c87beaa71744f3f25c3c31","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MembershipITCase.java","status":"modified","additions":20,"deletions":19,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -21,6 +21,7 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n@@ -74,7 +75,7 @@ public void misc() {\n         UserTO user = UserITCase.getUniqueSampleTO(\"memb@apache.org\");\n         user.setRealm(\"/even/two\");\n         user.getPlainAttrs().add(new AttrTO.Builder().schema(\"aLong\").value(\"1976\").build());\n-        user.getPlainAttrs().remove(user.getPlainAttrMap().get(\"ctype\"));\n+        user.getPlainAttrs().remove(user.getPlainAttr(\"ctype\"));\n \n         // the group 034740a9-fa10-453b-af37-dc7897e98fb1 has USER type extensions for 'csv' and 'other' \n         // any type classes\n@@ -107,19 +108,19 @@ public boolean evaluate(final AttrTO object) {\n             user = createUser(user).getEntity();\n \n             // 1. verify that 'aLong' is correctly populated for user\n-            assertEquals(1, user.getPlainAttrMap().get(\"aLong\").getValues().size());\n-            assertEquals(\"1976\", user.getPlainAttrMap().get(\"aLong\").getValues().get(0));\n+            assertEquals(1, user.getPlainAttr(\"aLong\").getValues().size());\n+            assertEquals(\"1976\", user.getPlainAttr(\"aLong\").getValues().get(0));\n \n             // 2. verify that 'aLong' is correctly populated for user's membership\n             assertEquals(1, user.getMemberships().size());\n             membership = user.getMembershipMap().get(\"034740a9-fa10-453b-af37-dc7897e98fb1\");\n             assertNotNull(membership);\n-            assertEquals(1, membership.getPlainAttrMap().get(\"aLong\").getValues().size());\n-            assertEquals(\"1977\", membership.getPlainAttrMap().get(\"aLong\").getValues().get(0));\n+            assertEquals(1, membership.getPlainAttr(\"aLong\").getValues().size());\n+            assertEquals(\"1977\", membership.getPlainAttr(\"aLong\").getValues().get(0));\n \n             // 3. verify that derived attrbutes from 'csv' and 'other' are also populated for user's membership\n-            assertFalse(membership.getDerAttrMap().get(\"csvuserid\").getValues().isEmpty());\n-            assertFalse(membership.getDerAttrMap().get(\"noschema\").getValues().isEmpty());\n+            assertFalse(membership.getDerAttr(\"csvuserid\").getValues().isEmpty());\n+            assertFalse(membership.getDerAttr(\"noschema\").getValues().isEmpty());\n \n             // update user - change some values and add new membership attribute\n             UserPatch userPatch = new UserPatch();\n@@ -138,19 +139,19 @@ public boolean evaluate(final AttrTO object) {\n             user = updateUser(userPatch).getEntity();\n \n             // 4. verify that 'aLong' is correctly populated for user\n-            assertEquals(1, user.getPlainAttrMap().get(\"aLong\").getValues().size());\n-            assertEquals(\"1977\", user.getPlainAttrMap().get(\"aLong\").getValues().get(0));\n-            assertFalse(user.getPlainAttrMap().containsKey(\"ctype\"));\n+            assertEquals(1, user.getPlainAttr(\"aLong\").getValues().size());\n+            assertEquals(\"1977\", user.getPlainAttr(\"aLong\").getValues().get(0));\n+            assertNull(user.getPlainAttr(\"ctype\"));\n \n             // 5. verify that 'aLong' is correctly populated for user's membership\n             assertEquals(1, user.getMemberships().size());\n             membership = user.getMembershipMap().get(\"034740a9-fa10-453b-af37-dc7897e98fb1\");\n             assertNotNull(membership);\n-            assertEquals(1, membership.getPlainAttrMap().get(\"aLong\").getValues().size());\n-            assertEquals(\"1976\", membership.getPlainAttrMap().get(\"aLong\").getValues().get(0));\n+            assertEquals(1, membership.getPlainAttr(\"aLong\").getValues().size());\n+            assertEquals(\"1976\", membership.getPlainAttr(\"aLong\").getValues().get(0));\n \n             // 6. verify that 'ctype' is correctly populated for user's membership\n-            assertEquals(\"membership type\", membership.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n+            assertEquals(\"membership type\", membership.getPlainAttr(\"ctype\").getValues().get(0));\n \n             // finally remove membership\n             userPatch = new UserPatch();\n@@ -212,12 +213,12 @@ public void onGroupDelete() {\n         assertEquals(1, user.getMemberships().size());\n         membership = user.getMembershipMap().get(groupTO.getKey());\n         assertNotNull(membership);\n-        assertEquals(1, membership.getPlainAttrMap().get(\"aLong\").getValues().size());\n-        assertEquals(\"1454\", membership.getPlainAttrMap().get(\"aLong\").getValues().get(0));\n+        assertEquals(1, membership.getPlainAttr(\"aLong\").getValues().size());\n+        assertEquals(\"1454\", membership.getPlainAttr(\"aLong\").getValues().get(0));\n \n         // verify that derived attrbutes from 'csv' and 'other' are also populated for user's membership\n-        assertFalse(membership.getDerAttrMap().get(\"csvuserid\").getValues().isEmpty());\n-        assertFalse(membership.getDerAttrMap().get(\"noschema\").getValues().isEmpty());\n+        assertFalse(membership.getDerAttr(\"csvuserid\").getValues().isEmpty());\n+        assertFalse(membership.getDerAttr(\"noschema\").getValues().isEmpty());\n \n         // now remove the group -> all related memberships should have been removed as well\n         groupService.delete(groupTO.getKey());\n@@ -264,7 +265,7 @@ public boolean evaluate(final MappingItemTO object) {\n             // 1. create user with new resource assigned\n             UserTO user = UserITCase.getUniqueSampleTO(\"memb@apache.org\");\n             user.setRealm(\"/even/two\");\n-            user.getPlainAttrs().remove(user.getPlainAttrMap().get(\"ctype\"));\n+            user.getPlainAttrs().remove(user.getPlainAttr(\"ctype\"));\n             user.getResources().clear();\n             user.getResources().add(newResource.getKey());\n \n@@ -310,7 +311,7 @@ public boolean evaluate(final MappingItemTO object) {\n             assertEquals(1, users.getTotalCount());\n             assertEquals(1, users.getResult().get(0).getMemberships().size());\n             assertEquals(\"5432\", users.getResult().get(0).getMemberships().get(0).\n-                    getPlainAttrMap().get(\"aLong\").getValues().get(0));\n+                    getPlainAttr(\"aLong\").getValues().get(0));\n         } catch (Exception e) {\n             LOG.error(\"Unexpected error\", e);\n             fail(e.getMessage());"},{"sha":"9017a9be3ececcd501cb8ca4ac9416abd8477892","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MigrationITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -518,8 +518,8 @@ public boolean evaluate(final MembershipTO object) {\n         assertEquals(\"/\" + MIGRATION_REALM, group.getRealm());\n \n         // 4a. user plain attrs\n-        assertEquals(\"Gioacchino\", user.getPlainAttrMap().get(\"firstname\").getValues().get(0));\n-        assertEquals(\"Rossini\", user.getPlainAttrMap().get(\"surname\").getValues().get(0));\n+        assertEquals(\"Gioacchino\", user.getPlainAttr(\"firstname\").getValues().get(0));\n+        assertEquals(\"Rossini\", user.getPlainAttr(\"surname\").getValues().get(0));\n \n         // 4b. user resources\n         assertTrue(user.getResources().contains(RESOURCE_NAME_TESTDB2));\n@@ -528,7 +528,7 @@ public boolean evaluate(final MembershipTO object) {\n         assertNotNull(clientFactory.create(\"bellini12\", ADMIN_PWD).self());\n \n         // 4d. group plain attrs\n-        assertEquals(\"r12\", group.getPlainAttrMap().get(\"title\").getValues().get(0));\n+        assertEquals(\"r12\", group.getPlainAttr(\"title\").getValues().get(0));\n \n         // 4e. group resources\n         assertTrue(group.getResources().contains(RESOURCE_NAME_CSV));"},{"sha":"937c37be33223f4b5af899a28c4647514c879937","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PropagationTaskITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -93,7 +93,7 @@ public void bulkAction() {\n         List<PropagationTaskTO> tasks = new ArrayList<>(\n                 taskService.<PropagationTaskTO>list(new TaskQuery.Builder(TaskType.PROPAGATION).\n                         anyTypeKind(AnyTypeKind.USER).entityKey(userTO.getKey()).build()).\n-                getResult());\n+                        getResult());\n         assertFalse(tasks.isEmpty());\n \n         BulkAction bulkAction = new BulkAction();\n@@ -135,7 +135,7 @@ public boolean evaluate(final MappingItemTO object) {\n \n             // 1. create printer on external resource\n             AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"propagationJEXLTransformer\");\n-            String originalLocation = anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0);\n+            String originalLocation = anyObjectTO.getPlainAttr(\"location\").getValues().get(0);\n             assertFalse(originalLocation.endsWith(suffix));\n \n             anyObjectTO = createAnyObject(anyObjectTO).getEntity();\n@@ -145,8 +145,8 @@ public boolean evaluate(final MappingItemTO object) {\n             // (location ends with given suffix on external resource)\n             ConnObjectTO connObjectTO = resourceService.\n                     readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n-            assertFalse(anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).endsWith(suffix));\n-            assertTrue(connObjectTO.getAttrMap().get(\"LOCATION\").getValues().get(0).endsWith(suffix));\n+            assertFalse(anyObjectTO.getPlainAttr(\"location\").getValues().get(0).endsWith(suffix));\n+            assertTrue(connObjectTO.getAttr(\"LOCATION\").getValues().get(0).endsWith(suffix));\n         } finally {\n             resourceService.update(originalResource);\n         }"},{"sha":"0869613c995ddf2683dfe4c03c8b6074f990d83d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":36,"deletions":35,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -231,9 +231,9 @@ public void fromCSV() throws Exception {\n             assertEquals(userName, userTO.getUsername());\n             assertEquals(ActivitiDetector.isActivitiEnabledForUsers(syncopeService)\n                     ? \"active\" : \"created\", userTO.getStatus());\n-            assertEquals(\"test9@syncope.apache.org\", userTO.getPlainAttrMap().get(\"email\").getValues().get(0));\n-            assertEquals(\"test9@syncope.apache.org\", userTO.getPlainAttrMap().get(\"userId\").getValues().get(0));\n-            assertTrue(Integer.valueOf(userTO.getPlainAttrMap().get(\"fullname\").getValues().get(0)) <= 10);\n+            assertEquals(\"test9@syncope.apache.org\", userTO.getPlainAttr(\"email\").getValues().get(0));\n+            assertEquals(\"test9@syncope.apache.org\", userTO.getPlainAttr(\"userId\").getValues().get(0));\n+            assertTrue(Integer.valueOf(userTO.getPlainAttr(\"fullname\").getValues().get(0)) <= 10);\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_WS2));\n \n@@ -243,7 +243,7 @@ public void fromCSV() throws Exception {\n             // check for user template\n             userTO = userService.read(\"test7\");\n             assertNotNull(userTO);\n-            assertEquals(\"TYPE_OTHER\", userTO.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n+            assertEquals(\"TYPE_OTHER\", userTO.getPlainAttr(\"ctype\").getValues().get(0));\n             assertEquals(3, userTO.getResources().size());\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_WS2));\n@@ -262,7 +262,7 @@ public boolean evaluate(final AttrTO attrTO) {\n \n             userTO = userService.read(\"test8\");\n             assertNotNull(userTO);\n-            assertEquals(\"TYPE_8\", userTO.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n+            assertEquals(\"TYPE_8\", userTO.getPlainAttr(\"ctype\").getValues().get(0));\n \n             // Check for ignored user - SYNCOPE-663\n             try {\n@@ -315,7 +315,7 @@ public void reconcileFromDB() {\n \n             userTO = userService.read(\"testuser1\");\n             assertNotNull(userTO);\n-            assertEquals(\"reconciled@syncope.apache.org\", userTO.getPlainAttrMap().get(\"userId\").getValues().get(0));\n+            assertEquals(\"reconciled@syncope.apache.org\", userTO.getPlainAttr(\"userId\").getValues().get(0));\n             assertEquals(\"suspended\", userTO.getStatus());\n \n             // enable user on external resource\n@@ -408,16 +408,16 @@ public void reconcileFromLDAP() {\n \n         // Check for SYNCOPE-436\n         assertEquals(\"pullFromLDAP\",\n-                matchingUsers.getResult().get(0).getVirAttrMap().get(\"virtualReadOnly\").getValues().get(0));\n+                matchingUsers.getResult().get(0).getVirAttr(\"virtualReadOnly\").getValues().get(0));\n         // Check for SYNCOPE-270\n-        assertNotNull(matchingUsers.getResult().get(0).getPlainAttrMap().get(\"obscure\"));\n+        assertNotNull(matchingUsers.getResult().get(0).getPlainAttr(\"obscure\"));\n         // Check for SYNCOPE-123\n-        assertNotNull(matchingUsers.getResult().get(0).getPlainAttrMap().get(\"photo\"));\n+        assertNotNull(matchingUsers.getResult().get(0).getPlainAttr(\"photo\"));\n \n         GroupTO groupTO = matchingGroups.getResult().iterator().next();\n         assertNotNull(groupTO);\n         assertEquals(\"testLDAPGroup\", groupTO.getName());\n-        assertEquals(\"true\", groupTO.getPlainAttrMap().get(\"show\").getValues().get(0));\n+        assertEquals(\"true\", groupTO.getPlainAttr(\"show\").getValues().get(0));\n         assertEquals(matchingUsers.getResult().iterator().next().getKey(), groupTO.getUserOwner());\n         assertNull(groupTO.getGroupOwner());\n \n@@ -480,7 +480,7 @@ public boolean evaluate(final MappingItemTO object) {\n \n             // 1. create printer on external resource\n             AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"pull\");\n-            String originalLocation = anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0);\n+            String originalLocation = anyObjectTO.getPlainAttr(\"location\").getValues().get(0);\n             assertFalse(originalLocation.startsWith(PrefixMappingItemTransformer.PREFIX));\n \n             anyObjectTO = createAnyObject(anyObjectTO).getEntity();\n@@ -490,9 +490,9 @@ public boolean evaluate(final MappingItemTO object) {\n             // (location starts with given prefix on external resource)\n             ConnObjectTO connObjectTO = resourceService.\n                     readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n-            assertFalse(anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).\n+            assertFalse(anyObjectTO.getPlainAttr(\"location\").getValues().get(0).\n                     startsWith(PrefixMappingItemTransformer.PREFIX));\n-            assertTrue(connObjectTO.getAttrMap().get(\"LOCATION\").getValues().get(0).\n+            assertTrue(connObjectTO.getAttr(\"LOCATION\").getValues().get(0).\n                     startsWith(PrefixMappingItemTransformer.PREFIX));\n \n             // 3. unlink any existing printer and delete from Syncope (printer is now only on external resource)\n@@ -761,7 +761,7 @@ public void issueSYNCOPE68() {\n \n             userTO = userService.read(\"testuser2\");\n             assertNotNull(userTO);\n-            assertEquals(\"testuser2@syncope.apache.org\", userTO.getPlainAttrMap().get(\"userId\").getValues().get(0));\n+            assertEquals(\"testuser2@syncope.apache.org\", userTO.getPlainAttr(\"userId\").getValues().get(0));\n             assertEquals(2, userTO.getMemberships().size());\n             assertEquals(4, userTO.getResources().size());\n         } finally {\n@@ -784,7 +784,7 @@ public void issueSYNCOPE230() {\n         // 3. read e-mail address for user created by the PullTask first execution\n         UserTO userTO = userService.read(\"issuesyncope230\");\n         assertNotNull(userTO);\n-        String email = userTO.getPlainAttrMap().get(\"email\").getValues().iterator().next();\n+        String email = userTO.getPlainAttr(\"email\").getValues().iterator().next();\n         assertNotNull(email);\n \n         // 4. update TESTPULL on external H2 by changing e-mail address\n@@ -796,7 +796,7 @@ public void issueSYNCOPE230() {\n         // 6. verify that the e-mail was updated\n         userTO = userService.read(\"issuesyncope230\");\n         assertNotNull(userTO);\n-        email = userTO.getPlainAttrMap().get(\"email\").getValues().iterator().next();\n+        email = userTO.getPlainAttr(\"email\").getValues().iterator().next();\n         assertNotNull(email);\n         assertEquals(\"updatedSYNCOPE230@syncope.apache.org\", email);\n     }\n@@ -876,7 +876,7 @@ public void issueSYNCOPE272() {\n \n             userTO = userService.read(userTO.getKey());\n             assertNotNull(userTO);\n-            assertNotNull(userTO.getPlainAttrMap().get(\"firstname\").getValues().get(0));\n+            assertNotNull(userTO.getPlainAttr(\"firstname\").getValues().get(0));\n         } finally {\n             removeTestUsers();\n         }\n@@ -886,8 +886,8 @@ public void issueSYNCOPE272() {\n     public void issueSYNCOPE307() {\n         UserTO userTO = UserITCase.getUniqueSampleTO(\"s307@apache.org\");\n         userTO.setUsername(\"test0\");\n-        userTO.getPlainAttrMap().get(\"firstname\").getValues().clear();\n-        userTO.getPlainAttrMap().get(\"firstname\").getValues().add(\"nome0\");\n+        userTO.getPlainAttr(\"firstname\").getValues().clear();\n+        userTO.getPlainAttr(\"firstname\").getValues().add(\"nome0\");\n         userTO.getAuxClasses().add(\"csv\");\n \n         AttrTO csvuserid = new AttrTO();\n@@ -901,7 +901,7 @@ public void issueSYNCOPE307() {\n         assertNotNull(userTO);\n \n         userTO = userService.read(userTO.getKey());\n-        assertTrue(userTO.getVirAttrMap().isEmpty());\n+        assertTrue(userTO.getVirAttrs().isEmpty());\n \n         // Update pull task\n         PullTaskTO task = taskService.read(\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\", true);\n@@ -921,7 +921,7 @@ public void issueSYNCOPE307() {\n \n         // check that template was successfully applied...\n         userTO = userService.read(userTO.getKey());\n-        assertEquals(\"virtualvalue\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n \n         // ...and that propagation to db succeeded\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n@@ -1018,9 +1018,9 @@ public void issueSYNCOPE313LDAP() throws Exception {\n             ConnObjectTO connObject =\n                     resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n             assertNotNull(getLdapRemoteObject(\n-                    connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n+                    connObject.getAttr(Name.NAME).getValues().get(0),\n                     oldCleanPassword,\n-                    connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n+                    connObject.getAttr(Name.NAME).getValues().get(0)));\n \n             // 5. Update the LDAP Connector to retrieve passwords\n             ResourceTO ldapResource = resourceService.read(RESOURCE_NAME_LDAP);\n@@ -1112,34 +1112,34 @@ public void issueSYNCOPE1062() {\n             // the user is successfully pulled...\n             user = userService.read(\"pullFromLDAP\");\n             assertNotNull(user);\n-            assertEquals(\"pullFromLDAP@syncope.apache.org\", user.getPlainAttrMap().get(\"email\").getValues().get(0));\n+            assertEquals(\"pullFromLDAP@syncope.apache.org\", user.getPlainAttr(\"email\").getValues().get(0));\n \n             group = groupService.read(\"testLDAPGroup\");\n             assertNotNull(group);\n \n             ConnObjectTO connObject =\n                     resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n             assertNotNull(connObject);\n-            assertEquals(\"pullFromLDAP@syncope.apache.org\", connObject.getAttrMap().get(\"mail\").getValues().get(0));\n-            AttrTO userDn = connObject.getAttrMap().get(Name.NAME);\n+            assertEquals(\"pullFromLDAP@syncope.apache.org\", connObject.getAttr(\"mail\").getValues().get(0));\n+            AttrTO userDn = connObject.getAttr(Name.NAME);\n             assertNotNull(userDn);\n             assertEquals(1, userDn.getValues().size());\n             assertNotNull(\n                     getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, userDn.getValues().get(0)));\n \n             // ...and propagated\n-            JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-            String email = queryForObject(\n-                    jdbcTemplate, 50, \"SELECT EMAIL FROM TESTPULL WHERE USERNAME=?\", String.class, user.getUsername());\n-            assertEquals(user.getPlainAttrMap().get(\"email\").getValues().get(0), email);\n+            PagedResult<AbstractTaskTO> propagationTasks = taskService.list(new TaskQuery.Builder(TaskType.PROPAGATION).\n+                    resource(RESOURCE_NAME_DBPULL).\n+                    anyTypeKind(AnyTypeKind.USER).entityKey(user.getKey()).build());\n+            assertEquals(1, propagationTasks.getSize());\n \n             // 4. update the user on the external resource\n             updateLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD,\n                     userDn.getValues().get(0), Pair.of(\"mail\", \"pullFromLDAP2@syncope.apache.org\"));\n \n             connObject = resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n             assertNotNull(connObject);\n-            assertEquals(\"pullFromLDAP2@syncope.apache.org\", connObject.getAttrMap().get(\"mail\").getValues().get(0));\n+            assertEquals(\"pullFromLDAP2@syncope.apache.org\", connObject.getAttr(\"mail\").getValues().get(0));\n \n             // 5. exec the pull task again\n             execution = execProvisioningTask(taskService, pullTask.getKey(), 50, false);\n@@ -1148,12 +1148,13 @@ public void issueSYNCOPE1062() {\n             // the internal is updated...\n             user = userService.read(\"pullFromLDAP\");\n             assertNotNull(user);\n-            assertEquals(\"pullFromLDAP2@syncope.apache.org\", user.getPlainAttrMap().get(\"email\").getValues().get(0));\n+            assertEquals(\"pullFromLDAP2@syncope.apache.org\", user.getPlainAttr(\"email\").getValues().get(0));\n \n             // ...and propagated\n-            email = queryForObject(\n-                    jdbcTemplate, 50, \"SELECT EMAIL FROM TESTPULL WHERE USERNAME=?\", String.class, user.getUsername());\n-            assertEquals(user.getPlainAttrMap().get(\"email\").getValues().get(0), email);\n+            propagationTasks = taskService.list(new TaskQuery.Builder(TaskType.PROPAGATION).\n+                    resource(RESOURCE_NAME_DBPULL).\n+                    anyTypeKind(AnyTypeKind.USER).entityKey(user.getKey()).build());\n+            assertEquals(2, propagationTasks.getSize());\n         } catch (Exception e) {\n             LOG.error(\"Unexpected during issueSYNCOPE1062()\", e);\n             fail(e.getMessage());"},{"sha":"ebfb1137cbc2cc539285e0e0cb810e33667a098c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ResourceITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -35,6 +35,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n@@ -573,7 +574,7 @@ public void listConnObjects() {\n \n                     @Override\n                     public String transform(final ConnObjectTO input) {\n-                        return input.getAttrMap().get(\"__NAME__\").getValues().get(0);\n+                        return input.getAttr(ConnIdSpecialName.NAME).getValues().get(0);\n                     }\n                 }, read);\n "},{"sha":"356d98ab4a874c0228d8e2723f902e8a9e74a96c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -93,7 +93,7 @@ public class UserITCase extends AbstractITCase {\n     private static final FastDateFormat DATE_FORMAT = DateFormatUtils.ISO_8601_EXTENDED_DATETIME_FORMAT;\n \n     private boolean getBooleanAttribute(final ConnObjectTO connObjectTO, final String attrName) {\n-        return Boolean.parseBoolean(connObjectTO.getAttrMap().get(attrName).getValues().get(0));\n+        return Boolean.parseBoolean(connObjectTO.getAttr(attrName).getValues().get(0));\n     }\n \n     public static UserTO getUniqueSampleTO(final String email) {\n@@ -335,7 +335,7 @@ public void create() {\n \n         // 4. try (and fail) to create another user with same (unique) values\n         userTO = getSampleTO(userTO.getUsername());\n-        AttrTO userIdAttr = userTO.getPlainAttrMap().get(\"userId\");\n+        AttrTO userIdAttr = userTO.getPlainAttr(\"userId\");\n         userIdAttr.getValues().clear();\n         userIdAttr.getValues().add(\"a.b@c.com\");\n \n@@ -351,7 +351,7 @@ public void create() {\n     public void createWithRequiredValueMissing() {\n         UserTO userTO = getUniqueSampleTO(\"a.b@c.it\");\n \n-        AttrTO type = userTO.getPlainAttrMap().get(\"ctype\");\n+        AttrTO type = userTO.getPlainAttr(\"ctype\");\n         userTO.getPlainAttrs().remove(type);\n \n         userTO.getMemberships().add(new MembershipTO.Builder().\n@@ -367,7 +367,7 @@ public void createWithRequiredValueMissing() {\n \n         userTO.getPlainAttrs().add(attrTO(\"ctype\", \"F\"));\n \n-        AttrTO surname = userTO.getPlainAttrMap().get(\"surname\");\n+        AttrTO surname = userTO.getPlainAttr(\"surname\");\n         userTO.getPlainAttrs().remove(surname);\n \n         // 2. create user without surname (mandatory when type == 'F')\n@@ -512,8 +512,7 @@ public void updateWithoutPassword() {\n         userTO = updateUser(userPatch).getEntity();\n \n         assertNotNull(userTO);\n-        assertNotNull(userTO.getDerAttrMap());\n-        assertFalse(userTO.getPlainAttrMap().containsKey(\"ctype\"));\n+        assertNull(userTO.getPlainAttr(\"ctype\"));\n     }\n \n     @Test(expected = SyncopeClientException.class)\n@@ -585,10 +584,10 @@ public void update() {\n         assertEquals(1, userTO.getMemberships().size());\n         assertFalse(userTO.getDerAttrs().isEmpty());\n \n-        AttrTO userIdAttr = userTO.getPlainAttrMap().get(\"userId\");\n+        AttrTO userIdAttr = userTO.getPlainAttr(\"userId\");\n         assertEquals(Collections.singletonList(newUserId), userIdAttr.getValues());\n \n-        AttrTO fullNameAttr = userTO.getPlainAttrMap().get(\"fullname\");\n+        AttrTO fullNameAttr = userTO.getPlainAttr(\"fullname\");\n         assertEquals(Collections.singletonList(newFullName), fullNameAttr.getValues());\n     }\n \n@@ -838,7 +837,7 @@ public void updateMultivalueAttribute() {\n         userTO = createUser(userTO).getEntity();\n         assertNotNull(userTO);\n \n-        AttrTO loginDate = userTO.getPlainAttrMap().get(\"loginDate\");\n+        AttrTO loginDate = userTO.getPlainAttr(\"loginDate\");\n         assertNotNull(loginDate);\n         assertEquals(1, loginDate.getValues().size());\n \n@@ -852,7 +851,7 @@ public void updateMultivalueAttribute() {\n         userTO = updateUser(userPatch).getEntity();\n         assertNotNull(userTO);\n \n-        loginDate = userTO.getPlainAttrMap().get(\"loginDate\");\n+        loginDate = userTO.getPlainAttr(\"loginDate\");\n         assertNotNull(loginDate);\n         assertEquals(2, loginDate.getValues().size());\n     }\n@@ -928,12 +927,12 @@ public void groupAttrPropagation() {\n \n         UserTO actual = createUser(userTO).getEntity();\n         assertNotNull(actual);\n-        assertNotNull(actual.getDerAttrMap().get(\"csvuserid\"));\n+        assertNotNull(actual.getDerAttr(\"csvuserid\"));\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), actual.getKey());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"sx-dx\", connObjectTO.getAttrMap().get(\"THEIRGROUP\").getValues().get(0));\n+        assertEquals(\"sx-dx\", connObjectTO.getAttr(\"THEIRGROUP\").getValues().get(0));\n     }\n \n     @Test\n@@ -1013,7 +1012,7 @@ public void mappingPurpose() {\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertNull(connObjectTO.getAttrMap().get(\"email\"));\n+        assertNull(connObjectTO.getAttr(\"email\"));\n     }\n \n     @Test\n@@ -1321,7 +1320,7 @@ public void restResource() {\n         assertEquals(1, result.getPropagationStatuses().size());\n         assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n         assertEquals(\"rest-target-resource\", result.getPropagationStatuses().get(0).getResource());\n-        assertEquals(\"surname\", userTO.getPlainAttrMap().get(\"surname\").getValues().get(0));\n+        assertEquals(\"surname\", userTO.getPlainAttr(\"surname\").getValues().get(0));\n \n         // verify user exists on the backend REST service\n         WebClient webClient = WebClient.create(\n@@ -1341,7 +1340,7 @@ public void restResource() {\n         assertEquals(1, result.getPropagationStatuses().size());\n         assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n         assertEquals(\"rest-target-resource\", result.getPropagationStatuses().get(0).getResource());\n-        assertEquals(\"surname2\", result.getEntity().getPlainAttrMap().get(\"surname\").getValues().get(0));\n+        assertEquals(\"surname2\", result.getEntity().getPlainAttr(\"surname\").getValues().get(0));\n \n         // verify user still exists on the backend REST service\n         response = webClient.get();"},{"sha":"499b24cd9bbcffacab3643bf904e83fe038c8335","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java","status":"modified","additions":33,"deletions":36,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -409,7 +409,7 @@ public void issueSYNCOPE267() {\n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_DBVIRATTR, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"USERNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", connObjectTO.getAttr(\"USERNAME\").getValues().get(0));\n         // ----------------------------------\n \n         userTO = userService.read(userTO.getKey());\n@@ -467,15 +467,15 @@ public void issueSYNCOPE122() {\n \n         ConnObjectTO userOnDb = resourceService.readConnObject(\n                 RESOURCE_NAME_TESTDB, AnyTypeKind.USER.name(), userTO.getKey());\n-        final AttrTO pwdOnTestDbAttr = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttrTO pwdOnTestDbAttr = userOnDb.getAttr(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttr);\n         assertNotNull(pwdOnTestDbAttr.getValues());\n         assertFalse(pwdOnTestDbAttr.getValues().isEmpty());\n         final String pwdOnTestDb = pwdOnTestDbAttr.getValues().iterator().next();\n \n         ConnObjectTO userOnDb2 = resourceService.readConnObject(\n                 RESOURCE_NAME_TESTDB2, AnyTypeKind.USER.name(), userTO.getKey());\n-        final AttrTO pwdOnTestDb2Attr = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttrTO pwdOnTestDb2Attr = userOnDb2.getAttr(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2Attr);\n         assertNotNull(pwdOnTestDb2Attr.getValues());\n         assertFalse(pwdOnTestDb2Attr.getValues().isEmpty());\n@@ -500,15 +500,15 @@ public void issueSYNCOPE122() {\n \n         // 3c. verify that password *has* changed on testdb\n         userOnDb = resourceService.readConnObject(RESOURCE_NAME_TESTDB, AnyTypeKind.USER.name(), userTO.getKey());\n-        final AttrTO pwdOnTestDbAttrAfter = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttrTO pwdOnTestDbAttrAfter = userOnDb.getAttr(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttrAfter);\n         assertNotNull(pwdOnTestDbAttrAfter.getValues());\n         assertFalse(pwdOnTestDbAttrAfter.getValues().isEmpty());\n         assertNotEquals(pwdOnTestDb, pwdOnTestDbAttrAfter.getValues().iterator().next());\n \n         // 3d. verify that password hasn't changed on testdb2\n         userOnDb2 = resourceService.readConnObject(RESOURCE_NAME_TESTDB2, AnyTypeKind.USER.name(), userTO.getKey());\n-        final AttrTO pwdOnTestDb2AttrAfter = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttrTO pwdOnTestDb2AttrAfter = userOnDb2.getAttr(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2AttrAfter);\n         assertNotNull(pwdOnTestDb2AttrAfter.getValues());\n         assertFalse(pwdOnTestDb2AttrAfter.getValues().isEmpty());\n@@ -607,7 +607,7 @@ public void issueSYNCOPE265() {\n             userPatch.setKey(userKey);\n             userPatch.getPlainAttrs().add(attrAddReplacePatch(\"ctype\", \"a type\"));\n             UserTO userTO = updateUser(userPatch).getEntity();\n-            assertEquals(\"a type\", userTO.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n+            assertEquals(\"a type\", userTO.getPlainAttr(\"ctype\").getValues().get(0));\n         }\n     }\n \n@@ -643,7 +643,7 @@ public void issueSYNCOPE354() {\n         ConnObjectTO connObj = resourceService.readConnObject(\n                 RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), groupTO.getKey());\n         assertNotNull(connObj);\n-        assertTrue(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n+        assertTrue(connObj.getAttr(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n \n         // 4. remove membership\n@@ -658,7 +658,7 @@ public void issueSYNCOPE354() {\n         // 5. read group on resource, check that user DN was removed from uniqueMember\n         connObj = resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), groupTO.getKey());\n         assertNotNull(connObj);\n-        assertFalse(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n+        assertFalse(connObj.getAttr(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n \n         // 6. restore original resource-ldap group mapping\n@@ -690,19 +690,19 @@ public void issueSYNCOPE357() throws IOException {\n \n         userTO = createUser(userTO).getEntity();\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n-        assertNotNull(userTO.getPlainAttrMap().get(\"obscure\"));\n-        assertNotNull(userTO.getPlainAttrMap().get(\"photo\"));\n+        assertNotNull(userTO.getPlainAttr(\"obscure\"));\n+        assertNotNull(userTO.getPlainAttr(\"photo\"));\n \n         // 3. read user on resource\n         ConnObjectTO connObj = resourceService.readConnObject(\n                 RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObj);\n-        AttrTO registeredAddress = connObj.getAttrMap().get(\"registeredAddress\");\n+        AttrTO registeredAddress = connObj.getAttr(\"registeredAddress\");\n         assertNotNull(registeredAddress);\n-        assertEquals(userTO.getPlainAttrMap().get(\"obscure\").getValues(), registeredAddress.getValues());\n-        AttrTO jpegPhoto = connObj.getAttrMap().get(\"jpegPhoto\");\n+        assertEquals(userTO.getPlainAttr(\"obscure\").getValues(), registeredAddress.getValues());\n+        AttrTO jpegPhoto = connObj.getAttr(\"jpegPhoto\");\n         assertNotNull(jpegPhoto);\n-        assertEquals(userTO.getPlainAttrMap().get(\"photo\").getValues(), jpegPhoto.getValues());\n+        assertEquals(userTO.getPlainAttr(\"photo\").getValues(), jpegPhoto.getValues());\n \n         // 4. remove group\n         groupService.delete(groupTO.getKey());\n@@ -806,14 +806,14 @@ public void issueSYNCOPE420() {\n         userTO.getPlainAttrs().add(attrTO(\"makeItDouble\", \"3\"));\n \n         userTO = createUser(userTO).getEntity();\n-        assertEquals(\"6\", userTO.getPlainAttrMap().get(\"makeItDouble\").getValues().get(0));\n+        assertEquals(\"6\", userTO.getPlainAttr(\"makeItDouble\").getValues().get(0));\n \n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(userTO.getKey());\n         userPatch.getPlainAttrs().add(attrAddReplacePatch(\"makeItDouble\", \"7\"));\n \n         userTO = updateUser(userPatch).getEntity();\n-        assertEquals(\"14\", userTO.getPlainAttrMap().get(\"makeItDouble\").getValues().get(0));\n+        assertEquals(\"14\", userTO.getPlainAttr(\"makeItDouble\").getValues().get(0));\n     }\n \n     @Test\n@@ -867,9 +867,9 @@ public void issueSYNCOPE454() throws NamingException {\n \n         // 3. try (and succeed) to perform simple LDAP binding with provided password ('password123')\n         assertNotNull(getLdapRemoteObject(\n-                connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n+                connObject.getAttr(Name.NAME).getValues().get(0),\n                 \"password123\",\n-                connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n+                connObject.getAttr(Name.NAME).getValues().get(0)));\n \n         // 4. update user without any password change request\n         UserPatch userPatch = new UserPatch();\n@@ -881,9 +881,9 @@ public void issueSYNCOPE454() throws NamingException {\n \n         // 5. try (and succeed again) to perform simple LDAP binding: password has not changed\n         assertNotNull(getLdapRemoteObject(\n-                connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n+                connObject.getAttr(Name.NAME).getValues().get(0),\n                 \"password123\",\n-                connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n+                connObject.getAttr(Name.NAME).getValues().get(0)));\n     }\n \n     @Test\n@@ -901,7 +901,7 @@ public void issueSYNCOPE493() {\n                 resourceService.readConnObject(RESOURCE_NAME_WS1, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(actual);\n         // check if mapping attribute with purpose NONE really hasn't been propagated\n-        assertNull(actual.getAttrMap().get(\"NAME\"));\n+        assertNull(actual.getAttr(\"NAME\"));\n \n         // 2.  update resource ws-target-resource-1\n         ResourceTO ws1 = resourceService.read(RESOURCE_NAME_WS1);\n@@ -941,8 +941,8 @@ public void issueSYNCOPE493() {\n         ConnObjectTO newUser =\n                 resourceService.readConnObject(RESOURCE_NAME_WS1, AnyTypeKind.USER.name(), userTO.getKey());\n \n-        assertNotNull(newUser.getAttrMap().get(\"NAME\"));\n-        assertEquals(\"firstnameNew\", newUser.getAttrMap().get(\"NAME\").getValues().get(0));\n+        assertNotNull(newUser.getAttr(\"NAME\"));\n+        assertEquals(\"firstnameNew\", newUser.getAttr(\"NAME\").getValues().get(0));\n \n         // 4.  restore resource ws-target-resource-1 mapping\n         ws1NewUMapping = newWs1.getProvision(AnyTypeKind.USER.name()).getMapping();\n@@ -1031,9 +1031,9 @@ public void issueSYNCOPE505LDAP() throws Exception {\n                 resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n \n         assertNotNull(getLdapRemoteObject(\n-                connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n+                connObject.getAttr(Name.NAME).getValues().get(0),\n                 \"security123\",\n-                connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n+                connObject.getAttr(Name.NAME).getValues().get(0)));\n \n         // 5. Remove LDAPPasswordPropagationActions\n         resourceTO = resourceService.read(RESOURCE_NAME_LDAP);\n@@ -1076,8 +1076,7 @@ public void issueSYNCOPE391() {\n         assertNotNull(connObjectTO);\n \n         // check if password has not changed\n-        assertEquals(\"password0\", connObjectTO.getAttrMap().\n-                get(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n+        assertEquals(\"password0\", connObjectTO.getAttr(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n         assertNull(userTO.getPassword());\n \n         // 3. create user with not null password and propagate onto resource-csv, specify not to save password on\n@@ -1098,8 +1097,7 @@ public void issueSYNCOPE391() {\n         assertNotNull(connObjectTO);\n \n         // check if password has been propagated and that saved userTO's password is null\n-        assertEquals(\"passwordTESTNULL1\", connObjectTO.getAttrMap().\n-                get(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n+        assertEquals(\"passwordTESTNULL1\", connObjectTO.getAttr(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n         assertNull(userTO.getPassword());\n \n         // 4. create user and propagate password on resource-csv and on Syncope local storage\n@@ -1119,8 +1117,7 @@ public void issueSYNCOPE391() {\n         assertNotNull(connObjectTO);\n \n         // check if password has been correctly propagated on Syncope and resource-csv as usual\n-        assertEquals(\"passwordTESTNULL1\", connObjectTO.getAttrMap().\n-                get(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n+        assertEquals(\"passwordTESTNULL1\", connObjectTO.getAttr(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n         Pair<Map<String, Set<String>>, UserTO> self =\n                 clientFactory.create(userTO.getUsername(), \"passwordTESTNULL1\").self();\n         assertNotNull(self);\n@@ -1171,12 +1168,12 @@ public void issueSYNCOPE647() {\n \n         UserTO actual = createUser(userTO).getEntity();\n         assertNotNull(actual);\n-        assertNotNull(actual.getDerAttrMap().get(\"csvuserid\"));\n+        assertNotNull(actual.getDerAttr(\"csvuserid\"));\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), actual.getKey());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"postalAddress\", connObjectTO.getAttrMap().get(\"postalAddress\").getValues().get(0));\n+        assertEquals(\"postalAddress\", connObjectTO.getAttr(\"postalAddress\").getValues().get(0));\n \n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(actual.getKey());\n@@ -1186,7 +1183,7 @@ public void issueSYNCOPE647() {\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), actual.getKey());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"newPostalAddress\", connObjectTO.getAttrMap().get(\"postalAddress\").getValues().get(0));\n+        assertEquals(\"newPostalAddress\", connObjectTO.getAttr(\"postalAddress\").getValues().get(0));\n     }\n \n     @Test\n@@ -1333,7 +1330,7 @@ public void issueSYNCOPE881() {\n         ConnObjectTO connObject =\n                 resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n         assertNotNull(connObject);\n-        AttrTO userDn = connObject.getAttrMap().get(Name.NAME);\n+        AttrTO userDn = connObject.getAttr(Name.NAME);\n         assertNotNull(userDn);\n         assertEquals(1, userDn.getValues().size());\n         assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, userDn.getValues().get(0)));\n@@ -1358,7 +1355,7 @@ public void issueSYNCOPE1099() {\n \n         // 2. create user matching the condition above\n         UserTO user = UserITCase.getUniqueSampleTO(\"syncope1099U@apache.org\");\n-        user.getPlainAttrMap().get(\"firstname\").getValues().set(0, \"issueSYNCOPE1099\");\n+        user.getPlainAttr(\"firstname\").getValues().set(0, \"issueSYNCOPE1099\");\n \n         ProvisioningResult<UserTO> created = createUser(user);\n         assertNotNull(created);"},{"sha":"5f8661b8e1e2f60f2e4f2526b3a44e7701b233b1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserSelfITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -156,7 +156,7 @@ public void read() {\n     public void authenticateByPlainAttribute() {\n         UserTO rossini = userService.read(\"rossini\");\n         assertNotNull(rossini);\n-        String userId = rossini.getPlainAttrMap().get(\"userId\").getValues().get(0);\n+        String userId = rossini.getPlainAttr(\"userId\").getValues().get(0);\n         assertNotNull(userId);\n \n         Pair<Map<String, Set<String>>, UserTO> self = clientFactory.create(userId, ADMIN_PWD).self();"},{"sha":"e31018100cae23b007100c57da5d93d4c4e653f8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ec5f834f68a92e2d808f5fd347264b7518ab73d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=9ec5f834f68a92e2d808f5fd347264b7518ab73d","patch":"@@ -89,7 +89,7 @@ public void issueSYNCOPE16() {\n         // 2. check for virtual attribute value\n         userTO = userService.read(userTO.getKey());\n         assertNotNull(userTO);\n-        assertEquals(\"virtualvalue\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n \n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(userTO.getKey());\n@@ -102,7 +102,7 @@ public void issueSYNCOPE16() {\n         // 4. check for virtual attribute value\n         userTO = userService.read(userTO.getKey());\n         assertNotNull(userTO);\n-        assertEquals(\"virtualupdated\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualupdated\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n     }\n \n     @Test\n@@ -144,7 +144,7 @@ public void issueSYNCOPE260() {\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", connObjectTO.getAttr(\"COMPANYNAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -162,7 +162,7 @@ public void issueSYNCOPE260() {\n         userTO = result.getEntity();\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttr(\"COMPANYNAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -176,7 +176,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttr(\"COMPANYNAME\").getValues().get(0));\n \n         statusPatch = new StatusPatch();\n         statusPatch.setKey(userTO.getKey());\n@@ -186,7 +186,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"active\", userTO.getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttr(\"COMPANYNAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -204,11 +204,11 @@ public void issueSYNCOPE260() {\n         userTO = result.getEntity();\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"Surname2\", connObjectTO.getAttrMap().get(\"SURNAME\").getValues().get(0));\n+        assertEquals(\"Surname2\", connObjectTO.getAttr(\"SURNAME\").getValues().get(0));\n \n         // virtual attribute value did not change\n-        assertFalse(connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertFalse(connObjectTO.getAttr(\"COMPANYNAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttr(\"COMPANYNAME\").getValues().get(0));\n         // ----------------------------------\n     }\n \n@@ -232,7 +232,7 @@ public void virAttrCache() {\n \n         // 2. check for virtual attribute value\n         actual = userService.read(actual.getKey());\n-        assertEquals(\"virattrcache\", actual.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virattrcache\", actual.getVirAttr(\"virtualdata\").getValues().get(0));\n \n         // 3. update virtual attribute directly\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n@@ -248,7 +248,7 @@ public void virAttrCache() {\n \n         // 4. check for cached attribute value\n         actual = userService.read(actual.getKey());\n-        assertEquals(\"virattrcache\", actual.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virattrcache\", actual.getVirAttr(\"virtualdata\").getValues().get(0));\n \n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(actual.getKey());\n@@ -261,7 +261,7 @@ public void virAttrCache() {\n         // 6. check for virtual attribute value\n         actual = userService.read(actual.getKey());\n         assertNotNull(actual);\n-        assertEquals(\"virtualupdated\", actual.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualupdated\", actual.getVirAttr(\"virtualdata\").getValues().get(0));\n     }\n \n     @Test\n@@ -376,7 +376,7 @@ public void issueSYNCOPE442() {\n \n         // 2. check for virtual attribute value\n         userTO = userService.read(userTO.getKey());\n-        assertEquals(\"virattrcache\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virattrcache\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n \n         // ----------------------------------------\n         // 3. change connector URL so that we are sure that any provided value will come from virtual cache\n@@ -411,7 +411,7 @@ public void issueSYNCOPE442() {\n         // ----------------------------------------\n \n         userTO = userService.read(userTO.getKey());\n-        assertEquals(\"virattrcache\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virattrcache\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n \n         // ----------------------------------------\n         // 5. restore connector URL, values can be read again from external resource\n@@ -428,7 +428,7 @@ public void issueSYNCOPE442() {\n \n         // cached value still in place...\n         userTO = userService.read(userTO.getKey());\n-        assertEquals(\"virattrcache\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virattrcache\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n \n         // force cache update by adding a resource which has virtualdata mapped for propagation\n         UserPatch userPatch = new UserPatch();\n@@ -439,7 +439,7 @@ public void issueSYNCOPE442() {\n         assertNotNull(userTO);\n \n         userTO = userService.read(userTO.getKey());\n-        assertEquals(\"virattrcache2\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virattrcache2\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n     }\n \n     @Test\n@@ -451,7 +451,7 @@ public void issueSYNCOPE436() {\n         userTO.getVirAttrs().add(attrTO(\"virtualReadOnly\", \"readOnly\"));\n         userTO = createUser(userTO).getEntity();\n         // finding no values because the virtual attribute is readonly \n-        assertTrue(userTO.getVirAttrMap().get(\"virtualReadOnly\").getValues().isEmpty());\n+        assertTrue(userTO.getVirAttr(\"virtualReadOnly\").getValues().isEmpty());\n     }\n \n     @Test\n@@ -564,9 +564,9 @@ public void issueSYNCOPE453() {\n \n             Map<String, Object> actuals = jdbcTemplate.queryForMap(\n                     \"SELECT id, surname, email FROM testpull WHERE id=?\",\n-                    new Object[] { userTO.getPlainAttrMap().get(\"fullname\").getValues().get(0) });\n+                    new Object[] { userTO.getPlainAttr(\"fullname\").getValues().get(0) });\n \n-            assertEquals(userTO.getPlainAttrMap().get(\"fullname\").getValues().get(0), actuals.get(\"id\").toString());\n+            assertEquals(userTO.getPlainAttr(\"fullname\").getValues().get(0), actuals.get(\"id\").toString());\n             assertEquals(\"ml@group.it\", actuals.get(\"email\"));\n             // -------------------------------------------\n         } catch (Exception e) {\n@@ -593,7 +593,7 @@ public void issueSYNCOPE459() {\n \n         userTO = createUser(userTO).getEntity();\n \n-        assertNotNull(userTO.getVirAttrMap().get(\"virtualReadOnly\"));\n+        assertNotNull(userTO.getVirAttr(\"virtualReadOnly\"));\n     }\n \n     @Test\n@@ -611,8 +611,8 @@ public void issueSYNCOPE501() {\n \n         userTO = createUser(userTO).getEntity();\n \n-        assertNotNull(userTO.getVirAttrMap().get(\"virtualdata\"));\n-        assertEquals(\"syncope501@apache.org\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertNotNull(userTO.getVirAttr(\"virtualdata\"));\n+        assertEquals(\"syncope501@apache.org\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n \n         // 2. update virtual attribute\n         UserPatch userPatch = new UserPatch();\n@@ -624,8 +624,8 @@ public void issueSYNCOPE501() {\n         assertNotNull(userTO);\n \n         // 3. check that user virtual attribute has really been updated \n-        assertFalse(userTO.getVirAttrMap().get(\"virtualdata\").getValues().isEmpty());\n-        assertEquals(\"syncope501_updated@apache.org\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+        assertFalse(userTO.getVirAttr(\"virtualdata\").getValues().isEmpty());\n+        assertEquals(\"syncope501_updated@apache.org\", userTO.getVirAttr(\"virtualdata\").getValues().get(0));\n     }\n \n     @Test"}]}