{"sha":"8be7cde6f6dcb6e86dafe25be1e681f6db064ee9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhiZTdjZGU2ZjZkY2I2ZTg2ZGFmZTI1YmUxZTY4MWY2ZGIwNjRlZTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-10T16:20:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-10T16:20:57Z"},"message":"[SYNCOPE-172] Add dedicated test for role synchronization (full reconciliation)\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/DEV_ROLE_PROVISIONING@1419558 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c8e7a94d109e262019a015cec0f924f1f522514c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c8e7a94d109e262019a015cec0f924f1f522514c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe"}],"stats":{"total":110,"additions":101,"deletions":9},"files":[{"sha":"a93f12096f03856565d31a9da3b2507f8498f8fc","filename":"core/src/main/java/org/apache/syncope/core/util/ConnObjectUtil.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java?ref=8be7cde6f6dcb6e86dafe25be1e681f6db064ee9","patch":"@@ -317,6 +317,29 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                     fillFromTemplate(membTBU, membTO);\n                 }\n             }\n+            if (template instanceof RoleTO) {\n+                if (StringUtils.isNotBlank(((RoleTO) template).getName())) {\n+                    String evaluated = jexlUtil.evaluate(((RoleTO) template).getName(), attributableTO);\n+                    if (StringUtils.isNotBlank(evaluated)) {\n+                        ((RoleTO) attributableTO).setName(evaluated);\n+                    }\n+                }\n+\n+                ((RoleTO) attributableTO).setParent(((RoleTO) template).getParent());\n+\n+                ((RoleTO) attributableTO).setUserOwner(((RoleTO) template).getUserOwner());\n+                ((RoleTO) attributableTO).setRoleOwner(((RoleTO) template).getRoleOwner());\n+\n+                ((RoleTO) attributableTO).setAccountPolicy(((RoleTO) template).getAccountPolicy());\n+                ((RoleTO) attributableTO).setPasswordPolicy(((RoleTO) template).getPasswordPolicy());\n+\n+                ((RoleTO) attributableTO).setInheritOwner(((RoleTO) template).isInheritOwner());\n+                ((RoleTO) attributableTO).setInheritAttributes(((RoleTO) template).isInheritAttributes());\n+                ((RoleTO) attributableTO).setInheritDerivedAttributes(((RoleTO) template).isInheritDerivedAttributes());\n+                ((RoleTO) attributableTO).setInheritVirtualAttributes(((RoleTO) template).isInheritVirtualAttributes());\n+                ((RoleTO) attributableTO).setInheritPasswordPolicy(((RoleTO) template).isInheritPasswordPolicy());\n+                ((RoleTO) attributableTO).setInheritAccountPolicy(((RoleTO) template).isInheritAccountPolicy());\n+            }\n \n             fillFromTemplate(attributableTO, template);\n "},{"sha":"dc0ee64902df11c3739f8e5fefab73260f37fd60","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=8be7cde6f6dcb6e86dafe25be1e681f6db064ee9","patch":"@@ -69,7 +69,7 @@ public void findAll() {\n         assertEquals(1, sclist.size());\n \n         List<SyncTask> sylist = taskDAO.findAll(SyncTask.class);\n-        assertEquals(4, sylist.size());\n+        assertEquals(5, sylist.size());\n     }\n \n     @Test"},{"sha":"ea1a6adfc3aceda15bab10b9812456062bd9b4ee","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":69,"deletions":3,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=8be7cde6f6dcb6e86dafe25be1e681f6db064ee9","patch":"@@ -21,6 +21,7 @@\n import java.util.Arrays;\n import java.util.List;\n import java.util.Set;\n+import org.apache.syncope.client.search.AttributableCond;\n import org.apache.syncope.client.search.MembershipCond;\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.to.MembershipTO;\n@@ -332,7 +333,7 @@ public void sync() {\n     }\n \n     @Test\n-    public void reconcile() {\n+    public void reconcileUsers() {\n         // Update sync task\n         SyncTaskTO task = restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", SyncTaskTO.class, 7);\n         assertNotNull(task);\n@@ -349,6 +350,8 @@ public void reconcile() {\n         SyncTaskTO actual = restTemplate.postForObject(BASE_URL + \"task/update/sync\", task, SyncTaskTO.class);\n         assertNotNull(actual);\n         assertEquals(task.getId(), actual.getId());\n+        assertEquals(template, actual.getUserTemplate());\n+        assertEquals(new RoleTO(), actual.getRoleTemplate());\n \n         // read executions before sync (dryrun test could be executed before)\n         int preSyncSize = actual.getExecutions().size();\n@@ -373,7 +376,6 @@ public void reconcile() {\n             assertNotNull(actual.getExecutions());\n \n             i++;\n-\n         } while (preSyncSize == actual.getExecutions().size() && i < maxit);\n \n         assertEquals(1, actual.getExecutions().size());\n@@ -384,11 +386,75 @@ public void reconcile() {\n \n         final UserTO userTO =\n                 restTemplate.getForObject(BASE_URL + \"user/readByUsername/{username}.json\", UserTO.class, \"testuser1\");\n-\n         assertNotNull(userTO);\n         assertEquals(\"reconciled@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n     }\n \n+    @Test\n+    public void reconcileRoles() {\n+        // Update sync task\n+        SyncTaskTO task = restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", SyncTaskTO.class, 11);\n+        assertNotNull(task);\n+\n+        //  add user template\n+        RoleTO template = new RoleTO();\n+        template.setParent(8L);\n+        template.addAttribute(attributeTO(\"show\", \"'true'\"));\n+\n+        task.setRoleTemplate(template);\n+\n+        SyncTaskTO actual = restTemplate.postForObject(BASE_URL + \"task/update/sync\", task, SyncTaskTO.class);\n+        assertNotNull(actual);\n+        assertEquals(task.getId(), actual.getId());\n+        assertEquals(template, actual.getRoleTemplate());\n+        assertEquals(new UserTO(), actual.getUserTemplate());\n+\n+        // read executions before sync (dryrun test could be executed before)\n+        int preSyncSize = actual.getExecutions().size();\n+\n+        TaskExecTO execution = restTemplate.postForObject(BASE_URL + \"task/execute/{taskId}\", null, TaskExecTO.class,\n+                actual.getId());\n+        assertEquals(\"JOB_FIRED\", execution.getStatus());\n+\n+        int i = 0;\n+        int maxit = 20;\n+\n+        // wait for sync completion (executions incremented)\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+\n+            actual = restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", SyncTaskTO.class, actual.getId());\n+\n+            assertNotNull(actual);\n+            assertNotNull(actual.getExecutions());\n+\n+            i++;\n+        } while (preSyncSize == actual.getExecutions().size() && i < maxit);\n+\n+        assertEquals(1, actual.getExecutions().size());\n+\n+        final String status = actual.getExecutions().get(0).getStatus();\n+        assertNotNull(status);\n+        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+\n+        final AttributableCond rolenameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n+        rolenameLeafCond.setSchema(\"name\");\n+        rolenameLeafCond.setExpression(\"testLDAPGroup\");\n+        final List<RoleTO> matchingRoles = Arrays.asList(restTemplate.postForObject(BASE_URL + \"role/search\",\n+                NodeCond.getLeafCond(rolenameLeafCond), RoleTO[].class));\n+        assertNotNull(matchingRoles);\n+        assertEquals(1, matchingRoles.size());\n+\n+        final RoleTO roleTO = matchingRoles.iterator().next();\n+        assertNotNull(roleTO);\n+        assertEquals(\"testLDAPGroup\", roleTO.getName());\n+        assertEquals(8L, roleTO.getParent());\n+        assertEquals(\"true\", roleTO.getAttributeMap().get(\"show\").getValues().get(0));\n+    }\n+\n     @Test\n     public void issue196() {\n         TaskExecTO execution = restTemplate.postForObject("},{"sha":"d75098e7e8492e314e065d8d29c891d7dc86eca2","filename":"core/src/test/resources/content.xml","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be7cde6f6dcb6e86dafe25be1e681f6db064ee9/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=8be7cde6f6dcb6e86dafe25be1e681f6db064ee9","patch":"@@ -214,11 +214,11 @@ under the License.\n   <RDerSchema name=\"ownerDN\" \n               expression=\"!empty(roleOwner) ? 'cn=' + roleOwner.name + ',ou=groups,o=isp': (!empty(userOwner) ? 'uid=' +  userOwner.username + ',ou=people,o=isp' : '')\"/>\n   \n-  <RAttr id=\"1004\" owner_id=\"12\" schema_name=\"title\"/>\n-  <RAttrValue attribute_id=\"1004\" id=\"94\" stringValue=\"r12\"/>\n+  <RAttr id=\"994\" owner_id=\"12\" schema_name=\"title\"/>\n+  <RAttrValue attribute_id=\"994\" id=\"94\" stringValue=\"r12\"/>\n   \n-  <RAttr id=\"1005\" owner_id=\"13\" schema_name=\"title\"/>\n-  <RAttrValue attribute_id=\"1005\" id=\"95\" stringValue=\"r13\"/>\n+  <RAttr id=\"995\" owner_id=\"13\" schema_name=\"title\"/>\n+  <RAttrValue attribute_id=\"995\" id=\"95\" stringValue=\"r13\"/>\n \n   <MAttr id=\"100\" owner_id=\"4\" schema_name=\"subscriptionDate\"/>\n \n@@ -565,7 +565,7 @@ under the License.\n   <RMapping id=\"1\" resource_name=\"resource-ldap\"\n             accountlink=\"&apos;cn=&apos; + name + &apos;,ou=groups,o=isp&apos;\"/>\n   <RMappingItem id=\"1\" accountid=\"1\" password=\"0\" mapping_id=\"1\"\n-                extAttrName=\"__NAME__\" intAttrName=\"roleName\" intMappingType=\"RoleName\"\n+                extAttrName=\"__UID__\" intAttrName=\"roleName\" intMappingType=\"RoleName\"\n                 mandatoryCondition=\"true\"/>\n   <RMappingItem id=\"2\" accountid=\"0\" password=\"0\" mapping_id=\"1\"\n                 extAttrName=\"owner\" intAttrName=\"ownerDN\" intMappingType=\"RoleDerivedSchema\"\n@@ -625,6 +625,9 @@ under the License.\n   <Task DTYPE=\"SyncTask\" id=\"10\" name=\"TestDB Sync Task\" resource_name=\"resource-db-sync\"\n         fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         jobClassName=\"org.apache.syncope.core.sync.SyncJob\"/>\n+  <Task DTYPE=\"SyncTask\" id=\"11\" name=\"LDAP Sync Task\" resource_name=\"resource-ldap\"\n+          fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+          jobClassName=\"org.apache.syncope.core.sync.SyncJob\"/>\n         \n   <NotificationTask_recipients notificationtask_id=\"8\" address=\"recipient@prova.org\"/>\n "}]}