{"sha":"5c4181fcbe77ca2e57654b415ef5777f66f32fcd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVjNDE4MWZjYmU3N2NhMmU1NzY1NGI0MTVlZjU3NzdmNjZmMzJmY2Q=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-29T09:45:44Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-29T09:45:44Z"},"message":"[SYNCOPE-800] fix the issue by improving findByDerAttrValue","tree":{"sha":"60bc6d7d872cd33a3805d8bbd3051de9bc7f81ed","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/60bc6d7d872cd33a3805d8bbd3051de9bc7f81ed"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5c4181fcbe77ca2e57654b415ef5777f66f32fcd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5c4181fcbe77ca2e57654b415ef5777f66f32fcd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5c4181fcbe77ca2e57654b415ef5777f66f32fcd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5c4181fcbe77ca2e57654b415ef5777f66f32fcd/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"d194b2f0e75acdb0a511d4db869cc057357e78db","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d194b2f0e75acdb0a511d4db869cc057357e78db","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d194b2f0e75acdb0a511d4db869cc057357e78db"}],"stats":{"total":53,"additions":49,"deletions":4},"files":[{"sha":"6f64a88c6ef6e00157e95dda300887e7b6e998ff","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5c4181fcbe77ca2e57654b415ef5777f66f32fcd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5c4181fcbe77ca2e57654b415ef5777f66f32fcd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=5c4181fcbe77ca2e57654b415ef5777f66f32fcd","patch":"@@ -210,7 +210,9 @@ private List<String> split(final String attrValue, final List<String> literals)\n             attrValues.add(attrValue);\n         } else {\n             for (String token : attrValue.split(Pattern.quote(literals.get(0)))) {\n-                attrValues.addAll(split(token, literals.subList(1, literals.size())));\n+                if (!token.isEmpty()) {\n+                    attrValues.addAll(split(token, literals.subList(1, literals.size())));\n+                }\n             }\n         }\n "},{"sha":"695f4066a19917e298dd640f1b732effba599bbb","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/UserTest.java","status":"modified","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5c4181fcbe77ca2e57654b415ef5777f66f32fcd/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5c4181fcbe77ca2e57654b415ef5777f66f32fcd/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java?ref=5c4181fcbe77ca2e57654b415ef5777f66f32fcd","patch":"@@ -26,12 +26,14 @@\n \n import java.util.List;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n+import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.RelationshipTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttrValue;\n@@ -66,6 +68,9 @@ public class UserTest extends AbstractTest {\n     @Autowired\n     private PlainAttrValueDAO plainAttrValueDAO;\n \n+    @Autowired\n+    private DerSchemaDAO derSchemaDAO;\n+\n     @Test\n     public void delete() {\n         List<UMembership> memberships = groupDAO.findUMemberships(groupDAO.find(7L));\n@@ -128,4 +133,38 @@ public void ships() {\n         assertEquals(1, user.getRelationships().size());\n         assertEquals(2L, user.getRelationships().get(0).getRightEnd().getKey(), 0);\n     }\n+\n+    @Test // search by derived attribute\n+    public void issueSYNCOPE800() {\n+        // create derived attribute (literal as prefix)\n+        DerSchema prefix = entityFactory.newEntity(DerSchema.class);\n+        prefix.setKey(\"kprefix\");\n+        prefix.setExpression(\"'k' + firstname\");\n+\n+        prefix = derSchemaDAO.save(prefix);\n+        derSchemaDAO.flush();\n+\n+        // create derived attribute (literal as suffix)\n+        DerSchema suffix = entityFactory.newEntity(DerSchema.class);\n+        suffix.setKey(\"ksuffix\");\n+        suffix.setExpression(\"firstname + 'k'\");\n+\n+        suffix = derSchemaDAO.save(suffix);\n+        derSchemaDAO.flush();\n+\n+        // add derived attributes to user\n+        User owner = userDAO.find(3L);\n+        assertNotNull(\"did not get expected user\", owner);\n+\n+        String firstname = owner.getPlainAttr(\"firstname\").getValuesAsStrings().iterator().next();\n+        assertNotNull(firstname);\n+\n+        // search by ksuffix derived attribute\n+        List<User> list = userDAO.findByDerAttrValue(\"ksuffix\", firstname + \"k\");\n+        assertEquals(\"did not get expected number of users \", 1, list.size());\n+\n+        // search by kprefix derived attribute\n+        list = userDAO.findByDerAttrValue(\"kprefix\", \"k\" + firstname);\n+        assertEquals(\"did not get expected number of users \", 1, list.size());\n+    }\n }"},{"sha":"142141bab613606ff7edcfdc1afe2108847f46c3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5c4181fcbe77ca2e57654b415ef5777f66f32fcd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5c4181fcbe77ca2e57654b415ef5777f66f32fcd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=5c4181fcbe77ca2e57654b415ef5777f66f32fcd","patch":"@@ -298,9 +298,13 @@ public List<Long> findExisting(\n             pullRule = getCorrelationRule(provision, pullPolicySpec);\n         }\n \n-        return pullRule == null\n-                ? findByConnObjectKeyItem(uid, provision, anyUtils)\n-                : findByCorrelationRule(connObj, pullRule, anyUtils.getAnyTypeKind());\n+        try {\n+            return pullRule == null\n+                    ? findByConnObjectKeyItem(uid, provision, anyUtils)\n+                    : findByCorrelationRule(connObj, pullRule, anyUtils.getAnyTypeKind());\n+        } catch (RuntimeException e) {\n+            return Collections.<Long>emptyList();\n+        }\n     }\n \n     public Boolean readEnabled(final ConnectorObject connectorObject, final ProvisioningTask task) {"}]}