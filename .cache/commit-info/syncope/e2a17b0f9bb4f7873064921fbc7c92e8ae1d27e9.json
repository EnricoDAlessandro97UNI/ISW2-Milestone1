{"sha":"e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUyYTE3YjBmOWJiNGY3ODczMDY0OTIxZmJjN2M5MmU4YWUxZDI3ZTk=","commit":{"author":{"name":"Matteo Di Carlo","email":"matteo.dicarlo@tirasa.net","date":"2016-10-07T13:57:53Z"},"committer":{"name":"Matteo Di Carlo","email":"matteo.dicarlo@tirasa.net","date":"2016-10-07T13:57:53Z"},"message":"Revert \"[SYNCOPE-941] adds dynamic configuration screens to enduser\"\n\nThis reverts commit 0e621242be705bb048a14bcb96740564a6a7461f.","tree":{"sha":"89a9973f35ee4b2e447e7029a9ec4feabf28f0fd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/89a9973f35ee4b2e447e7029a9ec4feabf28f0fd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9/comments","author":null,"committer":null,"parents":[{"sha":"ce81f693bda8f9f932b30ab6b46ab0c24f9cc81d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce81f693bda8f9f932b30ab6b46ab0c24f9cc81d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ce81f693bda8f9f932b30ab6b46ab0c24f9cc81d"}],"stats":{"total":140,"additions":57,"deletions":83},"files":[{"sha":"5bffed2361659e0800a8dad1b3e44e724dcf1b5e","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9","patch":"@@ -256,7 +256,6 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n       };\n     });\n   }]);\n-\n app.run(['$rootScope', '$location', '$state', 'AuthService',\n   function ($rootScope, $location, $state, AuthService) {\n     // main program\n@@ -421,12 +420,16 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n       $scope.$on('hideErrorMessage', function (event, popupMessage) {\n         $scope.hideError(popupMessage, $scope.notification);\n       });\n-\n-      $rootScope.wizard = {\n-        \"credentials\": \"/credentials\",\n-        \"groups\": \"/groups\"\n+      //wizard active element\n+      $scope.wizard = {\n+        \"credentials\": {url: \"/credentials\"},\n+        \"groups\": {url: \"/groups\"},\n+        \"plainSchemas\": {url: \"/plainSchemas\"},\n+        \"derivedSchemas\": {url: \"/derivedSchemas\"},\n+        \"virtualSchemas\": {url: \"/virtualSchemas\"},\n+        \"resources\": {url: \"/resources\"},\n+        \"finish\": {url: \"/finish\"}\n       };\n-\n       $scope.clearCache = function () {\n         $templateCache.removeAll();\n       };"},{"sha":"ebf5c81ff353ac5233af1b54e6c2759dc7f8062c","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":5,"deletions":36,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9","patch":"@@ -17,7 +17,7 @@\n  * under the License.\n  */\n \n-/* global message, component, $state, rootScope, $q */\n+/* global message, component, $state, rootScope */\n \n 'use strict';\n \n@@ -73,7 +73,6 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             $scope.dynamicForm.groupSchemas.push(group);\n           //initializing user schemas values\n           initSchemaValues(schemas);\n-          initWizard();\n         }, function (response) {\n           var errorMessage;\n           // parse error response \n@@ -85,26 +84,6 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       };\n \n-      var initWizard = function () {\n-        $rootScope.wizard = {\n-          \"credentials\": \"/credentials\",\n-          \"groups\": \"/groups\"\n-        };\n-        if ($scope.dynamicForm.plainSchemas.length > 0) {\n-          $rootScope.wizard[\"plainSchemas\"] = \"/plainSchemas\";\n-        }\n-        if ($scope.dynamicForm.derSchemas.length > 0) {\n-          $rootScope.wizard[\"derivedSchemas\"] = \"/derivedSchemas\";\n-        }\n-        if ($scope.dynamicForm.virSchemas.length > 0) {\n-          $rootScope.wizard[\"virtualSchemas\"] = \"/virtualSchemas\";\n-        }\n-        if ($scope.dynamicForm.resources.length > 0) {\n-          $rootScope.wizard[\"resources\"] = \"/resources\";\n-        }\n-        $rootScope.wizard[\"finish\"] = \"/finish\";\n-      };\n-\n       var initSchemaValues = function (schemas) {\n         // initialize plain attributes\n         for (var i = 0; i < schemas.plainSchemas.length; i++) {\n@@ -203,7 +182,6 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             $scope.dynamicForm.resources.push(response[i].key);\n           }\n           $scope.dynamicForm.resources.sort();\n-          initWizard();\n         });\n       };\n \n@@ -265,11 +243,11 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         UserSelfService.read().then(function (response) {\n           $scope.user = UserUtil.getUnwrappedUser(response);\n           $scope.user.password = undefined;\n-\n+          \n           $scope.initialSecurityQuestion = $scope.user.securityQuestion;\n           // initialize already assigned resources\n           $scope.dynamicForm.selectedResources = $scope.user.resources;\n-\n+ \n           // initialize already assigned groups -- keeping the same structure of groups       \n           for (var index in $scope.user.memberships) {\n             $scope.dynamicForm.selectedGroups.push(\n@@ -355,18 +333,9 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           initUserSchemas(null, group);\n       });\n \n-      $scope.$on('addFinish', function (event) {\n-        $rootScope.wizard.finish = {\n-          url: \"/finish\"\n-        };\n-      });\n-\n-\n-\n       $scope.$on('groupRemoved', function (event, group) {\n         if (group)\n           removeUserSchemas(null, group);\n-        initWizard();\n       });\n \n       if ($scope.createMode) {\n@@ -440,7 +409,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       }\n     };\n-\n+    \n     $scope.retrieveSecurityQuestion = function (user) {\n       if ($rootScope.pwdResetRequiringSecurityQuestions) {\n         if (user && user.username && user.username.length) {\n@@ -462,7 +431,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         }\n       }\n     };\n-\n+    \n     $scope.resetPassword = function (user) {\n       if (user && user.username) {\n         $scope.retrieveSecurityQuestion(user);"},{"sha":"d8b69869a95cd4c6d9dff4d38fa7ccba7230e43d","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/navigationButtons.js","status":"modified","additions":43,"deletions":41,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FnavigationButtons.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FnavigationButtons.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FnavigationButtons.js?ref=e2a17b0f9bb4f7873064921fbc7c92e8ae1d27e9","patch":"@@ -19,52 +19,54 @@\n 'use strict';\n \n angular.module('self')\n-        .directive('navigationButtons', ['$state', '$rootScope', 'GenericUtil', 'ValidationExecutor', function ($state, $rootScope, GenericUtil, ValidationExecutor) {\n-        return {\n-        restrict: 'E',\n-                templateUrl: 'views/navigationButtons.html',\n-                scope: {\n+        .directive('navigationButtons', ['$state', 'GenericUtil', 'ValidationExecutor', function ($state, GenericUtil, ValidationExecutor) {\n+            return {\n+              restrict: 'E',\n+              templateUrl: 'views/navigationButtons.html',\n+              scope: {\n                 base: \"@\",\n-                        current: \"@\"\n-                },\n-                link: function (scope, element, attrs) {\n+                current: \"@\"\n+              },\n+              link: function (scope, element, attrs) {\n                 var base = (scope.base && scope.base != \"\" ? scope.base + \".\" : \"\");\n-                        $rootScope.wizard = scope.$eval(attrs.wizard) || scope.$parent.wizard;\n-                        scope.previous = \"none\";\n-                        if ($rootScope.wizard) {\n-                var urls = Object.keys($rootScope.wizard);\n-                        var index = urls.indexOf(scope.current);\n-                        scope.previous = (index > 0 ? base + urls[index - 1] : scope.previous = \"none\");\n-                        scope.next = (index < urls.length - 1 ? base + urls[index + 1] : scope.next = \"none\");\n+                scope.wizard = scope.$eval(attrs.wizard) || scope.$parent.wizard;\n+                scope.previous = \"none\";\n+                if (scope.wizard) {\n+                  var urls = Object.keys(scope.wizard);\n+                  var index = urls.indexOf(scope.current);\n+                  scope.previous = (index > 0 ? base + urls[index - 1] : scope.previous = \"none\");\n+                  scope.next = (index < urls.length - 1 ? base + urls[index + 1] : scope.next = \"none\");\n                 }\n-                },\n-                controller: function ($scope) {\n+              },\n+              controller: function ($scope) {\n \n                 $scope.validateAndNext = function (event, state) {\n-                //getting the enclosing form in order to access to its name                \n-                var currentForm = GenericUtil.getEnclosingForm(event.target);\n-                        if (currentForm != null) {\n-                if (ValidationExecutor.validate(currentForm, $scope.$parent)) {\n-                if (state) {\n-                $scope.nextTab(state);\n-                } else if ($rootScope.wizard) {\n-                $scope.nextTab($scope.next);\n-                }\n-                }\n-                }\n+                  //getting the enclosing form in order to access to its name                \n+                  var currentForm = GenericUtil.getEnclosingForm(event.target);\n+                  if (currentForm != null) {\n+                    if (ValidationExecutor.validate(currentForm, $scope.$parent)) {\n+                      if (state) {\n+                        $scope.nextTab(state);\n+                      } else if ($scope.wizard) {\n+                        $scope.nextTab($scope.next);\n+                      }\n+                    }\n+                  }\n+\n+                };\n+\n+                $scope.nextTab = function (state) {\n+                  //change route through parent event\n+                  console.log(\"State: \", state);\n+                  $state.go(state);\n+                };\n \n+                $scope.previousTab = function () {\n+                  //change route through parent event\n+                  $state.go($scope.previous);\n                 };\n-                        $scope.nextTab = function (state) {\n-                        //change route through parent event\n-                        console.log(\"State: \", state);\n-                                $state.go(state);\n-                        };\n-                                $scope.previousTab = function () {\n-                                //change route through parent event\n-                                $state.go($scope.previous);\n-                                };\n-                        }\n+              }\n \n-                        }\n-                ;\n-                }]);\n+            }\n+            ;\n+          }]);"}]}