{"sha":"5828c103d6fa77a54a0a5b15bade3fae11b12cd8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU4MjhjMTAzZDZmYTc3YTU0YTBhNWIxNWJhZGUzZmFlMTFiMTJjZDg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-02-13T15:11:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-02-13T15:11:38Z"},"message":"Merge branch '1_2_X'","tree":{"sha":"258000d570d1e57e335bd26b8d910969e9df8a5c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/258000d570d1e57e335bd26b8d910969e9df8a5c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5828c103d6fa77a54a0a5b15bade3fae11b12cd8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5828c103d6fa77a54a0a5b15bade3fae11b12cd8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5828c103d6fa77a54a0a5b15bade3fae11b12cd8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5828c103d6fa77a54a0a5b15bade3fae11b12cd8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a111a9e285afef7acd0fc4a6add34823a358c8d8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a111a9e285afef7acd0fc4a6add34823a358c8d8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a111a9e285afef7acd0fc4a6add34823a358c8d8"},{"sha":"223c0cda4ad43581860df1a892de1d2191222856","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/223c0cda4ad43581860df1a892de1d2191222856","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/223c0cda4ad43581860df1a892de1d2191222856"}],"stats":{"total":71,"additions":71,"deletions":0},"files":[{"sha":"c7228c32e46051bf7924f2dd0e6a155fbdae0d54","filename":"client/src/test/java/org/apache/syncope/client/ConcurrencyTest.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5828c103d6fa77a54a0a5b15bade3fae11b12cd8/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FConcurrencyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5828c103d6fa77a54a0a5b15bade3fae11b12cd8/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FConcurrencyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FConcurrencyTest.java?ref=5828c103d6fa77a54a0a5b15bade3fae11b12cd8","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client;\n+\n+import static org.junit.Assert.fail;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.services.ResourceService;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ConcurrencyTest {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConcurrencyTest.class);\n+\n+    private static final SyncopeClient client =\n+            new SyncopeClientFactoryBean().setAddress(\"http://url\").create(\"username\", \"password\");\n+\n+    @Test\n+    public void multiThreadTest()\n+            throws InterruptedException {\n+\n+        for (int i = 0; i < 10000; i++) {\n+            Thread execution = new Thread(\"Th-\" + StringUtils.leftPad(String.valueOf(i), 5, '0')) {\n+\n+                @Override\n+                public void run() {\n+\n+                    try {\n+                        client.getService(ResourceService.class);\n+\n+                        LOG.info(getName() + \" completed successfully!\");\n+                    } catch (Exception e) {\n+                        LOG.error(getName() + \" did not complete\", e);\n+                    }\n+                }\n+            };\n+            execution.start();\n+        }\n+\n+        Thread.sleep(10000);\n+    }\n+\n+    @Test\n+    public void multiCallTest() {\n+        try {\n+            for (int i = 0; i < 10000; i++) {\n+                client.getService(ResourceService.class);\n+            }\n+        } catch (Exception e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+}"}]}