{"sha":"3447565271997530855c3ca0076855adb92d5d18","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM0NDc1NjUyNzE5OTc1MzA4NTVjM2NhMDA3Njg1NWFkYjkyZDVkMTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-28T16:08:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-28T16:09:11Z"},"message":"[SYNCOPE-957] Adding remediation support","tree":{"sha":"316273ed4d7bd696744b20cf99fef956bb0fc96f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/316273ed4d7bd696744b20cf99fef956bb0fc96f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3447565271997530855c3ca0076855adb92d5d18","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3447565271997530855c3ca0076855adb92d5d18","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3447565271997530855c3ca0076855adb92d5d18","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3447565271997530855c3ca0076855adb92d5d18/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5ee47fc97464b2f32e7677d6e92834faa3b3080e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ee47fc97464b2f32e7677d6e92834faa3b3080e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ee47fc97464b2f32e7677d6e92834faa3b3080e"}],"stats":{"total":47,"additions":44,"deletions":3},"files":[{"sha":"8460a950966a895553cd4fe487325ecd686d79b4","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/RemediationLogic.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3447565271997530855c3ca0076855adb92d5d18/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3447565271997530855c3ca0076855adb92d5d18/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java?ref=3447565271997530855c3ca0076855adb92d5d18","patch":"@@ -217,5 +217,4 @@ protected RemediationTO resolveReference(final Method method, final Object... ar\n \n         throw new UnresolvedReferenceException();\n     }\n-\n }"},{"sha":"dc768f8efd408837384822cb91e2a4c7b3800068","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPullResultHandler.java","status":"modified","additions":44,"deletions":2,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3447565271997530855c3ca0076855adb92d5d18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3447565271997530855c3ca0076855adb92d5d18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java?ref=3447565271997530855c3ca0076855adb92d5d18","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.Collections;\n+import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n@@ -48,6 +49,7 @@\n import org.apache.syncope.core.persistence.api.dao.PullMatch;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n+import org.apache.syncope.core.persistence.api.entity.Remediation;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.user.LinkedAccount;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n@@ -179,7 +181,7 @@ protected void handleLinkedAccounts(\n                         // do nothing\n                     }\n                 } else if (SyncDeltaType.DELETE == delta.getDeltaType()) {\n-                    delete(delta, account).ifPresent(profile.getResults()::add);\n+                    delete(delta, account, provision).ifPresent(profile.getResults()::add);\n                 }\n             } else {\n                 if (SyncDeltaType.CREATE_OR_UPDATE == delta.getDeltaType()) {\n@@ -396,6 +398,19 @@ protected Optional<ProvisioningReport> provision(\n                 LOG.error(\"Could not create linked account {} \", accountTO.getConnObjectKeyValue(), e);\n                 output = e;\n                 resultStatus = Result.FAILURE;\n+\n+                if (profile.getTask().isRemediation()) {\n+                    Remediation entity = entityFactory.newEntity(Remediation.class);\n+                    entity.setAnyType(provision.getAnyType());\n+                    entity.setOperation(ResourceOperation.UPDATE);\n+                    entity.setPayload(patch);\n+                    entity.setError(report.getMessage());\n+                    entity.setInstant(new Date());\n+                    entity.setRemoteName(delta.getObject().getName().getNameValue());\n+                    entity.setPullTask(profile.getTask());\n+\n+                    remediationDAO.save(entity);\n+                }\n             }\n \n             end(AnyTypeKind.USER, UnmatchingRule.toEventName(rule), resultStatus, null, output, delta);\n@@ -508,6 +523,19 @@ protected Optional<ProvisioningReport> update(\n                 LOG.error(\"Could not update linked account {}\", account, e);\n                 output = e;\n                 resultStatus = Result.FAILURE;\n+\n+                if (profile.getTask().isRemediation()) {\n+                    Remediation entity = entityFactory.newEntity(Remediation.class);\n+                    entity.setAnyType(provision.getAnyType());\n+                    entity.setOperation(ResourceOperation.UPDATE);\n+                    entity.setPayload(patch);\n+                    entity.setError(report.getMessage());\n+                    entity.setInstant(new Date());\n+                    entity.setRemoteName(delta.getObject().getName().getNameValue());\n+                    entity.setPullTask(profile.getTask());\n+\n+                    remediationDAO.save(entity);\n+                }\n             }\n \n             end(AnyTypeKind.USER, MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, delta);\n@@ -518,7 +546,8 @@ protected Optional<ProvisioningReport> update(\n \n     protected Optional<ProvisioningReport> delete(\n             final SyncDelta delta,\n-            final LinkedAccount account)\n+            final LinkedAccount account,\n+            final Provision provision)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformDelete()) {\n@@ -574,6 +603,19 @@ protected Optional<ProvisioningReport> delete(\n                     report.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                     LOG.error(\"Could not delete linked account {}\", account, e);\n                     output = e;\n+\n+                    if (profile.getTask().isRemediation()) {\n+                        Remediation entity = entityFactory.newEntity(Remediation.class);\n+                        entity.setAnyType(provision.getAnyType());\n+                        entity.setOperation(ResourceOperation.UPDATE);\n+                        entity.setPayload(patch);\n+                        entity.setError(report.getMessage());\n+                        entity.setInstant(new Date());\n+                        entity.setRemoteName(delta.getObject().getName().getNameValue());\n+                        entity.setPullTask(profile.getTask());\n+\n+                        remediationDAO.save(entity);\n+                    }\n                 }\n \n                 end(AnyTypeKind.USER,"}]}