{"sha":"c7c0e418751e0848a135842c300a626e4f6b8d50","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM3YzBlNDE4NzUxZTA4NDhhMTM1ODQyYzMwMGE2MjZlNGY2YjhkNTA=","commit":{"author":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-15T15:43:33Z"},"committer":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-15T15:43:33Z"},"message":"[SYNCOPE-268] Make rest integration tests re-runnable\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1433466 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fc03b3b6961c7babe3dc46435f6992d827023ed6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fc03b3b6961c7babe3dc46435f6992d827023ed6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c7c0e418751e0848a135842c300a626e4f6b8d50","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c7c0e418751e0848a135842c300a626e4f6b8d50","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c7c0e418751e0848a135842c300a626e4f6b8d50","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c7c0e418751e0848a135842c300a626e4f6b8d50/comments","author":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"committer":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"parents":[{"sha":"03afb02957ea3095dcf6ff29c21da2457745f904","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03afb02957ea3095dcf6ff29c21da2457745f904","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03afb02957ea3095dcf6ff29c21da2457745f904"}],"stats":{"total":336,"additions":166,"deletions":170},"files":[{"sha":"4ffad2776939fb2c6318dbbce48a5fc2b76990cc","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=c7c0e418751e0848a135842c300a626e4f6b8d50","patch":"@@ -81,7 +81,7 @@ public void testUserSchemaAuthorization() {\n         assertEquals(schemaTO, newSchemaTO);\n \n         // 2. create an user with the role created above (as admin)\n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"auth@test.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(authRoleTO.getId());\n@@ -126,7 +126,7 @@ public void testUserSchemaAuthorization() {\n \n     @Test\n     public void testUserRead() {\n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"testuserread@test.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n@@ -162,7 +162,7 @@ public void testUserRead() {\n \n     @Test\n     public void testUserSearch() {\n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"testusersearch@test.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n@@ -210,7 +210,7 @@ public void testUserSearch() {\n \n     @Test\n     public void checkFailedLogins() {\n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"checkFailedLogin@syncope.apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n@@ -272,7 +272,7 @@ public void checkFailedLogins() {\n \n     @Test\n     public void checkUserSuspension() {\n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"checkSuspension@syncope.apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n@@ -409,7 +409,7 @@ public void issueSYNCOPE48() {\n         assertNotNull(childRole);\n \n         // User with child role, created by admin\n-        UserTO role1Admin = UserTestITCase.getSampleUniqueTO();\n+        UserTO role1Admin = UserTestITCase.getUniqueSampleTO(\"syncope48admin@apache.org\");\n         role1Admin.setPassword(\"password\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(childRole.getId());\n@@ -421,7 +421,7 @@ public void issueSYNCOPE48() {\n         super.setupRestTemplate(role1Admin.getUsername(), \"password\");\n \n         // User with role 1, created by user with child role created above\n-        UserTO role1User = UserTestITCase.getSampleUniqueTO();\n+        UserTO role1User = UserTestITCase.getUniqueSampleTO(\"syncope48user@apache.org\");\n         membershipTO = new MembershipTO();\n         membershipTO.setRoleId(1L);\n         role1User.addMembership(membershipTO);"},{"sha":"6abbd87b4bd82b394e5de6dd559800e8db239776","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=c7c0e418751e0848a135842c300a626e4f6b8d50","patch":"@@ -176,7 +176,7 @@ public void issue258() {\n         schemaTO = schemaService.create(AttributableType.USER, SchemaService.SchemaType.NORMAL, schemaTO);\n         assertNotNull(schemaTO);\n \n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue258@syncope.apache.org\");\n         userTO.addAttribute(attributeTO(schemaTO.getName(), \"1.2\"));\n \n         userTO = userService.create(userTO);\n@@ -200,7 +200,7 @@ public void issue259() {\n         schemaTO = schemaService.create(AttributableType.USER, SchemaService.SchemaType.NORMAL, schemaTO);\n         assertNotNull(schemaTO);\n \n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue259@syncope.apache.org\");\n         userTO.addAttribute(attributeTO(schemaTO.getName(), \"1\"));\n         userTO = userService.create(userTO);\n         assertNotNull(userTO);\n@@ -224,7 +224,7 @@ public void issue260() {\n         schemaTO = schemaService.create(AttributableType.USER, SchemaService.SchemaType.NORMAL, schemaTO);\n         assertNotNull(schemaTO);\n \n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue260@syncope.apache.org\");\n         userTO.addAttribute(attributeTO(schemaTO.getName(), \"1.2\"));\n         userTO = userService.create(userTO);\n         assertNotNull(userTO);"},{"sha":"af83b50fc5cf81b75e9c78c07955f81d171da673","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":93,"deletions":83,"changes":176,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=c7c0e418751e0848a135842c300a626e4f6b8d50","patch":"@@ -217,93 +217,103 @@ public void sync() {\n         //-----------------------------\n         // Create a new user ... it should be updated applying sync policy\n         //-----------------------------\n-        UserTO userTO = new UserTO();\n-        userTO.setPassword(\"password123\");\n-        userTO.setUsername(\"test9\");\n-        userTO.addAttribute(attributeTO(\"firstname\", \"nome9\"));\n-        userTO.addAttribute(attributeTO(\"surname\", \"cognome\"));\n-        userTO.addAttribute(attributeTO(\"type\", \"a type\"));\n-        userTO.addAttribute(attributeTO(\"fullname\", \"nome cognome\"));\n-        userTO.addAttribute(attributeTO(\"userId\", \"user5@syncope.apache.org\"));\n-        userTO.addAttribute(attributeTO(\"email\", \"user5@syncope.apache.org\"));\n-        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n-\n-        userTO = userService.create(userTO);\n-        assertNotNull(userTO);\n-        //-----------------------------\n-\n-        int usersPre = userService.count();\n-        assertNotNull(usersPre);\n-\n-        // Update sync task\n-        SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, SYNC_TASK_ID);\n-        assertNotNull(task);\n-\n-        //  add custom SyncJob actions\n-        task.setActionsClassName(TestSyncActions.class.getName());\n-\n-        //  add user template\n-        UserTO template = new UserTO();\n-        template.addAttribute(attributeTO(\"type\", \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n-        template.addDerivedAttribute(attributeTO(\"cn\", null));\n-        template.addResource(\"resource-testdb\");\n+        UserTO inUserTO = new UserTO();\n+        inUserTO.setPassword(\"password123\");\n+        String userName = \"test9\";\n+        inUserTO.setUsername(userName);\n+        inUserTO.addAttribute(attributeTO(\"firstname\", \"nome9\"));\n+        inUserTO.addAttribute(attributeTO(\"surname\", \"cognome\"));\n+        inUserTO.addAttribute(attributeTO(\"type\", \"a type\"));\n+        inUserTO.addAttribute(attributeTO(\"fullname\", \"nome cognome\"));\n+        inUserTO.addAttribute(attributeTO(\"userId\", \"user5@syncope.apache.org\"));\n+        inUserTO.addAttribute(attributeTO(\"email\", \"user5@syncope.apache.org\"));\n+        inUserTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n-        MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(8L);\n-        membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n-        template.addMembership(membershipTO);\n-\n-        task.setUserTemplate(template);\n-\n-        SyncTaskTO actual = taskService.update(task.getId(), task);\n-        assertNotNull(actual);\n-        assertEquals(task.getId(), actual.getId());\n-        assertEquals(TestSyncActions.class.getName(), actual.getActionsClassName());\n-\n-        execSyncTask(SYNC_TASK_ID, 50, false);\n-\n-        // after execution of the sync task the user data should be synced from\n-        // csv datasource and processed by user template\n-        userTO = userService.read(userTO.getId());\n-        assertNotNull(userTO);\n-        assertEquals(\"test9\", userTO.getUsername());\n-        assertEquals(ActivitiDetector.isActivitiEnabledForUsers()\n-                ? \"active\"\n-                : \"created\", userTO.getStatus());\n-        assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"email\").getValues().get(0));\n-        assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n-        assertTrue(Integer.valueOf(userTO.getAttributeMap().get(\"fullname\").getValues().get(0)) <= 10);\n-\n-        // check for user template\n-        userTO = userService.read(\"test7\");\n-        assertNotNull(userTO);\n-        assertEquals(\"TYPE_OTHER\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n-        assertEquals(2, userTO.getResources().size());\n-        assertTrue(userTO.getResources().contains(\"resource-testdb\"));\n-        assertTrue(userTO.getResources().contains(\"ws-target-resource-2\"));\n-        assertEquals(1, userTO.getMemberships().size());\n-        assertTrue(userTO.getMemberships().get(0).getAttributeMap().containsKey(\"subscriptionDate\"));\n-\n-        userTO = userService.read(\"test8\");\n-        assertNotNull(userTO);\n-        assertEquals(\"TYPE_8\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n-\n-        // check for sync results\n-        int usersPost = userService.count();\n-        assertNotNull(usersPost);\n-        assertEquals(usersPre + 9, usersPost);\n+        try {\n+        \tinUserTO = userService.create(inUserTO);\n+            assertNotNull(inUserTO);\n+            //-----------------------------\n \n-        // Check for issue 215:\n-        // * expected disabled user test1\n-        // * expected enabled user test2\n+            int usersPre = userService.count();\n+            assertNotNull(usersPre);\n \n-        userTO = userService.read(\"test1\");\n-        assertNotNull(userTO);\n-        assertEquals(\"suspended\", userTO.getStatus());\n+            // Update sync task\n+            SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, SYNC_TASK_ID);\n+            assertNotNull(task);\n \n-        userTO = userService.read(\"test3\");\n-        assertNotNull(userTO);\n-        assertEquals(\"active\", userTO.getStatus());\n+            //  add custom SyncJob actions\n+            task.setActionsClassName(TestSyncActions.class.getName());\n+\n+            //  add user template\n+            UserTO template = new UserTO();\n+            template.addAttribute(attributeTO(\"type\",\n+                    \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n+            template.addDerivedAttribute(attributeTO(\"cn\", null));\n+            template.addResource(\"resource-testdb\");\n+\n+            MembershipTO membershipTO = new MembershipTO();\n+            membershipTO.setRoleId(8L);\n+            membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n+            template.addMembership(membershipTO);\n+\n+            task.setUserTemplate(template);\n+\n+            SyncTaskTO actual = taskService.update(task.getId(), task);\n+            assertNotNull(actual);\n+            assertEquals(task.getId(), actual.getId());\n+            assertEquals(TestSyncActions.class.getName(), actual.getActionsClassName());\n+\n+            execSyncTask(SYNC_TASK_ID, 50, false);\n+            \n+\t\t\t// after execution of the sync task the user data should be synced\n+\t\t\t// from\n+\t\t\t// csv datasource and processed by user template\n+\t\t\tUserTO userTO = userService.read(inUserTO.getId());\n+\t\t\tassertNotNull(userTO);\n+\t\t\tassertEquals(\"test9\", userTO.getUsername());\n+\t\t\tassertEquals(\n+\t\t\t\t\tActivitiDetector.isActivitiEnabledForUsers() ? \"active\"\n+\t\t\t\t\t\t\t: \"created\", userTO.getStatus());\n+\t\t\tassertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap()\n+\t\t\t\t\t.get(\"email\").getValues().get(0));\n+\t\t\tassertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap()\n+\t\t\t\t\t.get(\"userId\").getValues().get(0));\n+\t\t\tassertTrue(Integer.valueOf(userTO.getAttributeMap().get(\"fullname\")\n+\t\t\t\t\t.getValues().get(0)) <= 10);\n+\n+            // check for user template\n+            userTO = userService.read(\"test7\");\n+            assertNotNull(userTO);\n+            assertEquals(\"TYPE_OTHER\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+            assertEquals(2, userTO.getResources().size());\n+            assertTrue(userTO.getResources().contains(\"resource-testdb\"));\n+            assertTrue(userTO.getResources().contains(\"ws-target-resource-2\"));\n+            assertEquals(1, userTO.getMemberships().size());\n+            assertTrue(userTO.getMemberships().get(0).getAttributeMap().containsKey(\"subscriptionDate\"));\n+\n+            userTO = userService.read(\"test8\");\n+            assertNotNull(userTO);\n+            assertEquals(\"TYPE_8\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+\n+            // check for sync results\n+            int usersPost = userService.count();\n+            assertNotNull(usersPost);\n+            assertEquals(usersPre + 9, usersPost);\n+\n+            // Check for issue 215:\n+            // * expected disabled user test1\n+            // * expected enabled user test2\n+\n+            userTO = userService.read(\"test1\");\n+            assertNotNull(userTO);\n+            assertEquals(\"suspended\", userTO.getStatus());\n+\n+            userTO = userService.read(\"test3\");\n+            assertNotNull(userTO);\n+            assertEquals(\"active\", userTO.getStatus());\n+        } finally {\n+        \tuserService.delete(inUserTO.getId());\n+        }\n     }\n \n     @Test"},{"sha":"65a75f7e49c49878b44a92d0b24bfd745636d34a","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=c7c0e418751e0848a135842c300a626e4f6b8d50","patch":"@@ -54,7 +54,7 @@ public void create() {\n         configurationTO = configurationService.create(configurationTO);\n         assertNotNull(configurationTO);\n \n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"selfcreate@syncope.apache.org\");\n \n         // 2. get unauthorized when trying to request user create\n         SyncopeClientException exception = null;\n@@ -96,7 +96,7 @@ public void create() {\n     @Test\n     public void update() {\n         // 1. create an user (as admin)\n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"selfupdate@syncope.apache.org\");\n         String initialPassword = userTO.getPassword();\n \n         userTO = userService.create(userTO);\n@@ -152,7 +152,7 @@ public void update() {\n     @Test\n     public void delete() {\n         // 1. create an user (as admin)\n-        UserTO userTO = UserTestITCase.getSampleUniqueTO();\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"selfdelete@syncope.apache.org\");\n         String initialPassword = userTO.getPassword();\n \n         userTO = userService.create(userTO);"},{"sha":"ec96a628b09e470e4c2e294b3e8ec624e60b2730","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":60,"deletions":74,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c7c0e418751e0848a135842c300a626e4f6b8d50/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=c7c0e418751e0848a135842c300a626e4f6b8d50","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.client.to.ConfigurationTO;\n import org.apache.syncope.client.to.ConnObjectTO;\n import org.apache.syncope.client.to.MembershipTO;\n+import org.apache.syncope.client.to.PasswordPolicyTO;\n import org.apache.syncope.client.to.PolicyTO;\n import org.apache.syncope.client.to.PropagationTO;\n import org.apache.syncope.client.to.PropagationTaskTO;\n@@ -76,8 +77,8 @@ private ConnObjectTO readUserConnObj(String resourceName, String userId) {\n         return resourceService.getConnector(resourceName, AttributableType.USER, userId);\n     }\n \n-    public static UserTO getSampleUniqueTO() {\n-    \treturn getSampleTO(getUUIDString() + \"@test.com\");\n+    public static UserTO getUniqueSampleTO(final String email) {\n+    \treturn getSampleTO(getUUIDString() + email);\n     }\n \n     public static UserTO getSampleTO(final String email) {\n@@ -131,13 +132,7 @@ public void createUserWithNoPropagation() {\n         }\n \n         // create a new user\n-        UserTO userTO = new UserTO();\n-        userTO.setUsername(\"xxx@xxx.xxx\");\n-\n-        userTO.addAttribute(attributeTO(\"firstname\", \"xxx\"));\n-        userTO.addAttribute(attributeTO(\"surname\", \"xxx\"));\n-        userTO.addAttribute(attributeTO(\"userId\", \"xxx@xxx.xxx\"));\n-        userTO.addAttribute(attributeTO(\"fullname\", \"xxx\"));\n+        UserTO userTO = getUniqueSampleTO(\"xxx@xxx.xxx\");\n \n         userTO.setPassword(\"password123\");\n         userTO.addResource(\"ws-target-resource-nopropagation\");\n@@ -174,38 +169,33 @@ public void createUserWithNoPropagation() {\n      * introducing a simple control.\n      */\n     public void issue172() {\n-        PolicyTO policyTO = policyService.read(PolicyType.PASSWORD, 2L);\n-\n-        assertNotNull(policyTO);\n-\n-        policyService.delete(PolicyType.PASSWORD, 2L);\n-\n-        UserTO userTO = new UserTO();\n-        userTO.setUsername(\"issue172@syncope.apache.org\");\n-        userTO.setPassword(\"password\");\n-\n-        userTO.addAttribute(attributeTO(\"firstname\", \"issue172\"));\n-        userTO.addAttribute(attributeTO(\"surname\", \"issue172\"));\n-        userTO.addAttribute(attributeTO(\"userId\", \"issue172@syncope.apache.org\"));\n-        userTO.addAttribute(attributeTO(\"fullname\", \"issue172\"));\n+    \tList<PasswordPolicyTO> policies = policyService.listByType(PolicyType.GLOBAL_PASSWORD);\n+    \tfor (PasswordPolicyTO policyTO : policies) {\n+            policyService.delete(PolicyType.PASSWORD, policyTO.getId());\n+    \t}\n \n-        userService.create(userTO);\n-\n-        policyService.create(PolicyType.PASSWORD, policyTO);\n-\n-        assertNotNull(policyTO);\n+    \ttry {\n+            UserTO userTO = getUniqueSampleTO(\"issue172@syncope.apache.org\");\n+            userService.create(userTO);\n+    \t} finally {\n+        \tfor (PasswordPolicyTO policyTO : policies) {\n+                PolicyTO cPolicyTO = policyService.create(PolicyType.GLOBAL_PASSWORD, policyTO);\n+                assertNotNull(cPolicyTO);\n+        \t}\n+    \t}\n     }\n \n     @Test\n     public void issue186() {\n         // 1. create an user with strict mandatory attributes only\n         UserTO userTO = new UserTO();\n-        userTO.setUsername(\"issue186@syncope.apache.org\");\n+        String userId = getUUIDString() + \"issue186@syncope.apache.org\";\n+        userTO.setUsername(userId);\n         userTO.setPassword(\"password\");\n \n-        userTO.addAttribute(attributeTO(\"userId\", \"issue186@syncope.apache.org\"));\n-        userTO.addAttribute(attributeTO(\"fullname\", \"issue186\"));\n-        userTO.addAttribute(attributeTO(\"surname\", \"issue186\"));\n+        userTO.addAttribute(attributeTO(\"userId\", userId));\n+        userTO.addAttribute(attributeTO(\"fullname\", userId));\n+        userTO.addAttribute(attributeTO(\"surname\", userId));\n \n         userTO = userService.create(userTO);\n         assertNotNull(userTO);\n@@ -259,7 +249,7 @@ public void issue186() {\n \n     @Test\n     public void testEnforceMandatoryCondition() {\n-        UserTO userTO = getSampleTO(\"issue183@apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"enforce@apache.org\");\n         userTO.addResource(\"ws-target-resource-2\");\n         userTO.setPassword(\"newPassword\");\n \n@@ -294,7 +284,7 @@ public void testEnforceMandatoryConditionOnDerived() {\n         resourceTO = resourceService.create(resourceTO);\n         assertNotNull(resourceTO);\n \n-        UserTO userTO = getSampleTO(\"syncope222@apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"syncope222@apache.org\");\n         userTO.addResource(resourceTO.getName());\n         userTO.setPassword(\"newPassword\");\n \n@@ -316,7 +306,7 @@ public void testEnforceMandatoryConditionOnDerived() {\n     @Test\n     public void issue147() {\n         // 1. create an user without role nor resources\n-        UserTO userTO = getSampleTO(\"issue147@tirasa.net\");\n+        UserTO userTO = getUniqueSampleTO(\"147@t.com\");\n \n         userTO = userService.create(userTO);\n         assertNotNull(userTO);\n@@ -344,13 +334,7 @@ public void issue147() {\n \n     @Test\n     public void createUserWithDbPropagation() {\n-        UserTO userTO = new UserTO();\n-        userTO.setPassword(\"password\");\n-        userTO.setUsername(\"yyy@yyy.yyy\");\n-        userTO.addAttribute(attributeTO(\"firstname\", \"yyy\"));\n-        userTO.addAttribute(attributeTO(\"surname\", \"yyy\"));\n-        userTO.addAttribute(attributeTO(\"userId\", \"yyy@yyy.yyy\"));\n-        userTO.addAttribute(attributeTO(\"fullname\", \"yyy\"));\n+        UserTO userTO = getUniqueSampleTO(\"yyy@yyy.yyy\");\n         userTO.addResource(\"resource-testdb\");\n         userTO = userService.create(userTO);\n         assertNotNull(userTO);\n@@ -433,7 +417,7 @@ public void create() {\n         assertNotNull(taskTO);\n         int maxTaskExecutions = taskTO.getExecutions().size();\n \n-        UserTO userTO = getSampleTO(\"a.b@c.com\");\n+        UserTO userTO = getUniqueSampleTO(\"a.b@c.com\");\n \n         // add a membership\n         MembershipTO membershipTO = new MembershipTO();\n@@ -501,7 +485,7 @@ public void create() {\n         assertFalse(verify);\n \n         // 4. try (and fail) to create another user with same (unique) values\n-        userTO = getSampleTO(\"pippo@c.com\");\n+        userTO = getSampleTO(userTO.getUsername());\n         for (AttributeTO attr : userTO.getAttributes()) {\n             if (\"userId\".equals(attr.getSchema())) {\n                 attr.getValues().clear();\n@@ -571,7 +555,7 @@ public void createWithRequiredValueMissing() {\n     public void createWithReject() {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n \n-        UserTO userTO = getSampleTO(\"createWithReject@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"createWithReject@syncope.apache.org\");\n \n         // User with role 9 are defined in workflow as subject to approval\n         MembershipTO membershipTO = new MembershipTO();\n@@ -630,7 +614,7 @@ public void createWithApproval() {\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n-        UserTO userTO = getSampleTO(\"createWithApproval@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"createWithApproval@syncope.apache.org\");\n         userTO.addResource(\"resource-testdb\");\n \n         // User with role 9 are defined in workflow as subject to approval\n@@ -814,7 +798,7 @@ public void read() {\n \n     @Test\n     public void updateWithouPassword() {\n-        UserTO userTO = getSampleTO(\"updatewithout@password.com\");\n+        UserTO userTO = getUniqueSampleTO(\"updatewithout@password.com\");\n \n         userTO = userService.create(userTO);\n \n@@ -861,7 +845,7 @@ public void updateSamePassword() {\n \n     @Test\n     public void update() {\n-        UserTO userTO = getSampleTO(\"g.h@t.com\");\n+        UserTO userTO = getUniqueSampleTO(\"g.h@t.com\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n@@ -882,10 +866,12 @@ public void update() {\n         userMod.setPassword(\"new2Password\");\n \n         userMod.addAttributeToBeRemoved(\"userId\");\n-        userMod.addAttributeToBeUpdated(attributeMod(\"userId\", \"t.w@spre.net\"));\n+        String newUserId = getUUIDString() + \"t.w@spre.net\";\n+        userMod.addAttributeToBeUpdated(attributeMod(\"userId\", newUserId));\n \n         userMod.addAttributeToBeRemoved(\"fullname\");\n-        userMod.addAttributeToBeUpdated(attributeMod(\"fullname\", \"g.h@t.com\"));\n+        String newFullName = getUUIDString() +  \"g.h@t.com\";\n+        userMod.addAttributeToBeUpdated(attributeMod(\"fullname\", newFullName));\n \n         userMod.addDerivedAttributeToBeAdded(\"cn\");\n         userMod.addMembershipToBeAdded(membershipMod);\n@@ -908,11 +894,11 @@ public void update() {\n         for (AttributeTO attributeTO : userTO.getAttributes()) {\n             if (\"userId\".equals(attributeTO.getSchema())) {\n                 userIdFound = true;\n-                assertEquals(Collections.singletonList(\"t.w@spre.net\"), attributeTO.getValues());\n+                assertEquals(Collections.singletonList(newUserId), attributeTO.getValues());\n             }\n             if (\"fullname\".equals(attributeTO.getSchema())) {\n                 fullnameFound = true;\n-                assertEquals(Collections.singletonList(\"g.h@t.com\"), attributeTO.getValues());\n+                assertEquals(Collections.singletonList(newFullName), attributeTO.getValues());\n             }\n         }\n         assertTrue(userIdFound);\n@@ -925,7 +911,7 @@ public void updatePasswordOnly() {\n         assertNotNull(beforeTasks);\n         assertFalse(beforeTasks.isEmpty());\n \n-        UserTO userTO = getSampleTO(\"pwdonly@t.com\");\n+        UserTO userTO = getUniqueSampleTO(\"pwdonly@t.com\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n         membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n@@ -973,7 +959,7 @@ public void verifyTaskRegistration() {\n         // Create operation\n         // --------------------------------------\n \n-        UserTO userTO = getSampleTO(\"task@propagation.mode\");\n+        UserTO userTO = getUniqueSampleTO(\"t@p.mode\");\n \n         // add a membership\n         MembershipTO membershipTO = new MembershipTO();\n@@ -1062,7 +1048,7 @@ public void verifyTaskRegistration() {\n     public void createActivate() {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n \n-        UserTO userTO = getSampleTO(\"createActivate@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"createActivate@syncope.apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(11L);\n@@ -1089,7 +1075,7 @@ public void createActivate() {\n     public void createActivateByUsername() {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n \n-        UserTO userTO = getSampleTO(\"createActivateByUsername@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"createActivateByUsername@syncope.apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(11L);\n@@ -1115,7 +1101,7 @@ public void createActivateByUsername() {\n \n     @Test\n     public void suspendReactivate() {\n-        UserTO userTO = getSampleTO(\"suspendReactivate@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"suspendReactivate@syncope.apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n@@ -1139,7 +1125,7 @@ public void suspendReactivate() {\n \n     @Test\n     public void suspendReactivateByUsername() {\n-        UserTO userTO = getSampleTO(\"suspendReactivateByUsername@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"suspendReactivateByUsername@syncope.apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n@@ -1163,7 +1149,7 @@ public void suspendReactivateByUsername() {\n \n     @Test\n     public void suspendReactivateOnResource() {\n-        UserTO userTO = getSampleTO(\"suspreactonresource@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"suspreactonresource@syncope.apache.org\");\n \n         userTO.getMemberships().clear();\n         userTO.getResources().clear();\n@@ -1259,7 +1245,7 @@ public void updateMultivalueAttribute() {\n \n     @Test(expected = EmptyResultDataAccessException.class)\n     public void issue213() {\n-        UserTO userTO = getSampleTO(\"issue213@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"issue213@syncope.apache.org\");\n         userTO.addResource(\"resource-testdb\");\n \n         userTO = userService.create(userTO);\n@@ -1287,10 +1273,10 @@ public void issue213() {\n \n     @Test\n     public void issue234() {\n-        UserTO userTO = getSampleTO(\"issue234@syncope.apache.org\");\n-        userTO.addResource(\"resource-ldap\");\n+        UserTO inUserTO = getUniqueSampleTO(\"issue234@syncope.apache.org\");\n+        inUserTO.addResource(\"resource-ldap\");\n \n-        userTO = userService.create(userTO);\n+        UserTO userTO = userService.create(inUserTO);\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n@@ -1302,13 +1288,13 @@ public void issue234() {\n \n         assertNotNull(userTO);\n \n-        assertEquals(\"1issue234@syncope.apache.org\", userTO.getUsername());\n+        assertEquals(\"1\" + inUserTO.getUsername(), userTO.getUsername());\n     }\n \n     @Test\n     public void issue270() {\n         // 1. create a new user without virtual attributes\n-        UserTO original = getSampleTO(\"issue270@syncope.apache.org\");\n+        UserTO original = getUniqueSampleTO(\"issue270@syncope.apache.org\");\n         // be sure to remove all virtual attributes\n         original.setVirtualAttributes(Collections.<AttributeTO>emptyList());\n \n@@ -1340,7 +1326,7 @@ public void issue270() {\n \n     @Test\n     public final void issue280() {\n-        UserTO userTO = getSampleTO(\"issue280@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"issue280@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n@@ -1371,7 +1357,7 @@ public final void issue280() {\n \n     @Test\n     public void issue281() {\n-        UserTO userTO = getSampleTO(\"issue281@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"issue281@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n@@ -1408,7 +1394,7 @@ public void issue288() {\n \n     @Test\n     public void roleAttrPropagation() {\n-        UserTO userTO = getSampleTO(\"checkRoleAttrPropagation@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"checkRoleAttrPropagation@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n@@ -1436,7 +1422,7 @@ public void roleAttrPropagation() {\n \n     @Test\n     public void membershipAttrPropagation() {\n-        UserTO userTO = getSampleTO(\"checkMembAttrPropagation@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"checkMembAttrPropagation@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n@@ -1465,7 +1451,7 @@ public void membershipAttrPropagation() {\n \n     @Test\n     public void issueSYNCOPE16() {\n-        UserTO userTO = getSampleTO(\"virattrupdate@apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"issue16@apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n@@ -1497,7 +1483,7 @@ public void issueSYNCOPE16() {\n \n     @Test\n     public void issueSYNCOPE108() {\n-        UserTO userTO = getSampleTO(\"syncope108@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"syncope108@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n@@ -1587,7 +1573,7 @@ public void issueSYNCOPE108() {\n \n     @Test\n     public void issueSYNCOPE111() {\n-        UserTO userTO = getSampleTO(\"syncope111@syncope.apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"syncope111@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n@@ -1711,7 +1697,7 @@ public void issueSYNCOPE260() {\n         // ----------------------------------\n         // create user and check virtual attribute value propagation\n         // ----------------------------------\n-        UserTO userTO = getSampleTO(\"syncope260@apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"260@a.com\");\n         userTO.addResource(\"ws-target-resource-2\");\n \n         userTO = userService.create(userTO);\n@@ -1825,7 +1811,7 @@ public void issueSYNCOPE267() {\n         // ----------------------------------\n         // create user and check virtual attribute value propagation\n         // ----------------------------------\n-        UserTO userTO = getSampleTO(\"syncope267@apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"syncope267@apache.org\");\n         userTO.getResources().clear();\n         userTO.addResource(\"resource-db-virattr\");\n "}]}