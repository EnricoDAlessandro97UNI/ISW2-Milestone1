{"sha":"1b79adaae7ffd4736530bd1088b45de8ac049f98","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjFiNzlhZGFhZTdmZmQ0NzM2NTMwYmQxMDg4YjQ1ZGU4YWMwNDlmOTg=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-07-17T21:27:13Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-07-17T21:27:13Z"},"message":"BOOKKEEPER-1095: Long Poll - Server and Client Side Changes\n\nDescriptions of the changes in this PR:\n\n- changes on FileInfo to support notifications on LAC changes\n- a new ReadEntryLongPollV3 processor to process readEntry requests with long poll flags\n- a new public API for long poll: readLastConfirmedAndEntry. if it is reading beyond the LAC, it will become a long poll request and wait for advancing LAC on bookie side; if it isn't reading beyond the LAC it will be normal reads.\n- also have a speculative mechanism for long poll reads.\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>\n\nThis closes #220 from sijie/BOOKKEEPER-1094","tree":{"sha":"01b0e4ee75cfaf81d51e3e68b29bc698f2805e16","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/01b0e4ee75cfaf81d51e3e68b29bc698f2805e16"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/1b79adaae7ffd4736530bd1088b45de8ac049f98","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/1b79adaae7ffd4736530bd1088b45de8ac049f98","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/1b79adaae7ffd4736530bd1088b45de8ac049f98","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/1b79adaae7ffd4736530bd1088b45de8ac049f98/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"dc1fba1685fe04931ae2966d2ccc5b418af257ca","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/dc1fba1685fe04931ae2966d2ccc5b418af257ca","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/dc1fba1685fe04931ae2966d2ccc5b418af257ca"}],"stats":{"total":12,"additions":8,"deletions":4},"files":[{"sha":"31c76d527ef4632057b1b11905657b6557935e41","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/1b79adaae7ffd4736530bd1088b45de8ac049f98/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FFileInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/1b79adaae7ffd4736530bd1088b45de8ac049f98/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FFileInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FFileInfo.java?ref=1b79adaae7ffd4736530bd1088b45de8ac049f98","patch":"@@ -110,7 +110,9 @@ long setLastAddConfirmed(long lac) {\n             }\n             lacToReturn = this.lac;\n         }\n-        LOG.trace(\"Updating LAC {} , {}\", lacToReturn, lac);\n+        if (LOG.isTraceEnabled()) {\n+            LOG.trace(\"Updating LAC {} , {}\", lacToReturn, lac);\n+        }\n \n \n         notifyObservers(new LastAddConfirmedUpdateNotification(lacToReturn));\n@@ -120,7 +122,9 @@ long setLastAddConfirmed(long lac) {\n     synchronized Observable waitForLastAddConfirmedUpdate(long previousLAC, Observer observe) {\n         if ((null != lac && lac > previousLAC)\n                 || isClosed || ((stateBits & STATE_FENCED_BIT) == STATE_FENCED_BIT)) {\n-            LOG.trace(\"Wait For LAC {} , {}\", this.lac, previousLAC);\n+            if (LOG.isTraceEnabled()) {\n+                LOG.trace(\"Wait For LAC {} , {}\", this.lac, previousLAC);\n+            }\n             return null;\n         }\n "},{"sha":"cfc1be016051aab153f55858c94bac5dc041c0cc","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptorImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/1b79adaae7ffd4736530bd1088b45de8ac049f98/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptorImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/1b79adaae7ffd4736530bd1088b45de8ac049f98/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptorImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptorImpl.java?ref=1b79adaae7ffd4736530bd1088b45de8ac049f98","patch":"@@ -157,7 +157,7 @@ long getLastAddConfirmed() throws IOException {\n     }\n \n     @Override\n-    Observable waitForLastAddConfirmedUpdate(long previoisLAC, Observer observer) throws IOException {\n-        return ledgerStorage.waitForLastAddConfirmedUpdate(ledgerId, previoisLAC, observer);\n+    Observable waitForLastAddConfirmedUpdate(long previousLAC, Observer observer) throws IOException {\n+        return ledgerStorage.waitForLastAddConfirmedUpdate(ledgerId, previousLAC, observer);\n     }\n }"}]}