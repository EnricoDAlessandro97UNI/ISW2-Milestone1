{"sha":"26b17cba50aded931afb2e66d549fbeb8f4f1d39","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjI2YjE3Y2JhNTBhZGVkOTMxYWZiMmU2NmQ1NDlmYmViOGY0ZjFkMzk=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2015-04-21T08:19:24Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2015-04-21T08:19:24Z"},"message":"BOOKKEEPER-846: TestLedgerChecker times out (rakeshr via sijie)","tree":{"sha":"d7808faead06bf8fe1da79dba05f155842600f5f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/d7808faead06bf8fe1da79dba05f155842600f5f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/26b17cba50aded931afb2e66d549fbeb8f4f1d39","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/26b17cba50aded931afb2e66d549fbeb8f4f1d39","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/26b17cba50aded931afb2e66d549fbeb8f4f1d39","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/26b17cba50aded931afb2e66d549fbeb8f4f1d39/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"da1a2fa6b19ddcdba68834147bf6afbe5bf90cbf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/da1a2fa6b19ddcdba68834147bf6afbe5bf90cbf","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/da1a2fa6b19ddcdba68834147bf6afbe5bf90cbf"}],"stats":{"total":37,"additions":26,"deletions":11},"files":[{"sha":"d3976d994ee99bb32f0921aa9a7db0c6d2ada9ea","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/26b17cba50aded931afb2e66d549fbeb8f4f1d39/CHANGES.txt","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/26b17cba50aded931afb2e66d549fbeb8f4f1d39/CHANGES.txt","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/CHANGES.txt?ref=26b17cba50aded931afb2e66d549fbeb8f4f1d39","patch":"@@ -36,6 +36,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-847: ArrayIndexOutOfBoundsException in LedgerFragmentReplicator::updateEnsembleInfo (zhaijia via sijie)\n \n+      BOOKKEEPER-846: TestLedgerChecker times out (rakeshr via sijie)\n+\n     IMPROVEMENTS:\n \n       BOOKKEEPER-800: Expose whether a ledger is closed or not (ivank)"},{"sha":"0316b37b8b6799dd5fa4c532e0402af40d023ab5","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerChecker.java","status":"modified","additions":24,"deletions":11,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/26b17cba50aded931afb2e66d549fbeb8f4f1d39/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FTestLedgerChecker.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/26b17cba50aded931afb2e66d549fbeb8f4f1d39/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FTestLedgerChecker.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FTestLedgerChecker.java?ref=26b17cba50aded931afb2e66d549fbeb8f4f1d39","patch":"@@ -120,7 +120,7 @@ public void testChecker() throws Exception {\n     // /we don't have any missed entries. Quorum satisfied//\n     // /So, there should not be any missing replicas.///////\n     // /////////////////////////////////////////////////////\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testShouldNotGetTheFragmentIfThereIsNoMissedEntry()\n             throws Exception {\n \n@@ -164,7 +164,7 @@ public void testShouldNotGetTheFragmentIfThereIsNoMissedEntry()\n      * Tests that LedgerChecker should give two fragments when 2 bookies failed\n      * in same ensemble when ensemble = 3, quorum = 2\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testShouldGetTwoFrgamentsIfTwoBookiesFailedInSameEnsemble()\n             throws Exception {\n \n@@ -198,7 +198,7 @@ public void testShouldGetTwoFrgamentsIfTwoBookiesFailedInSameEnsemble()\n      * Tests that LedgerChecker should not get any underReplicated fragments, if\n      * corresponding ledger does not exists.\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testShouldNotGetAnyFragmentIfNoLedgerPresent()\n             throws Exception {\n \n@@ -212,7 +212,20 @@ public void testShouldNotGetAnyFragmentIfNoLedgerPresent()\n         startNewBookie();\n         lh.addEntry(TEST_LEDGER_ENTRY_DATA);\n         bkc.deleteLedger(lh.getId());\n-\n+        LOG.info(\"Waiting to see ledger id {} deletion\", lh.getId());\n+        int retries = 40;\n+        boolean noSuchLedger = false;\n+        while (retries > 0) {\n+            try {\n+                lh.readEntries(0, 0);\n+            } catch (BKException.BKNoSuchLedgerExistsException bkn) {\n+                noSuchLedger = true;\n+                break;\n+            }\n+            retries--;\n+            Thread.sleep(500);\n+        }\n+        assertEquals(\"Ledger exists\", true, noSuchLedger);\n         Set<LedgerFragment> result = getUnderReplicatedFragments(lh);\n         assertNotNull(\"Result shouldn't be null\", result);\n \n@@ -224,7 +237,7 @@ public void testShouldNotGetAnyFragmentIfNoLedgerPresent()\n      * Tests that LedgerChecker should get failed ensemble number of fragments\n      * if ensemble bookie failures on next entry\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testShouldGetFailedEnsembleNumberOfFgmntsIfEnsembleBookiesFailedOnNextWrite()\n             throws Exception {\n \n@@ -258,7 +271,7 @@ public void testShouldGetFailedEnsembleNumberOfFgmntsIfEnsembleBookiesFailedOnNe\n      * Tests that LedgerChecker should not get any fragments as underReplicated\n      * if Ledger itself is empty\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testShouldNotGetAnyFragmentWithEmptyLedger() throws Exception {\n         LedgerHandle lh = bkc.createLedger(3, 2, BookKeeper.DigestType.CRC32,\n                 TEST_LEDGER_PASSWORD);\n@@ -275,7 +288,7 @@ public void testShouldNotGetAnyFragmentWithEmptyLedger() throws Exception {\n      * In this case, there'll only be two fragments, as quorum is 2 and we only\n      * suspect that the first entry of the ledger could exist.\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testShouldGet2FragmentsWithEmptyLedgerButBookiesDead() throws Exception {\n         LedgerHandle lh = bkc.createLedger(3, 2, BookKeeper.DigestType.CRC32,\n                 TEST_LEDGER_PASSWORD);\n@@ -291,7 +304,7 @@ public void testShouldGet2FragmentsWithEmptyLedgerButBookiesDead() throws Except\n      * Tests that LedgerChecker should one fragment as underReplicated\n      * if there is an open ledger with single entry written.\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testShouldGetOneFragmentWithSingleEntryOpenedLedger() throws Exception {\n         LedgerHandle lh = bkc.createLedger(3, 3, BookKeeper.DigestType.CRC32,\n                 TEST_LEDGER_PASSWORD);\n@@ -321,7 +334,7 @@ public void testShouldGetOneFragmentWithSingleEntryOpenedLedger() throws Excepti\n      * This is important, as the last add confirmed may be less than the\n      * first entry id of the final segment.\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testSingleEntryAfterEnsembleChange() throws Exception {\n         LedgerHandle lh = bkc.createLedger(3, 3, BookKeeper.DigestType.CRC32,\n                 TEST_LEDGER_PASSWORD);\n@@ -359,7 +372,7 @@ public void testSingleEntryAfterEnsembleChange() throws Exception {\n      * Tests that LedgerChecker does not return any fragments\n      * from a closed ledger with 0 entries.\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testClosedEmptyLedger() throws Exception {\n         LedgerHandle lh = bkc.createLedger(3, 3, BookKeeper.DigestType.CRC32,\n                 TEST_LEDGER_PASSWORD);\n@@ -386,7 +399,7 @@ public void testClosedEmptyLedger() throws Exception {\n      * Tests that LedgerChecker does not return any fragments\n      * from a closed ledger with 0 entries.\n      */\n-    @Test(timeout = 3000)\n+    @Test(timeout = 60000)\n     public void testClosedSingleEntryLedger() throws Exception {\n         LedgerHandle lh = bkc.createLedger(3, 2, BookKeeper.DigestType.CRC32,\n                 TEST_LEDGER_PASSWORD);"}]}