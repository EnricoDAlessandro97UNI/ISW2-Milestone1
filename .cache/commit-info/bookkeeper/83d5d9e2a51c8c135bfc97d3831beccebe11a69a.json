{"sha":"83d5d9e2a51c8c135bfc97d3831beccebe11a69a","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjgzZDVkOWUyYTUxYzhjMTM1YmZjOTdkMzgzMWJlY2NlYmUxMWE2OWE=","commit":{"author":{"name":"eolivelli","email":"eolivelli@apache.org","date":"2017-04-20T17:55:16Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-04-20T17:55:16Z"},"message":"BOOKKEEPER-1038: Fix findbugs warnings and upgrade to 3.0.4\n\n- upgrade to findbugs 3.0.4\n- fix DLS_DEAD_LOCAL_STORE At BookieInfoReader.java (introduce a constant)\n- fix EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC At PerChannelBookieClient.java (introduce a V3CompletionKey)\n\nAuthor: eolivelli <eolivelli@apache.org>\n\nReviewers: Sijie Guo <sijie@apache.org>\n\nCloses #131 from eolivelli/BOOKKEEPER-1038-findbugs","tree":{"sha":"4214744cdbb488eaf79fea116c3b1f8a1e8ba15b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/4214744cdbb488eaf79fea116c3b1f8a1e8ba15b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/83d5d9e2a51c8c135bfc97d3831beccebe11a69a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/83d5d9e2a51c8c135bfc97d3831beccebe11a69a","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/83d5d9e2a51c8c135bfc97d3831beccebe11a69a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/83d5d9e2a51c8c135bfc97d3831beccebe11a69a/comments","author":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"de59bd2ad038428cfa61cfdefe1266f3356e1937","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/de59bd2ad038428cfa61cfdefe1266f3356e1937","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/de59bd2ad038428cfa61cfdefe1266f3356e1937"}],"stats":{"total":52,"additions":31,"deletions":21},"files":[{"sha":"770814051691e6cac678918b4e731b8a3bb91b32","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieInfoReader.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/83d5d9e2a51c8c135bfc97d3831beccebe11a69a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieInfoReader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/83d5d9e2a51c8c135bfc97d3831beccebe11a69a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieInfoReader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieInfoReader.java?ref=83d5d9e2a51c8c135bfc97d3831beccebe11a69a","patch":"@@ -40,6 +40,10 @@\n \n public class BookieInfoReader {\n     private static final Logger LOG = LoggerFactory.getLogger(BookieInfoReader.class);\n+    private static final long GET_BOOKIE_INFO_REQUEST_FLAGS\n+        = BookkeeperProtocol.GetBookieInfoRequest.Flags.TOTAL_DISK_CAPACITY_VALUE |\n+                               BookkeeperProtocol.GetBookieInfoRequest.Flags.FREE_DISK_SPACE_VALUE;\n+\n     private final ScheduledExecutorService scheduler;\n     private final BookKeeper bk;\n     private final ClientConfiguration conf;\n@@ -163,13 +167,11 @@ void getReadWriteBookieInfo(Collection<BookieSocketAddress> newBookiesList) {\n         }\n \n         BookieClient bkc = bk.getBookieClient();\n-        final long requested = BookkeeperProtocol.GetBookieInfoRequest.Flags.TOTAL_DISK_CAPACITY_VALUE |\n-                               BookkeeperProtocol.GetBookieInfoRequest.Flags.FREE_DISK_SPACE_VALUE;\n         totalSent.set(0);\n         completedCnt.set(0);\n         LOG.debug(\"Getting bookie info for: {}\", joinedBookies);\n         for (BookieSocketAddress b : joinedBookies) {\n-            bkc.getBookieInfo(b, requested,\n+            bkc.getBookieInfo(b, GET_BOOKIE_INFO_REQUEST_FLAGS,\n                     new GetBookieInfoCallback() {\n                         void processReadInfoComplete(int rc, BookieInfo bInfo, Object ctx) {\n                             BookieSocketAddress b = (BookieSocketAddress) ctx;"},{"sha":"7db620d922ff8b970e4d3688fe445e6a3a89049c","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","status":"modified","additions":25,"deletions":17,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/83d5d9e2a51c8c135bfc97d3831beccebe11a69a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FPerChannelBookieClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/83d5d9e2a51c8c135bfc97d3831beccebe11a69a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FPerChannelBookieClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FPerChannelBookieClient.java?ref=83d5d9e2a51c8c135bfc97d3831beccebe11a69a","patch":"@@ -404,7 +404,7 @@ void connectIfNeededAndDoOp(GenericCallback<PerChannelBookieClient> op) {\n \n     void writeLac(final long ledgerId, final byte[] masterKey, final long lac, ChannelBuffer toSend, WriteLacCallback cb, Object ctx) {\n         final long txnId = getTxnId();\n-        final CompletionKey completionKey = new CompletionKey(txnId, OperationType.WRITE_LAC);\n+        final CompletionKey completionKey = new V3CompletionKey(txnId, OperationType.WRITE_LAC);\n         // writeLac is mostly like addEntry hence uses addEntryTimeout\n         completionObjects.put(completionKey,\n                 new WriteLacCompletion(writeLacOpLogger, cb, ctx, lac, scheduleTimeout(completionKey, addEntryTimeout)));\n@@ -486,7 +486,7 @@ void addEntry(final long ledgerId, byte[] masterKey, final long entryId, Channel\n \n         } else {\n             final long txnId = getTxnId();\n-            completion = new CompletionKey(txnId, OperationType.ADD_ENTRY);\n+            completion = new V3CompletionKey(txnId, OperationType.ADD_ENTRY);\n             // Build the request and calculate the total size to be included in the packet.\n             BKPacketHeader.Builder headerBuilder = BKPacketHeader.newBuilder()\n                     .setVersion(ProtocolVersion.VERSION_THREE)\n@@ -558,7 +558,7 @@ public void readEntryAndFenceLedger(final long ledgerId, byte[] masterKey,\n                     BookieProtocol.FLAG_DO_FENCING, masterKey);\n         } else {\n             final long txnId = getTxnId();\n-            completion = new CompletionKey(txnId, OperationType.READ_ENTRY);\n+            completion = new V3CompletionKey(txnId, OperationType.READ_ENTRY);\n \n             // Build the request and calculate the total size to be included in the packet.\n             BKPacketHeader.Builder headerBuilder = BKPacketHeader.newBuilder()\n@@ -627,7 +627,7 @@ public void readLac(final long ledgerId, ReadLacCallback cb, Object ctx) {\n             completion = new V2CompletionKey(ledgerId, (long) 0, OperationType.READ_LAC);\n         } else {\n             final long txnId = getTxnId();\n-            completion = new CompletionKey(txnId, OperationType.READ_LAC);\n+            completion = new V3CompletionKey(txnId, OperationType.READ_LAC);\n \n             // Build the request and calculate the total size to be included in the packet.\n             BKPacketHeader.Builder headerBuilder = BKPacketHeader.newBuilder()\n@@ -685,7 +685,7 @@ public void readEntry(final long ledgerId, final long entryId, ReadEntryCallback\n             completion = new V2CompletionKey(ledgerId, entryId, OperationType.READ_ENTRY);\n         } else {\n             final long txnId = getTxnId();\n-            completion = new CompletionKey(txnId, OperationType.READ_ENTRY);\n+            completion = new V3CompletionKey(txnId, OperationType.READ_ENTRY);\n \n             // Build the request and calculate the total size to be included in the packet.\n             BKPacketHeader.Builder headerBuilder = BKPacketHeader.newBuilder()\n@@ -741,7 +741,7 @@ public void operationComplete(ChannelFuture future) throws Exception {\n \n     public void getBookieInfo(final long requested, GetBookieInfoCallback cb, Object ctx) {\n         final long txnId = getTxnId();\n-        final CompletionKey completionKey = new CompletionKey(txnId, OperationType.GET_BOOKIE_INFO);\n+        final CompletionKey completionKey = new V3CompletionKey(txnId, OperationType.GET_BOOKIE_INFO);\n         completionObjects.put(completionKey,\n                 new GetBookieInfoCompletion(this, getBookieInfoOpLogger, cb, ctx,\n                                    scheduleTimeout(completionKey, getBookieInfoTimeout)));\n@@ -1594,7 +1594,7 @@ public void writeComplete(int rc, long ledgerId, long entryId, BookieSocketAddre\n \n     // visable for testing\n     CompletionKey newCompletionKey(long txnId, OperationType operationType) {\n-        return new CompletionKey(txnId, operationType);\n+        return new V3CompletionKey(txnId, operationType);\n     }\n \n     Timeout scheduleTimeout(CompletionKey key, long timeout) {\n@@ -1605,23 +1605,18 @@ Timeout scheduleTimeout(CompletionKey key, long timeout) {\n         }\n     }\n \n-    class CompletionKey implements TimerTask {\n-        final long txnId;\n-        final OperationType operationType;\n-        final long requestAt;\n+    class V3CompletionKey extends CompletionKey {\n \n-        CompletionKey(long txnId, OperationType operationType) {\n-            this.txnId = txnId;\n-            this.operationType = operationType;\n-            this.requestAt = MathUtils.nowInNano();\n+        public V3CompletionKey(long txnId, OperationType operationType) {\n+            super(txnId, operationType);\n         }\n \n         @Override\n         public boolean equals(Object obj) {\n-            if (!(obj instanceof CompletionKey)) {\n+            if (!(obj instanceof V3CompletionKey)) {\n                 return false;\n             }\n-            CompletionKey that = (CompletionKey) obj;\n+            V3CompletionKey that = (V3CompletionKey) obj;\n             return this.txnId == that.txnId && this.operationType == that.operationType;\n         }\n \n@@ -1635,6 +1630,19 @@ public String toString() {\n             return String.format(\"TxnId(%d), OperationType(%s)\", txnId, operationType);\n         }\n \n+    }\n+\n+    abstract class CompletionKey implements TimerTask {\n+        final long txnId;\n+        final OperationType operationType;\n+        final long requestAt;\n+\n+        CompletionKey(long txnId, OperationType operationType) {\n+            this.txnId = txnId;\n+            this.operationType = operationType;\n+            this.requestAt = MathUtils.nowInNano();\n+        }\n+\n         private long elapsedTime() {\n             return MathUtils.elapsedNanos(requestAt);\n         }"},{"sha":"d3387cea71164237afe8e842b6f8e7dbabce4297","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/83d5d9e2a51c8c135bfc97d3831beccebe11a69a/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/83d5d9e2a51c8c135bfc97d3831beccebe11a69a/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/pom.xml?ref=83d5d9e2a51c8c135bfc97d3831beccebe11a69a","patch":"@@ -52,7 +52,7 @@\n       <plugin>\n         <groupId>org.codehaus.mojo</groupId>\n         <artifactId>findbugs-maven-plugin</artifactId>\n-        <version>3.0.3</version>\n+        <version>3.0.4</version>\n       </plugin>\n       <plugin>\n         <artifactId>maven-compiler-plugin</artifactId>"}]}