{"sha":"b90ad5d89717bb3ca161387af4fce4f913c9e0ae","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmI5MGFkNWQ4OTcxN2JiM2NhMTYxMzg3YWY0ZmNlNGY5MTNjOWUwYWU=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-06-12T15:45:01Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-06-12T15:45:01Z"},"message":"DL-205: Remove StatusCode dependency on DLException\n\n- Remove StatusCode from exceptions. Use integer as exception codes.\n- Also re-organize the modules:\n\n- [ ] distributedlog-protocol (for core structures) and distributedlog-core (for core library).\n- [ ] proxy: distributedlog-proxy-protocol (new module for thrift generated protocol), distributedlog-proxy-client (proxy client) and distributedlog-proxy-server (proxy server)\n- [ ] benchmark & tutorials.\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Jia Zhai <None>, Leigh Stewart <lstewart@apache.org>\n\nCloses #131 from sijie/new_layout","tree":{"sha":"ce3759401a622a59e5ad5ea694265b5073b35c79","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/ce3759401a622a59e5ad5ea694265b5073b35c79"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/b90ad5d89717bb3ca161387af4fce4f913c9e0ae","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/b90ad5d89717bb3ca161387af4fce4f913c9e0ae","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/b90ad5d89717bb3ca161387af4fce4f913c9e0ae","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"a1e1bb1fc016a99c383bc9f20220342ac2ee5561","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/a1e1bb1fc016a99c383bc9f20220342ac2ee5561","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/a1e1bb1fc016a99c383bc9f20220342ac2ee5561"}],"stats":{"total":570,"additions":136,"deletions":434},"files":[{"sha":"a4834448fbbd8f8fd3556c414720f177b7980620","filename":"pom.xml","status":"modified","additions":5,"deletions":40,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/pom.xml?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -36,26 +36,6 @@\n         </exclusion>\n       </exclusions>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.thrift</groupId>\n-      <artifactId>libthrift</artifactId>\n-      <version>${libthrift.version}</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.twitter</groupId>\n-      <artifactId>scrooge-core_2.11</artifactId>\n-      <version>${scrooge.version}</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.twitter</groupId>\n-      <artifactId>finagle-core_2.11</artifactId>\n-      <version>${finagle.version}</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.twitter</groupId>\n-      <artifactId>finagle-thrift_2.11</artifactId>\n-      <version>${finagle.version}</version>\n-    </dependency>\n     <dependency>\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n@@ -66,6 +46,11 @@\n       <artifactId>commons-codec</artifactId>\n       <version>${commons-codec.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>com.twitter</groupId>\n+      <artifactId>finagle-core_2.11</artifactId>\n+      <version>${finagle.version}</version>\n+    </dependency>\n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-api</artifactId>\n@@ -85,26 +70,6 @@\n   </dependencies>\n   <build>\n     <plugins>\n-      <plugin>\n-        <groupId>com.twitter</groupId>\n-        <artifactId>scrooge-maven-plugin</artifactId>\n-        <version>${scrooge-maven-plugin.version}</version>\n-        <configuration>\n-          <language>java</language>\n-          <thriftOpts>\n-            <thriftOpt>--finagle</thriftOpt>\n-          </thriftOpts>\n-        </configuration>\n-        <executions>\n-          <execution>\n-            <id>thrift-sources</id>\n-            <phase>generate-sources</phase>\n-            <goals>\n-              <goal>compile</goal>\n-            </goals>\n-          </execution>\n-        </executions>\n-      </plugin>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-jar-plugin</artifactId>"},{"sha":"258ff055be3276225936d8e76fdf2d7600b318cd","filename":"src/main/java/org/apache/distributedlog/exceptions/AlreadyClosedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FAlreadyClosedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FAlreadyClosedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FAlreadyClosedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Thrown when any distributedlog resources have already been closed.\n  *"},{"sha":"29903ac8dba2f1f8faf884699c98ae3fca0225ef","filename":"src/main/java/org/apache/distributedlog/exceptions/AlreadyTruncatedTransactionException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FAlreadyTruncatedTransactionException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FAlreadyTruncatedTransactionException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FAlreadyTruncatedTransactionException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Thrown when the transaction Id specified in the API is in the range that has already been truncated.\n  */"},{"sha":"33f4a047b1e5c65dc0ef5d0bea77cf7f7f6abb65","filename":"src/main/java/org/apache/distributedlog/exceptions/BKTransmitException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FBKTransmitException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FBKTransmitException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FBKTransmitException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Thrown when the send to bookkeeper fails.\n  *"},{"sha":"4210d668ee8b6b7396c4e421274b5107917c4847","filename":"src/main/java/org/apache/distributedlog/exceptions/ChecksumFailedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FChecksumFailedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FChecksumFailedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FChecksumFailedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception thrown when checksum failures occurred.\n  */"},{"sha":"bb7c2db1887fd9593a8e06dc5a745c59de15b3b2","filename":"src/main/java/org/apache/distributedlog/exceptions/DLClientClosedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLClientClosedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLClientClosedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLClientClosedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exceptions thrown when a distributedlog client is closed.\n  */"},{"sha":"928895d7ac671b9eb7244007bc9154204c32380c","filename":"src/main/java/org/apache/distributedlog/exceptions/DLException.java","status":"modified","additions":6,"deletions":29,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,33 +17,31 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.ResponseHeader;\n-import org.apache.distributedlog.thrift.service.StatusCode;\n import java.io.IOException;\n \n /**\n  * The basic exception of all distributedlog exceptions.\n  */\n public class DLException extends IOException {\n     private static final long serialVersionUID = -4485775468586114393L;\n-    protected final StatusCode code;\n+    protected final int code;\n \n-    protected DLException(StatusCode code) {\n+    public DLException(int code) {\n         super();\n         this.code = code;\n     }\n \n-    protected DLException(StatusCode code, String msg) {\n+    public DLException(int code, String msg) {\n         super(msg);\n         this.code = code;\n     }\n \n-    protected DLException(StatusCode code, Throwable t) {\n+    public DLException(int code, Throwable t) {\n         super(t);\n         this.code = code;\n     }\n \n-    protected DLException(StatusCode code, String msg, Throwable t) {\n+    public DLException(int code, String msg, Throwable t) {\n         super(msg, t);\n         this.code = code;\n     }\n@@ -53,29 +51,8 @@ protected DLException(StatusCode code, String msg, Throwable t) {\n      *\n      * @return status code representing the exception.\n      */\n-    public StatusCode getCode() {\n+    public int getCode() {\n         return code;\n     }\n \n-    public static DLException of(ResponseHeader response) {\n-        String errMsg;\n-        switch (response.getCode()) {\n-            case FOUND:\n-                if (response.isSetErrMsg()) {\n-                    errMsg = response.getErrMsg();\n-                } else {\n-                    errMsg = \"Request is redirected to \" + response.getLocation();\n-                }\n-                return new OwnershipAcquireFailedException(errMsg, response.getLocation());\n-            case SUCCESS:\n-                throw new IllegalArgumentException(\"Can't instantiate an exception for success response.\");\n-            default:\n-                if (response.isSetErrMsg()) {\n-                    errMsg = response.getErrMsg();\n-                } else {\n-                    errMsg = response.getCode().name();\n-                }\n-                return new DLException(response.getCode(), errMsg);\n-        }\n-    }\n }"},{"sha":"8dc41166d251b9ab5604259468097bbbcfbc6b3a","filename":"src/main/java/org/apache/distributedlog/exceptions/DLIllegalStateException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLIllegalStateException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLIllegalStateException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLIllegalStateException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Signals that a method has been invoked at an illegal or inappropriate time.\n  */"},{"sha":"7b4d5be71e09fb49f3359b9bbde58b973811115d","filename":"src/main/java/org/apache/distributedlog/exceptions/DLInterruptedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLInterruptedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLInterruptedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FDLInterruptedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * An interrupted exception wrapper indicates dl operations are interrupted.\n  */"},{"sha":"5c1299581f55b8a21b8d8ee56fb0cd651f5f7ad7","filename":"src/main/java/org/apache/distributedlog/exceptions/EndOfLogSegmentException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FEndOfLogSegmentException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FEndOfLogSegmentException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FEndOfLogSegmentException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception thrown when reach end of the log segment.\n  */"},{"sha":"cc2c79f982872075f5fb355524d929b5ac2a3b1d","filename":"src/main/java/org/apache/distributedlog/exceptions/EndOfStreamException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FEndOfStreamException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FEndOfStreamException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FEndOfStreamException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception thrown when a reader reaches end of a sealed log stream.\n  */"},{"sha":"b4717786c23ab85bc1d36788f01671d25c203369","filename":"src/main/java/org/apache/distributedlog/exceptions/FlushException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FFlushException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FFlushException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FFlushException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception indicates that errors occurred on flushing data.\n  */"},{"sha":"ff6338ab987a1c03e089f954c5d26c6e27d0046d","filename":"src/main/java/org/apache/distributedlog/exceptions/InternalServerException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInternalServerException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInternalServerException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInternalServerException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception indicates that there is an internal error at distributedlog service side.\n  */"},{"sha":"b52af61fe31547d565e55cba3a714bb05029e39b","filename":"src/main/java/org/apache/distributedlog/exceptions/InvalidEnvelopedEntryException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInvalidEnvelopedEntryException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInvalidEnvelopedEntryException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInvalidEnvelopedEntryException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception thrown when encounter invalid enveloped entry.\n  */"},{"sha":"ca6f4dba4f18a88827af0dd04e834ee9eb8f8d69","filename":"src/main/java/org/apache/distributedlog/exceptions/InvalidStreamNameException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInvalidStreamNameException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInvalidStreamNameException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FInvalidStreamNameException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when encountered invalid log stream.\n  */"},{"sha":"55bd88f15154b98afb4a8e05fe6fc119c12c4fb9","filename":"src/main/java/org/apache/distributedlog/exceptions/LockingException.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLockingException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLockingException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLockingException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception when a log writer attempts to acquire a lock to write data to the stream.\n  */\n@@ -34,11 +32,11 @@ public LockingException(String lockPath, String message, Throwable cause) {\n         this(StatusCode.LOCKING_EXCEPTION, lockPath, message, cause);\n     }\n \n-    protected LockingException(StatusCode code, String lockPath, String message) {\n+    protected LockingException(int code, String lockPath, String message) {\n         super(code, String.format(\"LockPath - %s: %s\", lockPath, message));\n     }\n \n-    protected LockingException(StatusCode code, String lockPath, String message, Throwable cause) {\n+    protected LockingException(int code, String lockPath, String message, Throwable cause) {\n         super(code, String.format(\"LockPath - %s: %s\", lockPath, message), cause);\n     }\n }"},{"sha":"0326a9ad3cf84fb79ee6b6a17c380868232c2101","filename":"src/main/java/org/apache/distributedlog/exceptions/LogEmptyException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogEmptyException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogEmptyException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogEmptyException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exceptions are thrown when attempt to read a log stream that doesn't have any records.\n  */"},{"sha":"cb2bc6529b5942cca585b09cc8ff450b7b32fd00","filename":"src/main/java/org/apache/distributedlog/exceptions/LogExistsException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogExistsException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogExistsException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogExistsException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception thrown on creating a log stream but the log stream already exists.\n  */"},{"sha":"9ac14ba80a7554de2537cef3d33d51a12fcc3bf7","filename":"src/main/java/org/apache/distributedlog/exceptions/LogNotFoundException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogNotFoundException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogNotFoundException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogNotFoundException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when a reader attempts to read a log stream that doesn't exist.\n  */"},{"sha":"d2ca399b3e85084255ea75e4a908b165550ceb08","filename":"src/main/java/org/apache/distributedlog/exceptions/LogReadException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogReadException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogReadException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogReadException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Thrown when there's a failure to read an edit log op from disk when loading\n  * edits."},{"sha":"dd1d66d4b5da4752e72adbdde7c039cde0887c7e","filename":"src/main/java/org/apache/distributedlog/exceptions/LogRecordTooLongException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogRecordTooLongException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogRecordTooLongException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogRecordTooLongException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when attempting to write a record whose size is too larger.\n  *"},{"sha":"3364940d48c64ab272d5e6c789e840fb33d4586d","filename":"src/main/java/org/apache/distributedlog/exceptions/LogSegmentIsTruncatedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogSegmentIsTruncatedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogSegmentIsTruncatedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogSegmentIsTruncatedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when reading data from a truncated log segment.\n  */"},{"sha":"7fad552dbc6ec4cbf29ed2f8b17d964df5d41ff5","filename":"src/main/java/org/apache/distributedlog/exceptions/LogSegmentNotFoundException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogSegmentNotFoundException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogSegmentNotFoundException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FLogSegmentNotFoundException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception on log segment not found.\n  */"},{"sha":"559972b600891383639fc932c3a282eef26da0c4","filename":"src/main/java/org/apache/distributedlog/exceptions/MetadataException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FMetadataException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FMetadataException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FMetadataException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when encountering metadata errors.\n  */"},{"sha":"75eaa52525157af351ac254c0d074027171258d4","filename":"src/main/java/org/apache/distributedlog/exceptions/NotYetImplementedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FNotYetImplementedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FNotYetImplementedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FNotYetImplementedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when a method is not implemented yet.\n  */"},{"sha":"4247874bc82a42df13984306ec235c85aee4616e","filename":"src/main/java/org/apache/distributedlog/exceptions/OverCapacityException.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FOverCapacityException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FOverCapacityException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FOverCapacityException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when the system is over capacity.\n  *\n@@ -33,7 +31,7 @@ public OverCapacityException(String message) {\n         super(StatusCode.OVER_CAPACITY, message);\n     }\n \n-    public OverCapacityException(StatusCode code, String message) {\n+    public OverCapacityException(int code, String message) {\n         super(code, message);\n     }\n }"},{"sha":"b077f5e6a5017688dc5a38f40fd64fda491436e3","filename":"src/main/java/org/apache/distributedlog/exceptions/OwnershipAcquireFailedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FOwnershipAcquireFailedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FOwnershipAcquireFailedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FOwnershipAcquireFailedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when a log writer attempt to acquire a lock.\n  *"},{"sha":"b179ce63249b932e694fc4aa30711107eaa30db8","filename":"src/main/java/org/apache/distributedlog/exceptions/ReadCancelledException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FReadCancelledException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FReadCancelledException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FReadCancelledException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Signals that a read request has been cancelled.\n  */"},{"sha":"745ae6b869d50c8e41dbb3adb29be9fa62ce4dd5","filename":"src/main/java/org/apache/distributedlog/exceptions/RegionUnavailableException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRegionUnavailableException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRegionUnavailableException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRegionUnavailableException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception indicates that the service is not available in one region.\n  *"},{"sha":"e26f6db1ef173f1c2989e131a5c80d8c23020b6a","filename":"src/main/java/org/apache/distributedlog/exceptions/RequestDeniedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRequestDeniedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRequestDeniedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRequestDeniedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Signals that a request has been denied at the server.\n  */"},{"sha":"1ed506fd5bffefc97aa47e9b8ffd3d1a29377cef","filename":"src/main/java/org/apache/distributedlog/exceptions/RetryableReadException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRetryableReadException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRetryableReadException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FRetryableReadException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Signals that a read request can be retried..\n  */"},{"sha":"5ab7f03c353769f70d8ab3f8a2cb8c61bfe4bbe6","filename":"src/main/java/org/apache/distributedlog/exceptions/ServiceUnavailableException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FServiceUnavailableException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FServiceUnavailableException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FServiceUnavailableException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception indicates that the service is unavailable at the server side.\n  */"},{"sha":"6dbb931b3cbaad25bb9ffc31f7a919a3e48a9401","filename":"src/main/java/org/apache/distributedlog/exceptions/StatusCode.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStatusCode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStatusCode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStatusCode.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -0,0 +1,122 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.distributedlog.exceptions;\n+\n+/**\n+ * Exception Status Code.\n+ */\n+public interface StatusCode {\n+\n+    /* 2xx: action requested by the client was received, understood, accepted and processed successfully. */\n+\n+    /* standard response for successful requests. */\n+    int SUCCESS = 200;\n+\n+    /* 3xx: client must take additional action to complete the request. */\n+\n+    /* client closed. */\n+    int CLIENT_CLOSED = 301;\n+    /* found the stream in a different server, a redirection is required by client. */\n+    int FOUND = 302;\n+\n+    /* 4xx: client seems to have erred. */\n+\n+    /* request is denied for some reason */\n+    int REQUEST_DENIED = 403;\n+    /* request record too large */\n+    int TOO_LARGE_RECORD = 413;\n+\n+    /* 5xx: server failed to fulfill an apparently valid request. */\n+\n+    /* Generic error message, given when no more specific message is suitable. */\n+    int INTERNAL_SERVER_ERROR = 500;\n+    /* Not implemented */\n+    int NOT_IMPLEMENTED = 501;\n+    /* Already Closed Exception */\n+    int ALREADY_CLOSED = 502;\n+    /* Service is currently unavailable (because it is overloaded or down for maintenance). */\n+    int SERVICE_UNAVAILABLE = 503;\n+    /* Locking exception */\n+    int LOCKING_EXCEPTION = 504;\n+    /* ZooKeeper Errors */\n+    int ZOOKEEPER_ERROR = 505;\n+    /* Metadata exception */\n+    int METADATA_EXCEPTION = 506;\n+    /* BK Transmit Error */\n+    int BK_TRANSMIT_ERROR = 507;\n+    /* Flush timeout */\n+    int FLUSH_TIMEOUT = 508;\n+    /* Log empty */\n+    int LOG_EMPTY = 509;\n+    /* Log not found */\n+    int LOG_NOT_FOUND = 510;\n+    /* Truncated Transactions */\n+    int TRUNCATED_TRANSACTION = 511;\n+    /* End of Stream */\n+    int END_OF_STREAM = 512;\n+    /* Transaction Id Out of Order */\n+    int TRANSACTION_OUT_OF_ORDER = 513;\n+    /* Write exception */\n+    int WRITE_EXCEPTION = 514;\n+    /* Stream Unavailable */\n+    int STREAM_UNAVAILABLE = 515;\n+    /* Write cancelled exception */\n+    int WRITE_CANCELLED_EXCEPTION = 516;\n+    /* over-capacity/backpressure */\n+    int OVER_CAPACITY = 517;\n+\n+    /** stream exists but is not ready (recovering etc.).\n+     the difference between NOT_READY and UNAVAILABLE is that UNAVAILABLE\n+     indicates the stream is no longer owned by the proxy and we should\n+     redirect. NOT_READY indicates the stream exist at the proxy but isn't\n+     eady for writes. */\n+    int STREAM_NOT_READY = 518;\n+    /* Region Unavailable */\n+    int REGION_UNAVAILABLE = 519;\n+    /* Invalid Enveloped Entry */\n+    int INVALID_ENVELOPED_ENTRY = 520;\n+    /* Unsupported metadata version */\n+    int UNSUPPORTED_METADATA_VERSION = 521;\n+    /* Log Already Exists */\n+    int LOG_EXISTS = 522;\n+    /* Checksum failed on the request */\n+    int CHECKSUM_FAILED = 523;\n+    /* Overcapacity: too many streams */\n+    int TOO_MANY_STREAMS = 524;\n+    /* Log Segment Not Found */\n+    int LOG_SEGMENT_NOT_FOUND = 525;\n+    /* End of Log Segment */\n+    int END_OF_LOG_SEGMENT = 526;\n+    /* Log Segment Is Truncated */\n+    int LOG_SEGMENT_IS_TRUNCATED = 527;\n+\n+    /* 6xx: unexpected */\n+\n+    int UNEXPECTED = 600;\n+    int INTERRUPTED = 601;\n+    int INVALID_STREAM_NAME = 602;\n+    int ILLEGAL_STATE = 603;\n+\n+    /* 10xx: reader exceptions */\n+\n+    int RETRYABLE_READ = 1000;\n+    int LOG_READ_ERROR = 1001;\n+    /* Read cancelled exception */\n+    int READ_CANCELLED_EXCEPTION = 1002;\n+\n+}"},{"sha":"a58a80fbbd122213313ca23d537a20248767500a","filename":"src/main/java/org/apache/distributedlog/exceptions/StreamNotReadyException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStreamNotReadyException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStreamNotReadyException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStreamNotReadyException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when a log stream is not ready on server side for serving the write requests.\n  */"},{"sha":"ecba75424995c2745a6822e16a0bc4119242491c","filename":"src/main/java/org/apache/distributedlog/exceptions/StreamUnavailableException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStreamUnavailableException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStreamUnavailableException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FStreamUnavailableException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception thrown when a stream is not available for serving traffic.\n  */"},{"sha":"cc948d9e5518d434b7e589496352937959abd928","filename":"src/main/java/org/apache/distributedlog/exceptions/TooManyStreamsException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FTooManyStreamsException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FTooManyStreamsException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FTooManyStreamsException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Signals that a server has been serving too many streams.\n  */"},{"sha":"50c151fabebbf386e38200d68e59cc4cc068dfc4","filename":"src/main/java/org/apache/distributedlog/exceptions/TransactionIdOutOfOrderException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FTransactionIdOutOfOrderException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FTransactionIdOutOfOrderException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FTransactionIdOutOfOrderException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * An exception is thrown when a log writer attempts to write a record with out-of-order transaction id.\n  */"},{"sha":"50c21aa4f40c2ab1159ec62a260ad34dc1237dac","filename":"src/main/java/org/apache/distributedlog/exceptions/UnexpectedException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FUnexpectedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FUnexpectedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FUnexpectedException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * An {@code UnexpectedException} is thrown when encountering unexpected conditions.\n  */"},{"sha":"7eb6ed5be91dc9c98d2a0fda12531b9ee80d02c9","filename":"src/main/java/org/apache/distributedlog/exceptions/UnsupportedMetadataVersionException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FUnsupportedMetadataVersionException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FUnsupportedMetadataVersionException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FUnsupportedMetadataVersionException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Exception is thrown when found unsupported metadata version.\n  */"},{"sha":"8db1d505bab2d1b2d8ad54596cc5ca037da7df5f","filename":"src/main/java/org/apache/distributedlog/exceptions/WriteCancelledException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FWriteCancelledException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FWriteCancelledException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FWriteCancelledException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * Signals when a write request is cancelled.\n  */"},{"sha":"1d9c2a97bfc3035e644fdf40eefd59b2a01688e5","filename":"src/main/java/org/apache/distributedlog/exceptions/WriteException.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FWriteException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FWriteException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fexceptions%2FWriteException.java?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -17,8 +17,6 @@\n  */\n package org.apache.distributedlog.exceptions;\n \n-import org.apache.distributedlog.thrift.service.StatusCode;\n-\n /**\n  * An exception on writing log records.\n  */"},{"sha":"0a37d3a1d289f66235a374582a4a90476ea2d002","filename":"src/main/java/org/apache/distributedlog/util/ProtocolUtils.java","status":"removed","additions":0,"deletions":79,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/a1e1bb1fc016a99c383bc9f20220342ac2ee5561/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FProtocolUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/a1e1bb1fc016a99c383bc9f20220342ac2ee5561/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FProtocolUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FProtocolUtils.java?ref=a1e1bb1fc016a99c383bc9f20220342ac2ee5561","patch":"@@ -1,79 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.distributedlog.util;\n-\n-import static com.google.common.base.Charsets.UTF_8;\n-\n-import org.apache.distributedlog.DLSN;\n-import java.util.zip.CRC32;\n-\n-/**\n- * With CRC embedded in the application, we have to keep track of per api crc. Ideally this\n- * would be done by thrift.\n- */\n-public class ProtocolUtils {\n-\n-    // For request payload checksum\n-    private static final ThreadLocal<CRC32> requestCRC = new ThreadLocal<CRC32>() {\n-        @Override\n-        protected CRC32 initialValue() {\n-            return new CRC32();\n-        }\n-    };\n-\n-    /**\n-     * Generate crc32 for WriteOp.\n-     */\n-    public static Long writeOpCRC32(String stream, byte[] payload) {\n-        CRC32 crc = requestCRC.get();\n-        try {\n-            crc.update(stream.getBytes(UTF_8));\n-            crc.update(payload);\n-            return crc.getValue();\n-        } finally {\n-            crc.reset();\n-        }\n-    }\n-\n-    /**\n-     * Generate crc32 for TruncateOp.\n-     */\n-    public static Long truncateOpCRC32(String stream, DLSN dlsn) {\n-        CRC32 crc = requestCRC.get();\n-        try {\n-            crc.update(stream.getBytes(UTF_8));\n-            crc.update(dlsn.serializeBytes());\n-            return crc.getValue();\n-        } finally {\n-            crc.reset();\n-        }\n-    }\n-\n-    /**\n-     * Generate crc32 for any op which only passes a stream name.\n-     */\n-    public static Long streamOpCRC32(String stream) {\n-        CRC32 crc = requestCRC.get();\n-        try {\n-            crc.update(stream.getBytes(UTF_8));\n-            return crc.getValue();\n-        } finally {\n-            crc.reset();\n-        }\n-    }\n-}"},{"sha":"5e1cd0e681e17a173b77cd6b6a65289442e33a40","filename":"src/main/resources/findbugsExclude.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fresources%2FfindbugsExclude.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b90ad5d89717bb3ca161387af4fce4f913c9e0ae/src%2Fmain%2Fresources%2FfindbugsExclude.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fresources%2FfindbugsExclude.xml?ref=b90ad5d89717bb3ca161387af4fce4f913c9e0ae","patch":"@@ -16,10 +16,6 @@\n    limitations under the License.\n //-->\n <FindBugsFilter>\n-  <Match>\n-    <!-- generated code, we can't be held responsible for findbugs in it //-->\n-    <Class name=\"~org\\.apache\\.distributedlog\\.thrift.*\" />\n-  </Match>\n   <Match>\n     <!-- it is safe to store external bytes reference here. //-->\n     <Class name=\"org.apache.distributedlog.LogRecord\" />"},{"sha":"45e14496029991460218093cdfecf6733b1ee5af","filename":"src/main/thrift/service.thrift","status":"removed","additions":0,"deletions":203,"changes":203,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/a1e1bb1fc016a99c383bc9f20220342ac2ee5561/src%2Fmain%2Fthrift%2Fservice.thrift","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/a1e1bb1fc016a99c383bc9f20220342ac2ee5561/src%2Fmain%2Fthrift%2Fservice.thrift","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fthrift%2Fservice.thrift?ref=a1e1bb1fc016a99c383bc9f20220342ac2ee5561","patch":"@@ -1,203 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-namespace java org.apache.distributedlog.thrift.service\n-\n-/* Response stats codes */\n-enum StatusCode {\n-    /* 2xx: action requested by the client was received, understood, accepted and processed successfully. */\n-\n-    /* standard response for successful requests. */\n-    SUCCESS = 200,\n-\n-    /* 3xx: client must take additional action to complete the request. */\n-\n-    /* client closed. */\n-    CLIENT_CLOSED = 301,\n-    /* found the stream in a different server, a redirection is required by client. */\n-    FOUND = 302,\n-\n-    /* 4xx: client seems to have erred. */\n-\n-    /* request is denied for some reason */\n-    REQUEST_DENIED = 403,\n-    /* request record too large */\n-    TOO_LARGE_RECORD = 413,\n-\n-    /* 5xx: server failed to fulfill an apparently valid request. */\n-\n-    /* Generic error message, given when no more specific message is suitable. */\n-    INTERNAL_SERVER_ERROR = 500,\n-    /* Not implemented */\n-    NOT_IMPLEMENTED = 501,\n-    /* Already Closed Exception */\n-    ALREADY_CLOSED = 502,\n-    /* Service is currently unavailable (because it is overloaded or down for maintenance). */\n-    SERVICE_UNAVAILABLE = 503,\n-    /* Locking exception */\n-    LOCKING_EXCEPTION = 504,\n-    /* ZooKeeper Errors */\n-    ZOOKEEPER_ERROR = 505,\n-    /* Metadata exception */\n-    METADATA_EXCEPTION = 506,\n-    /* BK Transmit Error */\n-    BK_TRANSMIT_ERROR = 507,\n-    /* Flush timeout */\n-    FLUSH_TIMEOUT = 508,\n-    /* Log empty */\n-    LOG_EMPTY = 509,\n-    /* Log not found */\n-    LOG_NOT_FOUND = 510,\n-    /* Truncated Transactions */\n-    TRUNCATED_TRANSACTION = 511,\n-    /* End of Stream */\n-    END_OF_STREAM = 512,\n-    /* Transaction Id Out of Order */\n-    TRANSACTION_OUT_OF_ORDER = 513,\n-    /* Write exception */\n-    WRITE_EXCEPTION = 514,\n-    /* Stream Unavailable */\n-    STREAM_UNAVAILABLE = 515,\n-    /* Write cancelled exception */\n-    WRITE_CANCELLED_EXCEPTION = 516,\n-    /* over-capacity/backpressure */\n-    OVER_CAPACITY = 517,\n-    /** stream exists but is not ready (recovering etc.).\n-        the difference between NOT_READY and UNAVAILABLE is that UNAVAILABLE\n-        indicates the stream is no longer owned by the proxy and we should\n-        redirect. NOT_READY indicates the stream exist at the proxy but isn't\n-        eady for writes. */\n-    STREAM_NOT_READY = 518,\n-    /* Region Unavailable */\n-    REGION_UNAVAILABLE = 519,\n-    /* Invalid Enveloped Entry */\n-    INVALID_ENVELOPED_ENTRY = 520,\n-    /* Unsupported metadata version */\n-    UNSUPPORTED_METADATA_VERSION = 521,\n-    /* Log Already Exists */\n-    LOG_EXISTS = 522,\n-    /* Checksum failed on the request */\n-    CHECKSUM_FAILED = 523,\n-    /* Overcapacity: too many streams */\n-    TOO_MANY_STREAMS = 524,\n-    /* Log Segment Not Found */\n-    LOG_SEGMENT_NOT_FOUND = 525,\n-    /* End of Log Segment */\n-    END_OF_LOG_SEGMENT = 526,\n-    /* Log Segment Is Truncated */\n-    LOG_SEGMENT_IS_TRUNCATED = 527,\n-\n-    /* 6xx: unexpected */\n-\n-    UNEXPECTED = 600,\n-    INTERRUPTED = 601,\n-    INVALID_STREAM_NAME = 602,\n-    ILLEGAL_STATE = 603,\n-\n-    /* 10xx: reader exceptions */\n-\n-    RETRYABLE_READ = 1000,\n-    LOG_READ_ERROR = 1001,\n-    /* Read cancelled exception */\n-    READ_CANCELLED_EXCEPTION = 1002,\n-}\n-\n-/* Response Header */\n-struct ResponseHeader {\n-    1: required StatusCode code;\n-    2: optional string errMsg;\n-    3: optional string location;\n-}\n-\n-/* Write Response */\n-struct WriteResponse {\n-    1: required ResponseHeader header;\n-    2: optional string dlsn;\n-}\n-\n-/* Bulk write response */\n-struct BulkWriteResponse {\n-    1: required ResponseHeader header;\n-    2: optional list<WriteResponse> writeResponses;\n-}\n-\n-/* Write Context */\n-struct WriteContext {\n-    1: optional set<string> triedHosts;\n-    2: optional i64 crc32;\n-    3: optional bool isRecordSet;\n-}\n-\n-/* HeartBeat Options */\n-struct HeartbeatOptions {\n-    1: optional bool sendHeartBeatToReader;\n-}\n-\n-/* Server Status */\n-enum ServerStatus {\n-    /* service is writing and accepting new streams */\n-    WRITE_AND_ACCEPT    = 100,\n-    /* service is only writing to old streams, not accepting new streams */\n-    WRITE_ONLY          = 200,\n-    /* service is shutting down, will not write */\n-    DOWN                = 300,\n-}\n-\n-/* Server Info */\n-struct ServerInfo {\n-    1: optional map<string, string> ownerships;\n-    2: optional ServerStatus serverStatus;\n-}\n-\n-/* Client Info */\n-struct ClientInfo {\n-    1: optional string streamNameRegex;\n-    2: optional bool getOwnerships;\n-}\n-\n-service DistributedLogService {\n-\n-    /* Deprecated */\n-    ServerInfo handshake();\n-\n-    ServerInfo handshakeWithClientInfo(ClientInfo clientInfo);\n-\n-    /* Deprecated */\n-    WriteResponse heartbeat(string stream, WriteContext ctx);\n-\n-    WriteResponse heartbeatWithOptions(string stream, WriteContext ctx, HeartbeatOptions options);\n-\n-    /* Deprecated */\n-    WriteResponse write(string stream, binary data);\n-\n-    WriteResponse writeWithContext(string stream, binary data, WriteContext ctx);\n-\n-    BulkWriteResponse writeBulkWithContext(string stream, list<binary> data, WriteContext ctx);\n-\n-    WriteResponse truncate(string stream, string dlsn, WriteContext ctx);\n-\n-    WriteResponse release(string stream, WriteContext ctx);\n-\n-    WriteResponse create(string stream, WriteContext ctx);\n-\n-    WriteResponse delete(string stream, WriteContext ctx);\n-\n-    WriteResponse getOwner(string stream, WriteContext ctx);\n-\n-    /* Admin Methods */\n-    void setAcceptNewStream(bool enabled);\n-}"}]}