{"sha":"6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjZhODBlYmMzMDI0NGRhNTZiYzBlM2ZjNjRkMDI2NTBkZGZkNmQ2Y2I=","commit":{"author":{"name":"adamtracymartin","email":"atmartin@yahoo.com","date":"2017-04-13T04:38:32Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-04-13T04:38:32Z"},"message":"DL-174: added getParent method to Utils to replace usage of File.getParent which changes / to \\ on Windows\n\nâ€¦ich changes / to \\ in Windows.\n\nAuthor: adamtracymartin <atmartin@yahoo.com>\n\nReviewers: Sijie Guo <sijie@apache.org>\n\nCloses #104 from adamtracymartin/DL-174","tree":{"sha":"bc4c0e0443ecd6b7640ab3222d00384d4ad0412f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/bc4c0e0443ecd6b7640ab3222d00384d4ad0412f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb/comments","author":{"login":"adamtracymartin","id":1569994,"node_id":"MDQ6VXNlcjE1Njk5OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1569994?v=4","gravatar_id":"","url":"https://api.github.com/users/adamtracymartin","html_url":"https://github.com/adamtracymartin","followers_url":"https://api.github.com/users/adamtracymartin/followers","following_url":"https://api.github.com/users/adamtracymartin/following{/other_user}","gists_url":"https://api.github.com/users/adamtracymartin/gists{/gist_id}","starred_url":"https://api.github.com/users/adamtracymartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adamtracymartin/subscriptions","organizations_url":"https://api.github.com/users/adamtracymartin/orgs","repos_url":"https://api.github.com/users/adamtracymartin/repos","events_url":"https://api.github.com/users/adamtracymartin/events{/privacy}","received_events_url":"https://api.github.com/users/adamtracymartin/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"ba3505e60f83f8f99c480414a56dd6dec25a832b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/ba3505e60f83f8f99c480414a56dd6dec25a832b","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/ba3505e60f83f8f99c480414a56dd6dec25a832b"}],"stats":{"total":63,"additions":61,"deletions":2},"files":[{"sha":"30f9dd4732f5d5094241faf5e0849595a904a2b4","filename":"src/main/java/org/apache/distributedlog/impl/metadata/ZKLogStreamMetadataStore.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fimpl%2Fmetadata%2FZKLogStreamMetadataStore.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fimpl%2Fmetadata%2FZKLogStreamMetadataStore.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Fimpl%2Fmetadata%2FZKLogStreamMetadataStore.java?ref=6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb","patch":"@@ -335,7 +335,7 @@ static Future<List<Versioned<byte[]>>> checkLogMetadataPaths(ZooKeeper zk,\n         // Note re. persistent lock state initialization: the read lock persistent state (path) is\n         // initialized here but only used in the read handler. The reason is its more convenient and\n         // less error prone to manage all stream structure in one place.\n-        final String logRootParentPath = new File(logRootPath).getParent();\n+        final String logRootParentPath = Utils.getParent(logRootPath);\n         final String logSegmentsPath = logRootPath + LOGSEGMENTS_PATH;\n         final String maxTxIdPath = logRootPath + MAX_TXID_PATH;\n         final String lockPath = logRootPath + LOCK_PATH;\n@@ -383,7 +383,7 @@ static void createMissingMetadata(final ZooKeeper zk,\n         if (pathExists(metadatas.get(MetadataIndex.LOG_ROOT_PARENT))) {\n             pathsToCreate.add(null);\n         } else {\n-            String logRootParentPath = new File(logRootPath).getParent();\n+            String logRootParentPath = Utils.getParent(logRootPath);\n             pathsToCreate.add(DistributedLogConstants.EMPTY_BYTES);\n             zkOps.add(Op.create(logRootParentPath, DistributedLogConstants.EMPTY_BYTES, acl, createMode));\n         }"},{"sha":"7a09eebd60b69090045254ae64a817b6edcb5016","filename":"src/main/java/org/apache/distributedlog/util/Utils.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FUtils.java?ref=6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb","patch":"@@ -604,4 +604,35 @@ public static Future<Void> closeSequence(ExecutorService executorService,\n                 executorService).map(VoidFunctions.LIST_TO_VOID_FUNC);\n     }\n \n+    /**\n+     * Gets the parent of a path.\n+     *\n+     * @param path\n+     *            path to get the parent of\n+     * @return parent of the path or null if no parent exists.\n+     */\n+    public static String getParent(final String path) {\n+        if (path == null) {\n+            return null;\n+        }\n+        if (path.length() < 2) {\n+            return null;\n+        }\n+        int firstIndex = path.indexOf(\"/\");\n+        if (firstIndex == -1) {\n+            return null;\n+        }\n+        int lastIndex = path.lastIndexOf(\"/\");\n+        if (lastIndex == path.length() - 1) {\n+            lastIndex = path.substring(0, path.length() - 1).lastIndexOf(\"/\");\n+        }\n+        if (lastIndex == -1) {\n+            return null;\n+        }\n+        if (lastIndex == 0) {\n+            return \"/\";\n+        }\n+        return path.substring(0, lastIndex);\n+    }\n+\n }"},{"sha":"a9db6e0408fd2ffc8686baa335dd0d646accbb71","filename":"src/test/java/org/apache/distributedlog/util/TestUtils.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb/src%2Ftest%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FTestUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb/src%2Ftest%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FTestUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Ftest%2Fjava%2Forg%2Fapache%2Fdistributedlog%2Futil%2FTestUtils.java?ref=6a80ebc30244da56bc0e3fc64d02650ddfd6d6cb","patch":"@@ -122,4 +122,32 @@ public void testZkGetData() throws Exception {\n         assertEquals(\"Version should be zero\",\n                 0, ((ZkVersion) data.getVersion()).getZnodeVersion());\n     }\n+\n+    @Test(timeout = 60000)\n+    public void testGetParent() throws Exception {\n+        String path1 = null;\n+        assertNull(\"parent of a null path is null\", Utils.getParent(path1));\n+\n+        String path2 = \"\";\n+        assertNull(\"parent of an empty string is null\", Utils.getParent(path2));\n+\n+        String path3 = \"abcdef\";\n+        assertNull(\"parent of a string with no / is null\", Utils.getParent(path3));\n+\n+        String path4 = \"/test/test2\";\n+        assertEquals(\"parent of a /test/test2 is /test\", \"/test\", Utils.getParent(path4));\n+\n+        String path5 = \"/test/test2/\";\n+        assertEquals(\"parent of a \" + path5 + \" is /test\", \"/test\", Utils.getParent(path5));\n+\n+        String path6 = \"/test\";\n+        assertEquals(\"parent of \" + path6 + \" is /\", \"/\", Utils.getParent(path6));\n+\n+        String path7 = \"//\";\n+        assertEquals(\"parent of \" + path7 + \" is /\", \"/\", Utils.getParent(path7));\n+\n+        String path8 = \"/\";\n+        assertNull(\"parent of \" + path8 + \" is null\", Utils.getParent(path8));\n+    }\n+\n }"}]}