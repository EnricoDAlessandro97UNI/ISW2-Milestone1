{"sha":"e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmU3MzVjMDMwNWM4YjM3MzdlNzhiYTVhMWJhMTViNWQ4MGE1ZmZiNDc=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-07-04T03:59:41Z"},"committer":{"name":"jiazhai","email":"zhaijia@live.com","date":"2017-07-04T03:59:41Z"},"message":"Issue 225: Remove Parameterized from CompactionTest\n\nDescriptions of the changes in this PR:\n\n- Split the CompactionTest into two, one is by bytes, while the other one is by entries.\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Enrico Olivelli <None>, Jia Zhai <None>\n\nThis closes #226 from sijie/compaction_tests","tree":{"sha":"6bb6f57a0d6b767773439edfae33e2f166730042","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/6bb6f57a0d6b767773439edfae33e2f166730042"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":null,"parents":[{"sha":"450629d4314cf467fbf78da2d2a43840d0ccf783","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/450629d4314cf467fbf78da2d2a43840d0ccf783","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/450629d4314cf467fbf78da2d2a43840d0ccf783"}],"stats":{"total":87,"additions":64,"deletions":23},"files":[{"sha":"18937614d0fc5a2a14866151e2ef8da1cc0c37e9","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionByBytesTest.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionByBytesTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionByBytesTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionByBytesTest.java?ref=e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47","patch":"@@ -0,0 +1,27 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+package org.apache.bookkeeper.bookie;\n+\n+public class CompactionByBytesTest extends CompactionTest {\n+    public CompactionByBytesTest() {\n+        super(true);\n+    }\n+}"},{"sha":"3ffb21080cc34d9c9544005ca1dd926242cae5f5","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionByEntriesTest.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionByEntriesTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionByEntriesTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionByEntriesTest.java?ref=e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47","patch":"@@ -0,0 +1,27 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+package org.apache.bookkeeper.bookie;\n+\n+public class CompactionByEntriesTest extends CompactionTest {\n+    public CompactionByEntriesTest() {\n+        super(false);\n+    }\n+}"},{"sha":"35707750f86764487123d1c216eda322722799ea","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","status":"modified","additions":10,"deletions":23,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCompactionTest.java?ref=e735c0305c8b3737e78ba5a1ba15b5d80a5ffb47","patch":"@@ -32,14 +32,11 @@\n import java.util.Collections;\n import java.util.Enumeration;\n import java.util.List;\n-import java.util.Arrays;\n-import java.util.Collection;\n \n import org.apache.bookkeeper.client.BookKeeper.DigestType;\n import org.apache.bookkeeper.bookie.EntryLogger.EntryLogScanner;\n import org.apache.bookkeeper.bookie.GarbageCollectorThread.CompactionScannerFactory;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.NoWritableLedgerDirException;\n-import org.apache.bookkeeper.client.BKException;\n import org.apache.bookkeeper.client.LedgerEntry;\n import org.apache.bookkeeper.client.LedgerHandle;\n import org.apache.bookkeeper.client.LedgerMetadata;\n@@ -61,39 +58,29 @@\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.junit.runners.Parameterized;\n-import org.junit.runners.Parameterized.Parameters;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import static org.junit.Assert.*;\n /**\n  * This class tests the entry log compaction functionality.\n  */\n-@RunWith(Parameterized.class)\n-public class CompactionTest extends BookKeeperClusterTestCase {\n-    @Parameters\n-    public static Collection<Object[]> data() {\n-        return Arrays.asList(new Object[][] {{true}, {false}});\n-    }\n-\n-    private boolean isThrottleByBytes;\n+public abstract class CompactionTest extends BookKeeperClusterTestCase {\n \n     private final static Logger LOG = LoggerFactory.getLogger(CompactionTest.class);\n-    DigestType digestType;\n \n     static int ENTRY_SIZE = 1024;\n     static int NUM_BOOKIES = 1;\n \n-    int numEntries;\n-    int gcWaitTime;\n-    double minorCompactionThreshold;\n-    double majorCompactionThreshold;\n-    long minorCompactionInterval;\n-    long majorCompactionInterval;\n-\n-    String msg;\n+    private final boolean isThrottleByBytes;\n+    private final DigestType digestType;\n+    private final int numEntries;\n+    private final int gcWaitTime;\n+    private final double minorCompactionThreshold;\n+    private final double majorCompactionThreshold;\n+    private final long minorCompactionInterval;\n+    private final long majorCompactionInterval;\n+    private final String msg;\n \n     public CompactionTest(boolean isByBytes) {\n         super(NUM_BOOKIES);"}]}