{"sha":"35587d3d70cf60b84f425db13718b4537336fd80","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjM1NTg3ZDNkNzBjZjYwYjg0ZjQyNWRiMTM3MThiNDUzNzMzNmZkODA=","commit":{"author":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-10-27T17:18:52Z"},"committer":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-12-28T00:49:28Z"},"message":"DL-109: Add a tool to find the stream containing the given ledger","tree":{"sha":"2af0faee4cf4362e45676147f1bf85775dd2f5d0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/2af0faee4cf4362e45676147f1bf85775dd2f5d0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/35587d3d70cf60b84f425db13718b4537336fd80","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/35587d3d70cf60b84f425db13718b4537336fd80","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/35587d3d70cf60b84f425db13718b4537336fd80","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/35587d3d70cf60b84f425db13718b4537336fd80/comments","author":null,"committer":null,"parents":[{"sha":"0d424a17571ab19039f8b7c7a5766980b6373090","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/0d424a17571ab19039f8b7c7a5766980b6373090","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/0d424a17571ab19039f8b7c7a5766980b6373090"}],"stats":{"total":41,"additions":41,"deletions":0},"files":[{"sha":"e710337d964f8a9afe766cdc1ebf8330c39fa2f3","filename":"src/main/java/com/twitter/distributedlog/tools/DistributedLogTool.java","status":"modified","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/35587d3d70cf60b84f425db13718b4537336fd80/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Ftools%2FDistributedLogTool.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/35587d3d70cf60b84f425db13718b4537336fd80/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Ftools%2FDistributedLogTool.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Ftools%2FDistributedLogTool.java?ref=35587d3d70cf60b84f425db13718b4537336fd80","patch":"@@ -257,6 +257,10 @@ protected synchronized com.twitter.distributedlog.DistributedLogManagerFactory g\n             return this.factory;\n         }\n \n+        protected DistributedLogNamespace getNamespace() throws IOException {\n+            return getFactory().getNamespace();\n+        }\n+\n         protected LogSegmentMetadataStore getLogSegmentMetadataStore() throws IOException {\n             DistributedLogNamespace namespace = getFactory().getNamespace();\n             assert(namespace instanceof BKDistributedLogNamespace);\n@@ -2048,6 +2052,42 @@ protected String getUsage() {\n         }\n     }\n \n+    protected static class FindLedgerCommand extends PerLedgerCommand {\n+\n+        FindLedgerCommand() {\n+            super(\"findledger\", \"find the stream for a given ledger\");\n+        }\n+\n+        @Override\n+        protected int runCmd() throws Exception {\n+            Iterator<String> logs = getNamespace().getLogs();\n+            while (logs.hasNext()) {\n+                String logName = logs.next();\n+                if (processLog(logName)) {\n+                    System.out.println(\"Found ledger \" + getLedgerID() + \" at log stream '\" + logName + \"'\");\n+                }\n+            }\n+            return 0;\n+        }\n+\n+        boolean processLog(String logName) throws Exception {\n+            DistributedLogManager dlm = getNamespace().openLog(logName);\n+            try {\n+                List<LogSegmentMetadata> segments = dlm.getLogSegments();\n+                for (LogSegmentMetadata segment : segments) {\n+                    if (getLedgerID() == segment.getLedgerId()) {\n+                        System.out.println(\"Found ledger \" + getLedgerID() + \" at log segment \"\n+                                + segment + \" for stream '\" + logName + \"'\");\n+                        return true;\n+                    }\n+                }\n+                return false;\n+            } finally {\n+                dlm.close();\n+            }\n+        }\n+    }\n+\n     protected static class ReadLastConfirmedCommand extends PerLedgerCommand {\n \n         ReadLastConfirmedCommand() {\n@@ -2643,6 +2683,7 @@ public DistributedLogTool() {\n         addCommand(new DeleteAllocatorPoolCommand());\n         addCommand(new DeleteLedgersCommand());\n         addCommand(new DumpCommand());\n+        addCommand(new FindLedgerCommand());\n         addCommand(new InspectCommand());\n         addCommand(new InspectStreamCommand());\n         addCommand(new ListCommand());"}]}