{"sha":"f581e030c79abbde81bf165603fccdb5e6a1d38a","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmY1ODFlMDMwYzc5YWJiZGU4MWJmMTY1NjAzZmNjZGI1ZTZhMWQzOGE=","commit":{"author":{"name":"Jia Zhai","email":"zhaijia03@gmail.com","date":"2017-08-01T06:14:30Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-08-01T06:14:30Z"},"message":"ISSUE #314: Enable checkstyle on bookkeeper-server\n\nDescriptions of the changes in this PR:\n\n- enable checkstyle plugin in bookkeeper-server with a suppression configuration file\n- enable sort order rule (it was disabled when the rule was imported)\n\nAuthor: Jia Zhai <zhaijia03@gmail.com>\nAuthor: zhaijack <zhaijia03@gmail.com>\n\nReviewers: Sijie Guo <sijie@apache.org>\n\nThis closes #315 from zhaijack/enable_checkstyle, closes #314","tree":{"sha":"5519d1f7e4d589d500567c2028f5fae37d5ac44c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/5519d1f7e4d589d500567c2028f5fae37d5ac44c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/f581e030c79abbde81bf165603fccdb5e6a1d38a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/f581e030c79abbde81bf165603fccdb5e6a1d38a","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/f581e030c79abbde81bf165603fccdb5e6a1d38a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/f581e030c79abbde81bf165603fccdb5e6a1d38a/comments","author":{"login":"zhaijack","id":26834121,"node_id":"MDQ6VXNlcjI2ODM0MTIx","avatar_url":"https://avatars.githubusercontent.com/u/26834121?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaijack","html_url":"https://github.com/zhaijack","followers_url":"https://api.github.com/users/zhaijack/followers","following_url":"https://api.github.com/users/zhaijack/following{/other_user}","gists_url":"https://api.github.com/users/zhaijack/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaijack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaijack/subscriptions","organizations_url":"https://api.github.com/users/zhaijack/orgs","repos_url":"https://api.github.com/users/zhaijack/repos","events_url":"https://api.github.com/users/zhaijack/events{/privacy}","received_events_url":"https://api.github.com/users/zhaijack/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"50f67361d5deea529d0af80a61e3312a8dd31e7e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/50f67361d5deea529d0af80a61e3312a8dd31e7e","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/50f67361d5deea529d0af80a61e3312a8dd31e7e"}],"stats":{"total":530,"additions":255,"deletions":275},"files":[{"sha":"9c52788eb8571e0fcaa2c353799c0546cfa5c1be","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchBookie.java","status":"modified","additions":12,"deletions":15,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchBookie.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchBookie.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchBookie.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -19,35 +19,32 @@\n  */\n package org.apache.bookkeeper.benchmark;\n \n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n+import io.netty.channel.EventLoopGroup;\n+import io.netty.channel.epoll.EpollEventLoopGroup;\n+import io.netty.channel.nio.NioEventLoopGroup;\n import java.io.IOException;\n-\n+import org.apache.bookkeeper.client.BKException;\n+import org.apache.bookkeeper.client.BookKeeper;\n+import org.apache.bookkeeper.client.LedgerHandle;\n+import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.bookkeeper.net.BookieSocketAddress;\n import org.apache.bookkeeper.proto.BookieClient;\n import org.apache.bookkeeper.proto.BookieProtocol;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.WriteCallback;\n import org.apache.bookkeeper.util.OrderedSafeExecutor;\n-import org.apache.bookkeeper.client.BookKeeper;\n-import org.apache.bookkeeper.client.BKException;\n-import org.apache.bookkeeper.client.LedgerHandle;\n-import org.apache.bookkeeper.conf.ClientConfiguration;\n-import org.apache.commons.cli.HelpFormatter;\n-import org.apache.commons.cli.Options;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.CommandLineParser;\n+import org.apache.commons.cli.HelpFormatter;\n+import org.apache.commons.cli.Options;\n+import org.apache.commons.cli.ParseException;\n import org.apache.commons.cli.PosixParser;\n import org.apache.commons.lang.SystemUtils;\n-import org.apache.commons.cli.ParseException;\n import org.apache.zookeeper.KeeperException;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import io.netty.buffer.ByteBuf;\n-import io.netty.buffer.Unpooled;\n-import io.netty.channel.EventLoopGroup;\n-import io.netty.channel.epoll.EpollEventLoopGroup;\n-import io.netty.channel.nio.NioEventLoopGroup;\n-\n /**\n  * A utility class used for benchmarking the performance of bookies.\n  */"},{"sha":"a3b8f6f500bccd1e38a1bf70e436b21dfd836bdd","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchReadThroughputLatency.java","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchReadThroughputLatency.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchReadThroughputLatency.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchReadThroughputLatency.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -19,34 +19,33 @@\n  */\n package org.apache.bookkeeper.benchmark;\n \n-import org.apache.bookkeeper.conf.ClientConfiguration;\n+import static com.google.common.base.Charsets.UTF_8;\n+\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.Enumeration;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n import org.apache.bookkeeper.client.BookKeeper;\n-import org.apache.bookkeeper.client.LedgerHandle;\n import org.apache.bookkeeper.client.LedgerEntry;\n-import org.apache.commons.cli.HelpFormatter;\n-import org.apache.commons.cli.Options;\n+import org.apache.bookkeeper.client.LedgerHandle;\n+import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.CommandLineParser;\n+import org.apache.commons.cli.HelpFormatter;\n+import org.apache.commons.cli.Options;\n import org.apache.commons.cli.PosixParser;\n-import org.apache.zookeeper.ZooKeeper;\n-import org.apache.zookeeper.Watcher;\n import org.apache.zookeeper.WatchedEvent;\n+import org.apache.zookeeper.Watcher;\n+import org.apache.zookeeper.ZooKeeper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.util.Enumeration;\n-import java.util.Comparator;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.ArrayList;\n-import java.util.Set;\n-import java.util.regex.Pattern;\n-import java.util.regex.Matcher;\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.atomic.AtomicInteger;\n-\n-import static com.google.common.base.Charsets.UTF_8;\n-\n /**\n  * A benchmark that benchmarks the read throughput and latency.\n  */"},{"sha":"483b002b960492677ce512ec6a6e2dea5682d306","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchThroughputLatency.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchThroughputLatency.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchThroughputLatency.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FBenchThroughputLatency.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -19,23 +19,24 @@\n  */\n package org.apache.bookkeeper.benchmark;\n \n+import static com.google.common.base.Charsets.UTF_8;\n+\n import java.io.BufferedOutputStream;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n import java.util.Arrays;\n import java.util.Random;\n+import java.util.Timer;\n+import java.util.TimerTask;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.Semaphore;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicLong;\n-import java.util.Timer;\n-import java.util.TimerTask;\n-\n+import org.apache.bookkeeper.client.AsyncCallback.AddCallback;\n import org.apache.bookkeeper.client.BKException;\n import org.apache.bookkeeper.client.BookKeeper;\n import org.apache.bookkeeper.client.LedgerHandle;\n-import org.apache.bookkeeper.client.AsyncCallback.AddCallback;\n import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.CommandLineParser;\n@@ -47,15 +48,13 @@\n import org.apache.zookeeper.KeeperException;\n import org.apache.zookeeper.WatchedEvent;\n import org.apache.zookeeper.Watcher;\n-import org.apache.zookeeper.ZooDefs;\n-import org.apache.zookeeper.ZooKeeper;\n import org.apache.zookeeper.Watcher.Event.EventType;\n import org.apache.zookeeper.Watcher.Event.KeeperState;\n+import org.apache.zookeeper.ZooDefs;\n+import org.apache.zookeeper.ZooKeeper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static com.google.common.base.Charsets.UTF_8;\n-\n /**\n  * A benchmark that benchmarks write throughput and latency.\n  */"},{"sha":"f3903f356d9281fe34f4216f9725cea560569fab","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FMySqlClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FMySqlClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FMySqlClient.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -1,5 +1,3 @@\n-package org.apache.bookkeeper.benchmark;\n-\n /**\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n@@ -17,23 +15,22 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+package org.apache.bookkeeper.benchmark;\n+\n+import static com.google.common.base.Charsets.UTF_8;\n \n import java.io.FileOutputStream;\n import java.sql.Connection;\n import java.sql.DriverManager;\n import java.sql.SQLException;\n import java.sql.Statement;\n import java.util.HashMap;\n-\n import org.apache.bookkeeper.client.BookKeeper;\n import org.apache.bookkeeper.client.LedgerHandle;\n+import org.apache.zookeeper.KeeperException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static com.google.common.base.Charsets.UTF_8;\n-\n-import org.apache.zookeeper.KeeperException;\n-\n /**\n  * A mysql client performing writes and reads that used for benchmark comparison with BookKeeper.\n  */"},{"sha":"3c11c520afeaea2bd290a4b45dca093a97543319","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/TestClient.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FTestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FTestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-benchmark%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbenchmark%2FTestClient.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -20,6 +20,8 @@\n  */\n package org.apache.bookkeeper.benchmark;\n \n+import static com.google.common.base.Charsets.UTF_8;\n+\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.util.ArrayList;\n@@ -34,12 +36,11 @@\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicLong;\n-\n+import org.apache.bookkeeper.client.AsyncCallback.AddCallback;\n import org.apache.bookkeeper.client.BKException;\n import org.apache.bookkeeper.client.BookKeeper;\n-import org.apache.bookkeeper.client.LedgerHandle;\n-import org.apache.bookkeeper.client.AsyncCallback.AddCallback;\n import org.apache.bookkeeper.client.BookKeeper.DigestType;\n+import org.apache.bookkeeper.client.LedgerHandle;\n import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.CommandLineParser;\n@@ -55,12 +56,9 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static com.google.common.base.Charsets.UTF_8;\n-\n /**\n  * This is a simple test program to compare the performance of writing to\n  * BookKeeper and to the local file system.\n- *\n  */\n public class TestClient {\n     private static final Logger LOG = LoggerFactory.getLogger(TestClient.class);"},{"sha":"585ecd527b7e1bbbf1d41d95a9413890933c08a4","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/auth/AuthProviderFactoryFactory.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FAuthProviderFactoryFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FAuthProviderFactoryFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FAuthProviderFactoryFactory.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,13 +21,13 @@\n package org.apache.bookkeeper.auth;\n \n import java.io.IOException;\n-\n import org.apache.bookkeeper.client.BKException;\n import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.util.ReflectionUtils;\n-import org.apache.bookkeeper.proto.ClientConnectionPeer;\n import org.apache.bookkeeper.proto.BookieConnectionPeer;\n+import org.apache.bookkeeper.proto.ClientConnectionPeer;\n+import org.apache.bookkeeper.util.ReflectionUtils;\n+\n \n /**\n  * A factory to manage the authentication provider factories."},{"sha":"c360c49e6c89c6856959e4ab66a19bc650d19505","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/auth/BookieAuthProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FBookieAuthProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FBookieAuthProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FBookieAuthProvider.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,10 +21,10 @@\n package org.apache.bookkeeper.auth;\n \n import java.io.IOException;\n-\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.proto.BookieConnectionPeer;\n \n+\n /**\n  * Bookie authentication provider interface.\n  *"},{"sha":"8939afc64b3e303c9fe18eb5a6cedbec6c2d5fbc","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/auth/ClientAuthProvider.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FClientAuthProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FClientAuthProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fauth%2FClientAuthProvider.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,7 +21,6 @@\n package org.apache.bookkeeper.auth;\n \n import java.io.IOException;\n-\n import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.bookkeeper.proto.ClientConnectionPeer;\n "},{"sha":"c589205114d918e7be9f3db65f7e29639ff2ef87","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookKeeperServerStats.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookKeeperServerStats.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookKeeperServerStats.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookKeeperServerStats.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -89,9 +89,9 @@ public interface BookKeeperServerStats {\n     // Ledger Storage Stats\n     String STORAGE_GET_OFFSET = \"STORAGE_GET_OFFSET\";\n     String STORAGE_GET_ENTRY = \"STORAGE_GET_ENTRY\";\n-    /** Ledger Cache Stats **/\n+    // Ledger Cache Stats\n     String LEDGER_CACHE_READ_PAGE = \"LEDGER_CACHE_READ_PAGE\";\n-    /** SkipList Stats **/\n+    // SkipList Stats\n     String SKIP_LIST_GET_ENTRY = \"SKIP_LIST_GET_ENTRY\";\n     String SKIP_LIST_PUT_ENTRY = \"SKIP_LIST_PUT_ENTRY\";\n     String SKIP_LIST_SNAPSHOT = \"SKIP_LIST_SNAPSHOT\";\n@@ -101,13 +101,13 @@ public interface BookKeeperServerStats {\n     String JOURNAL_QUEUE_SIZE = \"JOURNAL_QUEUE_SIZE\";\n     String READ_BYTES = \"READ_BYTES\";\n     String WRITE_BYTES = \"WRITE_BYTES\";\n-    /** Ledger Cache Counters **/\n+    // Ledger Cache Counters\n     String LEDGER_CACHE_HIT = \"LEDGER_CACHE_HIT\";\n     String LEDGER_CACHE_MISS = \"LEDGER_CACHE_MISS\";\n-    /** Compaction/Garbage Collection Related Counters **/\n+    // Compaction/Garbage Collection Related Counters\n     String NUM_MINOR_COMP = \"NUM_MINOR_COMP\";\n     String NUM_MAJOR_COMP = \"NUM_MAJOR_COMP\";\n-    /** Index Related Counters **/\n+    // Index Related Counters\n     String INDEX_INMEM_ILLEGAL_STATE_RESET = \"INDEX_INMEM_ILLEGAL_STATE_RESET\";\n     String INDEX_INMEM_ILLEGAL_STATE_DELETE = \"INDEX_INMEM_ILLEGAL_STATE_DELETE\";\n     String JOURNAL_FORCE_WRITE_QUEUE_SIZE = \"JOURNAL_FORCE_WRITE_QUEUE_SIZE\";"},{"sha":"a9901c075f75b41ccfba96544ee77b9588a0d49b","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":8,"deletions":12,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookie.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookie.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookie.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -35,6 +35,13 @@\n import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SERVER_STATUS;\n import static org.apache.bookkeeper.bookie.BookKeeperServerStats.WRITE_BYTES;\n \n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Sets;\n+import com.google.common.util.concurrent.SettableFuture;\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.FilenameFilter;\n@@ -61,7 +68,6 @@\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.stream.Collectors;\n-\n import org.apache.bookkeeper.bookie.BookieException.DiskPartitionDuplicationException;\n import org.apache.bookkeeper.bookie.Journal.JournalScanner;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.LedgerDirsListener;\n@@ -102,18 +108,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.collect.Lists;\n-import com.google.common.collect.Sets;\n-import com.google.common.util.concurrent.SettableFuture;\n-import com.google.common.util.concurrent.ThreadFactoryBuilder;\n-\n-import io.netty.buffer.ByteBuf;\n-import io.netty.buffer.Unpooled;\n-\n /**\n  * Implements a bookie.\n- *\n  */\n public class Bookie extends BookieCriticalThread {\n \n@@ -1313,7 +1309,7 @@ synchronized int shutdown(int exitCode) {\n                 if (indexDirsManager != ledgerDirsManager) {\n                     idxMonitor.shutdown();\n                 }\n-                \n+\n                 // Shutdown the state service\n                 stateService.shutdown();\n             }"},{"sha":"57bf708684bf86eaa8fb140c17b5eae64c9200de","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieException.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -1,5 +1,3 @@\n-package org.apache.bookkeeper.bookie;\n-\n /*\n  *\n  * Licensed to the Apache Software Foundation (ASF) under one\n@@ -20,6 +18,7 @@\n  * under the License.\n  *\n  */\n+package org.apache.bookkeeper.bookie;\n \n /**\n  * Signals that a Bookie exception of some sort has occurred. This class\n@@ -181,7 +180,7 @@ public UpgradeException(String reason) {\n             super(Code.UpgradeException, reason);\n         }\n     }\n-    \n+\n     /**\n      * Signals when multiple ledger/journal directories are mounted in same disk partition.\n      */"},{"sha":"8e07879335c63b3cd4dfeabd1fb187197bcf6510","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieShell.java","status":"modified","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieShell.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieShell.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieShell.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -20,6 +20,8 @@\n \n import static com.google.common.base.Charsets.UTF_8;\n \n+import com.google.common.collect.Lists;\n+import com.google.common.util.concurrent.AbstractFuture;\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.IOException;\n@@ -45,7 +47,6 @@\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n import java.util.function.Predicate;\n-\n import org.apache.bookkeeper.bookie.BookieException.InvalidCookieException;\n import org.apache.bookkeeper.bookie.EntryLogger.EntryLogScanner;\n import org.apache.bookkeeper.bookie.Journal.JournalScanner;\n@@ -68,9 +69,6 @@\n import org.apache.bookkeeper.net.BookieSocketAddress;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.GenericCallback;\n import org.apache.bookkeeper.replication.AuditorElector;\n-import org.apache.bookkeeper.replication.BookieLedgerIndexer;\n-import org.apache.bookkeeper.replication.ReplicationException.UnavailableException;\n-import org.apache.bookkeeper.util.BookKeeperConstants;\n import org.apache.bookkeeper.util.DiskChecker;\n import org.apache.bookkeeper.util.EntryFormatter;\n import org.apache.bookkeeper.util.IOUtils;\n@@ -96,9 +94,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.collect.Lists;\n-import com.google.common.util.concurrent.AbstractFuture;\n-\n /**\n  * Bookie Shell is to provide utilities for users to administer a bookkeeper cluster.\n  */\n@@ -516,12 +511,14 @@ Options getOptions() {\n \n         @Override\n         String getDescription() {\n-            return \"List ledgers marked as underreplicated, with optional options to specify missingreplica (BookieId) and to exclude missingreplica\";\n+            return \"List ledgers marked as underreplicated, with optional options to specify missingreplica\"\n+                + \" (BookieId) and to exclude missingreplica\";\n         }\n \n         @Override\n         String getUsage() {\n-            return \"listunderreplicated [[-missingreplica <bookieaddress>] [-excludingmissingreplica <bookieaddress>]]\";\n+            return \"listunderreplicated [[-missingreplica <bookieaddress>]\"\n+                + \" [-excludingmissingreplica <bookieaddress>]]\";\n         }\n \n         @Override\n@@ -1349,7 +1346,7 @@ int runCmd(CommandLine cmdLine) throws Exception {\n     }\n \n     /**\n-     * Setter and Getter for LostBookieRecoveryDelay value (in seconds) in Zookeeper\n+     * Setter and Getter for LostBookieRecoveryDelay value (in seconds) in Zookeeper.\n      */\n     class LostBookieRecoveryDelayCmd extends MyCommand {\n         Options opts = new Options();\n@@ -1908,7 +1905,7 @@ public int runCmd(CommandLine cmdLine) throws Exception {\n     }\n \n     /**\n-     * Command to trigger AuditTask by resetting lostBookieRecoveryDelay to its current value\n+     * Command to trigger AuditTask by resetting lostBookieRecoveryDelay to its current value.\n      */\n     class TriggerAuditCmd extends MyCommand {\n         Options opts = new Options();\n@@ -1960,7 +1957,8 @@ class DecommissionBookieCmd extends MyCommand {\n \n         @Override\n         String getDescription() {\n-            return \"Force trigger the Audittask and make sure all the ledgers stored in the decommissioning bookie are replicated\";\n+            return \"Force trigger the Audittask and make sure all the ledgers stored in the decommissioning bookie\"\n+                + \" are replicated\";\n         }\n \n         @Override"},{"sha":"10affaeba0badef988adf45cf13053bacd361d18","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BufferedChannel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBufferedChannel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBufferedChannel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBufferedChannel.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -24,8 +24,8 @@\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.nio.channels.FileChannel;\n-import org.apache.bookkeeper.util.ZeroBuffer;\n import java.util.concurrent.atomic.AtomicLong;\n+import org.apache.bookkeeper.util.ZeroBuffer;\n \n /**\n  * Provides a buffering layer in front of a FileChannel."},{"sha":"64c6021e6779e0900a038c001044bc4e0d4ecbe7","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/CheckpointSourceList.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCheckpointSourceList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCheckpointSourceList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCheckpointSourceList.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -19,11 +19,10 @@\n \n import static com.google.common.base.Preconditions.checkArgument;\n \n-import java.io.IOException;\n-import java.util.List;\n-\n import com.google.common.base.Objects;\n import com.google.common.collect.Lists;\n+import java.io.IOException;\n+import java.util.List;\n \n /**\n  * A {@code CheckpointSourceList} manages a list of {@link CheckpointSource}s."},{"sha":"f057391c52212376b019e79d0cc7124df13f01d6","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCookie.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCookie.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FCookie.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -22,6 +22,9 @@\n \n import static com.google.common.base.Charsets.UTF_8;\n \n+import com.google.common.base.Joiner;\n+import com.google.common.collect.Sets;\n+import com.google.protobuf.TextFormat;\n import java.io.BufferedReader;\n import java.io.BufferedWriter;\n import java.io.EOFException;\n@@ -34,15 +37,15 @@\n import java.io.StringReader;\n import java.net.InetSocketAddress;\n import java.net.UnknownHostException;\n+import java.util.List;\n import java.util.Set;\n-\n-import com.google.common.base.Joiner;\n import org.apache.bookkeeper.conf.AbstractConfiguration;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.meta.ZkVersion;\n import org.apache.bookkeeper.net.BookieSocketAddress;\n import org.apache.bookkeeper.proto.DataFormats.CookieFormat;\n import org.apache.bookkeeper.util.BookKeeperConstants;\n+import org.apache.bookkeeper.util.ZkUtils;\n import org.apache.bookkeeper.versioning.Version;\n import org.apache.bookkeeper.versioning.Versioned;\n import org.apache.zookeeper.CreateMode;\n@@ -53,11 +56,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.collect.Sets;\n-import com.google.protobuf.TextFormat;\n-import java.util.List;\n-import org.apache.bookkeeper.util.ZkUtils;\n-\n /**\n  * When a bookie starts for the first time it generates  a cookie, and stores\n  * the cookie in zookeeper as well as in the each of the local filesystem"},{"sha":"4085f78c856acff9b7f857205c0cf3f769d54fb9","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FEntryLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FEntryLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FEntryLogger.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -24,6 +24,7 @@\n import static com.google.common.base.Charsets.UTF_8;\n import static org.apache.bookkeeper.util.BookKeeperConstants.MAX_LOG_SIZE_LIMIT;\n \n+import com.google.common.collect.MapMaker;\n import java.io.BufferedReader;\n import java.io.BufferedWriter;\n import java.io.File;\n@@ -48,22 +49,18 @@\n import java.util.concurrent.CancellationException;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n-\n-import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.atomic.AtomicBoolean;\n-\n import org.apache.bookkeeper.bookie.LedgerDirsManager.LedgerDirsListener;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.util.IOUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.collect.MapMaker;\n-\n /**\n  * This class manages the writing of the bookkeeper entries. All the new\n  * entries are written to a common log. The LedgerCache will have pointers"},{"sha":"c26c8e3cc78d1a03d9777e738e3263ab175efd8e","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryMemTable.java","status":"modified","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FEntryMemTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FEntryMemTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FEntryMemTable.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -19,30 +19,28 @@\n \n package org.apache.bookkeeper.bookie;\n \n-import org.apache.bookkeeper.bookie.Bookie.NoLedgerException;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_FLUSH_BYTES;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_GET_ENTRY;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_PUT_ENTRY;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_SNAPSHOT;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_THROTTLING;\n \n import java.io.IOException;\n import java.nio.ByteBuffer;\n+import java.util.concurrent.ConcurrentSkipListMap;\n+import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.ConcurrentSkipListMap;\n-import java.util.concurrent.TimeUnit;\n-\n+import org.apache.bookkeeper.bookie.Bookie.NoLedgerException;\n+import org.apache.bookkeeper.bookie.CheckpointSource.Checkpoint;\n+import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.stats.Counter;\n import org.apache.bookkeeper.stats.OpStatsLogger;\n import org.apache.bookkeeper.stats.StatsLogger;\n import org.apache.bookkeeper.util.MathUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.apache.bookkeeper.bookie.CheckpointSource.Checkpoint;\n-import org.apache.bookkeeper.conf.ServerConfiguration;\n-\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_FLUSH_BYTES;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_GET_ENTRY;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_PUT_ENTRY;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_SNAPSHOT;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.SKIP_LIST_THROTTLING;\n \n /**\n  * The EntryMemTable holds in-memory representation to the entries not-yet flushed."},{"sha":"045f8b2efbd85af52998a49b1a409d774634838e","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java","status":"modified","additions":15,"deletions":16,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FFileSystemUpgrade.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FFileSystemUpgrade.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FFileSystemUpgrade.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,38 +21,37 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import static com.google.common.base.Charsets.UTF_8;\n+\n import com.google.common.collect.Lists;\n+import java.io.File;\n+import java.io.FilenameFilter;\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Scanner;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.util.BookKeeperConstants;\n import org.apache.bookkeeper.util.HardLink;\n import org.apache.bookkeeper.versioning.Version;\n import org.apache.bookkeeper.versioning.Versioned;\n import org.apache.bookkeeper.zookeeper.BoundExponentialBackoffRetryPolicy;\n import org.apache.bookkeeper.zookeeper.ZooKeeperClient;\n-import org.apache.commons.io.FileUtils;\n import org.apache.commons.cli.BasicParser;\n-import org.apache.commons.cli.Options;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.HelpFormatter;\n+import org.apache.commons.cli.Options;\n import org.apache.commons.configuration.ConfigurationException;\n+import org.apache.commons.io.FileUtils;\n import org.apache.zookeeper.KeeperException;\n import org.apache.zookeeper.ZooKeeper;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import java.net.MalformedURLException;\n-import java.io.File;\n-import java.io.FilenameFilter;\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.NoSuchElementException;\n-import java.util.Scanner;\n-\n-import static com.google.common.base.Charsets.UTF_8;\n \n /**\n  * Application for upgrading the bookkeeper filesystem between versions."},{"sha":"700b2f6cf764c3df225493eef80aa68ddc51dfa1","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FGarbageCollectorThread.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FGarbageCollectorThread.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FGarbageCollectorThread.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,6 +21,9 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.util.concurrent.RateLimiter;\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.util.ArrayList;\n@@ -29,16 +32,11 @@\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.Executors;\n import java.util.concurrent.atomic.AtomicBoolean;\n-\n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.util.concurrent.RateLimiter;\n-\n-import com.google.common.util.concurrent.ThreadFactoryBuilder;\n import org.apache.bookkeeper.bookie.EntryLogger.EntryLogScanner;\n import org.apache.bookkeeper.bookie.GarbageCollector.GarbageCleaner;\n import org.apache.bookkeeper.conf.ServerConfiguration;"},{"sha":"85efb5c1a53fd5a1ce8ef53987af15c85fc30654","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/IndexInMemPageMgr.java","status":"modified","additions":17,"deletions":18,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FIndexInMemPageMgr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FIndexInMemPageMgr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FIndexInMemPageMgr.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -20,17 +20,14 @@\n  */\n package org.apache.bookkeeper.bookie;\n \n-import com.google.common.base.Stopwatch;\n-import java.util.concurrent.TimeUnit;\n-import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.stats.Counter;\n-import org.apache.bookkeeper.stats.Gauge;\n-import org.apache.bookkeeper.stats.OpStatsLogger;\n-import org.apache.bookkeeper.stats.StatsLogger;\n-import org.apache.bookkeeper.util.DirectMemoryUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.INDEX_INMEM_ILLEGAL_STATE_DELETE;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.INDEX_INMEM_ILLEGAL_STATE_RESET;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LEDGER_CACHE_HIT;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LEDGER_CACHE_MISS;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LEDGER_CACHE_READ_PAGE;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.NUM_INDEX_PAGES;\n \n+import com.google.common.base.Stopwatch;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collections;\n@@ -44,14 +41,16 @@\n import java.util.concurrent.ConcurrentLinkedQueue;\n import java.util.concurrent.ConcurrentMap;\n import java.util.concurrent.ConcurrentSkipListSet;\n+import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicInteger;\n-\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.INDEX_INMEM_ILLEGAL_STATE_DELETE;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.INDEX_INMEM_ILLEGAL_STATE_RESET;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LEDGER_CACHE_HIT;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LEDGER_CACHE_MISS;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LEDGER_CACHE_READ_PAGE;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.NUM_INDEX_PAGES;\n+import org.apache.bookkeeper.conf.ServerConfiguration;\n+import org.apache.bookkeeper.stats.Counter;\n+import org.apache.bookkeeper.stats.Gauge;\n+import org.apache.bookkeeper.stats.OpStatsLogger;\n+import org.apache.bookkeeper.stats.StatsLogger;\n+import org.apache.bookkeeper.util.DirectMemoryUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n class IndexInMemPageMgr {\n     private static final Logger LOG = LoggerFactory.getLogger(IndexInMemPageMgr.class);\n@@ -69,7 +68,7 @@ private static class InMemPageCollection implements LEPStateChangeCallback {\n         final Counter illegalStateDeleteCounter;\n \n         public InMemPageCollection(StatsLogger statsLogger) {\n-            pages = new ConcurrentHashMap<Long, ConcurrentMap<Long,LedgerEntryPage>>();\n+            pages = new ConcurrentHashMap<>();\n             lruCleanPageMap =\n                     Collections.synchronizedMap(new LinkedHashMap<EntryKey, LedgerEntryPage>(16, 0.75f, true));\n             listOfFreePages = new ConcurrentLinkedQueue<LedgerEntryPage>();"},{"sha":"2fd03a2827a9c42ffc44af82bd1610b37afcdca0","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/IndexPersistenceMgr.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FIndexPersistenceMgr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FIndexPersistenceMgr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FIndexPersistenceMgr.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -20,6 +20,9 @@\n  */\n package org.apache.bookkeeper.bookie;\n \n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LEDGER_CACHE_NUM_EVICTED_LEDGERS;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.NUM_OPEN_LEDGERS;\n+\n import com.google.common.annotations.VisibleForTesting;\n import io.netty.buffer.ByteBuf;\n import java.io.File;\n@@ -44,9 +47,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LEDGER_CACHE_NUM_EVICTED_LEDGERS;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.NUM_OPEN_LEDGERS;\n-\n /**\n  * A {@code IndexPersistenceMgr} is responsible for managing the persistence state for the index in a bookie.\n  */\n@@ -602,7 +602,7 @@ private void writeBuffers(Long ledger,\n     }\n \n     /**\n-     * Update the ledger entry page\n+     * Update the ledger entry page.\n      *\n      * @param lep\n      *          ledger entry page"},{"sha":"f773e055fe09e874f14197d065143c3f0ba0d4e9","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FInterleavedLedgerStorage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FInterleavedLedgerStorage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FInterleavedLedgerStorage.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,8 +21,11 @@\n \n package org.apache.bookkeeper.bookie;\n \n-import com.google.common.collect.Lists;\n \n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.STORAGE_GET_ENTRY;\n+import static org.apache.bookkeeper.bookie.BookKeeperServerStats.STORAGE_GET_OFFSET;\n+\n+import com.google.common.collect.Lists;\n import io.netty.buffer.ByteBuf;\n import io.netty.buffer.Unpooled;\n import java.io.File;\n@@ -48,9 +51,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.STORAGE_GET_ENTRY;\n-import static org.apache.bookkeeper.bookie.BookKeeperServerStats.STORAGE_GET_OFFSET;\n-\n /**\n  * Interleave ledger storage.\n  *"},{"sha":"e2b1e798d87c391c3f953b8b09bc9251c788278f","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournal.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,9 +21,9 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import com.google.common.base.Stopwatch;\n import io.netty.buffer.ByteBuf;\n import io.netty.buffer.Unpooled;\n-\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n@@ -37,9 +37,6 @@\n import java.util.concurrent.Executors;\n import java.util.concurrent.LinkedBlockingQueue;\n import java.util.concurrent.TimeUnit;\n-\n-import com.google.common.base.Stopwatch;\n-\n import org.apache.bookkeeper.bookie.LedgerDirsManager.NoWritableLedgerDirException;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.WriteCallback;"},{"sha":"3d2c502b50e48eee72c44e6b77bdcf53bfebc16d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournalChannel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournalChannel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournalChannel.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,21 +21,20 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import static com.google.common.base.Charsets.UTF_8;\n+\n import java.io.Closeable;\n import java.io.File;\n-import java.io.RandomAccessFile;\n import java.io.IOException;\n-import java.nio.channels.FileChannel;\n+import java.io.RandomAccessFile;\n import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n import java.util.Arrays;\n-\n import org.apache.bookkeeper.util.NativeIO;\n import org.apache.bookkeeper.util.ZeroBuffer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static com.google.common.base.Charsets.UTF_8;\n-\n /**\n  * Simple wrapper around FileChannel to add versioning\n  * information to the file."},{"sha":"0b63e3266257ae2aed58792100589b612ac1358f","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerCacheImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerCacheImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerCacheImpl.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,8 +21,8 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import io.netty.buffer.ByteBuf;\n import java.io.IOException;\n-\n import java.util.Observable;\n import java.util.Observer;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n@@ -32,8 +32,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import io.netty.buffer.ByteBuf;\n-\n /**\n  * Implementation of LedgerCache interface.\n  * This class serves two purposes."},{"sha":"970cec08858c11e7361a59b820dfdc3d28689dcb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptor.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,15 +21,15 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import static org.apache.bookkeeper.bookie.Bookie.METAENTRY_ID_FENCE_KEY;\n+\n import com.google.common.util.concurrent.SettableFuture;\n import io.netty.buffer.ByteBuf;\n import io.netty.buffer.Unpooled;\n import java.io.IOException;\n import java.util.Observable;\n import java.util.Observer;\n \n-import static org.apache.bookkeeper.bookie.Bookie.METAENTRY_ID_FENCE_KEY;\n-\n /**\n  * Implements a ledger inside a bookie. In particular, it implements operations\n  * to write entries to a ledger and read entries from a ledger.\n@@ -70,7 +70,7 @@ static ByteBuf createLedgerFenceEntry(Long ledgerId) {\n      * When we fence a ledger, we need to first set ledger to fenced state in memory and\n      * then log the fence entry in Journal so that we can rebuild the state.\n      *\n-     * We should satisfy the future only after we complete logging fence entry in Journal\n+     * <p>We should satisfy the future only after we complete logging fence entry in Journal\n      */\n     abstract SettableFuture<Boolean> fenceAndLogInJournal(Journal journal) throws IOException;\n "},{"sha":"af55f6a730e984b2a4d8cf54278da5d0a01fa028","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptorImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptorImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptorImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDescriptorImpl.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -88,15 +88,15 @@ ByteBuf getExplicitLac() {\n \n     synchronized SettableFuture<Boolean> fenceAndLogInJournal(Journal journal) throws IOException {\n         boolean success = this.setFenced();\n-        if(success) {\n+        if (success) {\n             // fenced for first time, we should add the key to journal ensure we can rebuild.\n             return logFenceEntryInJournal(journal);\n         } else {\n             // If we reach here, it means the fence state in FileInfo has been set (may not be persisted yet).\n             // However, writing the fence log entry to the journal might still be in progress. This can happen\n             // when a bookie receives two fence requests almost at the same time. The subsequent logic is used\n             // to check the fencing progress.\n-            if(logFenceResult == null || fenceEntryPersisted.get()){\n+            if (logFenceResult == null || fenceEntryPersisted.get()){\n                 // Either ledger's fenced state is recovered from Journal\n                 // Or Log fence entry in Journal succeed\n                 SettableFuture<Boolean> result = SettableFuture.create();"},{"sha":"209328051cb5b582b5f881addfd7ffc1ce8c4964","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDirsManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDirsManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDirsManager.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -22,6 +22,7 @@\n \n import static org.apache.bookkeeper.bookie.BookKeeperServerStats.LD_WRITABLE_DIRS;\n \n+import com.google.common.annotations.VisibleForTesting;\n import java.io.File;\n import java.io.IOException;\n import java.util.ArrayList;\n@@ -30,7 +31,6 @@\n import java.util.Random;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n-\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.stats.Gauge;\n import org.apache.bookkeeper.stats.NullStatsLogger;\n@@ -39,8 +39,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.annotations.VisibleForTesting;\n-\n /**\n  * This class manages ledger directories used by the bookie.\n  */\n@@ -115,6 +113,7 @@ public List<File> getAllLedgerDirs() {\n \n     /**\n      * Get all dir listeners.\n+     *\n      * @return list of listeners\n      */\n     public List<LedgerDirsListener> getListeners() {\n@@ -125,7 +124,7 @@ public List<LedgerDirsListener> getListeners() {\n      * Calculate the total amount of free space available in all of the ledger directories put together.\n      *\n      * @return totalDiskSpace in bytes\n-     * @throws IOException \n+     * @throws IOException\n      */\n     public long getTotalFreeSpace(List<File> dirs) throws IOException {\n         return diskChecker.getTotalFreeSpace(dirs);\n@@ -135,14 +134,15 @@ public long getTotalFreeSpace(List<File> dirs) throws IOException {\n      * Calculate the total amount of free space available in all of the ledger directories put together.\n      *\n      * @return freeDiskSpace in bytes\n-     * @throws IOException \n+     * @throws IOException\n      */\n     public long getTotalDiskSpace(List<File> dirs) throws IOException {\n         return diskChecker.getTotalDiskSpace(dirs);\n     }\n-    \n+\n     /**\n      * Get disk usages map.\n+     *\n      * @return disk usages map\n      */\n     public ConcurrentMap<File, Float> getDiskUsages() {"},{"sha":"a9ebc36b01a6efc9f8d0aec5b517d3ad1c99c6e3","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsMonitor.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDirsMonitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDirsMonitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerDirsMonitor.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -133,7 +133,8 @@ public void run() {\n                     }\n                 } else {\n                     LOG.debug(\n-                            \"Current TotalDiskUsage: {} is greater than LWMThreshold: {}. So not adding any filledDir to WritableDirsList\",\n+                            \"Current TotalDiskUsage: {} is greater than LWMThreshold: {}.\"\n+                                + \" So not adding any filledDir to WritableDirsList\",\n                             totalDiskUsage, conf.getDiskLowWaterMarkUsageThreshold());\n                 }\n             } catch (IOException ioe) {"},{"sha":"0207ba01a284464e4f99ff2a8efe226a429791f3","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerStorage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerStorage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerStorage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLedgerStorage.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -27,8 +27,8 @@\n import java.util.Observer;\n import org.apache.bookkeeper.bookie.CheckpointSource.Checkpoint;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.stats.StatsLogger;\n import org.apache.bookkeeper.meta.LedgerManager;\n+import org.apache.bookkeeper.stats.StatsLogger;\n \n /**\n  * Interface for storing ledger data on persistent storage."},{"sha":"fe18d5ddf4b3870a3027a7b052b55b1967fd6fca","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LocalBookieEnsemblePlacementPolicy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLocalBookieEnsemblePlacementPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLocalBookieEnsemblePlacementPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FLocalBookieEnsemblePlacementPolicy.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -17,6 +17,7 @@\n  */\n package org.apache.bookkeeper.bookie;\n \n+import com.google.common.collect.Lists;\n import io.netty.util.HashedWheelTimer;\n import java.net.UnknownHostException;\n import java.util.ArrayList;\n@@ -26,16 +27,15 @@\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n+import org.apache.bookkeeper.client.BKException.BKNotEnoughBookiesException;\n import org.apache.bookkeeper.client.BookieInfoReader.BookieInfo;\n import org.apache.bookkeeper.client.EnsemblePlacementPolicy;\n-import org.apache.bookkeeper.client.BKException.BKNotEnoughBookiesException;\n import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.feature.FeatureProvider;\n import org.apache.bookkeeper.net.BookieSocketAddress;\n import org.apache.bookkeeper.net.DNSToSwitchMapping;\n import org.apache.bookkeeper.stats.StatsLogger;\n-import com.google.common.collect.Lists;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n "},{"sha":"fe6e3475f6a5d1a5437e6de4df7e075325fec00a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/ScanAndCompareGarbageCollector.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FScanAndCompareGarbageCollector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FScanAndCompareGarbageCollector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FScanAndCompareGarbageCollector.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,14 +21,15 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import com.google.common.collect.Sets;\n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.List;\n import java.util.NavigableSet;\n import java.util.Set;\n import java.util.SortedMap;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.Semaphore;\n-\n import org.apache.bookkeeper.client.BKException;\n import org.apache.bookkeeper.client.LedgerMetadata;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n@@ -39,17 +40,14 @@\n import org.apache.bookkeeper.net.BookieSocketAddress;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.GenericCallback;\n import org.apache.bookkeeper.util.MathUtils;\n+import org.apache.bookkeeper.util.ZkUtils;\n import org.apache.bookkeeper.zookeeper.ZooKeeperClient;\n import org.apache.zookeeper.KeeperException;\n import org.apache.zookeeper.ZooKeeper;\n+import org.apache.zookeeper.data.ACL;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.collect.Sets;\n-import java.util.List;\n-import org.apache.bookkeeper.util.ZkUtils;\n-import org.apache.zookeeper.data.ACL;\n-\n /**\n  * Garbage collector implementation using scan and compare.\n  *"},{"sha":"ea1ff5abb30aef8a6cb06f451133f39117404151","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SortedLedgerStorage.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FSortedLedgerStorage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FSortedLedgerStorage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FSortedLedgerStorage.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -20,16 +20,13 @@\n  */\n package org.apache.bookkeeper.bookie;\n \n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n import io.netty.buffer.ByteBuf;\n-\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.TimeUnit;\n-\n-import com.google.common.util.concurrent.ThreadFactoryBuilder;\n-\n import org.apache.bookkeeper.bookie.CheckpointSource.Checkpoint;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.meta.LedgerManager;"},{"sha":"413c487454651cf94fa599e78e20db7cc39bbb3a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FSyncThread.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FSyncThread.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FSyncThread.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,11 +21,12 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n import java.io.IOException;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.Executors;\n-\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n import org.apache.bookkeeper.bookie.CheckpointSource.Checkpoint;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.LedgerDirsListener;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.NoWritableLedgerDirException;\n@@ -34,9 +35,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.util.concurrent.ThreadFactoryBuilder;\n-\n /**\n  * SyncThread is a background thread which help checkpointing ledger storage\n  * when a checkpoint is requested. After a ledger storage is checkpointed,"},{"sha":"21d973a7b4548ef528848d49addfa78c49f61e52","filename":"bookkeeper-server/src/test/resources/log4j.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Ftest%2Fresources%2Flog4j.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-server%2Fsrc%2Ftest%2Fresources%2Flog4j.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Ftest%2Fresources%2Flog4j.properties?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -1,22 +1,22 @@\n #\n-# \n+#\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n # regarding copyright ownership.  The ASF licenses this file\n # to you under the Apache License, Version 2.0 (the\n # \"License\"); you may not use this file except in compliance\n # with the License.  You may obtain a copy of the License at\n-# \n+#\n #   http://www.apache.org/licenses/LICENSE-2.0\n-# \n+#\n # Unless required by applicable law or agreed to in writing,\n # software distributed under the License is distributed on an\n # \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-# \n+#\n #\n \n #"},{"sha":"dc789ffc7f7dc193c0b6f7b7637436e144f1acb5","filename":"bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleMetricsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleMetricsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleMetricsProvider.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -16,30 +16,24 @@\n  */\n package org.apache.bookkeeper.stats;\n \n-import java.net.InetSocketAddress;\n-\n import com.codahale.metrics.CsvReporter;\n+import com.codahale.metrics.JmxReporter;\n import com.codahale.metrics.MetricFilter;\n import com.codahale.metrics.MetricRegistry;\n import com.codahale.metrics.ScheduledReporter;\n import com.codahale.metrics.Slf4jReporter;\n-import com.codahale.metrics.JmxReporter;\n-import com.google.common.base.Strings;\n-import com.google.common.net.HostAndPort;\n import com.codahale.metrics.graphite.Graphite;\n import com.codahale.metrics.graphite.GraphiteReporter;\n-\n import com.codahale.metrics.jvm.GarbageCollectorMetricSet;\n import com.codahale.metrics.jvm.MemoryUsageGaugeSet;\n-\n-import org.apache.commons.configuration.Configuration;\n-\n-import java.util.List;\n+import com.google.common.base.Strings;\n+import com.google.common.net.HostAndPort;\n+import java.io.File;\n+import java.net.InetSocketAddress;\n import java.util.ArrayList;\n+import java.util.List;\n import java.util.concurrent.TimeUnit;\n-\n-import java.io.File;\n-\n+import org.apache.commons.configuration.Configuration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n "},{"sha":"9af35bf2fa4e9f7f07729329cf9afb00fb0fceb2","filename":"bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleOpStatsLogger.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleOpStatsLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleOpStatsLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleOpStatsLogger.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -16,9 +16,8 @@\n  */\n package org.apache.bookkeeper.stats;\n \n-import com.codahale.metrics.Timer;\n import com.codahale.metrics.Snapshot;\n-\n+import com.codahale.metrics.Timer;\n import java.util.Arrays;\n import java.util.concurrent.TimeUnit;\n "},{"sha":"7d765ae15aa3262142e8144b0b77619c1dd5dc12","filename":"bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleStatsLogger.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleStatsLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleStatsLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleStatsLogger.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -16,10 +16,11 @@\n  */\n package org.apache.bookkeeper.stats;\n \n-import com.codahale.metrics.Timer;\n-import com.codahale.metrics.MetricRegistry;\n import static com.codahale.metrics.MetricRegistry.name;\n \n+import com.codahale.metrics.MetricRegistry;\n+import com.codahale.metrics.Timer;\n+\n /**\n  * A {@link StatsLogger} implemented based on <i>Codahale</i> metrics library.\n  */"},{"sha":"57c92480f703b0d046e2fc70f1842d6200ee2e9e","filename":"bookkeeper-stats-providers/prometheus-metrics-provider/src/main/java/org/apache/bookkeeper/stats/PrometheusMetricsProvider.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusMetricsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusMetricsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusMetricsProvider.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -16,22 +16,20 @@\n  */\n package org.apache.bookkeeper.stats;\n \n+import io.prometheus.client.CollectorRegistry;\n+import io.prometheus.client.exporter.MetricsServlet;\n+import io.prometheus.client.hotspot.GarbageCollectorExports;\n+import io.prometheus.client.hotspot.MemoryPoolsExports;\n+import io.prometheus.client.hotspot.StandardExports;\n+import io.prometheus.client.hotspot.ThreadExports;\n import java.net.InetSocketAddress;\n-\n import org.apache.commons.configuration.Configuration;\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.servlet.ServletContextHandler;\n import org.eclipse.jetty.servlet.ServletHolder;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import io.prometheus.client.CollectorRegistry;\n-import io.prometheus.client.exporter.MetricsServlet;\n-import io.prometheus.client.hotspot.GarbageCollectorExports;\n-import io.prometheus.client.hotspot.MemoryPoolsExports;\n-import io.prometheus.client.hotspot.StandardExports;\n-import io.prometheus.client.hotspot.ThreadExports;\n-\n /**\n  * A <i>Prometheus</i> based {@link StatsProvider} implementation.\n  */"},{"sha":"c0b61ef0decf22d19d077fc9a46ebae658f6e109","filename":"bookkeeper-stats-providers/prometheus-metrics-provider/src/main/java/org/apache/bookkeeper/stats/PrometheusOpStatsLogger.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusOpStatsLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusOpStatsLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusOpStatsLogger.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -16,10 +16,9 @@\n  */\n package org.apache.bookkeeper.stats;\n \n-import java.util.concurrent.TimeUnit;\n-\n import io.prometheus.client.CollectorRegistry;\n import io.prometheus.client.Summary;\n+import java.util.concurrent.TimeUnit;\n \n /**\n  * A {@code Prometheus} based {@link OpStatsLogger} implementation."},{"sha":"6c3e4f156af757842fe305921a8d8e14df055e8f","filename":"bookkeeper-stats-providers/prometheus-metrics-provider/src/main/java/org/apache/bookkeeper/stats/PrometheusStatsLogger.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusStatsLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusStatsLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Fprometheus-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FPrometheusStatsLogger.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -17,7 +17,6 @@\n package org.apache.bookkeeper.stats;\n \n import com.google.common.base.Joiner;\n-\n import io.prometheus.client.Collector;\n import io.prometheus.client.CollectorRegistry;\n "},{"sha":"0aa7d12e370afa5f38793313bc93128183055220","filename":"bookkeeper-stats-providers/twitter-finagle-provider/src/main/java/org/apache/bookkeeper/stats/twitter/finagle/FinagleStatsLoggerImpl.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-finagle-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Ffinagle%2FFinagleStatsLoggerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-finagle-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Ffinagle%2FFinagleStatsLoggerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Ftwitter-finagle-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Ffinagle%2FFinagleStatsLoggerImpl.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -19,16 +19,15 @@\n \n import com.twitter.finagle.stats.StatsReceiver;\n import com.twitter.util.Function0;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.apache.bookkeeper.stats.Counter;\n import org.apache.bookkeeper.stats.Gauge;\n import org.apache.bookkeeper.stats.OpStatsLogger;\n import org.apache.bookkeeper.stats.StatsLogger;\n import scala.collection.Seq;\n \n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.Map;\n-\n /**\n  * A <i>Finagle Stats</i> library based {@link StatsLogger} implementation.\n  */"},{"sha":"b67976f56063919d5c3e1f1b8e59c9154cf9a18d","filename":"bookkeeper-stats-providers/twitter-ostrich-provider/src/main/java/org/apache/bookkeeper/stats/twitter/ostrich/OpStatsLoggerImpl.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-ostrich-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fostrich%2FOpStatsLoggerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-ostrich-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fostrich%2FOpStatsLoggerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Ftwitter-ostrich-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fostrich%2FOpStatsLoggerImpl.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -17,10 +17,8 @@\n package org.apache.bookkeeper.stats.twitter.ostrich;\n \n import java.util.concurrent.TimeUnit;\n-\n import org.apache.bookkeeper.stats.OpStatsData;\n import org.apache.bookkeeper.stats.OpStatsLogger;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n "},{"sha":"1cc7bf6958f99d50aebe9abcab95e74dd8f6663b","filename":"bookkeeper-stats-providers/twitter-ostrich-provider/src/main/java/org/apache/bookkeeper/stats/twitter/ostrich/OstrichProvider.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-ostrich-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fostrich%2FOstrichProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-ostrich-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fostrich%2FOstrichProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Ftwitter-ostrich-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fostrich%2FOstrichProvider.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -21,6 +21,7 @@\n import com.twitter.ostrich.admin.ServiceTracker;\n import com.twitter.ostrich.admin.StatsFactory;\n import com.twitter.util.Duration;\n+import java.util.concurrent.TimeUnit;\n import org.apache.bookkeeper.stats.CachingStatsProvider;\n import org.apache.bookkeeper.stats.StatsLogger;\n import org.apache.bookkeeper.stats.StatsProvider;\n@@ -33,8 +34,6 @@\n import scala.collection.immutable.Map$;\n import scala.util.matching.Regex;\n \n-import java.util.concurrent.TimeUnit;\n-\n /**\n  * A <i>Twitter Ostrich</i> library based {@link StatsProvider} implementation.\n  */"},{"sha":"689a7e8a26b8a07192aef96b2cc66fbbf38c6b6d","filename":"bookkeeper-stats-providers/twitter-science-provider/src/main/java/org/apache/bookkeeper/stats/twitter/science/CounterImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-science-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fscience%2FCounterImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-science-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fscience%2FCounterImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Ftwitter-science-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fscience%2FCounterImpl.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -18,9 +18,9 @@\n \n import com.twitter.common.stats.Rate;\n import com.twitter.common.stats.Stats;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.apache.bookkeeper.stats.Counter;\n \n-import java.util.concurrent.atomic.AtomicLong;\n /**\n  * This will export the value and the rate (per sec) to {@link org.apache.bookkeeper.stats.Stats}.\n  */"},{"sha":"dae7f6fc96cbba5d4894fb3b76c958b73cd5eed2","filename":"bookkeeper-stats-providers/twitter-science-provider/src/main/java/org/apache/bookkeeper/stats/twitter/science/OpStatsLoggerImpl.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-science-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fscience%2FOpStatsLoggerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats-providers%2Ftwitter-science-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fscience%2FOpStatsLoggerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Ftwitter-science-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2Ftwitter%2Fscience%2FOpStatsLoggerImpl.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -18,12 +18,11 @@\n \n import com.twitter.common.stats.RequestStats;\n import com.twitter.common.stats.Stat;\n-import org.apache.bookkeeper.stats.OpStatsData;\n-import org.apache.bookkeeper.stats.OpStatsLogger;\n-\n import java.util.Arrays;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n+import org.apache.bookkeeper.stats.OpStatsData;\n+import org.apache.bookkeeper.stats.OpStatsLogger;\n \n /**\n  * An implementation of the OpStatsLogger interface that handles per operation type stats."},{"sha":"4d38e9eef7c845b92e03a65447bb4be469a976e2","filename":"bookkeeper-stats/src/main/java/org/apache/bookkeeper/stats/CachingStatsProvider.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCachingStatsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCachingStatsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCachingStatsProvider.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -16,10 +16,9 @@\n  */\n package org.apache.bookkeeper.stats;\n \n-import org.apache.commons.configuration.Configuration;\n-\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n+import org.apache.commons.configuration.Configuration;\n \n /**\n  * A {@code CachingStatsProvider} adds the caching functionality to an existing {@code StatsProvider}."},{"sha":"a8115b352c660281aac25c021d2493538ab1580c","filename":"bookkeeper-stats/src/main/java/org/apache/bookkeeper/stats/Stats.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FStats.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/bookkeeper-stats%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FStats.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FStats.java?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -20,13 +20,12 @@\n  */\n package org.apache.bookkeeper.stats;\n \n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n import org.apache.commons.configuration.Configuration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.InvocationTargetException;\n-\n /**\n  * An umbrella class for loading stats provider.\n  */"},{"sha":"452f64041fdf796ec20c31e4549d1552f9f7e958","filename":"buildtools/src/main/resources/bookkeeper/checkstyle.xml","status":"modified","additions":8,"deletions":15,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/buildtools%2Fsrc%2Fmain%2Fresources%2Fbookkeeper%2Fcheckstyle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/buildtools%2Fsrc%2Fmain%2Fresources%2Fbookkeeper%2Fcheckstyle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/buildtools%2Fsrc%2Fmain%2Fresources%2Fbookkeeper%2Fcheckstyle.xml?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -87,22 +87,15 @@ page at http://checkstyle.sourceforge.net/config.html -->\n                      value=\"Redundant import {0}.\"/>\n         </module>\n \n-        <!-- TODO: disable checkstyle for sort imports for repacking. re-enable it after the packages are renamed.\n-             {@link https://issues.apache.org/jira/browse/DL-168}\n         <module name=\"ImportOrder\">\n-          --><!-- Checks for out of order import statements. -->\n-        <!--\n-        <property name=\"severity\" value=\"error\"/>\n-        -->\n-        <!-- This ensures that static imports go first. -->\n-        <!--\n-        <property name=\"option\" value=\"top\"/>\n-        <property name=\"sortStaticImportsAlphabetically\" value=\"true\"/>\n-        <property name=\"tokens\" value=\"STATIC_IMPORT, IMPORT\"/>\n-        <message key=\"import.ordering\"\n-                 value=\"Import {0} appears after other imports that it should precede\"/>\n-      </module>\n-      -->\n+            <property name=\"severity\" value=\"error\"/>\n+            <!-- This ensures that static imports go first. -->\n+            <property name=\"option\" value=\"top\"/>\n+            <property name=\"sortStaticImportsAlphabetically\" value=\"true\"/>\n+            <property name=\"tokens\" value=\"STATIC_IMPORT, IMPORT\"/>\n+            <message key=\"import.ordering\"\n+                     value=\"Import {0} appears after other imports that it should precede\"/>\n+        </module>\n \n         <module name=\"AvoidStarImport\">\n             <property name=\"severity\" value=\"error\"/>"},{"sha":"dfbb6866fbd20fe8eabff423e3ca87f6f5c2bfba","filename":"buildtools/src/main/resources/bookkeeper/server-suppressions.xml","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/f581e030c79abbde81bf165603fccdb5e6a1d38a/buildtools%2Fsrc%2Fmain%2Fresources%2Fbookkeeper%2Fserver-suppressions.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/f581e030c79abbde81bf165603fccdb5e6a1d38a/buildtools%2Fsrc%2Fmain%2Fresources%2Fbookkeeper%2Fserver-suppressions.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/buildtools%2Fsrc%2Fmain%2Fresources%2Fbookkeeper%2Fserver-suppressions.xml?ref=f581e030c79abbde81bf165603fccdb5e6a1d38a","patch":"@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License. See accompanying LICENSE file.\n+-->\n+<!DOCTYPE suppressions PUBLIC\n+        \"-//Puppy Crawl//DTD Suppressions 1.1//EN\"\n+        \"http://www.puppycrawl.com/dtds/suppressions_1_1.dtd\">\n+\n+<suppressions>\n+    <suppress checks=\"JavadocPackage\" files=\".*[\\\\/]src[\\\\/]test[\\\\/].*\"/>\n+    <suppress checks=\"JavadocPackage\" files=\".*[\\\\/]maven-archetypes[\\\\/].*\"/>\n+    <suppress checks=\"JavadocPackage\" files=\".*[\\\\/]examples[\\\\/].*\"/>\n+    <!-- suppress packages by packages -->\n+    <suppress checks=\".*\" files=\".*[\\\\/]client[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]conf[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]feature[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]meta[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]metastore[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]net[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]processor[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]proto[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]replication[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]sasl[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]shims[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]stats[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]streaming[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]tools[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]util[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]versioning[\\\\/].*\"/>\n+    <suppress checks=\".*\" files=\".*[\\\\/]zookeeper[\\\\/].*\"/>\n+\n+    <!-- suppress all checks in the generated directories -->\n+    <suppress checks=\".*\" files=\".+[\\\\/]generated[\\\\/].+\\.java\" />\n+    <suppress checks=\".*\" files=\".+[\\\\/]generated-sources[\\\\/].+\\.java\" />\n+    <suppress checks=\".*\" files=\".+[\\\\/]generated-test-sources[\\\\/].+\\.java\" />\n+</suppressions>"}]}