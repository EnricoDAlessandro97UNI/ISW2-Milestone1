{"sha":"bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmJmMGY2MGM4NDAzNGM3ZDNhMWI0ZjUxZWY2ODZkYjVkZTJiZjlmMmM=","commit":{"author":{"name":"Yiming Zang","email":"yzang@twitter.com","date":"2016-07-31T07:57:41Z"},"committer":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-07-31T07:57:41Z"},"message":"DL-20: Validate bk read timeout in configuration\n\nDL-20: Ensure bkcReadTimeoutSeconds is larger than readLACLongPollTimeout\n\nAuthor: Yiming Zang <yzang@twitter.com>\n\nReviewers: Sijie Guo <sijie@apache.org>\n\nCloses #4 from yzang/yzang/validate_configuration","tree":{"sha":"7fcde1e9ce9906a27d9bbfd53289d8945c1bf653","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/7fcde1e9ce9906a27d9bbfd53289d8945c1bf653"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c/comments","author":null,"committer":null,"parents":[{"sha":"bb31fd75bf4cf022001e9be25ea725477b0a5e16","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/bb31fd75bf4cf022001e9be25ea725477b0a5e16","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/bb31fd75bf4cf022001e9be25ea725477b0a5e16"}],"stats":{"total":37,"additions":37,"deletions":0},"files":[{"sha":"0d69f4a1d2c6d9d9570975b5fc42c0f77e38a41e","filename":"src/main/java/com/twitter/distributedlog/DistributedLogConfiguration.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FDistributedLogConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FDistributedLogConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FDistributedLogConfiguration.java?ref=bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c","patch":"@@ -3336,5 +3336,14 @@ public DistributedLogConfiguration setEIInjectReadAheadDelayPercent(int percent)\n         return this;\n     }\n \n+    /**\n+     * Validate the configuration\n+     */\n+    public void validate() {\n+        Preconditions.checkArgument(getBKClientReadTimeout() * 1000 > getReadLACLongPollTimeout(),\n+            \"Invalid timeout configuration : bkcReadTimeoutSeconds (\"+getBKClientReadTimeout()+\n+                \") should be longer than readLACLongPollTimeout (\"+getReadLACLongPollTimeout()+\")\");\n+    }\n+\n \n }"},{"sha":"dd78a4e7e4edfe57f80dab11085cf39028e033d3","filename":"src/main/java/com/twitter/distributedlog/impl/BKDLUtils.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fimpl%2FBKDLUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fimpl%2FBKDLUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fimpl%2FBKDLUtils.java?ref=bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c","patch":"@@ -51,6 +51,8 @@ public static void validateConfAndURI(DistributedLogConfiguration conf, URI uri)\n         throws IllegalArgumentException {\n         if (null == conf) {\n             throw new IllegalArgumentException(\"Incorrect Configuration\");\n+        } else {\n+            conf.validate();\n         }\n         if ((null == uri) || (null == uri.getAuthority()) || (null == uri.getPath())) {\n             throw new IllegalArgumentException(\"Incorrect ZK URI\");"},{"sha":"8dcb05305107de26fd04f04867e19238e5f22de2","filename":"src/test/java/com/twitter/distributedlog/TestDistributedLogConfiguration.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FTestDistributedLogConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FTestDistributedLogConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FTestDistributedLogConfiguration.java?ref=bf0f60c84034c7d3a1b4f51ef686db5de2bf9f2c","patch":"@@ -102,4 +102,30 @@ public void getEnsemblePlacementResolverClass() throws Exception {\n                 .setEnsemblePlacementDnsResolverClass(TestDNSResolver.class);\n         assertEquals(TestDNSResolver.class, conf3.getEnsemblePlacementDnsResolverClass());\n     }\n+\n+    @Test(timeout = 200000)\n+    public void validateConfiguration(){\n+        boolean exceptionThrown=false;\n+        DistributedLogConfiguration conf = new DistributedLogConfiguration();\n+        // validate default configuration\n+        conf.validate();\n+        // test invalid timeout, should throw exception\n+        conf.setReadLACLongPollTimeout(conf.getBKClientReadTimeout() * 1000);\n+        try {\n+            conf.validate();\n+        } catch (IllegalArgumentException e){\n+            exceptionThrown=true;\n+        }\n+        assertTrue(exceptionThrown);\n+        exceptionThrown=false;\n+        conf.setReadLACLongPollTimeout(conf.getBKClientReadTimeout() * 1000 * 2);\n+        try {\n+            conf.validate();\n+        } catch (IllegalArgumentException e){\n+            exceptionThrown=true;\n+        }\n+        assertTrue(exceptionThrown);\n+    }\n+\n+\n }"}]}