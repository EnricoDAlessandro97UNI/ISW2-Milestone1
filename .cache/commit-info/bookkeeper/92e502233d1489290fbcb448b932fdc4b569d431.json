{"sha":"92e502233d1489290fbcb448b932fdc4b569d431","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjkyZTUwMjIzM2QxNDg5MjkwZmJjYjQ0OGI5MzJmZGM0YjU2OWQ0MzE=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-12-06T06:54:41Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-12-06T06:54:41Z"},"message":"BOOKKEEPER-810: Allow to configure TCP connect timeout (Charles Xie via sijie)","tree":{"sha":"a0a6a0ed5777a972f3ead50f5c41004361727a5a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/a0a6a0ed5777a972f3ead50f5c41004361727a5a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/92e502233d1489290fbcb448b932fdc4b569d431","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/92e502233d1489290fbcb448b932fdc4b569d431","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/92e502233d1489290fbcb448b932fdc4b569d431","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/92e502233d1489290fbcb448b932fdc4b569d431/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"e790cab6d89de3cff3ee32842347d0176b6e24c5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/e790cab6d89de3cff3ee32842347d0176b6e24c5","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/e790cab6d89de3cff3ee32842347d0176b6e24c5"}],"stats":{"total":120,"additions":120,"deletions":0},"files":[{"sha":"f4b8b9344797c4a5eb4555ce08bd2af73869a0b6","filename":"CHANGES.txt","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/92e502233d1489290fbcb448b932fdc4b569d431/CHANGES.txt","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/92e502233d1489290fbcb448b932fdc4b569d431/CHANGES.txt","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/CHANGES.txt?ref=92e502233d1489290fbcb448b932fdc4b569d431","patch":"@@ -32,6 +32,10 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-813: BookieShell doesn't find index directory (Charles Xie via sijie)\n \n+      bookkeeper-client:\n+\n+        BOOKKEEPER-810: Allow to configure TCP connect timeout (Charles Xie via sijie)\n+\n Release 4.3.0 - 2014-10-03\n \n   Non-backward compatible changes:"},{"sha":"ae63c70631c99a1d35c0de523699dd382672a4b2","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ClientConfiguration.java","status":"modified","additions":111,"deletions":0,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/92e502233d1489290fbcb448b932fdc4b569d431/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fconf%2FClientConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/92e502233d1489290fbcb448b932fdc4b569d431/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fconf%2FClientConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fconf%2FClientConfiguration.java?ref=92e502233d1489290fbcb448b932fdc4b569d431","patch":"@@ -48,6 +48,11 @@ public class ClientConfiguration extends AbstractConfiguration {\n \n     // NIO Parameters\n     protected final static String CLIENT_TCP_NODELAY = \"clientTcpNoDelay\";\n+    protected final static String CLIENT_SENDBUFFER_SIZE = \"clientSendBufferSize\";\n+    protected final static String CLIENT_RECEIVEBUFFER_SIZE = \"clientReceiveBufferSize\";\n+    protected final static String CLIENT_WRITEBUFFER_LOW_WATER_MARK = \"clientWriteBufferLowWaterMark\";\n+    protected final static String CLIENT_WRITEBUFFER_HIGH_WATER_MARK = \"clientWriteBufferHighWaterMark\";\n+    protected final static String CLIENT_CONNECT_TIMEOUT_MILLIS = \"clientConnectTimeoutMillis\";\n     protected final static String NUM_CHANNELS_PER_BOOKIE = \"numChannelsPerBookie\";\n     // Read Parameters\n     protected final static String READ_TIMEOUT = \"readTimeout\";\n@@ -198,6 +203,112 @@ public ClientConfiguration setClientTcpNoDelay(boolean noDelay) {\n         return this;\n     }\n \n+    /**\n+     * Get client netty channel send buffer size.\n+     *\n+     * @return client netty channel send buffer size\n+     */\n+    public int getClientSendBufferSize() {\n+        return getInt(CLIENT_SENDBUFFER_SIZE, 1 * 1024 * 1024);\n+    }\n+\n+    /**\n+     * Set client netty channel send buffer size.\n+     *\n+     * @param bufferSize\n+     *          client netty channel send buffer size.\n+     * @return client configuration.\n+     */\n+    public ClientConfiguration setClientSendBufferSize(int bufferSize) {\n+        setProperty(CLIENT_SENDBUFFER_SIZE, bufferSize);\n+        return this;\n+    }\n+\n+    /**\n+     * Get client netty channel receive buffer size.\n+     *\n+     * @return client netty channel receive buffer size.\n+     */\n+    public int getClientReceiveBufferSize() {\n+        return getInt(CLIENT_RECEIVEBUFFER_SIZE, 1 * 1024 * 1024);\n+    }\n+\n+    /**\n+     * Set client netty channel receive buffer size.\n+     *\n+     * @param bufferSize\n+     *          netty channel receive buffer size.\n+     * @return client configuration.\n+     */\n+    public ClientConfiguration setClientReceiveBufferSize(int bufferSize) {\n+        setProperty(CLIENT_RECEIVEBUFFER_SIZE, bufferSize);\n+        return this;\n+    }\n+\n+    /**\n+     * Get client netty channel write buffer low water mark.\n+     *\n+     * @return netty channel write buffer low water mark.\n+     */\n+    public int getClientWriteBufferLowWaterMark() {\n+        return getInt(CLIENT_WRITEBUFFER_LOW_WATER_MARK, 32 * 1024);\n+    }\n+\n+    /**\n+     * Set client netty channel write buffer low water mark.\n+     *\n+     * @param waterMark\n+     *          netty channel write buffer low water mark.\n+     * @return client configuration.\n+     */\n+    public ClientConfiguration setClientWriteBufferLowWaterMark(int waterMark) {\n+        setProperty(CLIENT_WRITEBUFFER_LOW_WATER_MARK, waterMark);\n+        return this;\n+    }\n+\n+    /**\n+     * Get client netty channel write buffer high water mark.\n+     *\n+     * @return netty channel write buffer high water mark.\n+     */\n+    public int getClientWriteBufferHighWaterMark() {\n+        return getInt(CLIENT_WRITEBUFFER_HIGH_WATER_MARK, 64 * 1024);\n+    }\n+\n+    /**\n+     * Set client netty channel write buffer high water mark.\n+     *\n+     * @param waterMark\n+     *          netty channel write buffer high water mark.\n+     * @return client configuration.\n+     */\n+    public ClientConfiguration setClientWriteBufferHighWaterMark(int waterMark) {\n+        setProperty(CLIENT_WRITEBUFFER_HIGH_WATER_MARK, waterMark);\n+        return this;\n+    }\n+\n+    /**\n+     * Get client netty connect timeout in millis.\n+     *\n+     * @return client netty connect timeout in millis.\n+     */\n+    public int getClientConnectTimeoutMillis() {\n+        // 10 seconds as netty default value.\n+        return getInt(CLIENT_CONNECT_TIMEOUT_MILLIS, 10000);\n+    }\n+\n+    /**\n+     * Set client netty connect timeout in millis.\n+     *\n+     * @param connectTimeoutMillis\n+     *          client netty connect timeout in millis.\n+     * @return client configuration.\n+     */\n+    public ClientConfiguration setClientConnectTimeoutMillis(int connectTimeoutMillis) {\n+        setProperty(CLIENT_CONNECT_TIMEOUT_MILLIS, connectTimeoutMillis);\n+        return this;\n+    }\n+\n     /**\n      * Get num channels per bookie.\n      *"},{"sha":"1dbc850f2a4c4cc5d5bdf7d19744425e91673103","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/92e502233d1489290fbcb448b932fdc4b569d431/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FPerChannelBookieClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/92e502233d1489290fbcb448b932fdc4b569d431/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FPerChannelBookieClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FPerChannelBookieClient.java?ref=92e502233d1489290fbcb448b932fdc4b569d431","patch":"@@ -171,6 +171,11 @@ private void connect() {\n         bootstrap.setPipelineFactory(this);\n         bootstrap.setOption(\"tcpNoDelay\", conf.getClientTcpNoDelay());\n         bootstrap.setOption(\"keepAlive\", true);\n+        bootstrap.setOption(\"connectTimeoutMillis\", conf.getClientConnectTimeoutMillis());\n+        bootstrap.setOption(\"child.sendBufferSize\", conf.getClientSendBufferSize());\n+        bootstrap.setOption(\"child.receiveBufferSize\", conf.getClientReceiveBufferSize());\n+        bootstrap.setOption(\"writeBufferLowWaterMark\", conf.getClientWriteBufferLowWaterMark());\n+        bootstrap.setOption(\"writeBufferHighWaterMark\", conf.getClientWriteBufferHighWaterMark());\n \n         ChannelFuture future = bootstrap.connect(addr.getSocketAddress());\n         future.addListener(new ChannelFutureListener() {"}]}