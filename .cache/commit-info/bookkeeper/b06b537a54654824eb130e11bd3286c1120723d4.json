{"sha":"b06b537a54654824eb130e11bd3286c1120723d4","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmIwNmI1MzdhNTQ2NTQ4MjRlYjEzMGUxMWJkMzI4NmMxMTIwNzIzZDQ=","commit":{"author":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-12-17T06:50:41Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2016-12-17T06:50:41Z"},"message":"DL-88: remove watches when unregister children watches\n\nmerge twitter's change from Sijie Guo\n\nAuthor: Sijie Guo <sijieg@twitter.com>\nAuthor: Jordan Bull <jbull@twitter.com>\nAuthor: Leigh Stewart <lstewart@twitter.com>\n\nReviewers: Leigh Stewart <lstewart@apache.org>\n\nCloses #60 from sijie/merge/DL-88","tree":{"sha":"4c21e5feccfc6e2ff9354953e80d14ab7364fbfb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/4c21e5feccfc6e2ff9354953e80d14ab7364fbfb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/b06b537a54654824eb130e11bd3286c1120723d4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/b06b537a54654824eb130e11bd3286c1120723d4","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/b06b537a54654824eb130e11bd3286c1120723d4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/b06b537a54654824eb130e11bd3286c1120723d4/comments","author":null,"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"db17ed7b24abd2a938dc344a0bae4a703349c207","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/db17ed7b24abd2a938dc344a0bae4a703349c207","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/db17ed7b24abd2a938dc344a0bae4a703349c207"}],"stats":{"total":62,"additions":49,"deletions":13},"files":[{"sha":"a6ec3182bd1d00ba28a85b009cd8c55cf5c453c9","filename":"src/main/java/com/twitter/distributedlog/BKLogHandler.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogHandler.java?ref=b06b537a54654824eb130e11bd3286c1120723d4","patch":"@@ -701,13 +701,6 @@ private void checkLogStreamExists() throws IOException {\n         }\n     }\n \n-    @Override\n-    public Future<Void> asyncClose() {\n-        // No-op\n-        this.zooKeeperClient.getWatcherManager().unregisterChildWatcher(logMetadata.getLogSegmentsPath(), this);\n-        return Future.Void();\n-    }\n-\n     @Override\n     public Future<Void> asyncAbort() {\n         return asyncClose();"},{"sha":"6a8f90ee9020a6d5cf402917f7ae562d21fdb73e","filename":"src/main/java/com/twitter/distributedlog/BKLogReadHandler.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogReadHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogReadHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogReadHandler.java?ref=b06b537a54654824eb130e11bd3286c1120723d4","patch":"@@ -311,7 +311,12 @@ public Future<Void> apply(Void result) {\n                 if (null != handleCache) {\n                     handleCache.clear();\n                 }\n-                return BKLogReadHandler.super.asyncClose();\n+                // No-op\n+                zooKeeperClient.getWatcherManager().unregisterChildWatcher(\n+                        logMetadata.getLogSegmentsPath(),\n+                        BKLogReadHandler.this,\n+                        true);\n+                return Future.Void();\n             }\n         });\n     }"},{"sha":"4665ed5a2c7005e3567ebe354eb289ffa78f09e9","filename":"src/main/java/com/twitter/distributedlog/BKLogWriteHandler.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogWriteHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogWriteHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogWriteHandler.java?ref=b06b537a54654824eb130e11bd3286c1120723d4","patch":"@@ -1263,7 +1263,11 @@ public Future<Void> asyncClose() {\n         ).flatMap(new AbstractFunction1<Void, Future<Void>>() {\n             @Override\n             public Future<Void> apply(Void result) {\n-                return BKLogWriteHandler.super.asyncClose();\n+                zooKeeperClient.getWatcherManager().unregisterChildWatcher(\n+                        logMetadata.getLogSegmentsPath(),\n+                        BKLogWriteHandler.this,\n+                        false);\n+                return Future.Void();\n             }\n         });\n     }"},{"sha":"9ea9e37c01d00c6530faf4fc7d3754eca20fb827","filename":"src/main/java/com/twitter/distributedlog/ZooKeeperClient.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FZooKeeperClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FZooKeeperClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FZooKeeperClient.java?ref=b06b537a54654824eb130e11bd3286c1120723d4","patch":"@@ -169,6 +169,7 @@ public ZooKeeperConnectionException(String message, Throwable cause) {\n         this.credentials = credentials;\n         this.watcherManager = ZKWatcherManager.newBuilder()\n                 .name(name)\n+                .zkc(this)\n                 .statsLogger(statsLogger.scope(\"watcher_manager\"))\n                 .build();\n     }"},{"sha":"5c1500915c6a96a560bb4416f97aa609241e528f","filename":"src/main/java/com/twitter/distributedlog/readahead/ReadAheadWorker.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Freadahead%2FReadAheadWorker.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Freadahead%2FReadAheadWorker.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Freadahead%2FReadAheadWorker.java?ref=b06b537a54654824eb130e11bd3286c1120723d4","patch":"@@ -359,7 +359,7 @@ public Future<Void> asyncClose() {\n         running = false;\n \n         this.zkc.getWatcherManager()\n-                .unregisterChildWatcher(this.logMetadata.getLogSegmentsPath(), this);\n+                .unregisterChildWatcher(this.logMetadata.getLogSegmentsPath(), this, true);\n \n         // Aside from unfortunate naming of variables, this allows\n         // the currently active long poll to be interrupted and completed"},{"sha":"03b2841d125db26ab0b63b82f1571e87a15a66da","filename":"src/main/java/com/twitter/distributedlog/zk/ZKWatcherManager.java","status":"modified","additions":34,"deletions":2,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fzk%2FZKWatcherManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b06b537a54654824eb130e11bd3286c1120723d4/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fzk%2FZKWatcherManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fzk%2FZKWatcherManager.java?ref=b06b537a54654824eb130e11bd3286c1120723d4","patch":"@@ -17,8 +17,11 @@\n  */\n package com.twitter.distributedlog.zk;\n \n+import com.twitter.distributedlog.ZooKeeperClient;\n import org.apache.bookkeeper.stats.Gauge;\n import org.apache.bookkeeper.stats.StatsLogger;\n+import org.apache.zookeeper.AsyncCallback;\n+import org.apache.zookeeper.KeeperException;\n import org.apache.zookeeper.WatchedEvent;\n import org.apache.zookeeper.Watcher;\n import org.slf4j.Logger;\n@@ -50,31 +53,40 @@ public static class Builder {\n \n         private String _name;\n         private StatsLogger _statsLogger;\n+        private ZooKeeperClient _zkc;\n \n         public Builder name(String name) {\n             this._name = name;\n             return this;\n         }\n \n+        public Builder zkc(ZooKeeperClient zkc) {\n+            this._zkc = zkc;\n+            return this;\n+        }\n+\n         public Builder statsLogger(StatsLogger statsLogger) {\n             this._statsLogger = statsLogger;\n             return this;\n         }\n \n         public ZKWatcherManager build() {\n-            return new ZKWatcherManager(_name, _statsLogger);\n+            return new ZKWatcherManager(_name, _zkc, _statsLogger);\n         }\n     }\n \n     private final String name;\n+    private final ZooKeeperClient zkc;\n     private final StatsLogger statsLogger;\n \n     protected final ConcurrentMap<String, Set<Watcher>> childWatches;\n     protected final AtomicInteger allWatchesGauge;\n \n     private ZKWatcherManager(String name,\n+                             ZooKeeperClient zkc,\n                              StatsLogger statsLogger) {\n         this.name = name;\n+        this.zkc = zkc;\n         this.statsLogger = statsLogger;\n \n         // watches\n@@ -127,7 +139,7 @@ public Watcher registerChildWatcher(String path, Watcher watcher) {\n         return this;\n     }\n \n-    public void unregisterChildWatcher(String path, Watcher watcher) {\n+    public void unregisterChildWatcher(String path, Watcher watcher, boolean removeFromServer) {\n         Set<Watcher> watchers = childWatches.get(path);\n         if (null == watchers) {\n             logger.warn(\"No watchers found on path {} while unregistering child watcher {}.\",\n@@ -141,6 +153,26 @@ public void unregisterChildWatcher(String path, Watcher watcher) {\n                 logger.warn(\"Remove a non-registered child watcher {} from path {}\", watcher, path);\n             }\n             if (watchers.isEmpty()) {\n+                // best-efforts to remove watches\n+                try {\n+                    if (null != zkc && removeFromServer) {\n+                        zkc.get().removeWatches(path, this, WatcherType.Children, true, new AsyncCallback.VoidCallback() {\n+                            @Override\n+                            public void processResult(int rc, String path, Object ctx) {\n+                                if (KeeperException.Code.OK.intValue() == rc) {\n+                                    logger.debug(\"Successfully removed children watches from {}\", path);\n+                                } else {\n+                                    logger.debug(\"Encountered exception on removing children watches from {}\",\n+                                            path, KeeperException.create(KeeperException.Code.get(rc)));\n+                                }\n+                            }\n+                        }, null);\n+                    }\n+                } catch (InterruptedException e) {\n+                    logger.debug(\"Encountered exception on removing watches from {}\", path, e);\n+                } catch (ZooKeeperClient.ZooKeeperConnectionException e) {\n+                    logger.debug(\"Encountered exception on removing watches from {}\", path, e);\n+                }\n                 childWatches.remove(path, watchers);\n             }\n         }"},{"sha":"3ad181d48bf3adb8e5e574e9601b5728dc8a1884","filename":"src/test/java/com/twitter/distributedlog/zk/TestZKWatcherManager.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b06b537a54654824eb130e11bd3286c1120723d4/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fzk%2FTestZKWatcherManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b06b537a54654824eb130e11bd3286c1120723d4/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fzk%2FTestZKWatcherManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Fzk%2FTestZKWatcherManager.java?ref=b06b537a54654824eb130e11bd3286c1120723d4","patch":"@@ -34,6 +34,7 @@ public class TestZKWatcherManager {\n     public void testRegisterUnregisterWatcher() throws Exception {\n         ZKWatcherManager watcherManager = ZKWatcherManager.newBuilder()\n                 .name(\"test-register-unregister-watcher\")\n+                .zkc(null)\n                 .statsLogger(NullStatsLogger.INSTANCE)\n                 .build();\n         String path = \"/test-register-unregister-watcher\";\n@@ -71,7 +72,7 @@ public void process(WatchedEvent event) {\n         assertEquals(event2, events.get(1));\n \n         // unregister watcher\n-        watcherManager.unregisterChildWatcher(path, watcher);\n+        watcherManager.unregisterChildWatcher(path, watcher, true);\n \n         assertEquals(0, watcherManager.childWatches.size());\n     }"}]}