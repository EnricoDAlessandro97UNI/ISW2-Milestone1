{"sha":"6d71b8292bc255e21f2dcf048be191650c01b4dc","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjZkNzFiODI5MmJjMjU1ZTIxZjJkY2YwNDhiZTE5MTY1MGMwMWI0ZGM=","commit":{"author":{"name":"Rithin","email":"rithin.shetty@salesforce.com","date":"2016-07-11T21:01:30Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2016-07-11T21:01:30Z"},"message":"BOOKKEEPER-922: CreaterId in ledger metadata\n\nIntroduces a generic Map<String, byte[]> customMetadata to be stored as part of ledger metadata on the metadata server(zk).\n\nAuthor: Rithin Shetty <rithingmail.com>\n\nAuthor: Rithin <rithin.shetty@salesforce.com>\n\nReviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>\n\nCloses #46 from rithin-shetty/JIRA-922-ledgerCustomMetadata","tree":{"sha":"b51fe1337c79982c6935b47b0cb70b41613f3c24","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/b51fe1337c79982c6935b47b0cb70b41613f3c24"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/6d71b8292bc255e21f2dcf048be191650c01b4dc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/6d71b8292bc255e21f2dcf048be191650c01b4dc","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/6d71b8292bc255e21f2dcf048be191650c01b4dc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/6d71b8292bc255e21f2dcf048be191650c01b4dc/comments","author":{"login":"rithin-shetty","id":19738357,"node_id":"MDQ6VXNlcjE5NzM4MzU3","avatar_url":"https://avatars.githubusercontent.com/u/19738357?v=4","gravatar_id":"","url":"https://api.github.com/users/rithin-shetty","html_url":"https://github.com/rithin-shetty","followers_url":"https://api.github.com/users/rithin-shetty/followers","following_url":"https://api.github.com/users/rithin-shetty/following{/other_user}","gists_url":"https://api.github.com/users/rithin-shetty/gists{/gist_id}","starred_url":"https://api.github.com/users/rithin-shetty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rithin-shetty/subscriptions","organizations_url":"https://api.github.com/users/rithin-shetty/orgs","repos_url":"https://api.github.com/users/rithin-shetty/repos","events_url":"https://api.github.com/users/rithin-shetty/events{/privacy}","received_events_url":"https://api.github.com/users/rithin-shetty/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"e5f3afa5ef84dbc466562664f1f8b0cd60779c02","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/e5f3afa5ef84dbc466562664f1f8b0cd60779c02","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/e5f3afa5ef84dbc466562664f1f8b0cd60779c02"}],"stats":{"total":989,"additions":948,"deletions":41},"files":[{"sha":"75ab7597e4e26464c71802f8a785678358458e64","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java","status":"modified","additions":63,"deletions":17,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeper.java?ref=6d71b8292bc255e21f2dcf048be191650c01b4dc","patch":"@@ -22,6 +22,7 @@\n \n import java.io.IOException;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n@@ -431,7 +432,7 @@ public void asyncCreateLedger(final int ensSize,\n                                   final DigestType digestType,\n                                   final byte[] passwd, final CreateCallback cb, final Object ctx)\n     {\n-        asyncCreateLedger(ensSize, writeQuorumSize, writeQuorumSize, digestType, passwd, cb, ctx);\n+        asyncCreateLedger(ensSize, writeQuorumSize, writeQuorumSize, digestType, passwd, cb, ctx, null);\n     }\n \n     /**\n@@ -462,13 +463,13 @@ public void asyncCreateLedger(final int ensSize,\n      *          createCallback implementation\n      * @param ctx\n      *          optional control object\n+     * @param customMetadata\n+     *          optional customMetadata that holds user specified metadata\n      */\n \n-    public void asyncCreateLedger(final int ensSize,\n-                                  final int writeQuorumSize,\n-                                  final int ackQuorumSize,\n-                                  final DigestType digestType,\n-                                  final byte[] passwd, final CreateCallback cb, final Object ctx) {\n+    public void asyncCreateLedger(final int ensSize, final int writeQuorumSize, final int ackQuorumSize,\n+                                  final DigestType digestType, final byte[] passwd,\n+                                  final CreateCallback cb, final Object ctx, final Map<String, byte[]> customMetadata) {\n         if (writeQuorumSize < ackQuorumSize) {\n             throw new IllegalArgumentException(\"Write quorum must be larger than ack quorum\");\n         }\n@@ -479,7 +480,7 @@ public void asyncCreateLedger(final int ensSize,\n                 return;\n             }\n             new LedgerCreateOp(BookKeeper.this, ensSize, writeQuorumSize,\n-                               ackQuorumSize, digestType, passwd, cb, ctx)\n+                               ackQuorumSize, digestType, passwd, cb, ctx, customMetadata)\n                 .initiate();\n         } finally {\n             closeLock.readLock().unlock();\n@@ -519,7 +520,27 @@ public LedgerHandle createLedger(DigestType digestType, byte passwd[])\n     public LedgerHandle createLedger(int ensSize, int qSize,\n                                      DigestType digestType, byte passwd[])\n             throws InterruptedException, BKException {\n-        return createLedger(ensSize, qSize, qSize, digestType, passwd);\n+        return createLedger(ensSize, qSize, qSize, digestType, passwd, null);\n+    }\n+\n+    /**\n+     * Synchronous call to create ledger. Parameters match those of\n+     * {@link #asyncCreateLedger(int, int, DigestType, byte[],\n+     *                           AsyncCallback.CreateCallback, Object)}\n+     *\n+     * @param ensSize\n+     * @param writeQuorumSize\n+     * @param ackQuorumSize\n+     * @param digestType\n+     * @param passwd\n+     * @return a handle to the newly created ledger\n+     * @throws InterruptedException\n+     * @throws BKException\n+     */\n+    public LedgerHandle createLedger(int ensSize, int writeQuorumSize, int ackQuorumSize,\n+            DigestType digestType, byte passwd[])\n+            throws InterruptedException, BKException {\n+        return createLedger(ensSize, writeQuorumSize, ackQuorumSize, digestType, passwd, null);\n     }\n \n     /**\n@@ -532,20 +553,21 @@ public LedgerHandle createLedger(int ensSize, int qSize,\n      * @param ackQuorumSize\n      * @param digestType\n      * @param passwd\n+     * @param customMetadata\n      * @return a handle to the newly created ledger\n      * @throws InterruptedException\n      * @throws BKException\n      */\n     public LedgerHandle createLedger(int ensSize, int writeQuorumSize, int ackQuorumSize,\n-                                     DigestType digestType, byte passwd[])\n+                                     DigestType digestType, byte passwd[], final Map<String, byte[]> customMetadata)\n             throws InterruptedException, BKException {\n         SyncCounter counter = new SyncCounter();\n         counter.inc();\n         /*\n          * Calls asynchronous version\n          */\n         asyncCreateLedger(ensSize, writeQuorumSize, ackQuorumSize, digestType, passwd,\n-                          new SyncCreateCallback(), counter);\n+                          new SyncCreateCallback(), counter, customMetadata);\n \n         /*\n          * Wait\n@@ -574,20 +596,44 @@ public LedgerHandle createLedger(int ensSize, int writeQuorumSize, int ackQuorum\n      * @param ackQuorumSize\n      * @param digestType\n      * @param passwd\n+     * @param customMetadata\n      * @return a handle to the newly created ledger\n      * @throws InterruptedException\n      * @throws BKException\n      */\n     public LedgerHandle createLedgerAdv(int ensSize, int writeQuorumSize, int ackQuorumSize,\n                                         DigestType digestType, byte passwd[])\n             throws InterruptedException, BKException {\n+        return createLedgerAdv(ensSize, writeQuorumSize, ackQuorumSize, digestType, passwd, null);\n+    }\n+\n+    /**\n+     * Synchronous call to create ledger.\n+     * Creates a new ledger asynchronously and returns {@link LedgerHandleAdv} which can accept entryId.\n+     * Parameters must match those of\n+     * {@link #asyncCreateLedgerAdv(int, int, int, DigestType, byte[],\n+     *                           AsyncCallback.CreateCallback, Object)}\n+     *\n+     * @param ensSize\n+     * @param writeQuorumSize\n+     * @param ackQuorumSize\n+     * @param digestType\n+     * @param passwd\n+     * @param customMetadata\n+     * @return a handle to the newly created ledger\n+     * @throws InterruptedException\n+     * @throws BKException\n+     */\n+    public LedgerHandle createLedgerAdv(int ensSize, int writeQuorumSize, int ackQuorumSize,\n+                                        DigestType digestType, byte passwd[], final Map<String, byte[]> customMetadata)\n+            throws InterruptedException, BKException {\n         SyncCounter counter = new SyncCounter();\n         counter.inc();\n         /*\n          * Calls asynchronous version\n          */\n         asyncCreateLedgerAdv(ensSize, writeQuorumSize, ackQuorumSize, digestType, passwd,\n-                             new SyncCreateCallback(), counter);\n+                             new SyncCreateCallback(), counter, customMetadata);\n \n         /*\n          * Wait\n@@ -633,12 +679,12 @@ public LedgerHandle createLedgerAdv(int ensSize, int writeQuorumSize, int ackQuo\n      *          createCallback implementation\n      * @param ctx\n      *          optional control object\n+     * @param customMetadata\n+     *          optional customMetadata that holds user specified metadata\n      */\n-    public void asyncCreateLedgerAdv(final int ensSize,\n-                                     final int writeQuorumSize,\n-                                     final int ackQuorumSize,\n-                                     final DigestType digestType,\n-                                     final byte[] passwd, final CreateCallback cb, final Object ctx) {\n+    public void asyncCreateLedgerAdv(final int ensSize, final int writeQuorumSize, final int ackQuorumSize,\n+            final DigestType digestType, final byte[] passwd, final CreateCallback cb, final Object ctx,\n+            final Map<String, byte[]> customMetadata) {\n         if (writeQuorumSize < ackQuorumSize) {\n             throw new IllegalArgumentException(\"Write quorum must be larger than ack quorum\");\n         }\n@@ -649,7 +695,7 @@ public void asyncCreateLedgerAdv(final int ensSize,\n                 return;\n             }\n             new LedgerCreateOp(BookKeeper.this, ensSize, writeQuorumSize,\n-                               ackQuorumSize, digestType, passwd, cb, ctx).initiateAdv();\n+                               ackQuorumSize, digestType, passwd, cb, ctx, customMetadata).initiateAdv();\n         } finally {\n             closeLock.readLock().unlock();\n         }"},{"sha":"3626ce02d844bdcf0b84340893b055c714757ee5","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerCreateOp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerCreateOp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerCreateOp.java?ref=6d71b8292bc255e21f2dcf048be191650c01b4dc","patch":"@@ -23,6 +23,7 @@\n \n import java.security.GeneralSecurityException;\n import java.util.ArrayList;\n+import java.util.Map;\n import java.util.concurrent.TimeUnit;\n \n import org.apache.bookkeeper.client.AsyncCallback.CreateCallback;\n@@ -75,14 +76,14 @@ class LedgerCreateOp implements GenericCallback<Void> {\n      *       callback implementation\n      * @param ctx\n      *       optional control object\n+     * @param customMetadata\n+     *       A map of user specified custom metadata about the ledger to be persisted; will not try to\n+     *       preserve the order(e.g. sortedMap) upon later retireval.\n      */\n-\n-    LedgerCreateOp(BookKeeper bk, int ensembleSize,\n-                   int writeQuorumSize, int ackQuorumSize,\n-                   DigestType digestType,\n-                   byte[] passwd, CreateCallback cb, Object ctx) {\n+    LedgerCreateOp(BookKeeper bk, int ensembleSize, int writeQuorumSize, int ackQuorumSize, DigestType digestType,\n+            byte[] passwd, CreateCallback cb, Object ctx, final Map<String, byte[]> customMetadata) {\n         this.bk = bk;\n-        this.metadata = new LedgerMetadata(ensembleSize, writeQuorumSize, ackQuorumSize, digestType, passwd);\n+        this.metadata = new LedgerMetadata(ensembleSize, writeQuorumSize, ackQuorumSize, digestType, passwd, customMetadata);\n         this.digestType = digestType;\n         this.passwd = passwd;\n         this.cb = cb;"},{"sha":"edb5873bfa5fe38544cdf8607c9bdd4baad38c67","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerHandle.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerHandle.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerHandle.java?ref=6d71b8292bc255e21f2dcf048be191650c01b4dc","patch":"@@ -27,6 +27,7 @@\n import java.util.Arrays;\n import java.util.Enumeration;\n import java.util.List;\n+import java.util.Map;\n import java.util.Queue;\n import java.util.concurrent.ConcurrentLinkedQueue;\n import java.util.concurrent.RejectedExecutionException;\n@@ -179,6 +180,15 @@ LedgerMetadata getLedgerMetadata() {\n         return metadata;\n     }\n \n+    /**\n+     * Get this ledger's customMetadata map.\n+     *\n+     * @return map containing user provided customMetadata.\n+     */\n+    public Map<String, byte[]> getCustomMetadata() {\n+        return metadata.getCustomMetadata();\n+    }\n+\n     /**\n      * Get the DigestManager\n      *"},{"sha":"cfe3e506dc71f6820b69589fa695b8e2be40d628","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java","status":"modified","additions":73,"deletions":2,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerMetadata.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerMetadata.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FLedgerMetadata.java?ref=6d71b8292bc255e21f2dcf048be191650c01b4dc","patch":"@@ -19,6 +19,7 @@\n \n import com.google.protobuf.ByteString;\n import com.google.protobuf.TextFormat;\n+\n import org.apache.bookkeeper.net.BookieSocketAddress;\n import org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat;\n import org.apache.bookkeeper.versioning.Version;\n@@ -31,13 +32,16 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n import java.util.SortedMap;\n import java.util.TreeMap;\n \n import static com.google.common.base.Charsets.UTF_8;\n+\n import com.google.common.base.Optional;\n+import com.google.common.collect.Maps;\n \n /**\n  * This class encapsulates all the ledger metadata that is persistently stored\n@@ -79,8 +83,10 @@ public class LedgerMetadata {\n     private LedgerMetadataFormat.DigestType digestType;\n     private byte[] password;\n \n+    private Map<String, byte[]> customMetadata = Maps.newHashMap();\n+\n     public LedgerMetadata(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n-                          BookKeeper.DigestType digestType, byte[] password) {\n+                          BookKeeper.DigestType digestType, byte[] password, Map<String, byte[]> customMetadata) {\n         this.ensembleSize = ensembleSize;\n         this.writeQuorumSize = writeQuorumSize;\n         this.ackQuorumSize = ackQuorumSize;\n@@ -99,6 +105,14 @@ public LedgerMetadata(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             LedgerMetadataFormat.DigestType.HMAC : LedgerMetadataFormat.DigestType.CRC32;\n         this.password = Arrays.copyOf(password, password.length);\n         this.hasPassword = true;\n+        if (customMetadata != null) {\n+            this.customMetadata = customMetadata;\n+        }\n+    }\n+\n+    public LedgerMetadata(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n+            BookKeeper.DigestType digestType, byte[] password) {\n+        this(ensembleSize, writeQuorumSize, ackQuorumSize, digestType, password, null);\n     }\n \n     /**\n@@ -124,6 +138,7 @@ public LedgerMetadata(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             ArrayList<BookieSocketAddress> newEnsemble = new ArrayList<BookieSocketAddress>(entry.getValue());\n             this.addEnsemble(startEntryId, newEnsemble);\n         }\n+        this.customMetadata = other.customMetadata;\n     }\n \n     private LedgerMetadata() {\n@@ -255,6 +270,14 @@ long getNextEnsembleChange(long entryId) {\n         }\n     }\n \n+    public Map<String, byte[]> getCustomMetadata() {\n+        return this.customMetadata;\n+    }\n+\n+    void setCustomMetadata(Map<String, byte[]> customMetadata) {\n+        this.customMetadata = customMetadata;\n+    }\n+\n     /**\n      * Generates a byte array of this object\n      *\n@@ -273,6 +296,14 @@ public byte[] serialize() {\n             builder.setDigestType(digestType).setPassword(ByteString.copyFrom(password));\n         }\n \n+        if (customMetadata != null) {\n+            LedgerMetadataFormat.cMetadataMapEntry.Builder cMetadataBuilder = LedgerMetadataFormat.cMetadataMapEntry.newBuilder();\n+            for (String key : customMetadata.keySet()) {\n+                cMetadataBuilder.setKey(key).setValue(ByteString.copyFrom(customMetadata.get(key)));\n+                builder.addCustomMetadata(cMetadataBuilder.build());\n+            }\n+        }\n+\n         for (Map.Entry<Long, ArrayList<BookieSocketAddress>> entry : ensembles.entrySet()) {\n             LedgerMetadataFormat.Segment.Builder segmentBuilder = LedgerMetadataFormat.Segment.newBuilder();\n             segmentBuilder.setFirstEntryId(entry.getKey());\n@@ -395,6 +426,14 @@ public static LedgerMetadata parseConfig(byte[] bytes, Version version, Optional\n             }\n             lc.addEnsemble(s.getFirstEntryId(), addrs);\n         }\n+\n+        if (data.getCustomMetadataCount() > 0) {\n+            List<LedgerMetadataFormat.cMetadataMapEntry> cMetadataList = data.getCustomMetadataList();\n+            lc.customMetadata = Maps.newHashMap();\n+            for (LedgerMetadataFormat.cMetadataMapEntry ent : cMetadataList) {\n+                lc.customMetadata.put(ent.getKey(), ent.getValue().toByteArray());\n+            }\n+        }\n         return lc;\n     }\n \n@@ -466,6 +505,37 @@ boolean isNewerThan(LedgerMetadata newMeta) {\n         return Version.Occurred.AFTER == version.compare(newMeta.version);\n     }\n \n+    /**\n+     * Routine to compare two Map<String, byte[]>; Since the values in the map are byte[], we can't use Map.equals\n+     * @param first\n+     *          The first map\n+     * @param second\n+     *          The second map to compare with\n+     * @return true if the 2 maps contain the exact set of <K,V> pairs.\n+     */\n+    public static boolean areByteArrayValMapsEqual(Map<String, byte[]> first, Map<String, byte[]> second) {\n+        if(first == null && second == null) {\n+            return true;\n+        }\n+\n+        // above check confirms that both are not null;\n+        // if one is null the other isn't; so they must\n+        // be different\n+        if (first == null || second == null) {\n+            return false;\n+        }\n+\n+        if (first.size() != second.size()) {\n+            return false;\n+        }\n+        for (Map.Entry<String, byte[]> entry : first.entrySet()) {\n+            if (!Arrays.equals(entry.getValue(), second.get(entry.getKey()))) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n     /**\n      * Is the metadata conflict with new updated metadata.\n      *\n@@ -487,7 +557,8 @@ boolean isConflictWith(LedgerMetadata newMeta) {\n             length != newMeta.length ||\n             state != newMeta.state ||\n             !digestType.equals(newMeta.digestType) ||\n-            !Arrays.equals(password, newMeta.password)) {\n+            !Arrays.equals(password, newMeta.password) ||\n+            !LedgerMetadata.areByteArrayValMapsEqual(customMetadata, newMeta.customMetadata)) {\n             return true;\n         }\n         if (state == LedgerMetadataFormat.State.CLOSED"},{"sha":"98f4764b8fb6c69e1ee37ec254392972a039840f","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/DataFormats.java","status":"modified","additions":738,"deletions":15,"changes":753,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FDataFormats.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FDataFormats.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FDataFormats.java?ref=6d71b8292bc255e21f2dcf048be191650c01b4dc","patch":"@@ -56,6 +56,16 @@ org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.SegmentOrBuilder ge\n     // optional int64 ctime = 10;\n     boolean hasCtime();\n     long getCtime();\n+    \n+    // repeated .LedgerMetadataFormat.cMetadataMapEntry customMetadata = 11;\n+    java.util.List<org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry> \n+        getCustomMetadataList();\n+    org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry getCustomMetadata(int index);\n+    int getCustomMetadataCount();\n+    java.util.List<? extends org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder> \n+        getCustomMetadataOrBuilderList();\n+    org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder getCustomMetadataOrBuilder(\n+        int index);\n   }\n   public static final class LedgerMetadataFormat extends\n       com.google.protobuf.GeneratedMessage\n@@ -683,6 +693,441 @@ public Builder clearFirstEntryId() {\n       // @@protoc_insertion_point(class_scope:LedgerMetadataFormat.Segment)\n     }\n     \n+    public interface cMetadataMapEntryOrBuilder\n+        extends com.google.protobuf.MessageOrBuilder {\n+      \n+      // optional string key = 1;\n+      boolean hasKey();\n+      String getKey();\n+      \n+      // optional bytes value = 2;\n+      boolean hasValue();\n+      com.google.protobuf.ByteString getValue();\n+    }\n+    public static final class cMetadataMapEntry extends\n+        com.google.protobuf.GeneratedMessage\n+        implements cMetadataMapEntryOrBuilder {\n+      // Use cMetadataMapEntry.newBuilder() to construct.\n+      private cMetadataMapEntry(Builder builder) {\n+        super(builder);\n+      }\n+      private cMetadataMapEntry(boolean noInit) {}\n+      \n+      private static final cMetadataMapEntry defaultInstance;\n+      public static cMetadataMapEntry getDefaultInstance() {\n+        return defaultInstance;\n+      }\n+      \n+      public cMetadataMapEntry getDefaultInstanceForType() {\n+        return defaultInstance;\n+      }\n+      \n+      public static final com.google.protobuf.Descriptors.Descriptor\n+          getDescriptor() {\n+        return org.apache.bookkeeper.proto.DataFormats.internal_static_LedgerMetadataFormat_cMetadataMapEntry_descriptor;\n+      }\n+      \n+      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable\n+          internalGetFieldAccessorTable() {\n+        return org.apache.bookkeeper.proto.DataFormats.internal_static_LedgerMetadataFormat_cMetadataMapEntry_fieldAccessorTable;\n+      }\n+      \n+      private int bitField0_;\n+      // optional string key = 1;\n+      public static final int KEY_FIELD_NUMBER = 1;\n+      private java.lang.Object key_;\n+      public boolean hasKey() {\n+        return ((bitField0_ & 0x00000001) == 0x00000001);\n+      }\n+      public String getKey() {\n+        java.lang.Object ref = key_;\n+        if (ref instanceof String) {\n+          return (String) ref;\n+        } else {\n+          com.google.protobuf.ByteString bs = \n+              (com.google.protobuf.ByteString) ref;\n+          String s = bs.toStringUtf8();\n+          if (com.google.protobuf.Internal.isValidUtf8(bs)) {\n+            key_ = s;\n+          }\n+          return s;\n+        }\n+      }\n+      private com.google.protobuf.ByteString getKeyBytes() {\n+        java.lang.Object ref = key_;\n+        if (ref instanceof String) {\n+          com.google.protobuf.ByteString b = \n+              com.google.protobuf.ByteString.copyFromUtf8((String) ref);\n+          key_ = b;\n+          return b;\n+        } else {\n+          return (com.google.protobuf.ByteString) ref;\n+        }\n+      }\n+      \n+      // optional bytes value = 2;\n+      public static final int VALUE_FIELD_NUMBER = 2;\n+      private com.google.protobuf.ByteString value_;\n+      public boolean hasValue() {\n+        return ((bitField0_ & 0x00000002) == 0x00000002);\n+      }\n+      public com.google.protobuf.ByteString getValue() {\n+        return value_;\n+      }\n+      \n+      private void initFields() {\n+        key_ = \"\";\n+        value_ = com.google.protobuf.ByteString.EMPTY;\n+      }\n+      private byte memoizedIsInitialized = -1;\n+      public final boolean isInitialized() {\n+        byte isInitialized = memoizedIsInitialized;\n+        if (isInitialized != -1) return isInitialized == 1;\n+        \n+        memoizedIsInitialized = 1;\n+        return true;\n+      }\n+      \n+      public void writeTo(com.google.protobuf.CodedOutputStream output)\n+                          throws java.io.IOException {\n+        getSerializedSize();\n+        if (((bitField0_ & 0x00000001) == 0x00000001)) {\n+          output.writeBytes(1, getKeyBytes());\n+        }\n+        if (((bitField0_ & 0x00000002) == 0x00000002)) {\n+          output.writeBytes(2, value_);\n+        }\n+        getUnknownFields().writeTo(output);\n+      }\n+      \n+      private int memoizedSerializedSize = -1;\n+      public int getSerializedSize() {\n+        int size = memoizedSerializedSize;\n+        if (size != -1) return size;\n+      \n+        size = 0;\n+        if (((bitField0_ & 0x00000001) == 0x00000001)) {\n+          size += com.google.protobuf.CodedOutputStream\n+            .computeBytesSize(1, getKeyBytes());\n+        }\n+        if (((bitField0_ & 0x00000002) == 0x00000002)) {\n+          size += com.google.protobuf.CodedOutputStream\n+            .computeBytesSize(2, value_);\n+        }\n+        size += getUnknownFields().getSerializedSize();\n+        memoizedSerializedSize = size;\n+        return size;\n+      }\n+      \n+      private static final long serialVersionUID = 0L;\n+      @java.lang.Override\n+      protected java.lang.Object writeReplace()\n+          throws java.io.ObjectStreamException {\n+        return super.writeReplace();\n+      }\n+      \n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseFrom(\n+          com.google.protobuf.ByteString data)\n+          throws com.google.protobuf.InvalidProtocolBufferException {\n+        return newBuilder().mergeFrom(data).buildParsed();\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseFrom(\n+          com.google.protobuf.ByteString data,\n+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n+          throws com.google.protobuf.InvalidProtocolBufferException {\n+        return newBuilder().mergeFrom(data, extensionRegistry)\n+                 .buildParsed();\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseFrom(byte[] data)\n+          throws com.google.protobuf.InvalidProtocolBufferException {\n+        return newBuilder().mergeFrom(data).buildParsed();\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseFrom(\n+          byte[] data,\n+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n+          throws com.google.protobuf.InvalidProtocolBufferException {\n+        return newBuilder().mergeFrom(data, extensionRegistry)\n+                 .buildParsed();\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseFrom(java.io.InputStream input)\n+          throws java.io.IOException {\n+        return newBuilder().mergeFrom(input).buildParsed();\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseFrom(\n+          java.io.InputStream input,\n+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n+          throws java.io.IOException {\n+        return newBuilder().mergeFrom(input, extensionRegistry)\n+                 .buildParsed();\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseDelimitedFrom(java.io.InputStream input)\n+          throws java.io.IOException {\n+        Builder builder = newBuilder();\n+        if (builder.mergeDelimitedFrom(input)) {\n+          return builder.buildParsed();\n+        } else {\n+          return null;\n+        }\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseDelimitedFrom(\n+          java.io.InputStream input,\n+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n+          throws java.io.IOException {\n+        Builder builder = newBuilder();\n+        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {\n+          return builder.buildParsed();\n+        } else {\n+          return null;\n+        }\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseFrom(\n+          com.google.protobuf.CodedInputStream input)\n+          throws java.io.IOException {\n+        return newBuilder().mergeFrom(input).buildParsed();\n+      }\n+      public static org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry parseFrom(\n+          com.google.protobuf.CodedInputStream input,\n+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n+          throws java.io.IOException {\n+        return newBuilder().mergeFrom(input, extensionRegistry)\n+                 .buildParsed();\n+      }\n+      \n+      public static Builder newBuilder() { return Builder.create(); }\n+      public Builder newBuilderForType() { return newBuilder(); }\n+      public static Builder newBuilder(org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry prototype) {\n+        return newBuilder().mergeFrom(prototype);\n+      }\n+      public Builder toBuilder() { return newBuilder(this); }\n+      \n+      @java.lang.Override\n+      protected Builder newBuilderForType(\n+          com.google.protobuf.GeneratedMessage.BuilderParent parent) {\n+        Builder builder = new Builder(parent);\n+        return builder;\n+      }\n+      public static final class Builder extends\n+          com.google.protobuf.GeneratedMessage.Builder<Builder>\n+         implements org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder {\n+        public static final com.google.protobuf.Descriptors.Descriptor\n+            getDescriptor() {\n+          return org.apache.bookkeeper.proto.DataFormats.internal_static_LedgerMetadataFormat_cMetadataMapEntry_descriptor;\n+        }\n+        \n+        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable\n+            internalGetFieldAccessorTable() {\n+          return org.apache.bookkeeper.proto.DataFormats.internal_static_LedgerMetadataFormat_cMetadataMapEntry_fieldAccessorTable;\n+        }\n+        \n+        // Construct using org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.newBuilder()\n+        private Builder() {\n+          maybeForceBuilderInitialization();\n+        }\n+        \n+        private Builder(BuilderParent parent) {\n+          super(parent);\n+          maybeForceBuilderInitialization();\n+        }\n+        private void maybeForceBuilderInitialization() {\n+          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {\n+          }\n+        }\n+        private static Builder create() {\n+          return new Builder();\n+        }\n+        \n+        public Builder clear() {\n+          super.clear();\n+          key_ = \"\";\n+          bitField0_ = (bitField0_ & ~0x00000001);\n+          value_ = com.google.protobuf.ByteString.EMPTY;\n+          bitField0_ = (bitField0_ & ~0x00000002);\n+          return this;\n+        }\n+        \n+        public Builder clone() {\n+          return create().mergeFrom(buildPartial());\n+        }\n+        \n+        public com.google.protobuf.Descriptors.Descriptor\n+            getDescriptorForType() {\n+          return org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.getDescriptor();\n+        }\n+        \n+        public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry getDefaultInstanceForType() {\n+          return org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.getDefaultInstance();\n+        }\n+        \n+        public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry build() {\n+          org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry result = buildPartial();\n+          if (!result.isInitialized()) {\n+            throw newUninitializedMessageException(result);\n+          }\n+          return result;\n+        }\n+        \n+        private org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry buildParsed()\n+            throws com.google.protobuf.InvalidProtocolBufferException {\n+          org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry result = buildPartial();\n+          if (!result.isInitialized()) {\n+            throw newUninitializedMessageException(\n+              result).asInvalidProtocolBufferException();\n+          }\n+          return result;\n+        }\n+        \n+        public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry buildPartial() {\n+          org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry result = new org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry(this);\n+          int from_bitField0_ = bitField0_;\n+          int to_bitField0_ = 0;\n+          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {\n+            to_bitField0_ |= 0x00000001;\n+          }\n+          result.key_ = key_;\n+          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {\n+            to_bitField0_ |= 0x00000002;\n+          }\n+          result.value_ = value_;\n+          result.bitField0_ = to_bitField0_;\n+          onBuilt();\n+          return result;\n+        }\n+        \n+        public Builder mergeFrom(com.google.protobuf.Message other) {\n+          if (other instanceof org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry) {\n+            return mergeFrom((org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry)other);\n+          } else {\n+            super.mergeFrom(other);\n+            return this;\n+          }\n+        }\n+        \n+        public Builder mergeFrom(org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry other) {\n+          if (other == org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.getDefaultInstance()) return this;\n+          if (other.hasKey()) {\n+            setKey(other.getKey());\n+          }\n+          if (other.hasValue()) {\n+            setValue(other.getValue());\n+          }\n+          this.mergeUnknownFields(other.getUnknownFields());\n+          return this;\n+        }\n+        \n+        public final boolean isInitialized() {\n+          return true;\n+        }\n+        \n+        public Builder mergeFrom(\n+            com.google.protobuf.CodedInputStream input,\n+            com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n+            throws java.io.IOException {\n+          com.google.protobuf.UnknownFieldSet.Builder unknownFields =\n+            com.google.protobuf.UnknownFieldSet.newBuilder(\n+              this.getUnknownFields());\n+          while (true) {\n+            int tag = input.readTag();\n+            switch (tag) {\n+              case 0:\n+                this.setUnknownFields(unknownFields.build());\n+                onChanged();\n+                return this;\n+              default: {\n+                if (!parseUnknownField(input, unknownFields,\n+                                       extensionRegistry, tag)) {\n+                  this.setUnknownFields(unknownFields.build());\n+                  onChanged();\n+                  return this;\n+                }\n+                break;\n+              }\n+              case 10: {\n+                bitField0_ |= 0x00000001;\n+                key_ = input.readBytes();\n+                break;\n+              }\n+              case 18: {\n+                bitField0_ |= 0x00000002;\n+                value_ = input.readBytes();\n+                break;\n+              }\n+            }\n+          }\n+        }\n+        \n+        private int bitField0_;\n+        \n+        // optional string key = 1;\n+        private java.lang.Object key_ = \"\";\n+        public boolean hasKey() {\n+          return ((bitField0_ & 0x00000001) == 0x00000001);\n+        }\n+        public String getKey() {\n+          java.lang.Object ref = key_;\n+          if (!(ref instanceof String)) {\n+            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();\n+            key_ = s;\n+            return s;\n+          } else {\n+            return (String) ref;\n+          }\n+        }\n+        public Builder setKey(String value) {\n+          if (value == null) {\n+    throw new NullPointerException();\n+  }\n+  bitField0_ |= 0x00000001;\n+          key_ = value;\n+          onChanged();\n+          return this;\n+        }\n+        public Builder clearKey() {\n+          bitField0_ = (bitField0_ & ~0x00000001);\n+          key_ = getDefaultInstance().getKey();\n+          onChanged();\n+          return this;\n+        }\n+        void setKey(com.google.protobuf.ByteString value) {\n+          bitField0_ |= 0x00000001;\n+          key_ = value;\n+          onChanged();\n+        }\n+        \n+        // optional bytes value = 2;\n+        private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;\n+        public boolean hasValue() {\n+          return ((bitField0_ & 0x00000002) == 0x00000002);\n+        }\n+        public com.google.protobuf.ByteString getValue() {\n+          return value_;\n+        }\n+        public Builder setValue(com.google.protobuf.ByteString value) {\n+          if (value == null) {\n+    throw new NullPointerException();\n+  }\n+  bitField0_ |= 0x00000002;\n+          value_ = value;\n+          onChanged();\n+          return this;\n+        }\n+        public Builder clearValue() {\n+          bitField0_ = (bitField0_ & ~0x00000002);\n+          value_ = getDefaultInstance().getValue();\n+          onChanged();\n+          return this;\n+        }\n+        \n+        // @@protoc_insertion_point(builder_scope:LedgerMetadataFormat.cMetadataMapEntry)\n+      }\n+      \n+      static {\n+        defaultInstance = new cMetadataMapEntry(true);\n+        defaultInstance.initFields();\n+      }\n+      \n+      // @@protoc_insertion_point(class_scope:LedgerMetadataFormat.cMetadataMapEntry)\n+    }\n+    \n     private int bitField0_;\n     // required int32 quorumSize = 1;\n     public static final int QUORUMSIZE_FIELD_NUMBER = 1;\n@@ -795,6 +1240,27 @@ public long getCtime() {\n       return ctime_;\n     }\n     \n+    // repeated .LedgerMetadataFormat.cMetadataMapEntry customMetadata = 11;\n+    public static final int CUSTOMMETADATA_FIELD_NUMBER = 11;\n+    private java.util.List<org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry> customMetadata_;\n+    public java.util.List<org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry> getCustomMetadataList() {\n+      return customMetadata_;\n+    }\n+    public java.util.List<? extends org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder> \n+        getCustomMetadataOrBuilderList() {\n+      return customMetadata_;\n+    }\n+    public int getCustomMetadataCount() {\n+      return customMetadata_.size();\n+    }\n+    public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry getCustomMetadata(int index) {\n+      return customMetadata_.get(index);\n+    }\n+    public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder getCustomMetadataOrBuilder(\n+        int index) {\n+      return customMetadata_.get(index);\n+    }\n+    \n     private void initFields() {\n       quorumSize_ = 0;\n       ensembleSize_ = 0;\n@@ -806,6 +1272,7 @@ private void initFields() {\n       password_ = com.google.protobuf.ByteString.EMPTY;\n       ackQuorumSize_ = 0;\n       ctime_ = 0L;\n+      customMetadata_ = java.util.Collections.emptyList();\n     }\n     private byte memoizedIsInitialized = -1;\n     public final boolean isInitialized() {\n@@ -871,6 +1338,9 @@ public void writeTo(com.google.protobuf.CodedOutputStream output)\n       if (((bitField0_ & 0x00000100) == 0x00000100)) {\n         output.writeInt64(10, ctime_);\n       }\n+      for (int i = 0; i < customMetadata_.size(); i++) {\n+        output.writeMessage(11, customMetadata_.get(i));\n+      }\n       getUnknownFields().writeTo(output);\n     }\n     \n@@ -920,6 +1390,10 @@ public int getSerializedSize() {\n         size += com.google.protobuf.CodedOutputStream\n           .computeInt64Size(10, ctime_);\n       }\n+      for (int i = 0; i < customMetadata_.size(); i++) {\n+        size += com.google.protobuf.CodedOutputStream\n+          .computeMessageSize(11, customMetadata_.get(i));\n+      }\n       size += getUnknownFields().getSerializedSize();\n       memoizedSerializedSize = size;\n       return size;\n@@ -1037,6 +1511,7 @@ private Builder(BuilderParent parent) {\n       private void maybeForceBuilderInitialization() {\n         if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {\n           getSegmentFieldBuilder();\n+          getCustomMetadataFieldBuilder();\n         }\n       }\n       private static Builder create() {\n@@ -1069,6 +1544,12 @@ public Builder clear() {\n         bitField0_ = (bitField0_ & ~0x00000100);\n         ctime_ = 0L;\n         bitField0_ = (bitField0_ & ~0x00000200);\n+        if (customMetadataBuilder_ == null) {\n+          customMetadata_ = java.util.Collections.emptyList();\n+          bitField0_ = (bitField0_ & ~0x00000400);\n+        } else {\n+          customMetadataBuilder_.clear();\n+        }\n         return this;\n       }\n       \n@@ -1152,6 +1633,15 @@ public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat buildPartial\n           to_bitField0_ |= 0x00000100;\n         }\n         result.ctime_ = ctime_;\n+        if (customMetadataBuilder_ == null) {\n+          if (((bitField0_ & 0x00000400) == 0x00000400)) {\n+            customMetadata_ = java.util.Collections.unmodifiableList(customMetadata_);\n+            bitField0_ = (bitField0_ & ~0x00000400);\n+          }\n+          result.customMetadata_ = customMetadata_;\n+        } else {\n+          result.customMetadata_ = customMetadataBuilder_.build();\n+        }\n         result.bitField0_ = to_bitField0_;\n         onBuilt();\n         return result;\n@@ -1221,6 +1711,32 @@ public Builder mergeFrom(org.apache.bookkeeper.proto.DataFormats.LedgerMetadataF\n         if (other.hasCtime()) {\n           setCtime(other.getCtime());\n         }\n+        if (customMetadataBuilder_ == null) {\n+          if (!other.customMetadata_.isEmpty()) {\n+            if (customMetadata_.isEmpty()) {\n+              customMetadata_ = other.customMetadata_;\n+              bitField0_ = (bitField0_ & ~0x00000400);\n+            } else {\n+              ensureCustomMetadataIsMutable();\n+              customMetadata_.addAll(other.customMetadata_);\n+            }\n+            onChanged();\n+          }\n+        } else {\n+          if (!other.customMetadata_.isEmpty()) {\n+            if (customMetadataBuilder_.isEmpty()) {\n+              customMetadataBuilder_.dispose();\n+              customMetadataBuilder_ = null;\n+              customMetadata_ = other.customMetadata_;\n+              bitField0_ = (bitField0_ & ~0x00000400);\n+              customMetadataBuilder_ = \n+                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?\n+                   getCustomMetadataFieldBuilder() : null;\n+            } else {\n+              customMetadataBuilder_.addAllMessages(other.customMetadata_);\n+            }\n+          }\n+        }\n         this.mergeUnknownFields(other.getUnknownFields());\n         return this;\n       }\n@@ -1337,6 +1853,12 @@ public Builder mergeFrom(\n               ctime_ = input.readInt64();\n               break;\n             }\n+            case 90: {\n+              org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder subBuilder = org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.newBuilder();\n+              input.readMessage(subBuilder, extensionRegistry);\n+              addCustomMetadata(subBuilder.buildPartial());\n+              break;\n+            }\n           }\n         }\n       }\n@@ -1727,6 +2249,192 @@ public Builder clearCtime() {\n         return this;\n       }\n       \n+      // repeated .LedgerMetadataFormat.cMetadataMapEntry customMetadata = 11;\n+      private java.util.List<org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry> customMetadata_ =\n+        java.util.Collections.emptyList();\n+      private void ensureCustomMetadataIsMutable() {\n+        if (!((bitField0_ & 0x00000400) == 0x00000400)) {\n+          customMetadata_ = new java.util.ArrayList<org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry>(customMetadata_);\n+          bitField0_ |= 0x00000400;\n+         }\n+      }\n+      \n+      private com.google.protobuf.RepeatedFieldBuilder<\n+          org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder> customMetadataBuilder_;\n+      \n+      public java.util.List<org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry> getCustomMetadataList() {\n+        if (customMetadataBuilder_ == null) {\n+          return java.util.Collections.unmodifiableList(customMetadata_);\n+        } else {\n+          return customMetadataBuilder_.getMessageList();\n+        }\n+      }\n+      public int getCustomMetadataCount() {\n+        if (customMetadataBuilder_ == null) {\n+          return customMetadata_.size();\n+        } else {\n+          return customMetadataBuilder_.getCount();\n+        }\n+      }\n+      public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry getCustomMetadata(int index) {\n+        if (customMetadataBuilder_ == null) {\n+          return customMetadata_.get(index);\n+        } else {\n+          return customMetadataBuilder_.getMessage(index);\n+        }\n+      }\n+      public Builder setCustomMetadata(\n+          int index, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry value) {\n+        if (customMetadataBuilder_ == null) {\n+          if (value == null) {\n+            throw new NullPointerException();\n+          }\n+          ensureCustomMetadataIsMutable();\n+          customMetadata_.set(index, value);\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.setMessage(index, value);\n+        }\n+        return this;\n+      }\n+      public Builder setCustomMetadata(\n+          int index, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder builderForValue) {\n+        if (customMetadataBuilder_ == null) {\n+          ensureCustomMetadataIsMutable();\n+          customMetadata_.set(index, builderForValue.build());\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.setMessage(index, builderForValue.build());\n+        }\n+        return this;\n+      }\n+      public Builder addCustomMetadata(org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry value) {\n+        if (customMetadataBuilder_ == null) {\n+          if (value == null) {\n+            throw new NullPointerException();\n+          }\n+          ensureCustomMetadataIsMutable();\n+          customMetadata_.add(value);\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.addMessage(value);\n+        }\n+        return this;\n+      }\n+      public Builder addCustomMetadata(\n+          int index, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry value) {\n+        if (customMetadataBuilder_ == null) {\n+          if (value == null) {\n+            throw new NullPointerException();\n+          }\n+          ensureCustomMetadataIsMutable();\n+          customMetadata_.add(index, value);\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.addMessage(index, value);\n+        }\n+        return this;\n+      }\n+      public Builder addCustomMetadata(\n+          org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder builderForValue) {\n+        if (customMetadataBuilder_ == null) {\n+          ensureCustomMetadataIsMutable();\n+          customMetadata_.add(builderForValue.build());\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.addMessage(builderForValue.build());\n+        }\n+        return this;\n+      }\n+      public Builder addCustomMetadata(\n+          int index, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder builderForValue) {\n+        if (customMetadataBuilder_ == null) {\n+          ensureCustomMetadataIsMutable();\n+          customMetadata_.add(index, builderForValue.build());\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.addMessage(index, builderForValue.build());\n+        }\n+        return this;\n+      }\n+      public Builder addAllCustomMetadata(\n+          java.lang.Iterable<? extends org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry> values) {\n+        if (customMetadataBuilder_ == null) {\n+          ensureCustomMetadataIsMutable();\n+          super.addAll(values, customMetadata_);\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.addAllMessages(values);\n+        }\n+        return this;\n+      }\n+      public Builder clearCustomMetadata() {\n+        if (customMetadataBuilder_ == null) {\n+          customMetadata_ = java.util.Collections.emptyList();\n+          bitField0_ = (bitField0_ & ~0x00000400);\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.clear();\n+        }\n+        return this;\n+      }\n+      public Builder removeCustomMetadata(int index) {\n+        if (customMetadataBuilder_ == null) {\n+          ensureCustomMetadataIsMutable();\n+          customMetadata_.remove(index);\n+          onChanged();\n+        } else {\n+          customMetadataBuilder_.remove(index);\n+        }\n+        return this;\n+      }\n+      public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder getCustomMetadataBuilder(\n+          int index) {\n+        return getCustomMetadataFieldBuilder().getBuilder(index);\n+      }\n+      public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder getCustomMetadataOrBuilder(\n+          int index) {\n+        if (customMetadataBuilder_ == null) {\n+          return customMetadata_.get(index);  } else {\n+          return customMetadataBuilder_.getMessageOrBuilder(index);\n+        }\n+      }\n+      public java.util.List<? extends org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder> \n+           getCustomMetadataOrBuilderList() {\n+        if (customMetadataBuilder_ != null) {\n+          return customMetadataBuilder_.getMessageOrBuilderList();\n+        } else {\n+          return java.util.Collections.unmodifiableList(customMetadata_);\n+        }\n+      }\n+      public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder addCustomMetadataBuilder() {\n+        return getCustomMetadataFieldBuilder().addBuilder(\n+            org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.getDefaultInstance());\n+      }\n+      public org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder addCustomMetadataBuilder(\n+          int index) {\n+        return getCustomMetadataFieldBuilder().addBuilder(\n+            index, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.getDefaultInstance());\n+      }\n+      public java.util.List<org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder> \n+           getCustomMetadataBuilderList() {\n+        return getCustomMetadataFieldBuilder().getBuilderList();\n+      }\n+      private com.google.protobuf.RepeatedFieldBuilder<\n+          org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder> \n+          getCustomMetadataFieldBuilder() {\n+        if (customMetadataBuilder_ == null) {\n+          customMetadataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<\n+              org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder, org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntryOrBuilder>(\n+                  customMetadata_,\n+                  ((bitField0_ & 0x00000400) == 0x00000400),\n+                  getParentForChildren(),\n+                  isClean());\n+          customMetadata_ = null;\n+        }\n+        return customMetadataBuilder_;\n+      }\n+      \n       // @@protoc_insertion_point(builder_scope:LedgerMetadataFormat)\n     }\n     \n@@ -4016,6 +4724,11 @@ void setBookieId(com.google.protobuf.ByteString value) {\n   private static\n     com.google.protobuf.GeneratedMessage.FieldAccessorTable\n       internal_static_LedgerMetadataFormat_Segment_fieldAccessorTable;\n+  private static com.google.protobuf.Descriptors.Descriptor\n+    internal_static_LedgerMetadataFormat_cMetadataMapEntry_descriptor;\n+  private static\n+    com.google.protobuf.GeneratedMessage.FieldAccessorTable\n+      internal_static_LedgerMetadataFormat_cMetadataMapEntry_fieldAccessorTable;\n   private static com.google.protobuf.Descriptors.Descriptor\n     internal_static_LedgerRereplicationLayoutFormat_descriptor;\n   private static\n@@ -4050,27 +4763,29 @@ void setBookieId(com.google.protobuf.ByteString value) {\n       descriptor;\n   static {\n     java.lang.String[] descriptorData = {\n-      \"\\n src/main/proto/DataFormats.proto\\\"\\301\\003\\n\\024L\" +\n+      \"\\n src/main/proto/DataFormats.proto\\\"\\263\\004\\n\\024L\" +\n       \"edgerMetadataFormat\\022\\022\\n\\nquorumSize\\030\\001 \\002(\\005\\022\" +\n       \"\\024\\n\\014ensembleSize\\030\\002 \\002(\\005\\022\\016\\n\\006length\\030\\003 \\002(\\003\\022\\023\\n\" +\n       \"\\013lastEntryId\\030\\004 \\001(\\003\\0220\\n\\005state\\030\\005 \\002(\\0162\\033.Ledg\" +\n       \"erMetadataFormat.State:\\004OPEN\\022.\\n\\007segment\\030\" +\n       \"\\006 \\003(\\0132\\035.LedgerMetadataFormat.Segment\\0224\\n\\n\" +\n       \"digestType\\030\\007 \\001(\\0162 .LedgerMetadataFormat.\" +\n       \"DigestType\\022\\020\\n\\010password\\030\\010 \\001(\\014\\022\\025\\n\\rackQuoru\" +\n-      \"mSize\\030\\t \\001(\\005\\022\\r\\n\\005ctime\\030\\n \\001(\\003\\0327\\n\\007Segment\\022\\026\\n\" +\n-      \"\\016ensembleMember\\030\\001 \\003(\\t\\022\\024\\n\\014firstEntryId\\030\\002 \",\n-      \"\\002(\\003\\\".\\n\\005State\\022\\010\\n\\004OPEN\\020\\001\\022\\017\\n\\013IN_RECOVERY\\020\\002\\022\" +\n-      \"\\n\\n\\006CLOSED\\020\\003\\\"!\\n\\nDigestType\\022\\t\\n\\005CRC32\\020\\001\\022\\010\\n\\004\" +\n-      \"HMAC\\020\\002\\\"@\\n\\037LedgerRereplicationLayoutForma\" +\n-      \"t\\022\\014\\n\\004type\\030\\001 \\002(\\t\\022\\017\\n\\007version\\030\\002 \\002(\\005\\\".\\n\\033Unde\" +\n-      \"rreplicatedLedgerFormat\\022\\017\\n\\007replica\\030\\001 \\003(\\t\" +\n-      \"\\\"^\\n\\014CookieFormat\\022\\022\\n\\nbookieHost\\030\\001 \\002(\\t\\022\\022\\n\\n\" +\n-      \"journalDir\\030\\002 \\002(\\t\\022\\022\\n\\nledgerDirs\\030\\003 \\002(\\t\\022\\022\\n\\n\" +\n-      \"instanceId\\030\\004 \\001(\\t\\\"\\\"\\n\\016LockDataFormat\\022\\020\\n\\010bo\" +\n-      \"okieId\\030\\001 \\001(\\t\\\"%\\n\\021AuditorVoteFormat\\022\\020\\n\\010boo\" +\n-      \"kieId\\030\\001 \\001(\\tB\\037\\n\\033org.apache.bookkeeper.pro\",\n-      \"toH\\001\"\n+      \"mSize\\030\\t \\001(\\005\\022\\r\\n\\005ctime\\030\\n \\001(\\003\\022?\\n\\016customMeta\" +\n+      \"data\\030\\013 \\003(\\0132\\'.LedgerMetadataFormat.cMetad\",\n+      \"ataMapEntry\\0327\\n\\007Segment\\022\\026\\n\\016ensembleMember\" +\n+      \"\\030\\001 \\003(\\t\\022\\024\\n\\014firstEntryId\\030\\002 \\002(\\003\\032/\\n\\021cMetadat\" +\n+      \"aMapEntry\\022\\013\\n\\003key\\030\\001 \\001(\\t\\022\\r\\n\\005value\\030\\002 \\001(\\014\\\".\\n\" +\n+      \"\\005State\\022\\010\\n\\004OPEN\\020\\001\\022\\017\\n\\013IN_RECOVERY\\020\\002\\022\\n\\n\\006CLO\" +\n+      \"SED\\020\\003\\\"!\\n\\nDigestType\\022\\t\\n\\005CRC32\\020\\001\\022\\010\\n\\004HMAC\\020\\002\" +\n+      \"\\\"@\\n\\037LedgerRereplicationLayoutFormat\\022\\014\\n\\004t\" +\n+      \"ype\\030\\001 \\002(\\t\\022\\017\\n\\007version\\030\\002 \\002(\\005\\\".\\n\\033Underrepli\" +\n+      \"catedLedgerFormat\\022\\017\\n\\007replica\\030\\001 \\003(\\t\\\"^\\n\\014Co\" +\n+      \"okieFormat\\022\\022\\n\\nbookieHost\\030\\001 \\002(\\t\\022\\022\\n\\njourna\" +\n+      \"lDir\\030\\002 \\002(\\t\\022\\022\\n\\nledgerDirs\\030\\003 \\002(\\t\\022\\022\\n\\ninstan\",\n+      \"ceId\\030\\004 \\001(\\t\\\"\\\"\\n\\016LockDataFormat\\022\\020\\n\\010bookieId\" +\n+      \"\\030\\001 \\001(\\t\\\"%\\n\\021AuditorVoteFormat\\022\\020\\n\\010bookieId\\030\" +\n+      \"\\001 \\001(\\tB\\037\\n\\033org.apache.bookkeeper.protoH\\001\"\n     };\n     com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =\n       new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {\n@@ -4082,7 +4797,7 @@ public com.google.protobuf.ExtensionRegistry assignDescriptors(\n           internal_static_LedgerMetadataFormat_fieldAccessorTable = new\n             com.google.protobuf.GeneratedMessage.FieldAccessorTable(\n               internal_static_LedgerMetadataFormat_descriptor,\n-              new java.lang.String[] { \"QuorumSize\", \"EnsembleSize\", \"Length\", \"LastEntryId\", \"State\", \"Segment\", \"DigestType\", \"Password\", \"AckQuorumSize\", \"Ctime\", },\n+              new java.lang.String[] { \"QuorumSize\", \"EnsembleSize\", \"Length\", \"LastEntryId\", \"State\", \"Segment\", \"DigestType\", \"Password\", \"AckQuorumSize\", \"Ctime\", \"CustomMetadata\", },\n               org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.class,\n               org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.Builder.class);\n           internal_static_LedgerMetadataFormat_Segment_descriptor =\n@@ -4093,6 +4808,14 @@ public com.google.protobuf.ExtensionRegistry assignDescriptors(\n               new java.lang.String[] { \"EnsembleMember\", \"FirstEntryId\", },\n               org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.Segment.class,\n               org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.Segment.Builder.class);\n+          internal_static_LedgerMetadataFormat_cMetadataMapEntry_descriptor =\n+            internal_static_LedgerMetadataFormat_descriptor.getNestedTypes().get(1);\n+          internal_static_LedgerMetadataFormat_cMetadataMapEntry_fieldAccessorTable = new\n+            com.google.protobuf.GeneratedMessage.FieldAccessorTable(\n+              internal_static_LedgerMetadataFormat_cMetadataMapEntry_descriptor,\n+              new java.lang.String[] { \"Key\", \"Value\", },\n+              org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.class,\n+              org.apache.bookkeeper.proto.DataFormats.LedgerMetadataFormat.cMetadataMapEntry.Builder.class);\n           internal_static_LedgerRereplicationLayoutFormat_descriptor =\n             getDescriptor().getMessageTypes().get(1);\n           internal_static_LedgerRereplicationLayoutFormat_fieldAccessorTable = new"},{"sha":"b4ce86d378632ff3e5361d1dd8527cac928b30e3","filename":"bookkeeper-server/src/main/proto/DataFormats.proto","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fproto%2FDataFormats.proto","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Fmain%2Fproto%2FDataFormats.proto","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fproto%2FDataFormats.proto?ref=6d71b8292bc255e21f2dcf048be191650c01b4dc","patch":"@@ -50,6 +50,12 @@ message LedgerMetadataFormat {\n     optional int32 ackQuorumSize = 9;\n     \n     optional int64 ctime = 10;\n+\n+    message cMetadataMapEntry {\n+        optional string key = 1;\n+        optional bytes value = 2;\n+    }\n+    repeated cMetadataMapEntry customMetadata = 11;\n }\n \n message LedgerRereplicationLayoutFormat {\n@@ -83,4 +89,4 @@ message LockDataFormat {\n  */\n message AuditorVoteFormat {\n     optional string bookieId = 1;\n-}\n\\ No newline at end of file\n+}"},{"sha":"a5fbe24ecace31707617f871ac35bbfdd998b120","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieWriteLedgerTest.java","status":"modified","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWriteLedgerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/6d71b8292bc255e21f2dcf048be191650c01b4dc/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWriteLedgerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWriteLedgerTest.java?ref=6d71b8292bc255e21f2dcf048be191650c01b4dc","patch":"@@ -24,6 +24,9 @@\n import java.util.ArrayList;\n import java.util.Enumeration;\n import java.util.Random;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.HashMap;\n \n import org.apache.bookkeeper.client.AsyncCallback.AddCallback;\n import org.apache.bookkeeper.client.BookKeeper.DigestType;\n@@ -36,6 +39,7 @@\n \n import static org.junit.Assert.*;\n \n+\n /**\n  * Testing ledger write entry cases\n  */\n@@ -172,6 +176,52 @@ public void testLedgerCreateAdv() throws Exception {\n         lh.close();\n     }\n \n+    /**\n+     * Verify the functionality of Ledger create which accepts customMetadata as input.\n+     * Also verifies that the data written is read back properly.\n+     *\n+     * @throws Exception\n+     */\n+    @Test(timeout = 60000)\n+    public void testLedgerCreateWithCustomMetadata() throws Exception {\n+        // Create a ledger\n+        long ledgerId;\n+        int maxLedgers = 10;\n+        for (int i = 0; i < maxLedgers; i++) {\n+            Map<String, byte[]> inputCustomMetadataMap = new HashMap<String, byte[]>();\n+            ByteBuffer entry = ByteBuffer.allocate(4);\n+            entry.putInt(rng.nextInt(maxInt));\n+            entry.position(0);\n+\n+            // each ledger has different number of key, value pairs.\n+            for (int j = 0; j < i; j++) {\n+                inputCustomMetadataMap.put(\"key\" + j, UUID.randomUUID().toString().getBytes());\n+            }\n+\n+            if (i < maxLedgers/2) {\n+                // 0 to 4 test with createLedger interface\n+                lh = bkc.createLedger(5, 3, 2, digestType, ledgerPassword, inputCustomMetadataMap);\n+                ledgerId = lh.getId();\n+                lh.addEntry(entry.array());\n+            } else {\n+                // 5 to 9 test with createLedgerAdv interface\n+                lh = bkc.createLedgerAdv(5, 3, 2, digestType, ledgerPassword, inputCustomMetadataMap);\n+                ledgerId = lh.getId();\n+                lh.addEntry(0, entry.array());\n+            }\n+            lh.close();\n+\n+            // now reopen the ledger; this should fetch all the metadata stored on zk\n+            // and the customMetadata written and read should match\n+            lh = bkc.openLedger(ledgerId, digestType, ledgerPassword);\n+            Map<String, byte[]> outputCustomMetadataMap = lh.getCustomMetadata();\n+            assertTrue(\"Can't retrieve proper Custom Data\",\n+                       LedgerMetadata.areByteArrayValMapsEqual(inputCustomMetadataMap, outputCustomMetadataMap));\n+            lh.close();\n+            bkc.deleteLedger(ledgerId);\n+        }\n+    }\n+\n     /**\n      * Verify asynchronous writing when few bookie failures in last ensemble.\n      */"}]}