{"sha":"2cdd371f8799f47a5d473eb429f72d95337ca607","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjJjZGQzNzFmODc5OWY0N2E1ZDQ3M2ViNDI5ZjcyZDk1MzM3Y2E2MDc=","commit":{"author":{"name":"Leigh Stewart","email":"lstewart@apache.org","date":"2016-07-29T04:36:49Z"},"committer":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-12-28T00:49:27Z"},"message":"DL-102: Add routing service to write proxy server side\n\nthis change is to add getOwner rpc in write proxy. so we can change the client side to get owner from write proxy first for routing service. in this way, we can start experiementing any resource placement algorithms.","tree":{"sha":"6ccbfb21586d6f26afcd214eecf7ea376778576b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/6ccbfb21586d6f26afcd214eecf7ea376778576b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/2cdd371f8799f47a5d473eb429f72d95337ca607","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/2cdd371f8799f47a5d473eb429f72d95337ca607","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/2cdd371f8799f47a5d473eb429f72d95337ca607","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/2cdd371f8799f47a5d473eb429f72d95337ca607/comments","author":null,"committer":null,"parents":[{"sha":"7f2b59a7e6fa115793ed71d8cc1ad1cb9da677be","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/7f2b59a7e6fa115793ed71d8cc1ad1cb9da677be","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/7f2b59a7e6fa115793ed71d8cc1ad1cb9da677be"}],"stats":{"total":7,"additions":6,"deletions":1},"files":[{"sha":"a25af634899c177f17b98ae845e082d345738a81","filename":"src/main/thrift/service.thrift","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/2cdd371f8799f47a5d473eb429f72d95337ca607/src%2Fmain%2Fthrift%2Fservice.thrift","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/2cdd371f8799f47a5d473eb429f72d95337ca607/src%2Fmain%2Fthrift%2Fservice.thrift","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fthrift%2Fservice.thrift?ref=2cdd371f8799f47a5d473eb429f72d95337ca607","patch":"@@ -94,7 +94,7 @@ enum StatusCode {\n     CHECKSUM_FAILED = 523,\n     /* Overcapacity: too many streams */\n     TOO_MANY_STREAMS = 524,\n-    // Log Segment Not Found\n+    /* Log Segment Not Found */\n     LOG_SEGMENT_NOT_FOUND = 525,\n \n     /* 6xx: unexpected */\n@@ -167,14 +167,17 @@ struct ClientInfo {\n \n service DistributedLogService {\n \n+    /* Deprecated */\n     ServerInfo handshake();\n \n     ServerInfo handshakeWithClientInfo(ClientInfo clientInfo);\n \n+    /* Deprecated */\n     WriteResponse heartbeat(string stream, WriteContext ctx);\n \n     WriteResponse heartbeatWithOptions(string stream, WriteContext ctx, HeartbeatOptions options);\n \n+    /* Deprecated */\n     WriteResponse write(string stream, binary data);\n \n     WriteResponse writeWithContext(string stream, binary data, WriteContext ctx);\n@@ -189,6 +192,8 @@ service DistributedLogService {\n \n     WriteResponse delete(string stream, WriteContext ctx);\n \n+    WriteResponse getOwner(string stream, WriteContext ctx);\n+\n     /* Admin Methods */\n     void setAcceptNewStream(bool enabled);\n }"}]}