{"sha":"d107f969a915362dfce8f1b66c221debd434aefd","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmQxMDdmOTY5YTkxNTM2MmRmY2U4ZjFiNjZjMjIxZGViZDQzNGFlZmQ=","commit":{"author":{"name":"zhaijack","email":"zhaijia03@gmail.com","date":"2017-08-06T13:08:11Z"},"committer":{"name":"jiazhai","email":"zhaijia@live.com","date":"2017-08-06T13:08:11Z"},"message":"ISSUE #338: add first draft Docker image including community suggestions\n\nThis is the first part of #335. And it is based on #197\nMain changes:\n 327: Docker image: Drop versions and Alpine support.\n 260: Docker image: provide a way to pass any desired configuration property via ENV vars.\n\n---\nBe sure to do all of the following to help us incorporate your contribution\nquickly and easily:\n\n- [X] Make sure the PR title is formatted like:\n    `<Issue # or BOOKKEEPER-#>: Description of pull request`\n    `e.g. Issue 123: Description ...`\n    `e.g. BOOKKEEPER-1234: Description ...`\n- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.\n- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.\n\n---\n\nAuthor: zhaijack <zhaijia03@gmail.com>\n\nReviewers: Matteo Merli <None>, Sijie Guo <None>\n\nThis closes #342 from zhaijack/issue_338, closes #338","tree":{"sha":"330765195080bf5db0977a11e78266f08ddfd613","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/330765195080bf5db0977a11e78266f08ddfd613"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/d107f969a915362dfce8f1b66c221debd434aefd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/d107f969a915362dfce8f1b66c221debd434aefd","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/d107f969a915362dfce8f1b66c221debd434aefd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/d107f969a915362dfce8f1b66c221debd434aefd/comments","author":{"login":"zhaijack","id":26834121,"node_id":"MDQ6VXNlcjI2ODM0MTIx","avatar_url":"https://avatars.githubusercontent.com/u/26834121?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaijack","html_url":"https://github.com/zhaijack","followers_url":"https://api.github.com/users/zhaijack/followers","following_url":"https://api.github.com/users/zhaijack/following{/other_user}","gists_url":"https://api.github.com/users/zhaijack/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaijack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaijack/subscriptions","organizations_url":"https://api.github.com/users/zhaijack/orgs","repos_url":"https://api.github.com/users/zhaijack/repos","events_url":"https://api.github.com/users/zhaijack/events{/privacy}","received_events_url":"https://api.github.com/users/zhaijack/received_events","type":"User","site_admin":false},"committer":null,"parents":[{"sha":"cbcc64d6d0fd1a3d6738e4efcb0db3d5005ad0f8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/cbcc64d6d0fd1a3d6738e4efcb0db3d5005ad0f8","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/cbcc64d6d0fd1a3d6738e4efcb0db3d5005ad0f8"}],"stats":{"total":611,"additions":611,"deletions":0},"files":[{"sha":"45d422e5fc9e5b25cfbbd3807765bf6ff8ed8ea4","filename":"docker/Dockerfile","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/d107f969a915362dfce8f1b66c221debd434aefd/docker%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/d107f969a915362dfce8f1b66c221debd434aefd/docker%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/docker%2FDockerfile?ref=d107f969a915362dfce8f1b66c221debd434aefd","patch":"@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+FROM centos:7\n+MAINTAINER Apache BookKeeper <dev@bookkeeper.apache.org>\n+\n+ARG BK_VERSION=4.4.0\n+ARG DISTRO_NAME=bookkeeper-server-${BK_VERSION}-bin\n+ARG GPG_KEY=B3D56514\n+\n+ENV BOOKIE_PORT=3181\n+EXPOSE $BOOKIE_PORT\n+ENV BK_USER=bookkeeper\n+\n+# Download Apache Bookkeeper, untar and clean up\n+RUN set -x \\\n+    && adduser \"${BK_USER}\" \\\n+    && yum install -y java-1.8.0-openjdk-headless wget bash python md5sum sha1sum \\\n+    && mkdir -pv /opt \\\n+    && cd /opt \\\n+    && wget -q \"https://archive.apache.org/dist/bookkeeper/bookkeeper-${BK_VERSION}/${DISTRO_NAME}.tar.gz\" \\\n+    && wget -q \"https://archive.apache.org/dist/bookkeeper/bookkeeper-${BK_VERSION}/${DISTRO_NAME}.tar.gz.asc\" \\\n+    && wget -q \"https://archive.apache.org/dist/bookkeeper/bookkeeper-${BK_VERSION}/${DISTRO_NAME}.tar.gz.md5\" \\\n+    && wget -q \"https://archive.apache.org/dist/bookkeeper/bookkeeper-${BK_VERSION}/${DISTRO_NAME}.tar.gz.sha1\" \\\n+    && md5sum -c ${DISTRO_NAME}.tar.gz.md5 \\\n+    && sha1sum -c ${DISTRO_NAME}.tar.gz.sha1 \\\n+    && gpg --keyserver ha.pool.sks-keyservers.net --recv-key \"$GPG_KEY\" \\\n+    && gpg --batch --verify \"$DISTRO_NAME.tar.gz.asc\" \"$DISTRO_NAME.tar.gz\" \\\n+    && tar -xzf \"$DISTRO_NAME.tar.gz\" \\\n+    && mv bookkeeper-server-${BK_VERSION}/ /opt/bookkeeper/ \\\n+    && rm -rf \"$DISTRO_NAME.tar.gz\" \"$DISTRO_NAME.tar.gz.asc\" \"$DISTRO_NAME.tar.gz.md5\" \"$DISTRO_NAME.tar.gz.sha1\" \\\n+    && yum remove -y wget \\\n+    && yum clean all\n+\n+WORKDIR /opt/bookkeeper\n+\n+COPY scripts/apply-config-from-env.py scripts/entrypoint.sh scripts/healthcheck.sh /opt/bookkeeper/\n+\n+ENTRYPOINT [ \"/bin/bash\", \"/opt/bookkeeper/entrypoint.sh\" ]\n+CMD [\"/opt/bookkeeper/bin/bookkeeper\", \"bookie\"]\n+\n+HEALTHCHECK --interval=10s --timeout=60s CMD /bin/bash /opt/bookkeeper/healthcheck.sh"},{"sha":"27c8ce63645119bdf2a4d2f02b4692b7db2c2b2a","filename":"docker/Makefile","status":"added","additions":194,"deletions":0,"changes":194,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/d107f969a915362dfce8f1b66c221debd434aefd/docker%2FMakefile","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/d107f969a915362dfce8f1b66c221debd434aefd/docker%2FMakefile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/docker%2FMakefile?ref=d107f969a915362dfce8f1b66c221debd434aefd","patch":"@@ -0,0 +1,194 @@\n+#!/bin/bash\n+#\n+#/**\n+# * Copyright 2007 The Apache Software Foundation\n+# *\n+# * Licensed to the Apache Software Foundation (ASF) under one\n+# * or more contributor license agreements.  See the NOTICE file\n+# * distributed with this work for additional information\n+# * regarding copyright ownership.  The ASF licenses this file\n+# * to you under the Apache License, Version 2.0 (the\n+# * \"License\"); you may not use this file except in compliance\n+# * with the License.  You may obtain a copy of the License at\n+# *\n+# *     http://www.apache.org/licenses/LICENSE-2.0\n+# *\n+# * Unless required by applicable law or agreed to in writing, software\n+# * distributed under the License is distributed on an \"AS IS\" BASIS,\n+# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# * See the License for the specific language governing permissions and\n+# * limitations under the License.\n+# */\n+\n+\n+VERSION ?= centos\n+IMAGE ?= bookkeeper/bookie:$(VERSION)\n+BOOKIE ?= 1\n+DOCKER_NETWORK ?= bk_network\n+\n+BUILD_DIR ?= $(VERSION)\n+\n+CONTAINER_NAME = bookkeeper-$(BOOKIE)\n+DOCKER_HOSTNAME = $(shell hostname)\n+BK_LOCAL_DATA_DIR = /tmp/test_bk\n+BK_LOCAL_CONTAINER_DATA_DIR = $(BK_LOCAL_DATA_DIR)/$(CONTAINER_NAME)\n+BK_DIR = /data\n+BK_zkLedgersRootPath = /ledgers\n+\n+ZK_CONTAINER_NAME=test_zookeeper\n+ZK_LOCAL_DATA_DIR=$(BK_LOCAL_DATA_DIR)/zookkeeper\n+\n+\n+CONTAINER_IP=$(shell docker inspect --format '{{ .NetworkSettings.IPAddress }}' $(CONTAINER_NAME))\n+\n+# -------------------------------- #\n+\n+.PHONY: all build run create start stop shell exec root-shell root-exec info ip clean-files clean\n+\n+# -------------------------------- #\n+\n+all:\n+\tmake info\n+\n+# -------------------------------- #\n+\n+# Build the bookkeeper image.\n+#   make build\n+build:\n+\tcd $(BUILD_DIR) ; \\\n+\ttime docker build \\\n+\t    -t $(IMAGE) .\n+\n+# -------------------------------- #\n+\n+# Create and run a bookkeeper container with data persisted on local filesystem. It needs the zookkeeper container.\n+# In order to launch several bookies, the command need the bookie number\n+#   make run-bk BOOKIE=4\n+\n+run-bk:\n+\tmkdir -p $(BK_LOCAL_DATA_DIR) \\\n+\t\t\t$(BK_LOCAL_CONTAINER_DATA_DIR) \\\n+\t\t\t$(BK_LOCAL_CONTAINER_DATA_DIR)/journal \\\n+\t\t\t$(BK_LOCAL_CONTAINER_DATA_DIR)/ledger \\\n+\t\t\t$(BK_LOCAL_CONTAINER_DATA_DIR)/index\n+\t\n+\t-docker rm -f $(CONTAINER_NAME)\n+\tdocker run -it\\\n+\t\t--network $(DOCKER_NETWORK) \\\n+\t    --volume $(BK_LOCAL_CONTAINER_DATA_DIR)/journal:$(BK_DIR)/journal \\\n+\t    --volume $(BK_LOCAL_CONTAINER_DATA_DIR)/ledger:$(BK_DIR)/ledger \\\n+\t    --volume $(BK_LOCAL_CONTAINER_DATA_DIR)/index:$(BK_DIR)/index \\\n+\t    --name \"$(CONTAINER_NAME)\" \\\n+\t    --hostname \"$(CONTAINER_NAME)\" \\\n+\t    --env BK_zkServers=$(ZK_CONTAINER_NAME):2181 \\\n+\t    --env BK_zkLedgersRootPath=$(BK_zkLedgersRootPath) \\\n+\t    $(IMAGE)\n+\n+# -------------------------------- #\n+\n+# Create run and destroy a container that will format zookkeeper metadata\n+#   make run-format\n+\n+run-format:\n+\tdocker run -it --rm \\\n+\t\t--network $(DOCKER_NETWORK) \\\n+\t\t--env BK_zkServers=$(ZK_CONTAINER_NAME):2181 \\\n+\t\t$(IMAGE) \\\n+\t\tbookkeeper shell metaformat $(FORMAT_OPTS)\n+\n+# -------------------------------- #\n+\n+# Create and run the zookkeeper container needed by the ensemble\n+#   make run-zk\n+\n+run-zk:\n+\t-docker network create $(DOCKER_NETWORK)\n+\tmkdir -pv $(BK_LOCAL_DATA_DIR) $(ZK_LOCAL_DATA_DIR) $(ZK_LOCAL_DATA_DIR)/data $(ZK_LOCAL_DATA_DIR)/datalog\n+\t-docker rm -f $(ZK_CONTAINER_NAME)\n+\tdocker run -it --rm \\\n+\t\t--network $(DOCKER_NETWORK) \\\n+\t\t--name \"$(ZK_CONTAINER_NAME)\" \\\n+\t\t--hostname \"$(ZK_CONTAINER_NAME)\" \\\n+\t\t-v $(ZK_LOCAL_DATA_DIR)/data:/data \\\n+\t\t-v $(ZK_LOCAL_DATA_DIR)/datalog:/datalog \\\n+\t\t-p 2181:2181 \\\n+\t\tzookeeper\n+\n+# -------------------------------- #\n+\n+# Create and run a container running the bookkeeper tutorial application (a simple dice rolling application).\n+# It's possible to run several dice applications in order to simulate a real life concurrent scenario.\n+#   make run-dice\n+run-dice:\n+\tdocker run -it --rm \\\n+\t\t--network $(DOCKER_NETWORK) \\\n+\t\t--env ZOOKEEPER_SERVERS=$(ZK_CONTAINER_NAME):2181 \\\n+\t\tcaiok/bookkeeper-tutorial\n+\n+# -------------------------------- #\n+\n+# This is an example of a full bookkeeper ensemble of 3 bookies, a zookkeeper server and 2 client dice applications.\n+# On MacOS please run these command manually in several terminals\n+#   make run-demo\n+run-demo:\n+\t$(eval WAIT_CMD := read -p 'Press Enter to close...')\n+\t$(TERMINAL_EMULATOR) -e \"bash -l -c \\\"make run-zk ; $(WAIT_CMD)\"\\\"\n+\tsleep 3\n+\t$(TERMINAL_EMULATOR) -e \"bash -l -c \\\"make run-bk BOOKIE=1 TRY_METAFORMAT=true; $(WAIT_CMD)\\\"\"\n+\t$(TERMINAL_EMULATOR) -e \"bash -l -c \\\"make run-bk BOOKIE=2 TRY_METAFORMAT=true; $(WAIT_CMD)\\\"\"\n+\t$(TERMINAL_EMULATOR) -e \"bash -l -c \\\"make run-bk BOOKIE=3 TRY_METAFORMAT=true; $(WAIT_CMD)\\\"\"\n+\tsleep 6\n+\t$(TERMINAL_EMULATOR) -e \"bash -l -c \\\"make run-dice ; $(WAIT_CMD)\\\"\"\n+\tsleep 2\n+\t$(TERMINAL_EMULATOR) -e \"bash -l -c \\\"make run-dice ; $(WAIT_CMD)\\\"\"\n+\n+\t@echo\n+\t@echo \"If you want to restart from scratch the application, remove all its data:\"\n+\t@echo \"  sudo rm -rf $(BK_LOCAL_DATA_DIR)\"\n+\t@echo\n+\n+# -------------------------------- #\n+# Other undocumented utilities     #\n+# -------------------------------- #\n+\n+start:\n+\tdocker start \"$(CONTAINER_NAME)\"\n+\n+# -------------------------------- #\n+\n+stop:\n+\tdocker stop \"$(CONTAINER_NAME)\"\n+\n+# -------------------------------- #\n+\n+shell exec:\n+\tdocker exec -it \\\n+\t    \"$(CONTAINER_NAME)\" \\\n+\t    /bin/bash -il\n+\n+# -------------------------------- #\n+\n+root-shell root-exec:\n+\tdocker exec -it \"$(CONTAINER_NAME)\" /bin/bash -il\n+\n+# -------------------------------- #\n+\n+info ip:\n+\t@echo \n+\t@echo \"Image: $(IMAGE)\"\n+\t@echo \"Container name: $(CONTAINER_NAME)\"\n+\t@echo\n+\t-@echo \"Actual Image: $(shell docker inspect --format '{{ .RepoTags }} (created {{.Created }})' $(IMAGE))\"\n+\t-@echo \"Actual Container: $(shell docker inspect --format '{{ .Name }} (created {{.Created }})' $(CONTAINER_NAME))\"\n+\t-@echo \"Actual Container IP: $(shell docker inspect --format '{{ .NetworkSettings.IPAddress }}' $(CONTAINER_NAME))\"\n+\t@echo\n+\n+# -------------------------------- #\n+\n+clean-files:\n+\n+clean:\n+\t-docker stop $(CONTAINER_NAME)\n+\t-docker rm $(CONTAINER_NAME)\n+\t-docker rmi $(IMAGE)\n+\tmake clean-files"},{"sha":"7b7cb36ae03eb301eb19ce1b17f5804d94493f6e","filename":"docker/README.md","status":"added","additions":174,"deletions":0,"changes":174,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/d107f969a915362dfce8f1b66c221debd434aefd/docker%2FREADME.md","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/d107f969a915362dfce8f1b66c221debd434aefd/docker%2FREADME.md","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/docker%2FREADME.md?ref=d107f969a915362dfce8f1b66c221debd434aefd","patch":"@@ -0,0 +1,174 @@\n+\n+# What is Apache Bookkeeper?\n+\n+Apache ZooKeeper is a software project of the Apache Software Foundation, providing a replicated log service which can be used to build replicated state machines. A log contains a sequence of events which can be applied to a state machine. BookKeeper guarantees that each replica state machine will see all the same entries, in the same order.\n+\n+> [Apache Bookkeeper](http://bookkeeper.apache.org/)\n+\n+\n+# How to use this image\n+\n+Bookkeeper needs [Zookeeper](https://zookeeper.apache.org/) in order to preserve its state and publish its bookies (bookkepeer servers). The client only need to connect to a Zookkeeper server in the ensamble in order to obtain the list of Bookkeeper servers.\n+\n+## TL;DR\n+\n+If you just want to see things working, you can play with Makefile hosted in this project and check its targets for a fairly complex set up example:\n+```\n+git clone https://github.com/apache/bookkeeper\n+cd bookkeeper/docker\n+make run-demo\n+```\n+While, if you don't have access to a X environment, e.g. on default MacOS, It has to run the last command manually in 6 terminals respectively.\n+```\n+make run-zk\n+make run-bk BOOKIE=1\n+make run-bk BOOKIE=2\n+make run-bk BOOKIE=3\n+make run-dice\n+make run-dice\n+```\n+This will do all the following steps and start up a working ensemble with two dice applications.\n+\n+## Step by step\n+\n+The simplest way to let Bookkeeper servers publish themselves with a name, which could be resolved consistently across container runs, is through creation of a [docker network](https://docs.docker.com/engine/reference/commandline/network_create/):\n+```\n+docker network create \"my-bookkeeper-network\"\n+```\n+Then we can start a Zookeeper (from [Zookeeper official image](https://hub.docker.com/_/zookeeper/)) server in standalone mode on that network:\n+```\n+docker run -d \\\n+    --network \"my-bookkeeper-network\" \\\n+    --name \"my-zookeeper\" \\\n+    --hostname \"my-zookeeper\" \\\n+    zookeeper\n+```\n+And initialize the metadata store that bookies will use to store information:\n+```\n+docker run -it --rm \\\n+    --network \"my-bookkeeper-network\" \\\n+    --env ZK_URL=my-zookeeper:2181 \\\n+    bookkeeper \\\n+    bookkeeper shell metaformat\n+```\n+Now we can start our Bookkeeper ensemble (e.g. with three bookies):\n+```\n+docker run -it\\\n+    --network \"my-bookkeeper-network\" \\\n+    --env ZK_URL=my-zookeeper:2181 \\\n+    --name \"bookie1\" \\\n+    --hostname \"bookie1\" \\\n+    bookkeeper\n+```\n+And so on for \"bookie2\" and \"bookie3\". We have now our fully functional ensemble, ready to accept clients.\n+\n+In order to play with our freshly created ensemble, you can use the simple application taken from [Bookkeeper Tutorial](http://bookkeeper.apache.org/docs/master/bookkeeperTutorial.html) and packaged in a [docker image](https://github.com/caiok/bookkeeper-tutorial) for convenience.\n+\n+This application check if it can be leader, if yes start to roll a dice and book this rolls on bookkeeper, otherwise it will start to follow the leader rolls. If leader stops, follower will try to become leader and so on.\n+\n+Start a dice application (you can run it several times to view the behavior in a concurrent environment):\n+```\n+docker run -it --rm \\\n+    --network \"my-bookkeeper-network\" \\\n+    --env ZK_URL=my-zookkeeper:2181 \\\n+    caiok/bookkeeper-tutorial\n+```\n+\n+## Configuration\n+\n+Bookkeeper configuration is located in `/opt/bookkeeper/conf` in the docker container, it is a copy of [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf) in bookkeeper repo.\n+\n+There are 2 ways to set bookkeeper configuration:\n+\n+1, Apply setted (e.g. docker -e kk=vv) environment variables into configuration files. Environment variable names is in format \"BK_originalName\", in which \"originalName\" is the key in config files.\n+\n+2, If you are able to handle your local volumes, use `docker --volume` command to bind-mount your local configure volumes to `/opt/bookkeeper/conf`.\n+\n+Example showing how to use your own configuration files:\n+```\n+$ docker run --name bookie1 -d \\\n+    -v $(local_configure_dir):/opt/bookkeeper/conf/ \\   < == use 2nd approach, mount dir contains config_files\n+    -e BK_bookiePort=3181 \\                             < == use 1st approach, set bookiePort\n+    -e BK_zkServers=zk-server1:2181,zk-server2:2181 \\   < == use 1st approach, set zookeeper servers\n+    -e BK_journalPreAllocSizeMB=32 \\                    < == use 1st approach, set journalPreAllocSizeMB in [bk_server.conf](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/conf/bk_server.conf)\n+    bookkeeper\n+```\n+\n+### Override rules for bookkeeper configuration\n+If you have applied several ways to set the same config target, e.g. the environment variable names contained in [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf) and conf_file in /opt/bookkeeper/conf/.\n+\n+Then the override rules is as this:\n+\n+Environment variable names contained in [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf), e.g. `zkServers`\n+\n+    Override\n+\n+Values in /opt/bookkeeper/conf/conf_files.\n+\n+Take above example, if in docker instance you have bind-mount your config file as /opt/bookkeeper/conf/bk_server.conf, and in it contains key-value pair: `zkServers=zk-server3:2181`, then the value that take effect finally is `zkServers=zk-server1:2181,zk-server2:2181`\n+\n+Because\n+\n+`-e BK_zkServers=zk-server1:2181,zk-server2:2181` will override key-value pair: `zkServers=zk-server3:2181`, which contained in /opt/bookkeeper/conf/bk_server.conf.\n+\n+\n+### Environment variable names that mostly used for your configuration.\n+\n+#### `BK_bookiePort`\n+\n+This variable allows you to specify the port on which Bookkeeper should listen for incoming connections.\n+\n+This will override `bookiePort` in [bk_server.conf](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/conf/bk_server.conf).\n+\n+Default value is \"3181\".\n+\n+#### `BK_zkServers`\n+\n+This variable allows you to specify a list of machines of the Zookeeper ensemble. Each entry has the form of `host:port`. Entries are separated with a comma.\n+\n+This will override `zkServers` in [bk_server.conf](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/conf/bk_server.conf).\n+\n+Default value is \"127.0.0.1:2181\"\n+\n+#### `BK_zkLedgersRootPath`\n+\n+This variable allows you to specify the root directory bookkeeper will use on Zookeeper to store ledgers metadata.\n+\n+This will override `zkLedgersRootPath ` in [bk_server.conf](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/conf/bk_server.conf).\n+\n+Default value is \"/bookkeeper/ledgers\"\n+\n+#### `BK_CLUSTER_ROOT_PATH`\n+\n+This variable allows you to specify the root directory bookkeeper will use on Zookeeper.\n+\n+Default value is empty - \" \". so ledgers dir in zookeeper will be at \"/ledgers\" by default. You could set it as that you want, e.g. \"/bookkeeper\"\n+\n+#### `BK_DATA_DIR`\n+This variable allows you to specify where to store data in docker instance.\n+\n+This could be override by env vars \"BK_journalDirectory\", \"BK_ledgerDirectories\", \"BK_indexDirectories\"  and also `journalDirectory`, `ledgerDirectories`, `indexDirectories` in [bk_server.conf](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/conf/bk_server.conf).\n+\n+Default value is \"/data/bookkeeper\", which contains volumes `/data/bookkeeper/journal`, `/data/bookkeeper/ledger` and `/data/bookkeeper/index` to hold Bookkeeper data in docker.\n+\n+\n+### Configure files under /opt/bookkeeper/conf\n+These files is originally un-tared from the bookkeeper building binary, such as [bookkeeper-server-4.4.0-bin.tar.tgz](https://archive.apache.org/dist/bookkeeper/bookkeeper-4.4.0/bookkeeper-4.4.0-src.tar.gz), and it comes from [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf) in bookkeeper repo.\n+\n+Usually we could config files bk_server.conf, bkenv.sh, log4j.properties, and log4j.shell.properties. Please read and understand them before you do the configuration.\n+\n+\n+### Caveats\n+\n+Be careful where you put the transaction log (journal). A dedicated transaction log device is key to consistent good performance. Putting the log on a busy device will adversely effect performance.\n+\n+Here is some useful and graceful command the could be used to replace the default command, once you want to delete the cookeis and do auto recovery:\n+```\n+/bookkeeper/bookkeeper-server/bin/bookkeeper shell bookieformat -nonInteractive -force -deleteCookie\n+/bookkeeper/bookkeeper-server/bin/bookkeeper autorecovery\n+```\n+Use them, and replace the default [CMD] when you wanted to do things other than start a bookie.\n+\n+# License\n+\n+View [license information](https://github.com/apache/bookkeeper/blob/master/LICENSE) for the software contained in this image."},{"sha":"78e6945d04eeb18c4b0d2c052e91dabe3ef00a34","filename":"docker/scripts/apply-config-from-env.py","status":"added","additions":85,"deletions":0,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/d107f969a915362dfce8f1b66c221debd434aefd/docker%2Fscripts%2Fapply-config-from-env.py","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/d107f969a915362dfce8f1b66c221debd434aefd/docker%2Fscripts%2Fapply-config-from-env.py","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/docker%2Fscripts%2Fapply-config-from-env.py?ref=d107f969a915362dfce8f1b66c221debd434aefd","patch":"@@ -0,0 +1,85 @@\n+#!/usr/bin/env python\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+##\n+## Edit properties config files under config_dir and replace values\n+## based on the ENV variables\n+## export my-key=new-value\n+##\n+## ./apply-config-from-env config_dir\n+##\n+\n+import os, sys\n+\n+if len(sys.argv) != 2:\n+    print 'Usage: %s ' + 'config_dir' % (sys.argv[0])\n+    sys.exit(1)\n+\n+def mylistdir(dir):\n+    return [os.path.join(dir, filename) for filename in os.listdir(dir)]\n+\n+# Always apply env config to all the files under conf\n+conf_dir = sys.argv[1]\n+conf_files = mylistdir(conf_dir)\n+print 'conf files: '\n+print conf_files\n+\n+bk_env_prefix = 'BK_'\n+\n+for conf_filename in conf_files:\n+    lines = []  # List of config file lines\n+    keys = {}   # Map a key to its line number in the file\n+\n+    # Load conf file\n+    for line in open(conf_filename):\n+        lines.append(line)\n+        line = line.strip()\n+        #if not line or line.startswith('#'):\n+        if not line or '=' not in line:\n+            continue\n+\n+        if line.startswith('#'):\n+            line = line.replace('#', '')\n+\n+        # Remove spaces around key,\n+        line = line.replace(' ', '')\n+        k,v = line.split('=', 1)\n+\n+        # Only replace first appearance\n+        if k not in keys:\n+            keys[k] = len(lines) - 1\n+        else:\n+           lines.pop()\n+\n+    # Update values from Env\n+    for k in sorted(os.environ.keys()):\n+        v = os.environ[k]\n+        if k.startswith(bk_env_prefix):\n+            search_key = k[len(bk_env_prefix):]\n+            if search_key in keys:\n+                print '[%s] Applying config %s = %s' % (conf_filename, search_key, v)\n+                idx = keys[search_key]\n+                lines[idx] = '%s=%s\\n' % (search_key, v)\n+\n+    # Store back the updated config in the same file\n+    f = open(conf_filename, 'w')\n+    for line in lines:\n+        f.write(line)\n+    f.close()"},{"sha":"7610361a059c0a8717be7aa62ca871db7b53dfe9","filename":"docker/scripts/entrypoint.sh","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/d107f969a915362dfce8f1b66c221debd434aefd/docker%2Fscripts%2Fentrypoint.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/d107f969a915362dfce8f1b66c221debd434aefd/docker%2Fscripts%2Fentrypoint.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/docker%2Fscripts%2Fentrypoint.sh?ref=d107f969a915362dfce8f1b66c221debd434aefd","patch":"@@ -0,0 +1,72 @@\n+#!/bin/bash\n+#\n+#/**\n+# * Copyright 2007 The Apache Software Foundation\n+# *\n+# * Licensed to the Apache Software Foundation (ASF) under one\n+# * or more contributor license agreements.  See the NOTICE file\n+# * distributed with this work for additional information\n+# * regarding copyright ownership.  The ASF licenses this file\n+# * to you under the Apache License, Version 2.0 (the\n+# * \"License\"); you may not use this file except in compliance\n+# * with the License.  You may obtain a copy of the License at\n+# *\n+# *     http://www.apache.org/licenses/LICENSE-2.0\n+# *\n+# * Unless required by applicable law or agreed to in writing, software\n+# * distributed under the License is distributed on an \"AS IS\" BASIS,\n+# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# * See the License for the specific language governing permissions and\n+# * limitations under the License.\n+# */\n+\n+export PATH=$PATH:/opt/bookkeeper/bin\n+export JAVA_HOME=/usr\n+\n+# env var used often\n+PORT0=${PORT0:-${BOOKIE_PORT}}\n+PORT0=${PORT0:-3181}\n+BK_DATA_DIR=${BK_DATA_DIR:-\"/data/bookkeeper\"}\n+BK_CLUSTER_ROOT_PATH=${BK_CLUSTER_ROOT_PATH:-\" \"}\n+\n+# env vars to replace values in config files\n+export BK_bookiePort=${BK_bookiePort:-${PORT0}}\n+export BK_zkServers=${BK_zkServers}\n+export BK_zkLedgersRootPath=${BK_zkLedgersRootPath:-\"${BK_CLUSTER_ROOT_PATH}/ledgers\"}\n+export BK_journalDirectory=${BK_journalDirectory:-${BK_DATA_DIR}/journal}\n+export BK_ledgerDirectories=${BK_ledgerDirectories:-${BK_DATA_DIR}/ledgers}\n+export BK_indexDirectories=${BK_indexDirectories:-${BK_DATA_DIR}/index}\n+\n+echo \"BK_bookiePort bookie service port is $BK_bookiePort\"\n+echo \"BK_zkServers is $BK_zkServers\"\n+echo \"BK_DATA_DIR is $BK_DATA_DIR\"\n+echo \"BK_CLUSTER_ROOT_PATH is $BK_CLUSTER_ROOT_PATH\"\n+\n+\n+mkdir -p \"${BK_journalDirectory}\" \"${BK_ledgerDirectories}\" \"${BK_indexDirectories}\"\n+# -------------- #\n+# Allow the container to be started with `--user`\n+if [ \"$1\" = 'bookkeeper' -a \"$(id -u)\" = '0' ]; then\n+    chown -R \"$BK_USER:$BK_USER\" \"/opt/bookkeeper/\" \"${BK_journalDirectory}\" \"${BK_ledgerDirectories}\" \"${BK_indexDirectories}\"\n+    sudo -s -E -u \"$BK_USER\" /bin/bash \"$0\" \"$@\"\n+    exit\n+fi\n+# -------------- #\n+\n+python apply-config-from-env.py /opt/bookkeeper/conf\n+\n+echo \"wait for zookeeper\"\n+until /opt/bookkeeper/bin/bookkeeper org.apache.zookeeper.ZooKeeperMain -server ${BK_zkServers} ls /; do sleep 5; done\n+\n+echo \"create the zk root dir for bookkeeper\"\n+/opt/zk/bin/zkCli.sh -server ${BK_zkServers} create ${BK_CLUSTER_ROOT_PATH}\n+\n+echo \"format zk metadata\"\n+echo \"please ignore the failure, if it has already been formatted, \"\n+export BOOKIE_CONF=/opt/bookkeeper/conf/bk_server.conf\n+export SERVICE_PORT=$PORT0\n+/opt/bookkeeper/bin/bookkeeper shell metaformat -n || true\n+\n+echo \"run command by exec\"\n+exec \"$@\"\n+"},{"sha":"87ce09d3ad440fc161df5fdb90ba36a87608bf36","filename":"docker/scripts/healthcheck.sh","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/d107f969a915362dfce8f1b66c221debd434aefd/docker%2Fscripts%2Fhealthcheck.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/d107f969a915362dfce8f1b66c221debd434aefd/docker%2Fscripts%2Fhealthcheck.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/docker%2Fscripts%2Fhealthcheck.sh?ref=d107f969a915362dfce8f1b66c221debd434aefd","patch":"@@ -0,0 +1,28 @@\n+#!/bin/bash\n+#\n+#/**\n+# * Copyright 2007 The Apache Software Foundation\n+# *\n+# * Licensed to the Apache Software Foundation (ASF) under one\n+# * or more contributor license agreements.  See the NOTICE file\n+# * distributed with this work for additional information\n+# * regarding copyright ownership.  The ASF licenses this file\n+# * to you under the Apache License, Version 2.0 (the\n+# * \"License\"); you may not use this file except in compliance\n+# * with the License.  You may obtain a copy of the License at\n+# *\n+# *     http://www.apache.org/licenses/LICENSE-2.0\n+# *\n+# * Unless required by applicable law or agreed to in writing, software\n+# * distributed under the License is distributed on an \"AS IS\" BASIS,\n+# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# * See the License for the specific language governing permissions and\n+# * limitations under the License.\n+# */\n+\n+#!/bin/bash\n+\n+set -x -e -u\n+\n+# Sanity check that creates a ledger, writes a few entries, reads them and deletes the ledger.\n+bookkeeper shell bookiesanity"}]}