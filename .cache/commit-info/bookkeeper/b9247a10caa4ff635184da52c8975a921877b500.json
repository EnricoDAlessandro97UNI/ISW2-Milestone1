{"sha":"b9247a10caa4ff635184da52c8975a921877b500","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmI5MjQ3YTEwY2FhNGZmNjM1MTg0ZGE1MmM4OTc1YTkyMTg3N2I1MDA=","commit":{"author":{"name":"Jon Derrick","email":"jonathan.derrickk@gmail.com","date":"2016-10-13T07:47:11Z"},"committer":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-10-13T07:47:11Z"},"message":"DL-32: Fix Findbug warnings\n\n- Bump the version to 3.0.3\n- Fix all the findbug warnings\n- Enable findbugs:check on travis ci\n\nAuthor: Jon Derrick <jonathan.derrickk@gmail.com>\n\nReviewers: Sijie Guo <sijie@apache.org>\n\nCloses #19 from jderrickk/jd/fix_findbugs_error and squashes the following commits:\n\nc48c89c [Jon Derrick] Merge branch 'master' into jd/fix_findbugs_error\nd9b0425 [Jon Derrick] verify findbugs on travis ci\n985501b [Jon Derrick] Fix findbug errors on all modules\n18e8267 [Jon Derrick] Remove distributedlog-example\nffa8361 [Jon Derrick] Fix findbugs in distributedlog-protocol","tree":{"sha":"7ec78e44081e1f589553d41f43412bb37a738762","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/7ec78e44081e1f589553d41f43412bb37a738762"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/b9247a10caa4ff635184da52c8975a921877b500","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/b9247a10caa4ff635184da52c8975a921877b500","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/b9247a10caa4ff635184da52c8975a921877b500","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/b9247a10caa4ff635184da52c8975a921877b500/comments","author":{"login":"jderrickk","id":19365668,"node_id":"MDQ6VXNlcjE5MzY1NjY4","avatar_url":"https://avatars.githubusercontent.com/u/19365668?v=4","gravatar_id":"","url":"https://api.github.com/users/jderrickk","html_url":"https://github.com/jderrickk","followers_url":"https://api.github.com/users/jderrickk/followers","following_url":"https://api.github.com/users/jderrickk/following{/other_user}","gists_url":"https://api.github.com/users/jderrickk/gists{/gist_id}","starred_url":"https://api.github.com/users/jderrickk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jderrickk/subscriptions","organizations_url":"https://api.github.com/users/jderrickk/orgs","repos_url":"https://api.github.com/users/jderrickk/repos","events_url":"https://api.github.com/users/jderrickk/events{/privacy}","received_events_url":"https://api.github.com/users/jderrickk/received_events","type":"User","site_admin":false},"committer":null,"parents":[{"sha":"25af8e2950670648c04047e65ed67136c6a81ba7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/25af8e2950670648c04047e65ed67136c6a81ba7","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/25af8e2950670648c04047e65ed67136c6a81ba7"}],"stats":{"total":31,"additions":22,"deletions":9},"files":[{"sha":"0b084714f38405a5c2f29b96d86f53a6ad932a3d","filename":"src/main/java/com/twitter/distributedlog/util/ProtocolUtils.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b9247a10caa4ff635184da52c8975a921877b500/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Futil%2FProtocolUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b9247a10caa4ff635184da52c8975a921877b500/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Futil%2FProtocolUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Futil%2FProtocolUtils.java?ref=b9247a10caa4ff635184da52c8975a921877b500","patch":"@@ -20,17 +20,15 @@\n import java.util.zip.CRC32;\n \n import com.twitter.distributedlog.DLSN;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+\n+import static com.google.common.base.Charsets.UTF_8;\n \n /**\n  * With CRC embedded in the application, we have to keep track of per api crc. Ideally this\n  * would be done by thrift.\n  */\n public class ProtocolUtils {\n \n-    private static final Logger logger = LoggerFactory.getLogger(ProtocolUtils.class);\n-\n     // For request payload checksum\n     private static final ThreadLocal<CRC32> requestCRC = new ThreadLocal<CRC32>() {\n         @Override\n@@ -45,7 +43,7 @@ protected CRC32 initialValue() {\n     public static Long writeOpCRC32(String stream, byte[] payload) {\n         CRC32 crc = requestCRC.get();\n         try {\n-            crc.update(stream.getBytes());\n+            crc.update(stream.getBytes(UTF_8));\n             crc.update(payload);\n             return crc.getValue();\n         } finally {\n@@ -59,9 +57,8 @@ public static Long writeOpCRC32(String stream, byte[] payload) {\n     public static Long truncateOpCRC32(String stream, DLSN dlsn) {\n         CRC32 crc = requestCRC.get();\n         try {\n-            crc.update(stream.getBytes());\n+            crc.update(stream.getBytes(UTF_8));\n             crc.update(dlsn.serializeBytes());\n-            long result = crc.getValue();\n             return crc.getValue();\n         } finally {\n             crc.reset();\n@@ -74,8 +71,7 @@ public static Long truncateOpCRC32(String stream, DLSN dlsn) {\n     public static Long streamOpCRC32(String stream) {\n         CRC32 crc = requestCRC.get();\n         try {\n-            crc.update(stream.getBytes());\n-            long result = crc.getValue();\n+            crc.update(stream.getBytes(UTF_8));\n             return crc.getValue();\n         } finally {\n             crc.reset();"},{"sha":"6b2197bbf6a4e60b0f7daf27f4cc7e4c6ec3bac8","filename":"src/main/resources/findbugsExclude.xml","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/b9247a10caa4ff635184da52c8975a921877b500/src%2Fmain%2Fresources%2FfindbugsExclude.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/b9247a10caa4ff635184da52c8975a921877b500/src%2Fmain%2Fresources%2FfindbugsExclude.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fresources%2FfindbugsExclude.xml?ref=b9247a10caa4ff635184da52c8975a921877b500","patch":"@@ -20,4 +20,21 @@\n     <!-- generated code, we can't be held responsible for findbugs in it //-->\n     <Class name=\"~com\\.twitter\\.distributedlog\\.thrift.*\" />\n   </Match>\n+  <Match>\n+    <!-- it is safe to store external bytes reference here. //-->\n+    <Class name=\"com.twitter.distributedlog.LogRecord\" />\n+    <Bug pattern=\"EI_EXPOSE_REP2\" />\n+  </Match>\n+  <Match>\n+    <!-- it is safe to store external bytes reference here. //-->\n+    <Class name=\"com.twitter.distributedlog.LogRecord\" />\n+    <Method name=\"getPayload\" />\n+    <Bug pattern=\"EI_EXPOSE_REP\" />\n+  </Match>\n+  <Match>\n+    <!-- it is safe to store external bytes reference here. //-->\n+    <Class name=\"com.twitter.distributedlog.io.Buffer\" />\n+    <Method name=\"getData\" />\n+    <Bug pattern=\"EI_EXPOSE_REP\" />\n+  </Match>\n </FindBugsFilter>"}]}