{"sha":"5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjVjNzY4YjBhM2NmNTczYTRiYTcxZjhiNmVkYzlmMTgzZmRjZTRmNjU=","commit":{"author":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-05-24T10:20:34Z"},"committer":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-05-24T10:20:34Z"},"message":"Add documents on running distributedlog in distributed mode","tree":{"sha":"42faba9423425b9de3485863a45ebea51deffebb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/42faba9423425b9de3485863a45ebea51deffebb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/comments","author":null,"committer":null,"parents":[{"sha":"089735246f6084e9f68085ab03999394c7158a72","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/089735246f6084e9f68085ab03999394c7158a72","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/089735246f6084e9f68085ab03999394c7158a72"}],"stats":{"total":310,"additions":305,"deletions":5},"files":[{"sha":"41e287cf5a4a2e5d7a1cfe392ccd5b05b1c41505","filename":"conf/bookie.conf.template","status":"added","additions":185,"deletions":0,"changes":185,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fbookie.conf.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fbookie.conf.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/conf%2Fbookie.conf.template?ref=5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","patch":"@@ -0,0 +1,185 @@\n+#!/bin/sh\n+#\n+#/**\n+# * Copyright 2007 The Apache Software Foundation\n+# *\n+# * Licensed to the Apache Software Foundation (ASF) under one\n+# * or more contributor license agreements.  See the NOTICE file\n+# * distributed with this work for additional information\n+# * regarding copyright ownership.  The ASF licenses this file\n+# * to you under the Apache License, Version 2.0 (the\n+# * \"License\"); you may not use this file except in compliance\n+# * with the License.  You may obtain a copy of the License at\n+# *\n+# *     http://www.apache.org/licenses/LICENSE-2.0\n+# *\n+# * Unless required by applicable law or agreed to in writing, software\n+# * distributed under the License is distributed on an \"AS IS\" BASIS,\n+# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# * See the License for the specific language governing permissions and\n+# * limitations under the License.\n+# */\n+\n+## Bookie settings\n+\n+# Port that bookie server listen on\n+bookiePort=3181\n+\n+# TODO: change the journal directory\n+# Directory Bookkeeper outputs its write ahead log\n+journalDirectory=/tmp/data/bk/journal\n+\n+# TODO: change the ledgers directory\n+# Directory Bookkeeper outputs ledger snapshots\n+ledgerDirectories=/tmp/data/bk/ledgers\n+\n+# TODO: change the index directory\n+# Directory in which index files will be stored.\n+indexDirectories=/tmp/data/bk/ledgers\n+\n+# Ledger Manager Class\n+# What kind of ledger manager is used to manage how ledgers are stored, managed\n+# and garbage collected. Try to read 'BookKeeper Internals' for detail info.\n+ledgerManagerType=hierarchical\n+\n+# Root zookeeper path to store ledger metadata\n+# This parameter is used by zookeeper-based ledger manager as a root znode to\n+# store all ledgers.\n+zkLedgersRootPath=/messaging/bookkeeper/ledgers\n+\n+# Max file size of entry logger, in bytes\n+# A new entry log file will be created when the old one reaches the file size limitation\n+logSizeLimit=1073741823\n+\n+# Max file size of journal file, in mega bytes\n+# A new journal file will be created when the old one reaches the file size limitation\n+#\n+journalMaxSizeMB=2048\n+\n+# Max number of old journal file to kept\n+# Keep a number of old journal files would help data recovery in specia case\n+#\n+journalMaxBackups=5\n+\n+# How long the interval to trigger next garbage collection, in milliseconds\n+# Since garbage collection is running in background, too frequent gc\n+# will heart performance. It is better to give a higher number of gc\n+# interval if there is enough disk capacity.\n+# gc per 1 hour (aligning with most DL rolling interval)\n+gcInitialWaitTime=600000\n+gcWaitTime=3600000\n+# do minor compaction per 2 hours\n+minorCompactionInterval=7200\n+minorCompactionThreshold=0.2\n+# disable major compaction\n+majorCompactionInterval=0\n+# reduce major compaction threshold to a low value to prevent bad force compaction behavior\n+majorCompactionThreshold=0.3\n+# Compaction Rate & Max Outstanding\n+compactionRate=10737418\n+compactionMaxOutstandingRequests=10737418\n+\n+# How long the interval to flush ledger index pages to disk, in milliseconds\n+# Flushing index files will introduce much random disk I/O.\n+# If separating journal dir and ledger dirs each on different devices,\n+# flushing would not affect performance. But if putting journal dir\n+# and ledger dirs on same device, performance degrade significantly\n+# on too frequent flushing. You can consider increment flush interval\n+# to get better performance, but you need to pay more time on bookie\n+# server restart after failure.\n+#\n+flushInterval=1000\n+\n+# Interval to watch whether bookie is dead or not, in milliseconds\n+#\n+# bookieDeathWatchInterval=1000\n+\n+## zookeeper client settings\n+\n+# A list of one of more servers on which zookeeper is running.\n+# The server list can be comma separated values, for example:\n+# zkServers=zk1:2181,zk2:2181,zk3:2181\n+zkServers=localhost:2181\n+\n+# ZooKeeper client session timeout in milliseconds\n+# Bookie server will exit if it received SESSION_EXPIRED because it\n+# was partitioned off from ZooKeeper for more than the session timeout\n+# JVM garbage collection, disk I/O will cause SESSION_EXPIRED.\n+# Increment this value could help avoiding this issue\n+zkTimeout=30000\n+\n+## NIO Server settings\n+\n+# This settings is used to enabled/disabled Nagle's algorithm, which is a means of\n+# improving the efficiency of TCP/IP networks by reducing the number of packets\n+# that need to be sent over the network.\n+# If you are sending many small messages, such that more than one can fit in\n+# a single IP packet, setting server.tcpnodelay to false to enable Nagle algorithm\n+# can provide better performance.\n+# Default value is true.\n+#\n+serverTcpNoDelay=true\n+\n+## ledger cache settings\n+\n+# Max number of ledger index files could be opened in bookie server\n+# If number of ledger index files reaches this limitation, bookie\n+# server started to swap some ledgers from memory to disk.\n+# Too frequent swap will affect performance. You can tune this number\n+# to gain performance according your requirements.\n+openFileLimit=20000\n+\n+# Size of a index page in ledger cache, in bytes\n+# A larger index page can improve performance writing page to disk,\n+# which is efficent when you have small number of ledgers and these\n+# ledgers have similar number of entries.\n+# If you have large number of ledgers and each ledger has fewer entries,\n+# smaller index page would improve memory usage.\n+pageSize=8192\n+\n+# How many index pages provided in ledger cache\n+# If number of index pages reaches this limitation, bookie server\n+# starts to swap some ledgers from memory to disk. You can increment\n+# this value when you found swap became more frequent. But make sure\n+# pageLimit*pageSize should not more than JVM max memory limitation,\n+# otherwise you would got OutOfMemoryException.\n+# In general, incrementing pageLimit, using smaller index page would\n+# gain bettern performance in lager number of ledgers with fewer entries case\n+# If pageLimit is -1, bookie server will use 1/3 of JVM memory to compute\n+# the limitation of number of index pages.\n+pageLimit=131072\n+\n+#If all ledger directories configured are full, then support only read requests for clients.\n+#If \"readOnlyModeEnabled=true\" then on all ledger disks full, bookie will be converted\n+#to read-only mode and serve only read requests. Otherwise the bookie will be shutdown.\n+readOnlyModeEnabled=true\n+\n+# Bookie Journal Settings\n+writeBufferSizeBytes=262144\n+journalFlushWhenQueueEmpty=false\n+journalRemoveFromPageCache=true\n+journalAdaptiveGroupWrites=true\n+journalMaxGroupWaitMSec=4\n+journalBufferedEntriesThreshold=180\n+journalBufferedWritesThreshold=131072\n+journalMaxGroupedEntriesToCommit=200\n+journalPreAllocSizeMB=4\n+\n+# Sorted Ledger Storage Settings\n+sortedLedgerStorageEnabled=true\n+skipListSizeLimit=67108864\n+skipListArenaChunkSize=2097152\n+skipListArenaMaxAllocSize=131072\n+fileInfoCacheInitialCapacity=10000\n+fileInfoMaxIdleTime=3600\n+\n+# Bookie Threads Settings (NOTE: change this to align the cpu cores)\n+numAddWorkerThreads=4\n+numJournalCallbackThreads=4\n+numReadWorkerThreads=4\n+numLongPollWorkerThreads=4\n+\n+# stats\n+statsProviderClass=org.apache.bookkeeper.stats.CodahaleMetricsServletProvider\n+# Exporting codahale stats\n+codahaleStatsHttpPort=9001"},{"sha":"ae6c4594661f862cf95fc4ecc4c1f35b5020a599","filename":"conf/dlogenv.sh","status":"modified","additions":37,"deletions":1,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fdlogenv.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fdlogenv.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/conf%2Fdlogenv.sh?ref=5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","patch":"@@ -20,7 +20,9 @@\n # * limitations under the License.\n # */\n \n-# default settings for starting distributedlog sandbox\n+##################\n+# General\n+##################\n \n # Log4j configuration file\n # DLOG_LOG_CONF=\n@@ -39,3 +41,37 @@\n \n # Configure the log file\n # DLOG_LOG_FILE=\n+\n+#################\n+# ZooKeeper\n+#################\n+\n+# Configure zookeeper root logger\n+# ZK_ROOT_LOGGER=\n+\n+#################\n+# Bookie\n+#################\n+\n+# Configure bookie root logger\n+# BK_ROOT_LOGGER=\n+\n+#################\n+# Write Proxy\n+#################\n+\n+# Configure write proxy root logger\n+# WP_ROOT_LOGGER=\n+\n+# write proxy configuration file\n+# WP_CONF_FILE=${DL_HOME}/conf/write_proxy.conf\n+\n+# port and stats port\n+# WP_SERVICE_PORT=4181\n+# WP_STATS_PORT=9000\n+\n+# shard id\n+# WP_SHARD_ID=0\n+\n+# write proxy namespace\n+# WP_NAMESPACE=distributedlog://127.0.0.1:2181/messaging/distributedlog/mynamespace"},{"sha":"3e58b3157b7211eda054f446f0d62968ce344ca5","filename":"conf/write_proxy.conf","status":"renamed","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fwrite_proxy.conf","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fwrite_proxy.conf","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/conf%2Fwrite_proxy.conf?ref=5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","patch":"@@ -51,7 +51,7 @@ maxIdSanityCheck=false\n # use allocator pool for proxy\n enableLedgerAllocatorPool=true\n # ledger allocator pool path\n-ledgerAllocatorPoolPath=.write_proxy_eventbus_high_throughput_allocation_pool\n+ledgerAllocatorPoolPath=.write_proxy_allocation_pool\n # ledger allocator pool size\n ledgerAllocatorPoolCoreSize=40\n # check stream exists or not\n@@ -110,11 +110,10 @@ server_threads=16\n server_dlsn_version=1\n server_enable_perstream_stat=true\n server_graceful_shutdown_period_ms=35000\n-stream_partition_converter_class=com.twitter.distributedlog.service.streamset.EventBusStreamPartitionConverter\n \n # write limits\n perWriterOutstandingWriteLimit=-1\n-globalOutstandingWriteLimit=15000\n+globalOutstandingWriteLimit=-1\n outstandingWriteLimitDarkmode=false\n \n # bytes per second limit applied at the host level (50MBps on 1Gib machines)","previous_filename":"conf/distributedlog_proxy.conf"},{"sha":"61a14390a867c9ac6f78a05b75db1e794a3e47d6","filename":"conf/zookeeper.conf.dynamic.template","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fzookeeper.conf.dynamic.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fzookeeper.conf.dynamic.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/conf%2Fzookeeper.conf.dynamic.template?ref=5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","patch":"@@ -0,0 +1 @@\n+server.1=127.0.0.1:2710:3710:participant;0.0.0.0:2181\n\\ No newline at end of file"},{"sha":"f2443474d23baeb0cc8de9ac3ff13e20de75fe7a","filename":"conf/zookeeper.conf.template","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fzookeeper.conf.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/conf%2Fzookeeper.conf.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/conf%2Fzookeeper.conf.template?ref=5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","patch":"@@ -0,0 +1,79 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+# \n+#    http://www.apache.org/licenses/LICENSE-2.0\n+# \n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# The number of milliseconds of each tick\n+tickTime=2000\n+\n+# The number of ticks that the initial\n+# synchronization phase can take\n+initLimit=10\n+\n+# The number of ticks that can pass between\n+# sending a request and getting an acknowledgement\n+syncLimit=30\n+\n+# the directory where the snapshot is stored.\n+dataDir=/tmp/data/zookeeper\n+\n+# where txlog  are written\n+dataLogDir=/tmp/data/zookeeper/txlog\n+\n+# the port at which the admin will listen\n+adminPort=9990\n+zookeeper.admin.enableServer=true\n+\n+# limit on queued clients - default: 1000\n+globalOutstandingLimit=1000\n+\n+# number of transactions before snapshots are taken - default: 100000\n+snapCount=100000\n+\n+# max # of clients - 0==unlimited\n+maxClientCnxns=25\n+\n+# Election implementation to use. A value of \"0\" corresponds to the original\n+# UDP-based version, \"1\" corresponds to the non-authenticated UDP-based\n+# version of fast leader election, \"2\" corresponds to the authenticated\n+# UDP-based version of fast leader election, and \"3\" corresponds to TCP-based\n+# version of fast leader election. Currently, only 0 and 3 are supported,\n+# 3 being the default\n+electionAlg=3\n+\n+# Leader accepts client connections. Default value is \"yes\". The leader\n+# machine coordinates updates. For higher update throughput at thes slight\n+# expense of read throughput the leader can be configured to not accept\n+# clients and focus on coordination.\n+leaderServes=yes\n+\n+# Skips ACL checks. This results in a boost in throughput, but opens up full\n+# access to the data tree to everyone.\n+skipACL=no\n+\n+# Purge txn logs every hour. Before 3.4.x this was done with an external cron\n+# job, now we can do it internally.\n+autopurge.purgeInterval=1\n+\n+# Prior to version 3.4 ZooKeeper has always used NIO directly, however in\n+# versions 3.4 and later Netty is supported as an option to NIO (replaces).\n+# serverCnxnFactory=org.apache.zookeeper.server.NIOServerCnxnFactory\n+\n+standaloneEnabled=false\n+# ZooKeeper Dynamic Reconfiguration\n+# See: https://zookeeper.apache.org/doc/trunk/zookeeperReconfig.html\n+#\n+# standaloneEnabled=false\n+# dynamicConfigFile=/path/to/zoo.cfg.dynamic\n+#\n+server.1=127.0.0.1:2710:3710:participant;0.0.0.0:2181"},{"sha":"298a5ff49af8dcb021f4c5a55ca86563a119f576","filename":"src/main/java/com/twitter/distributedlog/util/SimplePermitLimiter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Futil%2FSimplePermitLimiter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Futil%2FSimplePermitLimiter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2Futil%2FSimplePermitLimiter.java?ref=5c768b0a3cf573a4ba71f8b6edc9f183fdce4f65","patch":"@@ -57,7 +57,7 @@ public SimplePermitLimiter(boolean darkmode, int permitsMax, StatsLogger statsLo\n \n         // stats\n         if (singleton) {\n-            statsLogger.registerGauge(\"permits\", new Gauge<Number>() {\n+            statsLogger.registerGauge(\"num_permits\", new Gauge<Number>() {\n                 @Override\n                 public Number getDefaultValue() {\n                     return 0;"}]}