{"sha":"24fae0322327d8fd75c30524546924f27e278448","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjI0ZmFlMDMyMjMyN2Q4ZmQ3NWMzMDUyNDU0NjkyNGYyN2UyNzg0NDg=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-04-11T18:20:29Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-04-11T18:20:29Z"},"message":"BOOKKEEPER-997: Wire protocol change for supporting long poll\n\nadding fields in ReadRequest to support piggying back lac on read responses and support long poll requests.\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>\n\nCloses #125 from sijie/longpoll/part0_wire_protocol_changes","tree":{"sha":"3a8f81f8eb814389240692e7c0c3ff81e339d085","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/3a8f81f8eb814389240692e7c0c3ff81e339d085"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/24fae0322327d8fd75c30524546924f27e278448","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/24fae0322327d8fd75c30524546924f27e278448","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/24fae0322327d8fd75c30524546924f27e278448","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/24fae0322327d8fd75c30524546924f27e278448/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"12bb13cdb1feca0fa6739f8e6287c326fb5fdb94","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94"}],"stats":{"total":520,"additions":474,"deletions":46},"files":[{"sha":"fb78b87be04a92c6203e9bb6f20073f71fb2c892","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookkeeperProtocol.java","status":"modified","additions":466,"deletions":46,"changes":512,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/24fae0322327d8fd75c30524546924f27e278448/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FBookkeeperProtocol.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/24fae0322327d8fd75c30524546924f27e278448/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FBookkeeperProtocol.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FBookkeeperProtocol.java?ref=24fae0322327d8fd75c30524546924f27e278448","patch":"@@ -2857,6 +2857,40 @@ public interface ReadRequestOrBuilder extends\n      * </pre>\n      */\n     com.google.protobuf.ByteString getMasterKey();\n+\n+    /**\n+     * <code>optional int64 previousLAC = 4;</code>\n+     *\n+     * <pre>\n+     * Used for waiting on last add confirmed update\n+     * </pre>\n+     */\n+    boolean hasPreviousLAC();\n+    /**\n+     * <code>optional int64 previousLAC = 4;</code>\n+     *\n+     * <pre>\n+     * Used for waiting on last add confirmed update\n+     * </pre>\n+     */\n+    long getPreviousLAC();\n+\n+    /**\n+     * <code>optional int64 timeOut = 5;</code>\n+     *\n+     * <pre>\n+     * Used as a timeout for the long polling request\n+     * </pre>\n+     */\n+    boolean hasTimeOut();\n+    /**\n+     * <code>optional int64 timeOut = 5;</code>\n+     *\n+     * <pre>\n+     * Used as a timeout for the long polling request\n+     * </pre>\n+     */\n+    long getTimeOut();\n   }\n   /**\n    * Protobuf type {@code ReadRequest}\n@@ -2925,6 +2959,16 @@ private ReadRequest(\n               masterKey_ = input.readBytes();\n               break;\n             }\n+            case 32: {\n+              bitField0_ |= 0x00000010;\n+              previousLAC_ = input.readInt64();\n+              break;\n+            }\n+            case 40: {\n+              bitField0_ |= 0x00000020;\n+              timeOut_ = input.readInt64();\n+              break;\n+            }\n             case 800: {\n               int rawValue = input.readEnum();\n               org.apache.bookkeeper.proto.BookkeeperProtocol.ReadRequest.Flag value = org.apache.bookkeeper.proto.BookkeeperProtocol.ReadRequest.Flag.valueOf(rawValue);\n@@ -2984,19 +3028,28 @@ public com.google.protobuf.Parser<ReadRequest> getParserForType() {\n        * <code>FENCE_LEDGER = 1;</code>\n        */\n       FENCE_LEDGER(0, 1),\n+      /**\n+       * <code>ENTRY_PIGGYBACK = 2;</code>\n+       */\n+      ENTRY_PIGGYBACK(1, 2),\n       ;\n \n       /**\n        * <code>FENCE_LEDGER = 1;</code>\n        */\n       public static final int FENCE_LEDGER_VALUE = 1;\n+      /**\n+       * <code>ENTRY_PIGGYBACK = 2;</code>\n+       */\n+      public static final int ENTRY_PIGGYBACK_VALUE = 2;\n \n \n       public final int getNumber() { return value; }\n \n       public static Flag valueOf(int value) {\n         switch (value) {\n           case 1: return FENCE_LEDGER;\n+          case 2: return ENTRY_PIGGYBACK;\n           default: return null;\n         }\n       }\n@@ -3125,11 +3178,59 @@ public com.google.protobuf.ByteString getMasterKey() {\n       return masterKey_;\n     }\n \n+    public static final int PREVIOUSLAC_FIELD_NUMBER = 4;\n+    private long previousLAC_;\n+    /**\n+     * <code>optional int64 previousLAC = 4;</code>\n+     *\n+     * <pre>\n+     * Used for waiting on last add confirmed update\n+     * </pre>\n+     */\n+    public boolean hasPreviousLAC() {\n+      return ((bitField0_ & 0x00000010) == 0x00000010);\n+    }\n+    /**\n+     * <code>optional int64 previousLAC = 4;</code>\n+     *\n+     * <pre>\n+     * Used for waiting on last add confirmed update\n+     * </pre>\n+     */\n+    public long getPreviousLAC() {\n+      return previousLAC_;\n+    }\n+\n+    public static final int TIMEOUT_FIELD_NUMBER = 5;\n+    private long timeOut_;\n+    /**\n+     * <code>optional int64 timeOut = 5;</code>\n+     *\n+     * <pre>\n+     * Used as a timeout for the long polling request\n+     * </pre>\n+     */\n+    public boolean hasTimeOut() {\n+      return ((bitField0_ & 0x00000020) == 0x00000020);\n+    }\n+    /**\n+     * <code>optional int64 timeOut = 5;</code>\n+     *\n+     * <pre>\n+     * Used as a timeout for the long polling request\n+     * </pre>\n+     */\n+    public long getTimeOut() {\n+      return timeOut_;\n+    }\n+\n     private void initFields() {\n       flag_ = org.apache.bookkeeper.proto.BookkeeperProtocol.ReadRequest.Flag.FENCE_LEDGER;\n       ledgerId_ = 0L;\n       entryId_ = 0L;\n       masterKey_ = com.google.protobuf.ByteString.EMPTY;\n+      previousLAC_ = 0L;\n+      timeOut_ = 0L;\n     }\n     private byte memoizedIsInitialized = -1;\n     public final boolean isInitialized() {\n@@ -3161,6 +3262,12 @@ public void writeTo(com.google.protobuf.CodedOutputStream output)\n       if (((bitField0_ & 0x00000008) == 0x00000008)) {\n         output.writeBytes(3, masterKey_);\n       }\n+      if (((bitField0_ & 0x00000010) == 0x00000010)) {\n+        output.writeInt64(4, previousLAC_);\n+      }\n+      if (((bitField0_ & 0x00000020) == 0x00000020)) {\n+        output.writeInt64(5, timeOut_);\n+      }\n       if (((bitField0_ & 0x00000001) == 0x00000001)) {\n         output.writeEnum(100, flag_.getNumber());\n       }\n@@ -3185,6 +3292,14 @@ public int getSerializedSize() {\n         size += com.google.protobuf.CodedOutputStream\n           .computeBytesSize(3, masterKey_);\n       }\n+      if (((bitField0_ & 0x00000010) == 0x00000010)) {\n+        size += com.google.protobuf.CodedOutputStream\n+          .computeInt64Size(4, previousLAC_);\n+      }\n+      if (((bitField0_ & 0x00000020) == 0x00000020)) {\n+        size += com.google.protobuf.CodedOutputStream\n+          .computeInt64Size(5, timeOut_);\n+      }\n       if (((bitField0_ & 0x00000001) == 0x00000001)) {\n         size += com.google.protobuf.CodedOutputStream\n           .computeEnumSize(100, flag_.getNumber());\n@@ -3314,6 +3429,10 @@ public Builder clear() {\n         bitField0_ = (bitField0_ & ~0x00000004);\n         masterKey_ = com.google.protobuf.ByteString.EMPTY;\n         bitField0_ = (bitField0_ & ~0x00000008);\n+        previousLAC_ = 0L;\n+        bitField0_ = (bitField0_ & ~0x00000010);\n+        timeOut_ = 0L;\n+        bitField0_ = (bitField0_ & ~0x00000020);\n         return this;\n       }\n \n@@ -3358,6 +3477,14 @@ public org.apache.bookkeeper.proto.BookkeeperProtocol.ReadRequest buildPartial()\n           to_bitField0_ |= 0x00000008;\n         }\n         result.masterKey_ = masterKey_;\n+        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {\n+          to_bitField0_ |= 0x00000010;\n+        }\n+        result.previousLAC_ = previousLAC_;\n+        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {\n+          to_bitField0_ |= 0x00000020;\n+        }\n+        result.timeOut_ = timeOut_;\n         result.bitField0_ = to_bitField0_;\n         onBuilt();\n         return result;\n@@ -3386,6 +3513,12 @@ public Builder mergeFrom(org.apache.bookkeeper.proto.BookkeeperProtocol.ReadRequ\n         if (other.hasMasterKey()) {\n           setMasterKey(other.getMasterKey());\n         }\n+        if (other.hasPreviousLAC()) {\n+          setPreviousLAC(other.getPreviousLAC());\n+        }\n+        if (other.hasTimeOut()) {\n+          setTimeOut(other.getTimeOut());\n+        }\n         this.mergeUnknownFields(other.getUnknownFields());\n         return this;\n       }\n@@ -3587,6 +3720,102 @@ public Builder clearMasterKey() {\n         return this;\n       }\n \n+      private long previousLAC_ ;\n+      /**\n+       * <code>optional int64 previousLAC = 4;</code>\n+       *\n+       * <pre>\n+       * Used for waiting on last add confirmed update\n+       * </pre>\n+       */\n+      public boolean hasPreviousLAC() {\n+        return ((bitField0_ & 0x00000010) == 0x00000010);\n+      }\n+      /**\n+       * <code>optional int64 previousLAC = 4;</code>\n+       *\n+       * <pre>\n+       * Used for waiting on last add confirmed update\n+       * </pre>\n+       */\n+      public long getPreviousLAC() {\n+        return previousLAC_;\n+      }\n+      /**\n+       * <code>optional int64 previousLAC = 4;</code>\n+       *\n+       * <pre>\n+       * Used for waiting on last add confirmed update\n+       * </pre>\n+       */\n+      public Builder setPreviousLAC(long value) {\n+        bitField0_ |= 0x00000010;\n+        previousLAC_ = value;\n+        onChanged();\n+        return this;\n+      }\n+      /**\n+       * <code>optional int64 previousLAC = 4;</code>\n+       *\n+       * <pre>\n+       * Used for waiting on last add confirmed update\n+       * </pre>\n+       */\n+      public Builder clearPreviousLAC() {\n+        bitField0_ = (bitField0_ & ~0x00000010);\n+        previousLAC_ = 0L;\n+        onChanged();\n+        return this;\n+      }\n+\n+      private long timeOut_ ;\n+      /**\n+       * <code>optional int64 timeOut = 5;</code>\n+       *\n+       * <pre>\n+       * Used as a timeout for the long polling request\n+       * </pre>\n+       */\n+      public boolean hasTimeOut() {\n+        return ((bitField0_ & 0x00000020) == 0x00000020);\n+      }\n+      /**\n+       * <code>optional int64 timeOut = 5;</code>\n+       *\n+       * <pre>\n+       * Used as a timeout for the long polling request\n+       * </pre>\n+       */\n+      public long getTimeOut() {\n+        return timeOut_;\n+      }\n+      /**\n+       * <code>optional int64 timeOut = 5;</code>\n+       *\n+       * <pre>\n+       * Used as a timeout for the long polling request\n+       * </pre>\n+       */\n+      public Builder setTimeOut(long value) {\n+        bitField0_ |= 0x00000020;\n+        timeOut_ = value;\n+        onChanged();\n+        return this;\n+      }\n+      /**\n+       * <code>optional int64 timeOut = 5;</code>\n+       *\n+       * <pre>\n+       * Used as a timeout for the long polling request\n+       * </pre>\n+       */\n+      public Builder clearTimeOut() {\n+        bitField0_ = (bitField0_ & ~0x00000020);\n+        timeOut_ = 0L;\n+        onChanged();\n+        return this;\n+      }\n+\n       // @@protoc_insertion_point(builder_scope:ReadRequest)\n     }\n \n@@ -7976,6 +8205,32 @@ public interface ReadResponseOrBuilder extends\n      * <code>optional bytes body = 4;</code>\n      */\n     com.google.protobuf.ByteString getBody();\n+\n+    /**\n+     * <code>optional int64 maxLAC = 5;</code>\n+     *\n+     * <pre>\n+     * Piggyback LAC\n+     * </pre>\n+     */\n+    boolean hasMaxLAC();\n+    /**\n+     * <code>optional int64 maxLAC = 5;</code>\n+     *\n+     * <pre>\n+     * Piggyback LAC\n+     * </pre>\n+     */\n+    long getMaxLAC();\n+\n+    /**\n+     * <code>optional int64 lacUpdateTimestamp = 6;</code>\n+     */\n+    boolean hasLacUpdateTimestamp();\n+    /**\n+     * <code>optional int64 lacUpdateTimestamp = 6;</code>\n+     */\n+    long getLacUpdateTimestamp();\n   }\n   /**\n    * Protobuf type {@code ReadResponse}\n@@ -8055,6 +8310,16 @@ private ReadResponse(\n               body_ = input.readBytes();\n               break;\n             }\n+            case 40: {\n+              bitField0_ |= 0x00000010;\n+              maxLAC_ = input.readInt64();\n+              break;\n+            }\n+            case 48: {\n+              bitField0_ |= 0x00000020;\n+              lacUpdateTimestamp_ = input.readInt64();\n+              break;\n+            }\n           }\n         }\n       } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n@@ -8155,11 +8420,51 @@ public com.google.protobuf.ByteString getBody() {\n       return body_;\n     }\n \n+    public static final int MAXLAC_FIELD_NUMBER = 5;\n+    private long maxLAC_;\n+    /**\n+     * <code>optional int64 maxLAC = 5;</code>\n+     *\n+     * <pre>\n+     * Piggyback LAC\n+     * </pre>\n+     */\n+    public boolean hasMaxLAC() {\n+      return ((bitField0_ & 0x00000010) == 0x00000010);\n+    }\n+    /**\n+     * <code>optional int64 maxLAC = 5;</code>\n+     *\n+     * <pre>\n+     * Piggyback LAC\n+     * </pre>\n+     */\n+    public long getMaxLAC() {\n+      return maxLAC_;\n+    }\n+\n+    public static final int LACUPDATETIMESTAMP_FIELD_NUMBER = 6;\n+    private long lacUpdateTimestamp_;\n+    /**\n+     * <code>optional int64 lacUpdateTimestamp = 6;</code>\n+     */\n+    public boolean hasLacUpdateTimestamp() {\n+      return ((bitField0_ & 0x00000020) == 0x00000020);\n+    }\n+    /**\n+     * <code>optional int64 lacUpdateTimestamp = 6;</code>\n+     */\n+    public long getLacUpdateTimestamp() {\n+      return lacUpdateTimestamp_;\n+    }\n+\n     private void initFields() {\n       status_ = org.apache.bookkeeper.proto.BookkeeperProtocol.StatusCode.EOK;\n       ledgerId_ = 0L;\n       entryId_ = 0L;\n       body_ = com.google.protobuf.ByteString.EMPTY;\n+      maxLAC_ = 0L;\n+      lacUpdateTimestamp_ = 0L;\n     }\n     private byte memoizedIsInitialized = -1;\n     public final boolean isInitialized() {\n@@ -8198,6 +8503,12 @@ public void writeTo(com.google.protobuf.CodedOutputStream output)\n       if (((bitField0_ & 0x00000008) == 0x00000008)) {\n         output.writeBytes(4, body_);\n       }\n+      if (((bitField0_ & 0x00000010) == 0x00000010)) {\n+        output.writeInt64(5, maxLAC_);\n+      }\n+      if (((bitField0_ & 0x00000020) == 0x00000020)) {\n+        output.writeInt64(6, lacUpdateTimestamp_);\n+      }\n       getUnknownFields().writeTo(output);\n     }\n \n@@ -8223,6 +8534,14 @@ public int getSerializedSize() {\n         size += com.google.protobuf.CodedOutputStream\n           .computeBytesSize(4, body_);\n       }\n+      if (((bitField0_ & 0x00000010) == 0x00000010)) {\n+        size += com.google.protobuf.CodedOutputStream\n+          .computeInt64Size(5, maxLAC_);\n+      }\n+      if (((bitField0_ & 0x00000020) == 0x00000020)) {\n+        size += com.google.protobuf.CodedOutputStream\n+          .computeInt64Size(6, lacUpdateTimestamp_);\n+      }\n       size += getUnknownFields().getSerializedSize();\n       memoizedSerializedSize = size;\n       return size;\n@@ -8348,6 +8667,10 @@ public Builder clear() {\n         bitField0_ = (bitField0_ & ~0x00000004);\n         body_ = com.google.protobuf.ByteString.EMPTY;\n         bitField0_ = (bitField0_ & ~0x00000008);\n+        maxLAC_ = 0L;\n+        bitField0_ = (bitField0_ & ~0x00000010);\n+        lacUpdateTimestamp_ = 0L;\n+        bitField0_ = (bitField0_ & ~0x00000020);\n         return this;\n       }\n \n@@ -8392,6 +8715,14 @@ public org.apache.bookkeeper.proto.BookkeeperProtocol.ReadResponse buildPartial(\n           to_bitField0_ |= 0x00000008;\n         }\n         result.body_ = body_;\n+        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {\n+          to_bitField0_ |= 0x00000010;\n+        }\n+        result.maxLAC_ = maxLAC_;\n+        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {\n+          to_bitField0_ |= 0x00000020;\n+        }\n+        result.lacUpdateTimestamp_ = lacUpdateTimestamp_;\n         result.bitField0_ = to_bitField0_;\n         onBuilt();\n         return result;\n@@ -8420,6 +8751,12 @@ public Builder mergeFrom(org.apache.bookkeeper.proto.BookkeeperProtocol.ReadResp\n         if (other.hasBody()) {\n           setBody(other.getBody());\n         }\n+        if (other.hasMaxLAC()) {\n+          setMaxLAC(other.getMaxLAC());\n+        }\n+        if (other.hasLacUpdateTimestamp()) {\n+          setLacUpdateTimestamp(other.getLacUpdateTimestamp());\n+        }\n         this.mergeUnknownFields(other.getUnknownFields());\n         return this;\n       }\n@@ -8593,6 +8930,86 @@ public Builder clearBody() {\n         return this;\n       }\n \n+      private long maxLAC_ ;\n+      /**\n+       * <code>optional int64 maxLAC = 5;</code>\n+       *\n+       * <pre>\n+       * Piggyback LAC\n+       * </pre>\n+       */\n+      public boolean hasMaxLAC() {\n+        return ((bitField0_ & 0x00000010) == 0x00000010);\n+      }\n+      /**\n+       * <code>optional int64 maxLAC = 5;</code>\n+       *\n+       * <pre>\n+       * Piggyback LAC\n+       * </pre>\n+       */\n+      public long getMaxLAC() {\n+        return maxLAC_;\n+      }\n+      /**\n+       * <code>optional int64 maxLAC = 5;</code>\n+       *\n+       * <pre>\n+       * Piggyback LAC\n+       * </pre>\n+       */\n+      public Builder setMaxLAC(long value) {\n+        bitField0_ |= 0x00000010;\n+        maxLAC_ = value;\n+        onChanged();\n+        return this;\n+      }\n+      /**\n+       * <code>optional int64 maxLAC = 5;</code>\n+       *\n+       * <pre>\n+       * Piggyback LAC\n+       * </pre>\n+       */\n+      public Builder clearMaxLAC() {\n+        bitField0_ = (bitField0_ & ~0x00000010);\n+        maxLAC_ = 0L;\n+        onChanged();\n+        return this;\n+      }\n+\n+      private long lacUpdateTimestamp_ ;\n+      /**\n+       * <code>optional int64 lacUpdateTimestamp = 6;</code>\n+       */\n+      public boolean hasLacUpdateTimestamp() {\n+        return ((bitField0_ & 0x00000020) == 0x00000020);\n+      }\n+      /**\n+       * <code>optional int64 lacUpdateTimestamp = 6;</code>\n+       */\n+      public long getLacUpdateTimestamp() {\n+        return lacUpdateTimestamp_;\n+      }\n+      /**\n+       * <code>optional int64 lacUpdateTimestamp = 6;</code>\n+       */\n+      public Builder setLacUpdateTimestamp(long value) {\n+        bitField0_ |= 0x00000020;\n+        lacUpdateTimestamp_ = value;\n+        onChanged();\n+        return this;\n+      }\n+      /**\n+       * <code>optional int64 lacUpdateTimestamp = 6;</code>\n+       */\n+      public Builder clearLacUpdateTimestamp() {\n+        bitField0_ = (bitField0_ & ~0x00000020);\n+        lacUpdateTimestamp_ = 0L;\n+        onChanged();\n+        return this;\n+      }\n+\n       // @@protoc_insertion_point(builder_scope:ReadResponse)\n     }\n \n@@ -11648,50 +12065,53 @@ public Builder clearFreeDiskSpace() {\n       \".AuthMessage\\022)\\n\\017writeLacRequest\\030g \\001(\\0132\\020.\" +\n       \"WriteLacRequest\\022\\'\\n\\016readLacRequest\\030h \\001(\\0132\" +\n       \"\\017.ReadLacRequest\\0223\\n\\024getBookieInfoRequest\",\n-      \"\\030i \\001(\\0132\\025.GetBookieInfoRequest\\\"~\\n\\013ReadReq\" +\n-      \"uest\\022\\037\\n\\004flag\\030d \\001(\\0162\\021.ReadRequest.Flag\\022\\020\\n\" +\n-      \"\\010ledgerId\\030\\001 \\002(\\003\\022\\017\\n\\007entryId\\030\\002 \\002(\\003\\022\\021\\n\\tmast\" +\n-      \"erKey\\030\\003 \\001(\\014\\\"\\030\\n\\004Flag\\022\\020\\n\\014FENCE_LEDGER\\020\\001\\\"\\212\\001\" +\n-      \"\\n\\nAddRequest\\022\\036\\n\\004flag\\030d \\001(\\0162\\020.AddRequest.\" +\n-      \"Flag\\022\\020\\n\\010ledgerId\\030\\001 \\002(\\003\\022\\017\\n\\007entryId\\030\\002 \\002(\\003\\022\" +\n-      \"\\021\\n\\tmasterKey\\030\\003 \\002(\\014\\022\\014\\n\\004body\\030\\004 \\002(\\014\\\"\\030\\n\\004Flag\" +\n-      \"\\022\\020\\n\\014RECOVERY_ADD\\020\\001\\\"Q\\n\\017WriteLacRequest\\022\\020\\n\" +\n-      \"\\010ledgerId\\030\\001 \\002(\\003\\022\\013\\n\\003lac\\030\\002 \\002(\\003\\022\\021\\n\\tmasterKe\" +\n-      \"y\\030\\003 \\002(\\014\\022\\014\\n\\004body\\030\\004 \\002(\\014\\\"\\\"\\n\\016ReadLacRequest\\022\",\n-      \"\\020\\n\\010ledgerId\\030\\001 \\002(\\003\\\"`\\n\\024GetBookieInfoReques\" +\n-      \"t\\022\\021\\n\\trequested\\030\\001 \\001(\\003\\\"5\\n\\005Flags\\022\\027\\n\\023TOTAL_D\" +\n-      \"ISK_CAPACITY\\020\\001\\022\\023\\n\\017FREE_DISK_SPACE\\020\\002\\\"\\303\\002\\n\\010\" +\n-      \"Response\\022\\037\\n\\006header\\030\\001 \\002(\\0132\\017.BKPacketHeade\" +\n-      \"r\\022\\033\\n\\006status\\030\\002 \\002(\\0162\\013.StatusCode\\022#\\n\\014readRe\" +\n-      \"sponse\\030d \\001(\\0132\\r.ReadResponse\\022!\\n\\013addRespon\" +\n-      \"se\\030e \\001(\\0132\\014.AddResponse\\022\\\"\\n\\014authResponse\\030f\" +\n-      \" \\001(\\0132\\014.AuthMessage\\022+\\n\\020writeLacResponse\\030g\" +\n-      \" \\001(\\0132\\021.WriteLacResponse\\022)\\n\\017readLacRespon\" +\n-      \"se\\030h \\001(\\0132\\020.ReadLacResponse\\0225\\n\\025getBookieI\",\n-      \"nfoResponse\\030i \\001(\\0132\\026.GetBookieInfoRespons\" +\n-      \"e\\\"\\\\\\n\\014ReadResponse\\022\\033\\n\\006status\\030\\001 \\002(\\0162\\013.Stat\" +\n-      \"usCode\\022\\020\\n\\010ledgerId\\030\\002 \\002(\\003\\022\\017\\n\\007entryId\\030\\003 \\002(\" +\n-      \"\\003\\022\\014\\n\\004body\\030\\004 \\001(\\014\\\"M\\n\\013AddResponse\\022\\033\\n\\006status\" +\n-      \"\\030\\001 \\002(\\0162\\013.StatusCode\\022\\020\\n\\010ledgerId\\030\\002 \\002(\\003\\022\\017\\n\" +\n-      \"\\007entryId\\030\\003 \\002(\\003\\\"6\\n\\013AuthMessage\\022\\026\\n\\016authPlu\" +\n-      \"ginName\\030\\001 \\002(\\t\\022\\017\\n\\007payload\\030\\002 \\002(\\014\\\"A\\n\\020WriteL\" +\n-      \"acResponse\\022\\033\\n\\006status\\030\\001 \\002(\\0162\\013.StatusCode\\022\" +\n-      \"\\020\\n\\010ledgerId\\030\\002 \\002(\\003\\\"h\\n\\017ReadLacResponse\\022\\033\\n\\006\" +\n-      \"status\\030\\001 \\002(\\0162\\013.StatusCode\\022\\020\\n\\010ledgerId\\030\\002 \",\n-      \"\\002(\\003\\022\\017\\n\\007lacBody\\030\\003 \\001(\\014\\022\\025\\n\\rlastEntryBody\\030\\004 \" +\n-      \"\\001(\\014\\\"f\\n\\025GetBookieInfoResponse\\022\\033\\n\\006status\\030\\001\" +\n-      \" \\002(\\0162\\013.StatusCode\\022\\031\\n\\021totalDiskCapacity\\030\\002\" +\n-      \" \\001(\\003\\022\\025\\n\\rfreeDiskSpace\\030\\003 \\001(\\003*F\\n\\017ProtocolV\" +\n-      \"ersion\\022\\017\\n\\013VERSION_ONE\\020\\001\\022\\017\\n\\013VERSION_TWO\\020\\002\" +\n-      \"\\022\\021\\n\\rVERSION_THREE\\020\\003*\\206\\001\\n\\nStatusCode\\022\\007\\n\\003EO\" +\n-      \"K\\020\\000\\022\\016\\n\\tENOLEDGER\\020\\222\\003\\022\\r\\n\\010ENOENTRY\\020\\223\\003\\022\\014\\n\\007EB\" +\n-      \"ADREQ\\020\\224\\003\\022\\010\\n\\003EIO\\020\\365\\003\\022\\010\\n\\003EUA\\020\\366\\003\\022\\020\\n\\013EBADVERS\" +\n-      \"ION\\020\\367\\003\\022\\014\\n\\007EFENCED\\020\\370\\003\\022\\016\\n\\tEREADONLY\\020\\371\\003*\\225\\001\\n\" +\n-      \"\\rOperationType\\022\\016\\n\\nREAD_ENTRY\\020\\001\\022\\r\\n\\tADD_EN\",\n-      \"TRY\\020\\002\\022\\024\\n\\020RANGE_READ_ENTRY\\020\\003\\022\\023\\n\\017RANGE_ADD\" +\n-      \"_ENTRY\\020\\004\\022\\010\\n\\004AUTH\\020\\005\\022\\r\\n\\tWRITE_LAC\\020\\006\\022\\014\\n\\010REA\" +\n-      \"D_LAC\\020\\007\\022\\023\\n\\017GET_BOOKIE_INFO\\020\\010B\\037\\n\\033org.apac\" +\n-      \"he.bookkeeper.protoH\\001\"\n+      \"\\030i \\001(\\0132\\025.GetBookieInfoRequest\\\"\\271\\001\\n\\013ReadRe\" +\n+      \"quest\\022\\037\\n\\004flag\\030d \\001(\\0162\\021.ReadRequest.Flag\\022\\020\" +\n+      \"\\n\\010ledgerId\\030\\001 \\002(\\003\\022\\017\\n\\007entryId\\030\\002 \\002(\\003\\022\\021\\n\\tmas\" +\n+      \"terKey\\030\\003 \\001(\\014\\022\\023\\n\\013previousLAC\\030\\004 \\001(\\003\\022\\017\\n\\007tim\" +\n+      \"eOut\\030\\005 \\001(\\003\\\"-\\n\\004Flag\\022\\020\\n\\014FENCE_LEDGER\\020\\001\\022\\023\\n\\017\" +\n+      \"ENTRY_PIGGYBACK\\020\\002\\\"\\212\\001\\n\\nAddRequest\\022\\036\\n\\004flag\" +\n+      \"\\030d \\001(\\0162\\020.AddRequest.Flag\\022\\020\\n\\010ledgerId\\030\\001 \\002\" +\n+      \"(\\003\\022\\017\\n\\007entryId\\030\\002 \\002(\\003\\022\\021\\n\\tmasterKey\\030\\003 \\002(\\014\\022\\014\" +\n+      \"\\n\\004body\\030\\004 \\002(\\014\\\"\\030\\n\\004Flag\\022\\020\\n\\014RECOVERY_ADD\\020\\001\\\"Q\" +\n+      \"\\n\\017WriteLacRequest\\022\\020\\n\\010ledgerId\\030\\001 \\002(\\003\\022\\013\\n\\003l\",\n+      \"ac\\030\\002 \\002(\\003\\022\\021\\n\\tmasterKey\\030\\003 \\002(\\014\\022\\014\\n\\004body\\030\\004 \\002(\" +\n+      \"\\014\\\"\\\"\\n\\016ReadLacRequest\\022\\020\\n\\010ledgerId\\030\\001 \\002(\\003\\\"`\\n\" +\n+      \"\\024GetBookieInfoRequest\\022\\021\\n\\trequested\\030\\001 \\001(\\003\" +\n+      \"\\\"5\\n\\005Flags\\022\\027\\n\\023TOTAL_DISK_CAPACITY\\020\\001\\022\\023\\n\\017FR\" +\n+      \"EE_DISK_SPACE\\020\\002\\\"\\303\\002\\n\\010Response\\022\\037\\n\\006header\\030\\001\" +\n+      \" \\002(\\0132\\017.BKPacketHeader\\022\\033\\n\\006status\\030\\002 \\002(\\0162\\013.\" +\n+      \"StatusCode\\022#\\n\\014readResponse\\030d \\001(\\0132\\r.ReadR\" +\n+      \"esponse\\022!\\n\\013addResponse\\030e \\001(\\0132\\014.AddRespon\" +\n+      \"se\\022\\\"\\n\\014authResponse\\030f \\001(\\0132\\014.AuthMessage\\022+\" +\n+      \"\\n\\020writeLacResponse\\030g \\001(\\0132\\021.WriteLacRespo\",\n+      \"nse\\022)\\n\\017readLacResponse\\030h \\001(\\0132\\020.ReadLacRe\" +\n+      \"sponse\\0225\\n\\025getBookieInfoResponse\\030i \\001(\\0132\\026.\" +\n+      \"GetBookieInfoResponse\\\"\\210\\001\\n\\014ReadResponse\\022\\033\" +\n+      \"\\n\\006status\\030\\001 \\002(\\0162\\013.StatusCode\\022\\020\\n\\010ledgerId\\030\" +\n+      \"\\002 \\002(\\003\\022\\017\\n\\007entryId\\030\\003 \\002(\\003\\022\\014\\n\\004body\\030\\004 \\001(\\014\\022\\016\\n\\006\" +\n+      \"maxLAC\\030\\005 \\001(\\003\\022\\032\\n\\022lacUpdateTimestamp\\030\\006 \\001(\\003\" +\n+      \"\\\"M\\n\\013AddResponse\\022\\033\\n\\006status\\030\\001 \\002(\\0162\\013.Status\" +\n+      \"Code\\022\\020\\n\\010ledgerId\\030\\002 \\002(\\003\\022\\017\\n\\007entryId\\030\\003 \\002(\\003\\\"\" +\n+      \"6\\n\\013AuthMessage\\022\\026\\n\\016authPluginName\\030\\001 \\002(\\t\\022\\017\" +\n+      \"\\n\\007payload\\030\\002 \\002(\\014\\\"A\\n\\020WriteLacResponse\\022\\033\\n\\006s\",\n+      \"tatus\\030\\001 \\002(\\0162\\013.StatusCode\\022\\020\\n\\010ledgerId\\030\\002 \\002\" +\n+      \"(\\003\\\"h\\n\\017ReadLacResponse\\022\\033\\n\\006status\\030\\001 \\002(\\0162\\013.\" +\n+      \"StatusCode\\022\\020\\n\\010ledgerId\\030\\002 \\002(\\003\\022\\017\\n\\007lacBody\\030\" +\n+      \"\\003 \\001(\\014\\022\\025\\n\\rlastEntryBody\\030\\004 \\001(\\014\\\"f\\n\\025GetBooki\" +\n+      \"eInfoResponse\\022\\033\\n\\006status\\030\\001 \\002(\\0162\\013.StatusCo\" +\n+      \"de\\022\\031\\n\\021totalDiskCapacity\\030\\002 \\001(\\003\\022\\025\\n\\rfreeDis\" +\n+      \"kSpace\\030\\003 \\001(\\003*F\\n\\017ProtocolVersion\\022\\017\\n\\013VERSI\" +\n+      \"ON_ONE\\020\\001\\022\\017\\n\\013VERSION_TWO\\020\\002\\022\\021\\n\\rVERSION_THR\" +\n+      \"EE\\020\\003*\\206\\001\\n\\nStatusCode\\022\\007\\n\\003EOK\\020\\000\\022\\016\\n\\tENOLEDGE\" +\n+      \"R\\020\\222\\003\\022\\r\\n\\010ENOENTRY\\020\\223\\003\\022\\014\\n\\007EBADREQ\\020\\224\\003\\022\\010\\n\\003EIO\",\n+      \"\\020\\365\\003\\022\\010\\n\\003EUA\\020\\366\\003\\022\\020\\n\\013EBADVERSION\\020\\367\\003\\022\\014\\n\\007EFENC\" +\n+      \"ED\\020\\370\\003\\022\\016\\n\\tEREADONLY\\020\\371\\003*\\225\\001\\n\\rOperationType\\022\" +\n+      \"\\016\\n\\nREAD_ENTRY\\020\\001\\022\\r\\n\\tADD_ENTRY\\020\\002\\022\\024\\n\\020RANGE_\" +\n+      \"READ_ENTRY\\020\\003\\022\\023\\n\\017RANGE_ADD_ENTRY\\020\\004\\022\\010\\n\\004AUT\" +\n+      \"H\\020\\005\\022\\r\\n\\tWRITE_LAC\\020\\006\\022\\014\\n\\010READ_LAC\\020\\007\\022\\023\\n\\017GET_\" +\n+      \"BOOKIE_INFO\\020\\010B\\037\\n\\033org.apache.bookkeeper.p\" +\n+      \"rotoH\\001\"\n     };\n     com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =\n         new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {\n@@ -11722,7 +12142,7 @@ public com.google.protobuf.ExtensionRegistry assignDescriptors(\n     internal_static_ReadRequest_fieldAccessorTable = new\n       com.google.protobuf.GeneratedMessage.FieldAccessorTable(\n         internal_static_ReadRequest_descriptor,\n-        new java.lang.String[] { \"Flag\", \"LedgerId\", \"EntryId\", \"MasterKey\", });\n+        new java.lang.String[] { \"Flag\", \"LedgerId\", \"EntryId\", \"MasterKey\", \"PreviousLAC\", \"TimeOut\", });\n     internal_static_AddRequest_descriptor =\n       getDescriptor().getMessageTypes().get(3);\n     internal_static_AddRequest_fieldAccessorTable = new\n@@ -11758,7 +12178,7 @@ public com.google.protobuf.ExtensionRegistry assignDescriptors(\n     internal_static_ReadResponse_fieldAccessorTable = new\n       com.google.protobuf.GeneratedMessage.FieldAccessorTable(\n         internal_static_ReadResponse_descriptor,\n-        new java.lang.String[] { \"Status\", \"LedgerId\", \"EntryId\", \"Body\", });\n+        new java.lang.String[] { \"Status\", \"LedgerId\", \"EntryId\", \"Body\", \"MaxLAC\", \"LacUpdateTimestamp\", });\n     internal_static_AddResponse_descriptor =\n       getDescriptor().getMessageTypes().get(9);\n     internal_static_AddResponse_fieldAccessorTable = new"},{"sha":"fcd02aa729dfe6049fb3ac0960ae7112a844b356","filename":"bookkeeper-server/src/main/proto/BookkeeperProtocol.proto","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/24fae0322327d8fd75c30524546924f27e278448/bookkeeper-server%2Fsrc%2Fmain%2Fproto%2FBookkeeperProtocol.proto","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/24fae0322327d8fd75c30524546924f27e278448/bookkeeper-server%2Fsrc%2Fmain%2Fproto%2FBookkeeperProtocol.proto","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fproto%2FBookkeeperProtocol.proto?ref=24fae0322327d8fd75c30524546924f27e278448","patch":"@@ -85,13 +85,18 @@ message Request {\n message ReadRequest {\n     enum Flag {\n         FENCE_LEDGER = 1;\n+        ENTRY_PIGGYBACK = 2;\n     }\n     optional Flag flag = 100;\n     required int64 ledgerId = 1;\n     // entryId will be -1 for reading the LAST_ADD_CONFIRMED entry.\n     required int64 entryId = 2;\n     // Used while fencing a ledger.\n     optional bytes masterKey = 3;\n+    // Used for waiting on last add confirmed update\n+    optional int64 previousLAC = 4;\n+    // Used as a timeout (in milliseconds) for the long polling request\n+    optional int64 timeOut = 5;\n }\n \n message AddRequest {\n@@ -145,6 +150,9 @@ message ReadResponse {\n     required int64 ledgerId = 2;\n     required int64 entryId = 3;\n     optional bytes body = 4;\n+    // Piggyback LAC\n+    optional int64 maxLAC = 5;\n+    optional int64 lacUpdateTimestamp = 6;\n }\n \n message AddResponse {"}]}