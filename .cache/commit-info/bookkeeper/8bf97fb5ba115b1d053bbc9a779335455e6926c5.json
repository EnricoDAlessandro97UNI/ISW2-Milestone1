{"sha":"8bf97fb5ba115b1d053bbc9a779335455e6926c5","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjhiZjk3ZmI1YmExMTViMWQwNTNiYmM5YTc3OTMzNTQ1NWU2OTI2YzU=","commit":{"author":{"name":"fpj","email":"fpj@apache.org","date":"2015-07-28T11:44:30Z"},"committer":{"name":"fpj","email":"fpj@apache.org","date":"2015-07-28T11:44:30Z"},"message":"BOOKKEEPER-760: Don't close PCBC proactively if bookies disappeared from zookeeper znodes (sijie via fpj)","tree":{"sha":"0036033eff46901c5933dce28e10df5a927cc0ca","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/0036033eff46901c5933dce28e10df5a927cc0ca"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/8bf97fb5ba115b1d053bbc9a779335455e6926c5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/8bf97fb5ba115b1d053bbc9a779335455e6926c5","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/8bf97fb5ba115b1d053bbc9a779335455e6926c5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/8bf97fb5ba115b1d053bbc9a779335455e6926c5/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"8c1b9ebc22988aabb42ba9cfe79be8898fc5a69e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/8c1b9ebc22988aabb42ba9cfe79be8898fc5a69e","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/8c1b9ebc22988aabb42ba9cfe79be8898fc5a69e"}],"stats":{"total":46,"additions":18,"deletions":28},"files":[{"sha":"8590200c3abd9584a8c3aef3fb52a7d96298d9d9","filename":"CHANGES.txt","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/8bf97fb5ba115b1d053bbc9a779335455e6926c5/CHANGES.txt","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/8bf97fb5ba115b1d053bbc9a779335455e6926c5/CHANGES.txt","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/CHANGES.txt?ref=8bf97fb5ba115b1d053bbc9a779335455e6926c5","patch":"@@ -93,6 +93,9 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-848: Use volatile for lastAddConfirmed (Matteo Merli via sijie)\n \n+        BOOKKEEPER-760: Don't close PCBC proactively if bookies\n+                        disappeared from zookeeper znodes (sijie via fpj)\n+\n       bookkeeper-server:\n \n         BOOKKEEPER-695: Some entry logs are not removed from the bookie storage (Matteo Merli via sijie)"},{"sha":"65a341756420eea4531f8b2a047d05a2313533d4","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieWatcher.java","status":"modified","additions":15,"deletions":5,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/8bf97fb5ba115b1d053bbc9a779335455e6926c5/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/8bf97fb5ba115b1d053bbc9a779335455e6926c5/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWatcher.java?ref=8bf97fb5ba115b1d053bbc9a779335455e6926c5","patch":"@@ -158,15 +158,25 @@ public void processResult(int rc, String path, Object ctx, List<String> children\n \n         HashSet<BookieSocketAddress> newBookieAddrs = convertToBookieAddresses(children);\n \n-        final Set<BookieSocketAddress> deadBookies;\n         synchronized (this) {\n             Set<BookieSocketAddress> readonlyBookies = readOnlyBookieWatcher.getReadOnlyBookies();\n-            deadBookies = placementPolicy.onClusterChanged(newBookieAddrs, readonlyBookies);\n+            placementPolicy.onClusterChanged(newBookieAddrs, readonlyBookies);\n         }\n \n-        if (bk.getBookieClient() != null) {\n-            bk.getBookieClient().closeClients(deadBookies);\n-        }\n+        // we don't need to close clients here, because:\n+        // a. the dead bookies will be removed from topology, which will not be used in new ensemble.\n+        // b. the read sequence will be reordered based on znode availability, so most of the reads\n+        //    will not be sent to them.\n+        // c. the close here is just to disconnect the channel, which doesn't remove the channel from\n+        //    from pcbc map. we don't really need to disconnect the channel here, since if a bookie is\n+        //    really down, PCBC will disconnect itself based on netty callback. if we try to disconnect\n+        //    here, it actually introduces side-effects on case d.\n+        // d. closing the client here will affect latency if the bookie is alive but just being flaky\n+        //    on its znode registration due zookeeper session expire.\n+        // e. if we want to permanently remove a bookkeeper client, we should watch on the cookies' list.\n+        // if (bk.getBookieClient() != null) {\n+        //     bk.getBookieClient().closeClients(deadBookies);\n+        // }\n     }\n \n     private static HashSet<BookieSocketAddress> convertToBookieAddresses(List<String> children) {"},{"sha":"f455c90b034db4d6d99742e3f92bcd3abf946fdb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java","status":"modified","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/8bf97fb5ba115b1d053bbc9a779335455e6926c5/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FBookieClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/8bf97fb5ba115b1d053bbc9a779335455e6926c5/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FBookieClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FBookieClient.java?ref=8bf97fb5ba115b1d053bbc9a779335455e6926c5","patch":"@@ -131,29 +131,6 @@ private PerChannelBookieClientPool lookupClient(BookieSocketAddress addr, Object\n         return clientPool;\n     }\n \n-    public void closeClients(Set<BookieSocketAddress> addrs) {\n-        final HashSet<PerChannelBookieClientPool> clients =\n-                new HashSet<PerChannelBookieClientPool>();\n-        closeLock.readLock().lock();\n-        try {\n-            for (BookieSocketAddress a : addrs) {\n-                PerChannelBookieClientPool c = channels.get(a);\n-                if (c != null) {\n-                    clients.add(c);\n-                }\n-            }\n-\n-            if (clients.size() == 0) {\n-                return;\n-            }\n-        } finally {\n-            closeLock.readLock().unlock();\n-        }\n-        for (PerChannelBookieClientPool c : clients) {\n-            c.disconnect(false);\n-        }\n-    }\n-\n     public void addEntry(final BookieSocketAddress addr, final long ledgerId, final byte[] masterKey,\n             final long entryId,\n             final ChannelBuffer toSend, final WriteCallback cb, final Object ctx, final int options) {"}]}