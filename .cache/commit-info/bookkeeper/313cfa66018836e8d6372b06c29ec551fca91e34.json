{"sha":"313cfa66018836e8d6372b06c29ec551fca91e34","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjMxM2NmYTY2MDE4ODM2ZThkNjM3MmIwNmMyOWVjNTUxZmNhOTFlMzQ=","commit":{"author":{"name":"Enrico Olivelli","email":"eolivelli@apache.org","date":"2017-07-26T09:06:52Z"},"committer":{"name":"jiazhai","email":"zhaijia@live.com","date":"2017-07-26T09:06:52Z"},"message":"BOOKKEEPER-1017: Create documentation for ZooKeeper ACLs\n\nThis is the documentation for ZooKeeper security and there is an intro about security in general.\nIt is work-in-progress, I created this PR in order to make it visible and gather suggestions while writing\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: Jia Zhai <None>, Sijie Guo <None>\n\nThis closes #185 from eolivelli/BOOKKEEPER-1017-zookeeper-docs","tree":{"sha":"f6664632b2cae866278cdaa6e3450dfba6acfca8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/f6664632b2cae866278cdaa6e3450dfba6acfca8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/313cfa66018836e8d6372b06c29ec551fca91e34","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/313cfa66018836e8d6372b06c29ec551fca91e34","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/313cfa66018836e8d6372b06c29ec551fca91e34","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/313cfa66018836e8d6372b06c29ec551fca91e34/comments","author":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"committer":null,"parents":[{"sha":"ce57acaa1686493fd32fc58d3332d956db06122b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/ce57acaa1686493fd32fc58d3332d956db06122b","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/ce57acaa1686493fd32fc58d3332d956db06122b"}],"stats":{"total":98,"additions":98,"deletions":0},"files":[{"sha":"e10aa3e80037e2b49cee6a47a25a935cf79694a5","filename":"bookkeeper-server/conf/bk_server.conf","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/313cfa66018836e8d6372b06c29ec551fca91e34/bookkeeper-server%2Fconf%2Fbk_server.conf","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/313cfa66018836e8d6372b06c29ec551fca91e34/bookkeeper-server%2Fconf%2Fbk_server.conf","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fconf%2Fbk_server.conf?ref=313cfa66018836e8d6372b06c29ec551fca91e34","patch":"@@ -201,6 +201,12 @@ zkServers=localhost:2181\n # JVM garbage collection, disk I/O will cause SESSION_EXPIRED.\n # Increment this value could help avoiding this issue\n zkTimeout=10000\n+# Set ACLs on every node written on ZooKeeper, this way only allowed users\n+# will be able to read and write BookKeeper metadata stored on ZooKeeper.\n+# In order to make ACLs work you need to setup ZooKeeper JAAS authentication\n+# all the Bookies and Client need to share the same user, and this is usually\n+# done using Kerberos authentication. See ZooKeeper documentation\n+zkEnableSecurity=false\n \n ## NIO Server settings\n "},{"sha":"101b2d9f21e3972af98308415c722f32f734fee1","filename":"bookkeeper-server/conf/jaas_example.conf","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/313cfa66018836e8d6372b06c29ec551fca91e34/bookkeeper-server%2Fconf%2Fjaas_example.conf","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/313cfa66018836e8d6372b06c29ec551fca91e34/bookkeeper-server%2Fconf%2Fjaas_example.conf","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fconf%2Fjaas_example.conf?ref=313cfa66018836e8d6372b06c29ec551fca91e34","patch":"@@ -0,0 +1,44 @@\n+/*\n+* Copyright 2016 The Apache Software Foundation\n+*\n+* Licensed to the Apache Software Foundation (ASF) under one\n+* or more contributor license agreements.  See the NOTICE file\n+* distributed with this work for additional information\n+* regarding copyright ownership.  The ASF licenses this file\n+* to you under the Apache License, Version 2.0 (the\n+* \"License\"); you may not use this file except in compliance\n+* with the License.  You may obtain a copy of the License at\n+*\n+*     http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+/*\n+ Kerberos Example\n+\n+ Client {\n+  com.sun.security.auth.module.Krb5LoginModule required debug=true\n+  useKeyTab=true\n+  keyTab=\"/path/to/keytabfile\"\n+  storeKey=true\n+  useTicketCache=false\n+  principal=\"bookkeeper/HOSTNAME@REALM\";\n+};\n+*/\n+\n+/*\n+ DIGEST-MD5 Example\n+\n+ Client {\n+       org.apache.zookeeper.server.auth.DigestLoginModule required\n+       user_hd=\"testpwd\";\n+};\n+*/\n+\n+\n+"},{"sha":"6969e6c17148b0455dc267c84f26ba5b67ea1bc8","filename":"doc/bookkeeperSecurity.textile","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/313cfa66018836e8d6372b06c29ec551fca91e34/doc%2FbookkeeperSecurity.textile","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/313cfa66018836e8d6372b06c29ec551fca91e34/doc%2FbookkeeperSecurity.textile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/doc%2FbookkeeperSecurity.textile?ref=313cfa66018836e8d6372b06c29ec551fca91e34","patch":"@@ -0,0 +1,48 @@\n+Title:        BookKeeper Security\n+Notice: Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License. You may\n+        obtain a copy of the License at \"http://www.apache.org/licenses/LICENSE-2.0\":http://www.apache.org/licenses/LICENSE-2.0.\n+        .\n+        .        \n+        Unless required by applicable law or agreed to in writing,\n+        software distributed under the License is distributed on an \"AS IS\"\n+        BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+        implied. See the License for the specific language governing permissions\n+        and limitations under the License.\n+        .\n+        .\n+\n+h1. Security in BookKeeper\n+\n+Apache BookKeeper is a decentralized platform and there are multiple aspects to deal with while securing an BookKeeper Cluster.\n+\n+Metadata are stored on ZooKeeper, so first of all you will need to secure your ZooKeeper cluster, see \"ZooKeeper security\":https://zookeeper.apache.org/security.html\n+\n+Then you have to take care of access to Bookies, you can configure authentication and encryption using TLS, out of the box BookKeeper supports Kerberos authentication, DIGEST-MD5 authentication and TLS encryption. You can also leverage TLS client authentication in order to protect your data.\n+\n+h1. ZookKeeper security on BookKeeper\n+\n+Both clients and Bookies read and write metadata on ZooKeeper, it is also used for Bookie discovery. \n+The best way to protect data stored on ZooKeeper is to put ACLs on every z-node, this way only authorized users will be able to access (read/write) data\n+\n+In order to configure BookKeeper and protect ZooKeeper just simply set zkEnableSecurity=true configuration property on Bookie Configuration (conf/bk_server.conf).\n+On the client side you have to set zkEnableSecurity property to true or use ClientConfiguration.setZkEnableSecurity(true).\n+\n+Beware that your Bookies and your clients MUST successfully authenticate to ZooKeeper cluster.\n+You MUST use the same ZooKeeper principal for every Bookie and every Client, this is usually achived by using Kerberos.\n+\n+BookKeeper runtime will use ZooDefs.Ids.CREATOR_ALL_ACL ACLs for every new node. You will get InvalidACL it ZooKeeper authentication is not configured.\n+\n+In order to make a Bookie authenticate to a secured ZooKeeper cluster you have to:\n+\n+- create a jaas.conf file in your \"conf\" directory (you can just rename conf/jaas_example.conf and change it according to your needs)\n+\n+- add -Djava.security.auth.login.config=absolute/path/to/jaas.conf to BOOKIE_EXTRA_OPTS in conf/bkenv.sh\n+\n+On the client side you have to follow similar steps but it depends on your application\n+\n+Currently there is no migration procedure for changing zkEnableSecurity\n+\n+if you are moving to zkEnableSecurity=true, new z-nodes will be 'secured' but old z-nodes will be not covered by ACLs and you will need to set it manually using ZooKeeper tools\n+\n+if you are moving to zkEnableSecurity=false you need to reset all ACLs under the z-node set in zkLedgersRootPath, which defaults to '/ledgers'"}]}