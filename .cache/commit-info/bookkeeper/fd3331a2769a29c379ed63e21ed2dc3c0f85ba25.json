{"sha":"fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmZkMzMzMWEyNzY5YTI5YzM3OWVkNjNlMjFlZDJkYzNjMGY4NWJhMjU=","commit":{"author":{"name":"arvindkandhare","email":"arvind.kandhare@emc.com","date":"2017-05-26T14:52:57Z"},"committer":{"name":"Enrico Olivelli","email":"eolivelli@apache.org","date":"2017-05-26T14:52:57Z"},"message":"BOOKKEEPER-1010: Moving Guava to 20.0\n\nThis patch updates Guava to version 20.0 and shades it\n\nAuthor: arvindkandhare <arvind.kandhare@emc.com>\nAuthor: eolivelli <eolivelli@apache.org>\n\nReviewers: Sijie Guo, Enrico Olivelli\n\nCloses #166 from eolivelli/guava_version","tree":{"sha":"49cf3761aeeb7efe02d331814c8a733e26bf419d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/49cf3761aeeb7efe02d331814c8a733e26bf419d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/comments","author":{"login":"arvindkandhare","id":2305381,"node_id":"MDQ6VXNlcjIzMDUzODE=","avatar_url":"https://avatars.githubusercontent.com/u/2305381?v=4","gravatar_id":"","url":"https://api.github.com/users/arvindkandhare","html_url":"https://github.com/arvindkandhare","followers_url":"https://api.github.com/users/arvindkandhare/followers","following_url":"https://api.github.com/users/arvindkandhare/following{/other_user}","gists_url":"https://api.github.com/users/arvindkandhare/gists{/gist_id}","starred_url":"https://api.github.com/users/arvindkandhare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arvindkandhare/subscriptions","organizations_url":"https://api.github.com/users/arvindkandhare/orgs","repos_url":"https://api.github.com/users/arvindkandhare/repos","events_url":"https://api.github.com/users/arvindkandhare/events{/privacy}","received_events_url":"https://api.github.com/users/arvindkandhare/received_events","type":"User","site_admin":false},"committer":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"6698912e4d35119a2e85a6ea3877c6771073489c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/6698912e4d35119a2e85a6ea3877c6771073489c","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/6698912e4d35119a2e85a6ea3877c6771073489c"}],"stats":{"total":48,"additions":34,"deletions":14},"files":[{"sha":"6334d402dbb5ff061b0565adafc4c35264b466c1","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FJournal.java?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -806,8 +806,8 @@ public void run() {\n         final int journalAlignmentSize = conf.getJournalAlignmentSize();\n         JournalChannel logFile = null;\n         forceWriteThread.start();\n-        Stopwatch journalCreationWatcher = new Stopwatch();\n-        Stopwatch journalFlushWatcher = new Stopwatch();\n+        Stopwatch journalCreationWatcher = Stopwatch.createUnstarted();\n+        Stopwatch journalFlushWatcher = Stopwatch.createUnstarted();\n         long batchSize = 0;\n         try {\n             List<Long> journalIds = listJournalIds(journalDirectory, null);\n@@ -836,7 +836,7 @@ public void run() {\n                                         removePagesFromCache,\n                                         journalFormatVersionToWrite);\n                     journalCreationStats.registerSuccessfulEvent(\n-                            journalCreationWatcher.stop().elapsedTime(TimeUnit.NANOSECONDS), TimeUnit.NANOSECONDS);\n+                            journalCreationWatcher.stop().elapsed(TimeUnit.NANOSECONDS), TimeUnit.NANOSECONDS);\n \n                     bc = logFile.getBufferedChannel();\n \n@@ -904,7 +904,7 @@ public void run() {\n                             bc.flush(false);\n                             lastFlushPosition = bc.position();\n                             journalFlushStats.registerSuccessfulEvent(\n-                                    journalFlushWatcher.stop().elapsedTime(TimeUnit.NANOSECONDS), TimeUnit.NANOSECONDS);\n+                                    journalFlushWatcher.stop().elapsed(TimeUnit.NANOSECONDS), TimeUnit.NANOSECONDS);\n \n                             // Trace the lifetime of entries through persistence\n                             if (LOG.isDebugEnabled()) {"},{"sha":"ae2423c547dd4fb35af166196e664eb6abba84bd","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/metastore/Value.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fmetastore%2FValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fmetastore%2FValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fmetastore%2FValue.java?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -22,6 +22,7 @@\n import com.google.common.hash.HashFunction;\n import com.google.common.hash.Hashing;\n \n+import java.nio.charset.Charset;\n import java.util.Comparator;\n import java.util.HashMap;\n import java.util.Map;\n@@ -92,7 +93,7 @@ public int hashCode() {\n         HashFunction hf = Hashing.murmur3_32();\n         Hasher hc = hf.newHasher();\n         for (String key : fields.keySet()) {\n-            hc.putString(key);\n+            hc.putString(key, Charset.defaultCharset());\n         }\n         return hc.hash().asInt();\n     }"},{"sha":"8b679d6ae977d4cb5ee366a7f0415318d6834e07","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FAuditor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FAuditor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FAuditor.java?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -286,10 +286,11 @@ public void run() {\n                                     return;\n                                 }\n \n-                                Stopwatch stopwatch = new Stopwatch().start();\n+                                Stopwatch stopwatch = Stopwatch.createStarted();\n                                 checkAllLedgers();\n-                                checkAllLedgersTime.registerSuccessfulEvent(stopwatch.stop().elapsedMillis(),\n-                                                                            TimeUnit.MILLISECONDS);\n+                                checkAllLedgersTime.registerSuccessfulEvent(stopwatch.stop()\n+                                                .elapsed(TimeUnit.MILLISECONDS),\n+                                        TimeUnit.MILLISECONDS);\n                             } catch (KeeperException ke) {\n                                 LOG.error(\"Exception while running periodic check\", ke);\n                             } catch (InterruptedException ie) {\n@@ -398,7 +399,7 @@ private void auditBookies()\n             return;\n         }\n \n-        Stopwatch stopwatch = new Stopwatch().start();\n+        Stopwatch stopwatch = Stopwatch.createStarted();\n         // put exit cases here\n         Map<String, Set<Long>> ledgerDetails = generateBookie2LedgersIndex();\n         try {\n@@ -420,10 +421,12 @@ private void auditBookies()\n         Collection<String> lostBookies = CollectionUtils.subtract(knownBookies,\n                 availableBookies);\n \n-        bookieToLedgersMapCreationTime.registerSuccessfulEvent(stopwatch.elapsedMillis(), TimeUnit.MILLISECONDS);\n+        bookieToLedgersMapCreationTime.registerSuccessfulEvent(stopwatch.elapsed(TimeUnit.MILLISECONDS),\n+                TimeUnit.MILLISECONDS);\n         if (lostBookies.size() > 0) {\n             handleLostBookies(lostBookies, ledgerDetails);\n-            uRLPublishTimeForLostBookies.registerSuccessfulEvent(stopwatch.stop().elapsedMillis(), TimeUnit.MILLISECONDS);\n+            uRLPublishTimeForLostBookies.registerSuccessfulEvent(stopwatch.stop().elapsed(TimeUnit.MILLISECONDS),\n+                    TimeUnit.MILLISECONDS);\n         }\n \n     }"},{"sha":"da76546c3c22d6d0a2ef011349fd91266560b649","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FReplicationWorker.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FReplicationWorker.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FReplicationWorker.java?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -208,12 +208,12 @@ private void rereplicate() throws InterruptedException, BKException,\n         long ledgerIdToReplicate = underreplicationManager\n                 .getLedgerToRereplicate();\n \n-        Stopwatch stopwatch = new Stopwatch().start();\n+        Stopwatch stopwatch = Stopwatch.createStarted();\n         boolean success = false;\n         try {\n             success = rereplicate(ledgerIdToReplicate);\n         } finally {\n-            long latencyMillis = stopwatch.stop().elapsedMillis();\n+            long latencyMillis = stopwatch.stop().elapsed(TimeUnit.MILLISECONDS);\n             if (success) {\n                 rereplicateOpStats.registerSuccessfulEvent(latencyMillis, TimeUnit.MILLISECONDS);\n             } else {"},{"sha":"57890e93433161778a3fd79634def1552e4a6df6","filename":"bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleMetricsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleMetricsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-stats-providers%2Fcodahale-metrics-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FCodahaleMetricsProvider.java?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -46,6 +46,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@SuppressWarnings(\"deprecation\")\n public class CodahaleMetricsProvider implements StatsProvider {\n \n     static final Logger LOG = LoggerFactory.getLogger(CodahaleMetricsProvider.class);"},{"sha":"3a269ca30190a4137187209cc798e5c3d43cecc4","filename":"compat-deps/bookkeeper-server-compat-4.0.0/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/compat-deps%2Fbookkeeper-server-compat-4.0.0%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/compat-deps%2Fbookkeeper-server-compat-4.0.0%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/compat-deps%2Fbookkeeper-server-compat-4.0.0%2Fpom.xml?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -61,6 +61,7 @@\n                   <include>com.google.protobuf:protobuf-java</include>\n                   <include>org.apache.*:*</include>\n                   <include>org.jboss.*:*</include>\n+                  <include>com.google.guava:guava</include>\n                   <include>commons-*:*</include>\n                 </includes>\n                 <excludes>\n@@ -83,6 +84,10 @@\n                   <pattern>org.jboss</pattern>\n                   <shadedPattern>org.jboss.bk_v4_0_0</shadedPattern>\n                 </relocation>\n+                 <relocation>\n+                  <pattern>com.google</pattern>\n+                  <shadedPattern>com.google.bk_v4_0_0</shadedPattern>\n+                </relocation>\n               </relocations>\n             </configuration>\n           </execution>"},{"sha":"23496d371209b48ec2ae0e39f8164ebc1c9eb275","filename":"compat-deps/bookkeeper-server-compat-4.1.0/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/compat-deps%2Fbookkeeper-server-compat-4.1.0%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/compat-deps%2Fbookkeeper-server-compat-4.1.0%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/compat-deps%2Fbookkeeper-server-compat-4.1.0%2Fpom.xml?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -61,6 +61,7 @@\n                   <include>com.google.protobuf:protobuf-java</include>\n                   <include>org.apache.*:*</include>\n                   <include>org.jboss.*:*</include>\n+                  <include>com.google.guava:guava</include>\n                   <include>commons-*:*</include>\n                 </includes>\n                 <excludes>\n@@ -92,6 +93,10 @@\n                   <pattern>org.jboss</pattern>\n                   <shadedPattern>org.jboss.bk_v4_1_0</shadedPattern>\n                 </relocation>\n+                 <relocation>\n+                  <pattern>com.google</pattern>\n+                  <shadedPattern>com.google.bk_v4_1_0</shadedPattern>\n+                </relocation>\n               </relocations>\n             </configuration>\n           </execution>"},{"sha":"741c50446699e3eb2be5872935903f82668168cb","filename":"compat-deps/bookkeeper-server-compat-4.2.0/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/compat-deps%2Fbookkeeper-server-compat-4.2.0%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/compat-deps%2Fbookkeeper-server-compat-4.2.0%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/compat-deps%2Fbookkeeper-server-compat-4.2.0%2Fpom.xml?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -61,6 +61,7 @@\n                   <include>com.google.protobuf:protobuf-java</include>\n                   <include>org.apache.*:*</include>\n                   <include>org.jboss.*:*</include>\n+                  <include>com.google.guava:guava</include>\n                   <include>commons-*:*</include>\n                 </includes>\n                 <excludes>\n@@ -92,6 +93,10 @@\n                   <pattern>org.jboss</pattern>\n                   <shadedPattern>org.jboss.bk_v4_2_0</shadedPattern>\n                 </relocation>\n+                <relocation>\n+                  <pattern>com.google</pattern>\n+                  <shadedPattern>com.google.bk_v4_2_0</shadedPattern>\n+                </relocation>\n               </relocations>\n             </configuration>\n           </execution>"},{"sha":"e0f09b9ae7aea87c38761b960a7ee70ee027dada","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd3331a2769a29c379ed63e21ed2dc3c0f85ba25/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/pom.xml?ref=fd3331a2769a29c379ed63e21ed2dc3c0f85ba25","patch":"@@ -42,7 +42,7 @@\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n     <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n     <protobuf.version>2.6.1</protobuf.version>\n-    <guava.version>13.0.1</guava.version>\n+    <guava.version>20.0</guava.version>\n     <netty.version>4.1.10.Final</netty.version>\n     <zookeeper.version>3.5.1-alpha</zookeeper.version>\n     <slf4j.version>1.7.25</slf4j.version>"}]}