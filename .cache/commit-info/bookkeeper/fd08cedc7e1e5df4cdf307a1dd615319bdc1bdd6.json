{"sha":"fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmZkMDhjZWRjN2UxZTVkZjRjZGYzMDdhMWRkNjE1MzE5YmRjMWJkZDY=","commit":{"author":{"name":"Yiming Zang","email":"yzang@twitter.com","date":"2016-12-28T22:49:50Z"},"committer":{"name":"Sijie Guo","email":"sijieg@twitter.com","date":"2016-12-29T10:10:53Z"},"message":"DL-158: update truncation status for all completed log segments\n\nupdate turncation status for all completed log segments, when purge truncated log segments we will leave one complete log segment.","tree":{"sha":"16b662189ca3d3caf56ec51c34dbbe10f7814250","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/16b662189ca3d3caf56ec51c34dbbe10f7814250"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6/comments","author":null,"committer":null,"parents":[{"sha":"da53069b9858fd904a68ce84b5954c60a0ba05b2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/da53069b9858fd904a68ce84b5954c60a0ba05b2","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/da53069b9858fd904a68ce84b5954c60a0ba05b2"}],"stats":{"total":15,"additions":7,"deletions":8},"files":[{"sha":"f8bc91785f32af711b4fec9f703f1ddb9823ab56","filename":"src/main/java/com/twitter/distributedlog/BKLogWriteHandler.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogWriteHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogWriteHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Fmain%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FBKLogWriteHandler.java?ref=fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6","patch":"@@ -1049,8 +1049,7 @@ private Future<List<LogSegmentMetadata>> setLogSegmentsOlderThanDLSNTruncated(Li\n         List<LogSegmentMetadata> truncateList = new ArrayList<LogSegmentMetadata>(logSegments.size());\n         LogSegmentMetadata partialTruncate = null;\n         LOG.info(\"{}: Truncating log segments older than {}\", getFullyQualifiedName(), dlsn);\n-        int numCandidates = getNumCandidateLogSegmentsToTruncate(logSegments);\n-        for (int i = 0; i < numCandidates; i++) {\n+        for (int i = 0; i < logSegments.size(); i++) {\n             LogSegmentMetadata l = logSegments.get(i);\n             if (!l.isInProgress()) {\n                 if (l.getLastDLSN().compareTo(dlsn) < 0) {\n@@ -1075,7 +1074,7 @@ private Future<List<LogSegmentMetadata>> setLogSegmentsOlderThanDLSNTruncated(Li\n         return setLogSegmentTruncationStatus(truncateList, partialTruncate, dlsn);\n     }\n \n-    private int getNumCandidateLogSegmentsToTruncate(List<LogSegmentMetadata> logSegments) {\n+    private int getNumCandidateLogSegmentsToPurge(List<LogSegmentMetadata> logSegments) {\n         if (logSegments.isEmpty()) {\n             return 0;\n         } else {\n@@ -1104,7 +1103,7 @@ Future<List<LogSegmentMetadata>> purgeLogSegmentsOlderThanTimestamp(final long m\n             public Future<List<LogSegmentMetadata>> apply(List<LogSegmentMetadata> logSegments) {\n                 List<LogSegmentMetadata> purgeList = new ArrayList<LogSegmentMetadata>(logSegments.size());\n \n-                int numCandidates = getNumCandidateLogSegmentsToTruncate(logSegments);\n+                int numCandidates = getNumCandidateLogSegmentsToPurge(logSegments);\n \n                 for (int iterator = 0; iterator < numCandidates; iterator++) {\n                     LogSegmentMetadata l = logSegments.get(iterator);\n@@ -1137,7 +1136,7 @@ public Future<List<LogSegmentMetadata>> apply(List<LogSegmentMetadata> logSegmen\n                         // we are deleting the log, we can remove whole log segments\n                         numLogSegmentsToProcess = logSegments.size();\n                     } else {\n-                        numLogSegmentsToProcess = getNumCandidateLogSegmentsToTruncate(logSegments);\n+                        numLogSegmentsToProcess = getNumCandidateLogSegmentsToPurge(logSegments);\n                     }\n                     List<LogSegmentMetadata> purgeList = Lists.newArrayListWithExpectedSize(numLogSegmentsToProcess);\n                     for (int iterator = 0; iterator < numLogSegmentsToProcess; iterator++) {"},{"sha":"98d20209306192023e853fd96ad4ed43e9bde282","filename":"src/test/java/com/twitter/distributedlog/TestTruncate.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FTestTruncate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FTestTruncate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/src%2Ftest%2Fjava%2Fcom%2Ftwitter%2Fdistributedlog%2FTestTruncate.java?ref=fd08cedc7e1e5df4cdf307a1dd615319bdc1bdd6","patch":"@@ -137,7 +137,7 @@ public void testTruncation() throws Exception {\n         int txn = 43;\n         DLSN dlsn = txid2DLSN.get((long) txn);\n         assertTrue(Await.result(pair.getRight().truncate(dlsn)));\n-        verifyEntries(name, 1, 31, 20);\n+        verifyEntries(name, 1, 41, 10);\n \n         Utils.close(pair.getRight());\n         pair.getLeft().close();\n@@ -168,7 +168,7 @@ public void testExplicitTruncation() throws Exception {\n         int txn = 43;\n         DLSN dlsn = txid2DLSN.get((long) txn);\n         assertTrue(Await.result(pair.getRight().truncate(dlsn)));\n-        verifyEntries(name, 1, 31, 20);\n+        verifyEntries(name, 1, 41, 10);\n \n         Utils.close(pair.getRight());\n         pair.getLeft().close();\n@@ -178,7 +178,7 @@ public void testExplicitTruncation() throws Exception {\n         BKLogWriteHandler handler = dlm.createWriteHandler(true);\n         FutureUtils.result(handler.purgeLogSegmentsOlderThanTxnId(Integer.MAX_VALUE));\n \n-        verifyEntries(name, 1, 31, 20);\n+        verifyEntries(name, 1, 41, 10);\n     }\n \n     @Test(timeout = 60000)"}]}