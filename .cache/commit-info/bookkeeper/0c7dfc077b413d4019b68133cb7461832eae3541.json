{"sha":"0c7dfc077b413d4019b68133cb7461832eae3541","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjBjN2RmYzA3N2I0MTNkNDAxOWI2ODEzM2NiNzQ2MTgzMmVhZTM1NDE=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2015-03-12T07:37:20Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2015-03-12T07:37:20Z"},"message":"BOOKKEEPER-837: UpdateLedgerOp - Replace AbstractFuture with SettableFuture (rakeshr via sijie)","tree":{"sha":"76c5238222312c97bb4ecdf3d4b9023679ed2d29","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/76c5238222312c97bb4ecdf3d4b9023679ed2d29"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/0c7dfc077b413d4019b68133cb7461832eae3541","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/0c7dfc077b413d4019b68133cb7461832eae3541","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/0c7dfc077b413d4019b68133cb7461832eae3541","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/0c7dfc077b413d4019b68133cb7461832eae3541/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"e89ee080f1894143ed3415f27017b89eefe3ceb1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/e89ee080f1894143ed3415f27017b89eefe3ceb1","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/e89ee080f1894143ed3415f27017b89eefe3ceb1"}],"stats":{"total":26,"additions":16,"deletions":10},"files":[{"sha":"b84943cf54d63fdbd9758e0bb1b816ed9a751f27","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/0c7dfc077b413d4019b68133cb7461832eae3541/CHANGES.txt","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/0c7dfc077b413d4019b68133cb7461832eae3541/CHANGES.txt","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/CHANGES.txt?ref=0c7dfc077b413d4019b68133cb7461832eae3541","patch":"@@ -55,6 +55,8 @@ Trunk (unreleased changes)\n  \n       BOOKKEEPER-830: Documentation has no structure (ivank via fpj)\n \n+      BOOKKEEPER-837: UpdateLedgerOp - Replace AbstractFuture with SettableFuture (rakeshr via sijie)\n+\n       bookkeeper-client:\n \n         BOOKKEEPER-810: Allow to configure TCP connect timeout (Charles Xie via sijie)"},{"sha":"49b9f0372ff8bc9055a44041113581eadf3fdca0","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/UpdateLedgerOp.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/0c7dfc077b413d4019b68133cb7461832eae3541/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FUpdateLedgerOp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/0c7dfc077b413d4019b68133cb7461832eae3541/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FUpdateLedgerOp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FUpdateLedgerOp.java?ref=0c7dfc077b413d4019b68133cb7461832eae3541","patch":"@@ -38,10 +38,11 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.util.concurrent.AbstractFuture;\n import com.google.common.util.concurrent.FutureCallback;\n import com.google.common.util.concurrent.Futures;\n+import com.google.common.util.concurrent.ListenableFuture;\n import com.google.common.util.concurrent.RateLimiter;\n+import com.google.common.util.concurrent.SettableFuture;\n import com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n /**\n@@ -112,7 +113,7 @@ private void updateLedgers(final BookieSocketAddress oldBookieId, final BookieSo\n \n                         FutureCallback<Void> updateLedgerCb = new UpdateLedgerCb(lId, stop, issuedLedgerCnt,\n                                 updatedLedgerCnt, outstandings, syncObj, progressable);\n-                        Futures.addCallback(readCb, updateLedgerCb);\n+                        Futures.addCallback(readCb.getFutureListener(), updateLedgerCb);\n \n                         issuedLedgerCnt.incrementAndGet();\n                         if (limit != Integer.MIN_VALUE && issuedLedgerCnt.get() >= limit || !ledgerItr.hasNext()) {\n@@ -190,13 +191,12 @@ private void finishUpdateLedger() {\n         }\n     }\n \n-    private final static class ReadLedgerMetadataCb extends AbstractFuture<Void> implements\n-            GenericCallback<LedgerMetadata> {\n+    private final static class ReadLedgerMetadataCb implements GenericCallback<LedgerMetadata> {\n         final BookKeeper bkc;\n         final Long ledgerId;\n         final BookieSocketAddress curBookieAddr;\n         final BookieSocketAddress toBookieAddr;\n-\n+        SettableFuture<Void> future = SettableFuture.create();\n         public ReadLedgerMetadataCb(BookKeeper bkc, Long ledgerId, BookieSocketAddress curBookieAddr,\n                 BookieSocketAddress toBookieAddr) {\n             this.bkc = bkc;\n@@ -205,15 +205,19 @@ public ReadLedgerMetadataCb(BookKeeper bkc, Long ledgerId, BookieSocketAddress c\n             this.toBookieAddr = toBookieAddr;\n         }\n \n+        ListenableFuture<Void> getFutureListener() {\n+            return future;\n+        }\n+\n         @Override\n         public void operationComplete(int rc, LedgerMetadata metadata) {\n             if (BKException.Code.NoSuchLedgerExistsException == rc) {\n-                set(null);\n+                future.set(null);\n                 return; // this is OK\n             } else if (BKException.Code.OK != rc) {\n                 // open ledger failed.\n                 LOG.error(\"Get ledger metadata {} failed. Error code {}\", ledgerId, rc);\n-                setException(BKException.create(rc));\n+                future.setException(BKException.create(rc));\n                 return;\n             }\n             boolean updateEnsemble = false;\n@@ -225,7 +229,7 @@ public void operationComplete(int rc, LedgerMetadata metadata) {\n                 }\n             }\n             if (!updateEnsemble) {\n-                set(null);\n+                future.set(null);\n                 return; // ledger doesn't contains the given curBookieId\n             }\n             final GenericCallback<Void> writeCb = new GenericCallback<Void>() {\n@@ -234,10 +238,10 @@ public void operationComplete(int rc, Void result) {\n                     if (rc != BKException.Code.OK) {\n                         // metadata update failed\n                         LOG.error(\"Ledger {} metadata update failed. Error code {}\", ledgerId, rc);\n-                        setException(BKException.create(rc));\n+                        future.setException(BKException.create(rc));\n                         return;\n                     }\n-                    set(null);\n+                    future.set(null);\n                 }\n             };\n             bkc.getLedgerManager().writeLedgerMetadata(ledgerId, metadata, writeCb);"}]}