{"sha":"101de10a817d2a0704ce746eaed90cc0d73ca078","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjEwMWRlMTBhODE3ZDJhMDcwNGNlNzQ2ZWFlZDkwY2MwZDczY2EwNzg=","commit":{"author":{"name":"Matteo Merli","email":"mmerli@apache.org","date":"2016-04-27T19:11:27Z"},"committer":{"name":"Matteo Merli","email":"mmerli@apache.org","date":"2016-04-27T19:11:27Z"},"message":"BOOKKEEPER-925: Fix FindBugs discovered issues in master\n\nAuthor: Matteo Merli <mmerli@apache.org>\n\nReviewers: Siddharth Boobna <siddharth.boobna@gmail.com>, Guo Sijie <sijie@apache.org>\n\nCloses #39 from merlimat/bk-925","tree":{"sha":"654cb3a3a05978fdde638e168647198e861c19b3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/654cb3a3a05978fdde638e168647198e861c19b3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/101de10a817d2a0704ce746eaed90cc0d73ca078","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/101de10a817d2a0704ce746eaed90cc0d73ca078","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/101de10a817d2a0704ce746eaed90cc0d73ca078","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/101de10a817d2a0704ce746eaed90cc0d73ca078/comments","author":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","site_admin":false},"committer":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","site_admin":false},"parents":[{"sha":"696a1515bcd4ef41ef27944dad64ac3e1c9d4991","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/696a1515bcd4ef41ef27944dad64ac3e1c9d4991","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/696a1515bcd4ef41ef27944dad64ac3e1c9d4991"}],"stats":{"total":20,"additions":10,"deletions":10},"files":[{"sha":"df31bf218e1fd6e665d733e0a795ba1925fa284f","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieShell.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieShell.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieShell.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FBookieShell.java?ref=101de10a817d2a0704ce746eaed90cc0d73ca078","patch":"@@ -458,7 +458,8 @@ int runCmd(CommandLine cmdLine) throws Exception {\n                 while (entries.hasNext()) {\n                     LedgerEntry entry = entries.next();\n                     HexDump.dump(entry.getEntry(), 0, out, 0);\n-                    System.out.println(\"Entry Id: \" + entry.getEntryId() + \", Data: \" + new String(out.toByteArray()));\n+                    System.out.println(\n+                            \"Entry Id: \" + entry.getEntryId() + \", Data: \" + new String(out.toByteArray(), UTF_8));\n                     out.reset();\n                 }\n             } catch (Exception e) {"},{"sha":"c422a89506e6e7938f579bc265589710eb1ce1b1","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/ScanAndCompareGarbageCollector.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FScanAndCompareGarbageCollector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FScanAndCompareGarbageCollector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fbookie%2FScanAndCompareGarbageCollector.java?ref=101de10a817d2a0704ce746eaed90cc0d73ca078","patch":"@@ -212,13 +212,13 @@ private void release() {\n                         try {\n                             ZkLedgerUnderreplicationManager.releaseUnderreplicatedLedgerLock(zk, zkLedgersRootPath,\n                                     ledgerId);\n-                        } catch (Exception e) {\n-                            LOG.error(\"Error removing underreplicated lock for ledger {}\", ledgerId, e);\n+                        } catch (Throwable t) {\n+                            LOG.error(\"Exception when removing underreplicated lock for ledger {}\", ledgerId, t);\n                         }\n                     }\n                 });\n-            } catch (Exception e) {\n-                LOG.error(\"Exception when iterating through the ledgers to check for over-replication\", e);\n+            } catch (Throwable t) {\n+                LOG.error(\"Exception when iterating through the ledgers to check for over-replication\", t);\n                 latch.countDown();\n             }\n         }"},{"sha":"1e49cf8dd0595af2cc4854b0fda4291eb540f33d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieWatcher.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookieWatcher.java?ref=101de10a817d2a0704ce746eaed90cc0d73ca078","patch":"@@ -62,7 +62,6 @@ class BookieWatcher implements Watcher, ChildrenCallback {\n \n     public static int ZK_CONNECT_BACKOFF_SEC = 1;\n     private static final Set<BookieSocketAddress> EMPTY_SET = new HashSet<BookieSocketAddress>();\n-    private static final Boolean BOOLEAN = new Boolean(true);\n \n     // Bookie registration path in ZK\n     private final String bookieRegistrationPath;\n@@ -302,7 +301,7 @@ public BookieSocketAddress replaceBookie(List<BookieSocketAddress> existingBooki\n      */\n     public void quarantineBookie(BookieSocketAddress bookie) {\n         if (quarantinedBookies.getIfPresent(bookie) == null) {\n-            quarantinedBookies.put(bookie, BOOLEAN);\n+            quarantinedBookies.put(bookie, Boolean.TRUE);\n             logger.warn(\"Bookie {} has been quarantined because of read/write errors.\", bookie);\n         }\n     }"},{"sha":"363b51732d8054e78ceadf497ea54ca334c73e55","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/ZkLedgerUnderreplicationManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fmeta%2FZkLedgerUnderreplicationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fmeta%2FZkLedgerUnderreplicationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fmeta%2FZkLedgerUnderreplicationManager.java?ref=101de10a817d2a0704ce746eaed90cc0d73ca078","patch":"@@ -78,7 +78,7 @@ public class ZkLedgerUnderreplicationManager implements LedgerUnderreplicationMa\n     static final String LAYOUT=\"BASIC\";\n     static final int LAYOUT_VERSION=1;\n \n-    public static final byte[] LOCK_DATA = getLockData();\n+    private static final byte[] LOCK_DATA = getLockData();\n \n     private static class Lock {\n         private final String lockZNode;"},{"sha":"dd51a6839c37037e877baf0230a20552c062842b","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/AuthHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FAuthHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/101de10a817d2a0704ce746eaed90cc0d73ca078/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FAuthHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fproto%2FAuthHandler.java?ref=101de10a817d2a0704ce746eaed90cc0d73ca078","patch":"@@ -274,7 +274,7 @@ public void messageReceived(ChannelHandlerContext ctx,\n         public void writeRequested(ChannelHandlerContext ctx,\n                                    MessageEvent e)\n                 throws Exception {\n-            synchronized (waitingForAuth) {\n+            synchronized (this) {\n                 if (authenticated) {\n                     super.writeRequested(ctx, e);\n                 } else if (e.getMessage() instanceof BookkeeperProtocol.Request) {\n@@ -339,7 +339,7 @@ class AuthHandshakeCompleteCallback implements GenericCallback<Void> {\n             @Override\n             public void operationComplete(int rc, Void v) {\n                 if (rc == BKException.Code.OK) {\n-                    synchronized (waitingForAuth) {\n+                    synchronized (this) {\n                         authenticated = true;\n                         MessageEvent e = waitingForAuth.poll();\n                         while (e != null) {"}]}