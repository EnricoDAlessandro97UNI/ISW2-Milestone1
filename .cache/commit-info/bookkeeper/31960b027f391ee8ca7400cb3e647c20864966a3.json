{"sha":"31960b027f391ee8ca7400cb3e647c20864966a3","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjMxOTYwYjAyN2YzOTFlZThjYTc0MDBjYjNlNjQ3YzIwODY0OTY2YTM=","commit":{"author":{"name":"zhaijack","email":"zhaijia03@gmail.com","date":"2017-08-05T06:13:48Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-08-05T06:13:48Z"},"message":"ISSUE #367: [DOCUMENTATION] add api readUnconfirmedEntries in website doc\n\nDescriptions of the changes in this PR:\n\nadd api readUnconfirmedEntries in website doc\n\n---\nBe sure to do all of the following to help us incorporate your contribution\nquickly and easily:\n\n- [X] Make sure the PR title is formatted like:\n    `<Issue # or BOOKKEEPER-#>: Description of pull request`\n    `e.g. Issue 123: Description ...`\n    `e.g. BOOKKEEPER-1234: Description ...`\n- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.\n- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.\n\n---\n\nAuthor: zhaijack <zhaijia03@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>\n\nThis closes #371 from zhaijack/issue367, closes #367","tree":{"sha":"a201f8817a2ffadaa1f05a8f91d01138eb0f46e4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/a201f8817a2ffadaa1f05a8f91d01138eb0f46e4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/31960b027f391ee8ca7400cb3e647c20864966a3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/31960b027f391ee8ca7400cb3e647c20864966a3","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/31960b027f391ee8ca7400cb3e647c20864966a3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/31960b027f391ee8ca7400cb3e647c20864966a3/comments","author":{"login":"zhaijack","id":26834121,"node_id":"MDQ6VXNlcjI2ODM0MTIx","avatar_url":"https://avatars.githubusercontent.com/u/26834121?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaijack","html_url":"https://github.com/zhaijack","followers_url":"https://api.github.com/users/zhaijack/followers","following_url":"https://api.github.com/users/zhaijack/following{/other_user}","gists_url":"https://api.github.com/users/zhaijack/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaijack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaijack/subscriptions","organizations_url":"https://api.github.com/users/zhaijack/orgs","repos_url":"https://api.github.com/users/zhaijack/repos","events_url":"https://api.github.com/users/zhaijack/events{/privacy}","received_events_url":"https://api.github.com/users/zhaijack/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"02580c0c2b2d998e1cdfdffe75458d3b7e85d1fc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/02580c0c2b2d998e1cdfdffe75458d3b7e85d1fc","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/02580c0c2b2d998e1cdfdffe75458d3b7e85d1fc"}],"stats":{"total":18,"additions":18,"deletions":0},"files":[{"sha":"3d47de25c64dc2fcd6709a8d004dc54da08690f4","filename":"site/docs/api/ledger-api.md","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/31960b027f391ee8ca7400cb3e647c20864966a3/site%2Fdocs%2Fapi%2Fledger-api.md","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/31960b027f391ee8ca7400cb3e647c20864966a3/site%2Fdocs%2Fapi%2Fledger-api.md","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/site%2Fdocs%2Fapi%2Fledger-api.md?ref=31960b027f391ee8ca7400cb3e647c20864966a3","patch":"@@ -152,6 +152,24 @@ while (entries.hasNextElement()) {\n }\n ```\n \n+### Reading entries after the LastAddConfirmed range\n+\n+`readUnconfirmedEntries` allowing to read after the LastAddConfirmed range.\n+It lets the client read without checking the local value of LastAddConfirmed, so that it is possible to read entries for which the writer has not received the acknowledge yet\n+For entries which are within the range 0..LastAddConfirmed BookKeeper guarantees that the writer has successfully received the acknowledge.\n+For entries outside that range it is possible that the writer never received the acknowledge and so there is the risk that the reader is seeing entries before the writer and this could result in a consistency issue in some cases.\n+With this method you can even read entries before the LastAddConfirmed and entries after it with one call, the expected consistency will be as described above.\n+\n+```java\n+Enumerator<LedgerEntry> entries =\n+  handle.readUnconfirmedEntries(0, lastEntryIdExpectedToRead);\n+\n+while (entries.hasNextElement()) {\n+    LedgerEntry entry = entries.nextElement();\n+    System.out.println(\"Successfully read entry \" + entry.getId());\n+}\n+```\n+\n ## Deleting ledgers\n \n {% pop Ledgers %} can also be deleted synchronously or asynchronously."}]}