{"sha":"d7f7b922f3ea0471452115c6271fd18ab63d3505","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmQ3ZjdiOTIyZjNlYTA0NzE0NTIxMTVjNjI3MWZkMThhYjYzZDM1MDU=","commit":{"author":{"name":"Matteo Merli","email":"mmerli@apache.org","date":"2017-05-12T13:20:31Z"},"committer":{"name":"eolivelli","email":"eolivelli@apache.org","date":"2017-05-12T13:20:31Z"},"message":"BOOKKEEPER-1064: ConcurrentModificationException in AuditorLedgerCheckerTest\n\nAs seen in:\nhttps://builds.apache.org/job/bookkeeper-master-git-pullrequest/371/\n\nThe test is iterating over a hash map that gets updated by a different thread. The map needs to be concurrent.\n\n```\njava.util.ConcurrentModificationException\n\tat org.apache.bookkeeper.replication.AuditorLedgerCheckerTest.stopAuditorElectors(AuditorLedgerCheckerTest.java:130)\n\tat org.apache.bookkeeper.replication.AuditorLedgerCheckerTest.tearDown(AuditorLedgerCheckerTest.java:114)\n```\n\nAll subsequent tests in the same class are failing because of the 1st test not cleaning up properly.\n\nAuthor: Matteo Merli <mmerli@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>\n\nCloses #151 from merlimat/bk-1064-auditor-ledger-test","tree":{"sha":"7e1bacfb9a80ae6f93888c68b64ec94c8a8f5f0b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/7e1bacfb9a80ae6f93888c68b64ec94c8a8f5f0b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/d7f7b922f3ea0471452115c6271fd18ab63d3505","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/d7f7b922f3ea0471452115c6271fd18ab63d3505","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/d7f7b922f3ea0471452115c6271fd18ab63d3505","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/d7f7b922f3ea0471452115c6271fd18ab63d3505/comments","author":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","site_admin":false},"committer":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e2894a9e9946b4cc4647c280094bcb2eb1a521ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/e2894a9e9946b4cc4647c280094bcb2eb1a521ea","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/e2894a9e9946b4cc4647c280094bcb2eb1a521ea"}],"stats":{"total":5,"additions":3,"deletions":2},"files":[{"sha":"8402c04088fe9da42068fdc131efba72b34c2ac6","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorLedgerCheckerTest.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/d7f7b922f3ea0471452115c6271fd18ab63d3505/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FAuditorLedgerCheckerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/d7f7b922f3ea0471452115c6271fd18ab63d3505/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FAuditorLedgerCheckerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Freplication%2FAuditorLedgerCheckerTest.java?ref=d7f7b922f3ea0471452115c6271fd18ab63d3505","patch":"@@ -31,6 +31,7 @@\n import java.util.Map;\n import java.util.Random;\n import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicInteger;\n@@ -77,7 +78,7 @@ public class AuditorLedgerCheckerTest extends MultiLedgerManagerTestCase {\n     private final String UNDERREPLICATED_PATH = baseClientConf\n             .getZkLedgersRootPath()\n             + \"/underreplication/ledgers\";\n-    private HashMap<String, AuditorElector> auditorElectors = new HashMap<String, AuditorElector>();\n+    private Map<String, AuditorElector> auditorElectors = new ConcurrentHashMap<>();\n     private ZkLedgerUnderreplicationManager urLedgerMgr;\n     private Set<Long> urLedgerList;\n     private String electionPath;\n@@ -316,7 +317,7 @@ public void testReadOnlyBookieShutdown() throws Exception {\n \n         /*\n          * Sample data format present in the under replicated ledger path\n-         * \n+         *\n          * {4=replica: \"10.18.89.153:5002\"}\n          */\n         assertTrue(\"Ledger is not marked as underreplicated:\" + ledgerId, urLedgerList.contains(ledgerId));"}]}