{"sha":"d1f37dafbb475d4d6aab4769335550428c680269","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OmQxZjM3ZGFmYmI0NzVkNGQ2YWFiNDc2OTMzNTU1MDQyOGM2ODAyNjk=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-06-01T11:16:48Z"},"committer":{"name":"Enrico Olivelli","email":"eolivelli@apache.org","date":"2017-06-01T11:16:48Z"},"message":"BOOKKEEPER-1085: Introduce the AlertStatsLogger\n\nIntroduce the AlertStatsLogger used to increment a metric whenever an event that should never happen is detected. Allow specifying an optional scope to better classify the error conditions\n\nRB_ID=598662\n\nAuthor: Sijie Guo <sijie@apache.org>\nAuthor: Robin Dhamankar <rdhamankar@twitter.com>\n\nReviewers: Enrico Olivelli, Jia Zhai\n\nCloses #173 from sijie/add_alert_state_logger","tree":{"sha":"7183ed790b8bdd495da855469d1c43aa0186c916","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/7183ed790b8bdd495da855469d1c43aa0186c916"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/d1f37dafbb475d4d6aab4769335550428c680269","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/d1f37dafbb475d4d6aab4769335550428c680269","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/d1f37dafbb475d4d6aab4769335550428c680269","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/d1f37dafbb475d4d6aab4769335550428c680269/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e33ec10aa400f32c2e0278c15ea80a0f624e5919","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/e33ec10aa400f32c2e0278c15ea80a0f624e5919","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/e33ec10aa400f32c2e0278c15ea80a0f624e5919"}],"stats":{"total":79,"additions":79,"deletions":0},"files":[{"sha":"63ba3b593f99e483146ee206b81b18b7a22ea6bf","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/stats/AlertStatsLogger.java","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FAlertStatsLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FAlertStatsLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fstats%2FAlertStatsLogger.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -0,0 +1,79 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.bookkeeper.stats;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This class is used to raise alert when we detect an event that should never happen in production\n+ */\n+public class AlertStatsLogger {\n+    private static final Logger logger = LoggerFactory.getLogger(AlertStatsLogger.class);\n+\n+    public final String alertStatName;\n+\n+    private final StatsLogger globalStatsLogger;\n+    private final StatsLogger scopedStatsLogger;\n+    private final String scope;\n+    private Counter globalCounter = null;\n+    private Counter scopedCounter = null;\n+\n+    public AlertStatsLogger(StatsLogger globalStatsLogger, String scope, String alertStatName) {\n+        this.globalStatsLogger = globalStatsLogger;\n+        this.scope = scope;\n+        this.scopedStatsLogger = globalStatsLogger.scope(scope);\n+        this.alertStatName = alertStatName;\n+    }\n+\n+    public AlertStatsLogger(StatsLogger globalStatsLogger, String alertStatName) {\n+        this.globalStatsLogger = globalStatsLogger;\n+        this.scope = null;\n+        this.scopedStatsLogger = null;\n+        this.alertStatName = alertStatName;\n+    }\n+\n+    private String format(String msg) {\n+        return msg.startsWith(\"ALERT!: \") ? msg :\n+                (\"ALERT!: \" + (scope != null ? \"(\" + scope + \"):\" : \"\" ) + msg);\n+    }\n+\n+    private void initializeCountersIfNeeded() {\n+        if (null != globalCounter) {\n+            return;\n+        }\n+\n+        globalCounter = globalStatsLogger.getCounter(alertStatName);\n+\n+        if (null != scopedStatsLogger) {\n+            scopedCounter = scopedStatsLogger.getCounter(alertStatName);\n+        }\n+    }\n+\n+    /**\n+     * Report an alertable condition\". Prefixes \"ALERT!: \" if not already prefixed.\n+     */\n+    public void raise(String msg, Object... args) {\n+        initializeCountersIfNeeded();\n+        globalCounter.inc();\n+        if (null != scopedCounter) {\n+            scopedCounter.inc();\n+        }\n+        logger.error(format(msg), args);\n+        logger.error(\"fake exception to generate stack trace\", new Exception());\n+    }\n+}"}]}