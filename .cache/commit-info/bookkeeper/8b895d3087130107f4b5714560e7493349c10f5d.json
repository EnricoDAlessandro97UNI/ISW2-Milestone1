{"sha":"8b895d3087130107f4b5714560e7493349c10f5d","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjhiODk1ZDMwODcxMzAxMDdmNGI1NzE0NTYwZTc0OTMzNDljMTBmNWQ=","commit":{"author":{"name":"zhaijack","email":"zhaijia03@gmail.com","date":"2017-08-03T08:14:31Z"},"committer":{"name":"jiazhai","email":"zhaijia@live.com","date":"2017-08-03T08:14:31Z"},"message":"ISSUE #360: [DOCUMENTATION] configuration settings\n\nDescriptions of the changes in this PR:\n-  make sure bk_server.conf contains all the settings in ServerConfiguration.java\n-  update site/docs/reference/config.md (http://bookkeeper.apache.org/test/content/docs/reference/config/)\n\n---\nBe sure to do all of the following to help us incorporate your contribution\nquickly and easily:\n\n- [X] Make sure the PR title is formatted like:\n    `<Issue # or BOOKKEEPER-#>: Description of pull request`\n    `e.g. Issue 123: Description ...`\n    `e.g. BOOKKEEPER-1234: Description ...`\n- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.\n- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.\n\n---\n\nAuthor: zhaijack <zhaijia03@gmail.com>\n\nReviewers: Luc Perkins <None>, Sijie Guo <None>\n\nThis closes #368 from zhaijack/issue_360, closes #360","tree":{"sha":"284f9de204c59621d577f89b818d3e3dff00bc5d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/284f9de204c59621d577f89b818d3e3dff00bc5d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/8b895d3087130107f4b5714560e7493349c10f5d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/8b895d3087130107f4b5714560e7493349c10f5d","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/8b895d3087130107f4b5714560e7493349c10f5d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/8b895d3087130107f4b5714560e7493349c10f5d/comments","author":{"login":"zhaijack","id":26834121,"node_id":"MDQ6VXNlcjI2ODM0MTIx","avatar_url":"https://avatars.githubusercontent.com/u/26834121?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaijack","html_url":"https://github.com/zhaijack","followers_url":"https://api.github.com/users/zhaijack/followers","following_url":"https://api.github.com/users/zhaijack/following{/other_user}","gists_url":"https://api.github.com/users/zhaijack/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaijack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaijack/subscriptions","organizations_url":"https://api.github.com/users/zhaijack/orgs","repos_url":"https://api.github.com/users/zhaijack/repos","events_url":"https://api.github.com/users/zhaijack/events{/privacy}","received_events_url":"https://api.github.com/users/zhaijack/received_events","type":"User","site_admin":false},"committer":null,"parents":[{"sha":"23f9d815f1f7fa6fa3df55883fa2ec22535d1d2b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/23f9d815f1f7fa6fa3df55883fa2ec22535d1d2b","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/23f9d815f1f7fa6fa3df55883fa2ec22535d1d2b"}],"stats":{"total":752,"additions":535,"deletions":217},"files":[{"sha":"bb27b8a9027431f3652380521f31e2902c04c65e","filename":"bookkeeper-server/conf/bk_server.conf","status":"modified","additions":385,"deletions":210,"changes":595,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/8b895d3087130107f4b5714560e7493349c10f5d/bookkeeper-server%2Fconf%2Fbk_server.conf","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/8b895d3087130107f4b5714560e7493349c10f5d/bookkeeper-server%2Fconf%2Fbk_server.conf","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fconf%2Fbk_server.conf?ref=8b895d3087130107f4b5714560e7493349c10f5d","patch":"@@ -22,12 +22,39 @@\n \n ## Bookie settings\n \n+#############################################################################\n+## Server parameters\n+#############################################################################\n+\n # Port that bookie server listen on\n bookiePort=3181\n \n+# Directories BookKeeper outputs its write ahead log.\n+# Could define multi directories to store write head logs, separated by ','.\n+# For example:\n+#   journalDirectories=/tmp/bk-journal1,/tmp/bk-journal2\n+# If journalDirectories is set, bookies will skip journalDirectory and use\n+# this setting directory.\n+# journalDirectories=/tmp/bk-journal\n+\n+# Directory Bookkeeper outputs its write ahead log\n+# @deprecated since 4.5.0. journalDirectories is preferred over journalDirectory.\n+journalDirectory=/tmp/bk-txn\n+\n+# Configure the bookie to allow/disallow multiple ledger/index/journal directories\n+# in the same filesystem disk partition\n+# allowMultipleDirsUnderSameDiskPartition=false\n+\n+# Directories to store index files. If not specified, will use ledgerDirectories to store.\n+# indexDirectories=/tmp/bk-data\n+\n+# Minimum safe Usable size to be available in index directory for bookie to create\n+# Index File while replaying journal at the time of bookie Start in Readonly Mode (in bytes)\n+# minUsableSizeForIndexFileCreation=1073741824\n+\n # Set the network interface that the bookie should listen on.\n # If not set, the bookie will listen on all interfaces.\n-#listeningInterface=eth0\n+# listeningInterface=eth0\n \n # Whether the bookie allowed to use a loopback interface as its primary\n # interface(i.e. the interface it uses to establish its identity)?\n@@ -40,105 +67,217 @@ bookiePort=3181\n # establish their identities as 127.0.0.1:3181, and only one will be able\n # to join the cluster. For VPSs configured like this, you should explicitly\n # set the listening interface.\n-#allowLoopback=false\n+# allowLoopback=false\n \n-# Directory Bookkeeper outputs its write ahead log\n-journalDirectory=/tmp/bk-txn\n+# Interval to watch whether bookie is dead or not, in milliseconds\n+# bookieDeathWatchInterval=1000\n \n-# Directory Bookkeeper outputs ledger snapshots\n-# could define multi directories to store snapshots, separated by ','\n-# For example:\n-# ledgerDirectories=/tmp/bk1-data,/tmp/bk2-data\n-# \n-# Ideally ledger dirs and journal dir are each in a differet device,\n-# which reduce the contention between random i/o and sequential write.\n-# It is possible to run with a single disk, but performance will be significantly lower.\n-ledgerDirectories=/tmp/bk-data\n-# Directories to store index files. If not specified, will use ledgerDirectories to store.\n-# indexDirectories=/tmp/bk-data\n+# How long the interval to flush ledger index pages to disk, in milliseconds\n+# Flushing index files will introduce much random disk I/O.\n+# If separating journal dir and ledger dirs each on different devices,\n+# flushing would not affect performance. But if putting journal dir\n+# and ledger dirs on same device, performance degrade significantly\n+# on too frequent flushing. You can consider increment flush interval\n+# to get better performance, but you need to pay more time on bookie\n+# server restart after failure.\n+# flushInterval=100\n \n # Allow the expansion of bookie storage capacity. Newly added ledger\n # and index dirs must be empty.\n # allowStorageExpansion=false\n \n-# Ledger Manager Class\n-# What kind of ledger manager is used to manage how ledgers are stored, managed\n-# and garbage collected. Try to read 'BookKeeper Internals' for detail info.\n-# ledgerManagerType=flat\n+# Whether the bookie should use its hostname to register with the\n+# co-ordination service(eg: Zookeeper service).\n+# When false, bookie will use its ipaddress for the registration.\n+# Defaults to false.\n+# useHostNameAsBookieID=false\n \n-# Root zookeeper path to store ledger metadata\n-# This parameter is used by zookeeper-based ledger manager as a root znode to\n-# store all ledgers.\n-# zkLedgersRootPath=/ledgers\n+# Interval between sending an explicit LAC in seconds\n+explicitLacInterval=1\n \n-# Ledger storage implementation class\n-# ledgerStorageClass=org.apache.bookkeeper.bookie.SortedLedgerStorage\n+# Whether the bookie is allowed to use an ephemeral port (port 0) as its\n+# server port. By default, an ephemeral port is not allowed.\n+# Using an ephemeral port as the service port usually indicates a configuration\n+# error. However, in unit tests, using an ephemeral port will address port\n+# conflict problems and allow running tests in parallel.\n+# allowEphemeralPorts=false\n \n-# Enable/Disable entry logger preallocation\n-# entryLogFilePreallocationEnabled=true\n+# Whether allow the bookie to listen for BookKeeper clients executed on the local JVM.\n+# enableLocalTransport=false\n \n-# Max file size of entry logger, in bytes\n-# A new entry log file will be created when the old one reaches the file size limitation\n-# logSizeLimit=2147483648\n+# Whether allow the bookie to disable bind on network interfaces,\n+# this bookie will be available only to BookKeeper clients executed on the local JVM.\n+# disableServerSocketBind=false\n \n-# Threshold of minor compaction\n-# For those entry log files whose remaining size percentage reaches below\n-# this threshold will be compacted in a minor compaction.\n-# If it is set to less than zero, the minor compaction is disabled.\n-# minorCompactionThreshold=0.2\n+# The number of bytes we should use as chunk allocation for\n+# org.apache.bookkeeper.bookie.SkipListArena\n+# skipListArenaChunkSize=4194304\n \n-# Interval to run minor compaction, in seconds\n-# If it is set to less than zero, the minor compaction is disabled. \n-# minorCompactionInterval=3600\n+# The max size we should allocate from the skiplist arena. Allocations\n+# larger than this should be allocated directly by the VM to avoid fragmentation.\n+# skipListArenaMaxAllocSize=131072\n \n-# Interval between sending an explicit LAC in seconds\n-explicitLacInterval = 1\n+# The bookie authentication provider factory class name.\n+# If this is null, no authentication will take place.\n+# bookieAuthProviderFactoryClass=null\n \n-# Threshold of major compaction\n-# For those entry log files whose remaining size percentage reaches below\n-# this threshold will be compacted in a major compaction.\n-# Those entry log files whose remaining size percentage is still\n-# higher than the threshold will never be compacted.\n-# If it is set to less than zero, the minor compaction is disabled.\n-# majorCompactionThreshold=0.8\n \n-# Interval to run major compaction, in seconds\n-# If it is set to less than zero, the major compaction is disabled. \n-# majorCompactionInterval=86400 \n+#############################################################################\n+## Garbage collection settings\n+#############################################################################\n \n-# Set the maximum number of entries which can be compacted without flushing.\n-# When compacting, the entries are written to the entrylog and the new offsets\n-# are cached in memory. Once the entrylog is flushed the index is updated with\n-# the new offsets. This parameter controls the number of entries added to the\n-# entrylog before a flush is forced. A higher value for this parameter means\n-# more memory will be used for offsets. Each offset consists of 3 longs.\n-# This parameter should _not_ be modified unless you know what you're doing.\n-# The default is 100,000.\n-#compactionMaxOutstandingRequests=100000\n+# How long the interval to trigger next garbage collection, in milliseconds\n+# Since garbage collection is running in background, too frequent gc\n+# will heart performance. It is better to give a higher number of gc\n+# interval if there is enough disk capacity.\n+# gcWaitTime=1000\n \n-# Set the rate at which compaction will readd entries. The unit is adds per second.\n-#compactionRate=1000\n+# How long the interval to trigger next garbage collection of overreplicated\n+# ledgers, in milliseconds [Default: 1 day]. This should not be run very frequently\n+# since we read the metadata for all the ledgers on the bookie from zk\n+# gcOverreplicatedLedgerWaitTime=86400000\n \n-# Throttle compaction by bytes or by entries. \n-#isThrottleByBytes=false\n+# Number of threads that should handle write requests. if zero, the writes would\n+# be handled by netty threads directly.\n+# numAddWorkerThreads=1\n \n-# Set the rate at which compaction will readd entries. The unit is adds per second.\n-#compactionRateByEntries=1000\n+# Number of threads that should handle read requests. if zero, the reads would\n+# be handled by netty threads directly.\n+# numReadWorkerThreads=1\n \n-# Set the rate at which compaction will readd entries. The unit is bytes added per second.\n-#compactionRateByBytes=1000000\n+# Whether force compaction is allowed when the disk is full or almost full.\n+# Forcing GC may get some space back, but may also fill up disk space more quickly.\n+# This is because new log files are created before GC, while old garbage\n+# log files are deleted after GC.\n+# isForceGCAllowWhenNoSpace=false\n+\n+#############################################################################\n+## TSL settings\n+#############################################################################\n+\n+# TSL Provider (JDK or OpenSSL).\n+# tslProvider=OpenSSL\n+\n+# The path to the class that provides security.\n+# tslProviderFactoryClass=org.apache.bookkeeper.security.SSLContextFactory\n+\n+# Type of security used by server.\n+# tslClientAuthentication=true\n+\n+# Bookie Keystore type.\n+# tslKeyStoreType=JKS\n+\n+# Bookie Keystore location (path).\n+# tslKeyStore=null\n+\n+# Bookie Keystore password path, if the keystore is protected by a password.\n+# tslKeyStorePasswordPath=null\n+\n+# Bookie Truststore type.\n+# tslTrustStoreType=null\n+\n+# Bookie Truststore location (path).\n+# tslTrustStore=null\n+\n+# Bookie Truststore password path, if the trust store is protected by a password.\n+# tslTrustStorePasswordPath=null\n+\n+#############################################################################\n+## Long poll request parameter settings\n+#############################################################################\n+\n+# The number of threads that should handle long poll requests.\n+# numLongPollWorkerThreads=10\n+\n+# The tick duration in milliseconds for long poll requests.\n+# requestTimerTickDurationMs=10\n+\n+# The number of ticks per wheel for the long poll request timer.\n+# requestTimerNumTicks=1024\n+\n+#############################################################################\n+## AutoRecovery settings\n+#############################################################################\n+\n+# The interval between auditor bookie checks.\n+# The auditor bookie check, checks ledger metadata to see which bookies should\n+# contain entries for each ledger. If a bookie which should contain entries is\n+# unavailable, then the ledger containing that entry is marked for recovery.\n+# Setting this to 0 disabled the periodic check. Bookie checks will still\n+# run when a bookie fails.\n+# The interval is specified in seconds.\n+# auditorPeriodicBookieCheckInterval=86400\n+\n+# The number of entries that a replication will rereplicate in parallel.\n+# rereplicationEntryBatchSize=10\n+\n+# Auto-replication\n+# The grace period, in seconds, that the replication worker waits before fencing and\n+# replicating a ledger fragment that's still being written to upon bookie failure.\n+# openLedgerRereplicationGracePeriod=30\n+\n+# Whether the bookie itself can start auto-recovery service also or not\n+# autoRecoveryDaemonEnabled=false\n+\n+# How long to wait, in seconds, before starting auto recovery of a lost bookie\n+# lostBookieRecoveryDelay=0\n+\n+#############################################################################\n+## Netty server settings\n+#############################################################################\n+\n+# This settings is used to enabled/disabled Nagle's algorithm, which is a means of\n+# improving the efficiency of TCP/IP networks by reducing the number of packets\n+# that need to be sent over the network.\n+# If you are sending many small messages, such that more than one can fit in\n+# a single IP packet, setting server.tcpnodelay to false to enable Nagle algorithm\n+# can provide better performance.\n+# Default value is true.\n+# serverTcpNoDelay=true\n+\n+# This setting is used to send keep-alive messages on connection-oriented sockets.\n+# serverSockKeepalive=true\n+\n+# The socket linger timeout on close.\n+# When enabled, a close or shutdown will not return until all queued messages for\n+# the socket have been successfully sent or the linger timeout has been reached.\n+# Otherwise, the call returns immediately and the closing is done in the background.\n+# serverTcpLinger=0\n+\n+# The Recv ByteBuf allocator initial buf size.\n+# byteBufAllocatorSizeInitial=65536\n+\n+# The Recv ByteBuf allocator min buf size.\n+# byteBufAllocatorSizeMin=65536\n+\n+# The Recv ByteBuf allocator max buf size.\n+# byteBufAllocatorSizeMax=1048576\n+\n+#############################################################################\n+## Journal settings\n+#############################################################################\n+\n+# The journal format version to write.\n+# Available formats are 1-5:\n+# 1: no header\n+# 2: a header section was added\n+# 3: ledger key was introduced\n+# 4: fencing key was introduced\n+# 5: expanding header to 512 and padding writes to align sector size configured by `journalAlignmentSize`\n+# By default, it is `4`. If you'd like to enable `padding-writes` feature, you can set journal version to `5`.\n+# You can disable `padding-writes` by setting journal version back to `4`. This feature is available in 4.5.0\n+# and onward versions.\n+# journalFormatVersionToWrite=4\n \n # Max file size of journal file, in mega bytes\n # A new journal file will be created when the old one reaches the file size limitation\n-#\n # journalMaxSizeMB=2048\n \n # Max number of old journal file to kept\n # Keep a number of old journal files would help data recovery in specia case\n-#\n # journalMaxBackups=5\n \n-# How much space should we pre-allocate at a time in the journal\n+# How much space should we pre-allocate at a time in the journal.\n # journalPreAllocSizeMB=16\n \n # Size of the write buffers used for the journal\n@@ -157,70 +296,53 @@ explicitLacInterval = 1\n # Maximum writes to buffer to achieve grouping\n # journalBufferedWritesThreshold=524288\n \n-# If we should flush the journal when journal queue is empty\n-# journalFlushWhenQueueEmpty=false\n-\n # The number of threads that should handle journal callbacks\n # numJournalCallbackThreads=1\n \n-# How long the interval to trigger next garbage collection, in milliseconds\n-# Since garbage collection is running in background, too frequent gc\n-# will heart performance. It is better to give a higher number of gc\n-# interval if there is enough disk capacity.\n-# gcWaitTime=1000\n+# All the journal writes and commits should be aligned to given size.\n+# If not, zeros will be padded to align to given size.\n+# It only takes effects when journalFormatVersionToWrite is set to 5\n+# journalAlignmentSize=512\n \n-# How long the interval to trigger next garbage collection of overreplicated\n-# ledgers, in milliseconds [Default: 1 day]. This should not be run very frequently since we read\n-# the metadata for all the ledgers on the bookie from zk\n-# gcOverreplicatedLedgerWaitTime=86400000\n+# Maximum entries to buffer to impose on a journal write to achieve grouping.\n+# journalBufferedEntriesThreshold=0\n \n-# How long the interval to flush ledger index pages to disk, in milliseconds\n-# Flushing index files will introduce much random disk I/O.\n-# If separating journal dir and ledger dirs each on different devices,\n-# flushing would not affect performance. But if putting journal dir\n-# and ledger dirs on same device, performance degrade significantly\n-# on too frequent flushing. You can consider increment flush interval\n-# to get better performance, but you need to pay more time on bookie\n-# server restart after failure.\n-#\n-# flushInterval=100\n+# If we should flush the journal when journal queue is empty\n+# journalFlushWhenQueueEmpty=false\n \n-# Interval to watch whether bookie is dead or not, in milliseconds\n-#\n-# bookieDeathWatchInterval=1000\n+#############################################################################\n+## Ledger storage settings\n+#############################################################################\n \n-## zookeeper client settings\n+# Ledger storage implementation class\n+# ledgerStorageClass=org.apache.bookkeeper.bookie.SortedLedgerStorage\n \n-# A list of one of more servers on which zookeeper is running.\n-# The server list can be comma separated values, for example:\n-# zkServers=zk1:2181,zk2:2181,zk3:2181\n-zkServers=localhost:2181\n-# ZooKeeper client session timeout in milliseconds\n-# Bookie server will exit if it received SESSION_EXPIRED because it\n-# was partitioned off from ZooKeeper for more than the session timeout\n-# JVM garbage collection, disk I/O will cause SESSION_EXPIRED.\n-# Increment this value could help avoiding this issue\n-zkTimeout=10000\n-# Set ACLs on every node written on ZooKeeper, this way only allowed users\n-# will be able to read and write BookKeeper metadata stored on ZooKeeper.\n-# In order to make ACLs work you need to setup ZooKeeper JAAS authentication\n-# all the Bookies and Client need to share the same user, and this is usually\n-# done using Kerberos authentication. See ZooKeeper documentation\n-zkEnableSecurity=false\n+# Directory Bookkeeper outputs ledger snapshots\n+# could define multi directories to store snapshots, separated by ','\n+# For example:\n+# ledgerDirectories=/tmp/bk1-data,/tmp/bk2-data\n+#\n+# Ideally ledger dirs and journal dir are each in a differet device,\n+# which reduce the contention between random i/o and sequential write.\n+# It is possible to run with a single disk, but performance will be significantly lower.\n+ledgerDirectories=/tmp/bk-data\n \n-## NIO Server settings\n+# Interval at which the auditor will do a check of all ledgers in the cluster.\n+# By default this runs once a week. The interval is set in seconds.\n+# To disable the periodic check completely, set this to 0.\n+# Note that periodic checking will put extra load on the cluster, so it should\n+# not be run more frequently than once a day.\n+# auditorPeriodicCheckInterval=604800\n \n-# This settings is used to enabled/disabled Nagle's algorithm, which is a means of\n-# improving the efficiency of TCP/IP networks by reducing the number of packets\n-# that need to be sent over the network.\n-# If you are sending many small messages, such that more than one can fit in\n-# a single IP packet, setting server.tcpnodelay to false to enable Nagle algorithm\n-# can provide better performance.\n-# Default value is true.\n-#\n-# serverTcpNoDelay=true\n+# Whether sorted-ledger storage enabled (default true)\n+# sortedLedgerStorageEnabled=ture\n+\n+# The skip list data size limitation (default 64MB) in EntryMemTable\n+# skipListSizeLimit=67108864L\n \n-## ledger cache settings\n+#############################################################################\n+## Ledger cache settings\n+#############################################################################\n \n # Max number of ledger index files could be opened in bookie server\n # If number of ledger index files reaches this limitation, bookie\n@@ -249,119 +371,172 @@ zkEnableSecurity=false\n # the limitation of number of index pages.\n # pageLimit=-1\n \n-#If all ledger directories configured are full, then support only read requests for clients.\n-#If \"readOnlyModeEnabled=true\" then on all ledger disks full, bookie will be converted\n-#to read-only mode and serve only read requests. Otherwise the bookie will be shutdown.\n-#By default this will be disabled.\n-#readOnlyModeEnabled=false\n-\n-#For each ledger dir, maximum disk space which can be used.\n-#Default is 0.95f. i.e. 95% of disk can be used at most after which nothing will\n-#be written to that partition. If all ledger dir partions are full, then bookie\n-#will turn to readonly mode if 'readOnlyModeEnabled=true' is set, else it will\n-#shutdown.\n-#Valid values should be in between 0 and 1 (exclusive). \n-#diskUsageThreshold=0.95\n-\n-#Set the disk free space low water mark threshold. Disk is considered full when \n-#usage threshold is exceeded. Disk returns back to non-full state when usage is \n-#below low water mark threshold. This prevents it from going back and forth \n-#between these states frequently when concurrent writes and compaction are \n-#happening. This also prevent bookie from switching frequently between \n-#read-only and read-writes states in the same cases.\n-#diskUsageLwmThreshold=0.90\n-\n-#Disk check interval in milli seconds, interval to check the ledger dirs usage.\n-#Default is 10000\n-#diskCheckInterval=10000\n+#############################################################################\n+## Ledger manager settings\n+#############################################################################\n \n-# Interval at which the auditor will do a check of all ledgers in the cluster.\n-# By default this runs once a week. The interval is set in seconds.\n-# To disable the periodic check completely, set this to 0.\n-# Note that periodic checking will put extra load on the cluster, so it should\n-# not be run more frequently than once a day.\n-#auditorPeriodicCheckInterval=604800\n+# Ledger Manager Class\n+# What kind of ledger manager is used to manage how ledgers are stored, managed\n+# and garbage collected. Try to read 'BookKeeper Internals' for detail info.\n+# ledgerManagerType=flat\n \n-# The interval between auditor bookie checks.\n-# The auditor bookie check, checks ledger metadata to see which bookies should\n-# contain entries for each ledger. If a bookie which should contain entries is\n-# unavailable, then the ledger containing that entry is marked for recovery.\n-# Setting this to 0 disabled the periodic check. Bookie checks will still\n-# run when a bookie fails.\n-# The interval is specified in seconds.\n-#auditorPeriodicBookieCheckInterval=86400\n+# Root Zookeeper path to store ledger metadata\n+# This parameter is used by zookeeper-based ledger manager as a root znode to\n+# store all ledgers.\n+# zkLedgersRootPath=/ledgers\n+\n+#############################################################################\n+## Entry log settings\n+#############################################################################\n+\n+# Max file size of entry logger, in bytes\n+# A new entry log file will be created when the old one reaches the file size limitation\n+# logSizeLimit=2147483648\n+\n+# Enable/Disable entry logger preallocation\n+# entryLogFilePreallocationEnabled=true\n \n # Entry log flush interval in bytes.\n # Default is 0. 0 or less disables this feature and effectively flush\n # happens on log rotation.\n # Flushing in smaller chunks but more frequently reduces spikes in disk\n # I/O. Flushing too frequently may also affect performance negatively.\n-#flushEntrylogBytes=0\n-\n-# How long to wait, in seconds, before starting auto recovery of a lost bookie\n-#lostBookieRecoveryDelay=0\n-\n-# number of threads that should handle write requests. if zero, the writes would\n-# be handled by netty threads directly.\n-# numAddWorkerThreads=1\n-\n-# number of threads that should handle read requests. if zero, the reads would\n-# be handled by netty threads directly.\n-# numReadWorkerThreads=1\n+# flushEntrylogBytes=0\n \n # The number of bytes we should use as capacity for BufferedReadChannel. Default is 512 bytes.\n # readBufferSizeBytes=512\n \n # The number of bytes used as capacity for the write buffer. Default is 64KB.\n # writeBufferSizeBytes=65536\n \n-# Whether the bookie should use its hostname to register with the\n-# co-ordination service(eg: zookeeper service).\n-# When false, bookie will use its ipaddress for the registration.\n-# Defaults to false.\n-#useHostNameAsBookieID=false\n+#############################################################################\n+## Entry log compaction settings\n+#############################################################################\n \n-# Auto-replication\n-# The grace period, in seconds, that the replication worker waits before fencing and\n-# replicating a ledger fragment that's still being written to upon bookie failure.\n-#openLedgerRereplicationGracePeriod=30\n+# Set the rate at which compaction will readd entries. The unit is adds per second.\n+# compactionRate=1000\n \n-# Whether statistics are enabled\n-#enableStatistics=true\n+# Threshold of minor compaction\n+# For those entry log files whose remaining size percentage reaches below\n+# this threshold will be compacted in a minor compaction.\n+# If it is set to less than zero, the minor compaction is disabled.\n+# minorCompactionThreshold=0.2\n \n-# Stats Provider Class (if statistics are enabled)\n-#statsProviderClass=org.apache.bookkeeper.stats.CodahaleMetricsProvider\n+# Interval to run minor compaction, in seconds\n+# If it is set to less than zero, the minor compaction is disabled.\n+# minorCompactionInterval=3600\n \n-# SSL Provider (JDK or OpenSSL)\n-# sslProvider=OpenSSL\n+# Set the maximum number of entries which can be compacted without flushing.\n+# When compacting, the entries are written to the entrylog and the new offsets\n+# are cached in memory. Once the entrylog is flushed the index is updated with\n+# the new offsets. This parameter controls the number of entries added to the\n+# entrylog before a flush is forced. A higher value for this parameter means\n+# more memory will be used for offsets. Each offset consists of 3 longs.\n+# This parameter should _not_ be modified unless you know what you're doing.\n+# The default is 100,000.\n+# compactionMaxOutstandingRequests=100000\n \n-# The path to class that provides security.\n-#sslProviderFactoryClass=org.apache.bookkeeper.security.SSLContextFactory\n+# Threshold of major compaction\n+# For those entry log files whose remaining size percentage reaches below\n+# this threshold will be compacted in a major compaction.\n+# Those entry log files whose remaining size percentage is still\n+# higher than the threshold will never be compacted.\n+# If it is set to less than zero, the minor compaction is disabled.\n+# majorCompactionThreshold=0.8\n \n-# Type of security used by server\n-#sslClientAuthentication=true\n+# Interval to run major compaction, in seconds\n+# If it is set to less than zero, the major compaction is disabled.\n+# majorCompactionInterval=86400\n \n-# Bookie Keystore type\n-#sslKeyStoreType=JKS\n+# Throttle compaction by bytes or by entries.\n+# isThrottleByBytes=false\n \n-# Bookie Keystore location (path)\n-#sslKeyStore=\n+# Set the rate at which compaction will readd entries. The unit is adds per second.\n+# compactionRateByEntries=1000\n \n-# Bookie Keystore password path, if the keystore is protected by a password\n-#sslKeyStorePasswordPath=\n+# Set the rate at which compaction will readd entries. The unit is bytes added per second.\n+# compactionRateByBytes=1000000\n \n-# Bookie Truststore type\n-#sslTrustStoreType=\n+#############################################################################\n+## Statistics\n+#############################################################################\n \n-# Bookie Truststore location (path)\n-#sslTrustStore=\n+# Whether statistics are enabled\n+# enableStatistics=true\n \n-# Bookie Truststore password path, if the truststore is protected by a password\n-#sslTrustStorePasswordPath=\n+# Stats Provider Class (if statistics are enabled)\n+#statsProviderClass=org.apache.bookkeeper.stats.CodahaleMetricsProvider\n \n-# Minimum safe Usable size to be available in index directory for Bookie to create Index File while replaying \n-# journal at the time of Bookie Start in Readonly Mode (in bytes)\n-# minUsableSizeForIndexFileCreation=1073741824\n+#############################################################################\n+## Read-only mode support\n+#############################################################################\n+\n+# If all ledger directories configured are full, then support only read requests for clients.\n+# If \"readOnlyModeEnabled=true\" then on all ledger disks full, bookie will be converted\n+# to read-only mode and serve only read requests. Otherwise the bookie will be shutdown.\n+# By default this will be disabled.\n+# readOnlyModeEnabled=false\n+\n+# Whether the bookie is force started in read only mode or not\n+# forceReadOnlyBookie=false\n+\n+#############################################################################\n+## Disk utilization\n+#############################################################################\n+\n+# For each ledger dir, maximum disk space which can be used.\n+# Default is 0.95f. i.e. 95% of disk can be used at most after which nothing will\n+# be written to that partition. If all ledger dir partions are full, then bookie\n+# will turn to readonly mode if 'readOnlyModeEnabled=true' is set, else it will\n+# shutdown.\n+# Valid values should be in between 0 and 1 (exclusive).\n+# diskUsageThreshold=0.95\n+\n+# The disk free space low water mark threshold.\n+# Disk is considered full when usage threshold is exceeded.\n+# Disk returns back to non-full state when usage is below low water mark threshold.\n+# This prevents it from going back and forth between these states frequently\n+# when concurrent writes and compaction are happening. This also prevent bookie from\n+# switching frequently between read-only and read-writes states in the same cases.\n+# diskUsageWarnThreshold=0.95\n+\n+# Set the disk free space low water mark threshold. Disk is considered full when\n+# usage threshold is exceeded. Disk returns back to non-full state when usage is\n+# below low water mark threshold. This prevents it from going back and forth\n+# between these states frequently when concurrent writes and compaction are\n+# happening. This also prevent bookie from switching frequently between\n+# read-only and read-writes states in the same cases.\n+# diskUsageLwmThreshold=0.90\n+\n+# Disk check interval in milli seconds, interval to check the ledger dirs usage.\n+# Default is 10000\n+# diskCheckInterval=10000\n+\n+#############################################################################\n+## ZooKeeper parameters\n+#############################################################################\n+\n+# A list of one of more servers on which Zookeeper is running.\n+# The server list can be comma separated values, for example:\n+# zkServers=zk1:2181,zk2:2181,zk3:2181\n+zkServers=localhost:2181\n \n-# Configure the Bookie to allow/disallow multiple ledger/index/journal directories in the same filesystem diskpartition\n-# allowMultipleDirsUnderSameDiskPartition=false\n+# ZooKeeper client session timeout in milliseconds\n+# Bookie server will exit if it received SESSION_EXPIRED because it\n+# was partitioned off from ZooKeeper for more than the session timeout\n+# JVM garbage collection, disk I/O will cause SESSION_EXPIRED.\n+# Increment this value could help avoiding this issue\n+zkTimeout=10000\n+\n+# The Zookeeper client backoff retry start time in millis.\n+# zkRetryBackoffStartMs=1000\n+\n+# The Zookeeper client backoff retry max time in millis.\n+# zkRetryBackoffMaxMs=10000\n+\n+# Set ACLs on every node written on ZooKeeper, this way only allowed users\n+# will be able to read and write BookKeeper metadata stored on ZooKeeper.\n+# In order to make ACLs work you need to setup ZooKeeper JAAS authentication\n+# all the bookies and Client need to share the same user, and this is usually\n+# done using Kerberos authentication. See ZooKeeper documentation\n+zkEnableSecurity=false"},{"sha":"b2dfd52079ff8ad567ff479d8f9f029f432b5af4","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/8b895d3087130107f4b5714560e7493349c10f5d/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fconf%2FServerConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/8b895d3087130107f4b5714560e7493349c10f5d/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fconf%2FServerConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fconf%2FServerConfiguration.java?ref=8b895d3087130107f4b5714560e7493349c10f5d","patch":"@@ -149,7 +149,7 @@ public class ServerConfiguration extends AbstractConfiguration {\n \n     // Bookie auth provider factory class name\n     protected final static String BOOKIE_AUTH_PROVIDER_FACTORY_CLASS = \"bookieAuthProviderFactoryClass\";\n-    \n+\n     protected final static String MIN_USABLESIZE_FOR_INDEXFILE_CREATION = \"minUsableSizeForIndexFileCreation\";\n \n     protected final static String ALLOW_MULTIPLEDIRS_UNDER_SAME_DISKPARTITION = \"allowMultipleDirsUnderSameDiskPartition\";\n@@ -1345,7 +1345,7 @@ public int getSkipListArenaChunkSize() {\n     }\n \n     /**\n-     * Set the number of bytes w used as chunk allocation for\n+     * Set the number of bytes we used as chunk allocation for\n      * org.apache.bookkeeper.bookie.SkipListArena\n      *\n      * @param size chunk size."},{"sha":"6a2355d087659f84c938228ce533967b4a22e849","filename":"site/_data/config/bk_server.yaml","status":"modified","additions":148,"deletions":5,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/8b895d3087130107f4b5714560e7493349c10f5d/site%2F_data%2Fconfig%2Fbk_server.yaml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/8b895d3087130107f4b5714560e7493349c10f5d/site%2F_data%2Fconfig%2Fbk_server.yaml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/site%2F_data%2Fconfig%2Fbk_server.yaml?ref=8b895d3087130107f4b5714560e7493349c10f5d","patch":"@@ -4,12 +4,25 @@ groups:\n   - param: bookiePort\n     description: The port that the bookie server listens on.\n     default: 3181\n+  - param: journalDirectories\n+    description: |\n+      The directories to which Bookkeeper outputs its write-ahead log (WAL).  Could define multi directories to store write head logs, separated by ','.\n+      For example:\n+        journalDirectories=/tmp/bk-journal1,/tmp/bk-journal2\n+      If journalDirectories is set, bookies will skip journalDirectory and use this setting directory.\n+    default: /tmp/bk-journal\n   - param: journalDirectory\n     description: The directory to which Bookkeeper outputs its write-ahead log (WAL).\n     default: /tmp/bk-txn\n+  - param: allowMultipleDirsUnderSameDiskPartition\n+    description: Configure the bookie to allow/disallow multiple ledger/index/journal directories in the same filesystem disk partition\n+    default: false\n   - param: indexDirectories\n     description: The directories in which index files are stored. If not specified, the value of [`ledgerDirectories`](#ledgerDirectories) will be used.\n     default: /tmp/bk-data\n+  - param: minUsableSizeForIndexFileCreation\n+    description: Minimum safe usable size to be available in index directory for bookie to create index file while replaying journal at the time of bookie start in readonly mode (in bytes)\n+    default: 1073741824\n   - param: listeningInterface\n     description: The network interface that the bookie should listen on. If not set, the bookie will listen on all interfaces.\n     default: eth0\n@@ -35,9 +48,24 @@ groups:\n   - param: explicitLacInterval\n     description: Interval between sending an explicit LAC in seconds\n     default: 1\n-  - param: lostBookieRecoveryDelay\n-    description: How long to wait, in seconds, before starting autorecovery of a lost bookie.\n-    default: 0\n+  - param: allowEphemeralPorts\n+    description: Whether the bookie is allowed to use an ephemeral port (port 0) as its server port. By default, an ephemeral port is not allowed. Using an ephemeral port as the service port usually indicates a configuration error. However, in unit tests, using an ephemeral port will address port conflict problems and allow running tests in parallel.\n+    default: 'false'\n+  - param: enableLocalTransport\n+    description: Whether allow the bookie to listen for BookKeeper clients executed on the local JVM.\n+    default: 'false'\n+  - param: disableServerSocketBind\n+    description: Whether allow the bookie to disable bind on network interfaces, this bookie will be available only to BookKeeper clients executed on the local JVM.\n+    default: 'false'\n+  - param: skipListArenaChunkSize\n+    description: The number of bytes we should use as chunk allocation for org.apache.bookkeeper.bookie.SkipListArena\n+    default: 4194304\n+  - param: skipListArenaMaxAllocSize\n+    description: The max size we should allocate from the skiplist arena. Allocations larger than this should be allocated directly by the VM to avoid fragmentation.\n+    default: 131072\n+  - param: bookieAuthProviderFactoryClass\n+    description: The bookie authentication provider factory class name. If this is null, no authentication will take place.\n+    default: null\n \n - name: Garbage collection settings\n   params:\n@@ -53,6 +81,56 @@ groups:\n   - param: numReadWorkerThreads\n     description: The umber of threads that handle read requests. If 0, reads are handled by [Netty threads](http://netty.io/wiki/thread-model.html) directly.\n     default: 1\n+  - param: isForceGCAllowWhenNoSpace\n+    description: Whether force compaction is allowed when the disk is full or almost full. Forcing GC may get some space back, but may also fill up disk space more quickly. This is because new log files are created before GC, while old garbage log files are deleted after GC.\n+    default: 'false'\n+\n+- name: TSL settings\n+  params:\n+  - param: tslProvider\n+    description: TSL Provider (JDK or OpenSSL)\n+    default: OpenSSL\n+  - param: tslProviderFactoryClass\n+    description: The path to the class that provides security.\n+    default: org.apache.bookkeeper.security.SSLContextFactory\n+  - param: tslClientAuthentication\n+    description: Type of security used by server.\n+    default: 'true'\n+  - param: tslKeyStoreType\n+    description: Bookie Keystore type.\n+    default: JKS\n+  - param: tslKeyStore\n+    description: Bookie Keystore location (path).\n+    default: null\n+  - param: tslKeyStore\n+    description: Bookie Keystore location (path).\n+    default: null\n+  - param: tslKeyStorePasswordPath\n+    description: Bookie Keystore password path, if the keystore is protected by a password.\n+    default: null\n+  - param: tslTrustStoreType\n+    description: Bookie Truststore type.\n+    default: null\n+  - param: tslTrustStore\n+    description: Bookie Truststore location (path).\n+    default: null\n+  - param: tslTrustStorePasswordPath\n+    description: Bookie Truststore password path, if the truststore is protected by a password.\n+    default: null\n+\n+\n+- name: Long poll request parameter settings\n+  params:\n+  - param: numLongPollWorkerThreads\n+    description: The number of threads that should handle long poll requests.\n+    default: 10\n+  - param: requestTimerTickDurationMs\n+    description: The tick duration in milliseconds for long poll requests.\n+    default: 10\n+  - param: requestTimerNumTicks\n+    description: The number of ticks per wheel for the long poll request timer.\n+    default: 1024\n+\n \n - name: AutoRecovery settings\n   params:\n@@ -65,6 +143,12 @@ groups:\n   - param: openLedgerRereplicationGracePeriod\n     description: The grace period, in seconds, that the replication worker waits before fencing and replicating a ledger fragment that's still being written to upon bookie failure.\n     default: 30\n+  - param: autoRecoveryDaemonEnabled\n+    description: Whether the bookie itself can start auto-recovery service also or not.\n+    default: false\n+  - param: lostBookieRecoveryDelay\n+    description: How long to wait, in seconds, before starting autorecovery of a lost bookie.\n+    default: 0\n \n - name: Netty server settings\n   params:\n@@ -74,9 +158,37 @@ groups:\n \n       If you are sending many small messages, such that more than one can fit in a single IP packet, setting server.tcpnodelay to false to enable Nagle algorithm can provide better performance.\n     default: 'true'\n+  - param: serverSockKeepalive\n+    description: This setting is used to send keep-alive messages on connection-oriented sockets.\n+    default: 'true'\n+  - param: serverTcpLinger\n+    description: The socket linger timeout on close. When enabled, a close or shutdown will not return until all queued messages for the socket have been successfully sent or the linger timeout has been reached. Otherwise, the call returns immediately and the closing is done in the background.\n+    default: 0\n+  - param: byteBufAllocatorSizeInitial\n+    description: The Recv ByteBuf allocator initial buf size.\n+    default: 65536\n+  - param: byteBufAllocatorSizeMin\n+    description: The Recv ByteBuf allocator min buf size.\n+    default: 65536\n+  - param: byteBufAllocatorSizeMax\n+    description: The Recv ByteBuf allocator max buf size.\n+    default: 1048576\n \n - name: Journal settings\n   params:\n+  - param: journalFormatVersionToWrite\n+    description: |\n+      The journal format version to write.\n+      Available formats are 1-5:\n+       1: no header\n+       2: a header section was added\n+       3: ledger key was introduced\n+       4: fencing key was introduced\n+       5: expanding header to 512 and padding writes to align sector size configured by `journalAlignmentSize`\n+\n+      By default, it is `4`. If you'd like to enable `padding-writes` feature, you can set journal version to `5`.\n+      You can disable `padding-writes` by setting journal version back to `4`. This feature is available in 4.5.0 and onward versions.\n+    default: 4\n   - param: journalMaxSizeMB\n     description: Max file size of journal file, in mega bytes. A new journal file will be created when the old one reaches the file size limitation.\n     default: 2048\n@@ -107,6 +219,15 @@ groups:\n   - param: numJournalCallbackThreads\n     description: The number of threads that should handle journal callbacks.\n     default: 1\n+  - param: journalAlignmentSize\n+    description: All the journal writes and commits should be aligned to given size. If not, zeros will be padded to align to given size.\n+    default: 512\n+  - param: journalBufferedEntriesThreshold\n+    description: Maximum entries to buffer to impose on a journal write to achieve grouping.\n+    default: 0\n+  - param: journalFlushWhenQueueEmpty\n+    description: If we should flush the journal when journal queue is empty.\n+    default: 'false'\n \n - name: Ledger storage settings\n   params:\n@@ -122,6 +243,12 @@ groups:\n \n       Set this to 0 to disable the periodic check completely. Note that periodic checking will put extra load on the cluster, so it should not be run more frequently than once a day.\n     default: 604800\n+  - param: sortedLedgerStorageEnabled\n+    description: Whether sorted-ledger storage enabled (default true)\n+    default: 'true'\n+  - param: skipListSizeLimit\n+    description: The skip list data size limitation (default 64MB) in EntryMemTable\n+    default: 67108864L\n \n - name: Ledger cache settings\n   params:\n@@ -144,7 +271,7 @@ groups:\n     description: The ledger manager type, which defines how ledgers are stored, managed, and garbage collected. See the [Ledger Manager](../../getting-started/concepts#ledger-manager) guide for more details.\n     default: flat\n   - param: zkLedgersRootPath\n-    description: Root zookeeper path to store ledger metadata. This parameter is used by zookeeper-based ledger manager as a root znode to store all ledgers.\n+    description: Root Zookeeper path to store ledger metadata. This parameter is used by zookeeper-based ledger manager as a root znode to store all ledgers.\n     default: /ledgers\n \n - name: Entry log settings\n@@ -209,6 +336,10 @@ groups:\n   - param: readOnlyModeEnabled\n     description: If all ledger directories configured are full, then support only read requests for clients. If \"readOnlyModeEnabled=true\" then on all ledger disks full, bookie will be converted to read-only mode and serve only read requests. Otherwise the bookie will be shutdown. By default this will be disabled.\n     default: 'false'\n+  - param: forceReadOnlyBookie\n+    description: Whether the bookie is force started in read only mode or not.\n+    default: 'false'\n+\n \n - name: Disk utilization\n   params:\n@@ -220,6 +351,9 @@ groups:\n     description: |\n       Set the disk free space low water mark threshold. Disk is considered full when usage threshold is exceeded. Disk returns back to non-full state when usage is  below low water mark threshold. This prevents it from going back and forth between these states frequently when concurrent writes and compaction are happening. This also prevent bookie from switching frequently between read-only and read-writes states in the same cases.\n     default: 0.90\n+  - param: diskUsageWarnThreshold\n+    description: The disk free space low water mark threshold. Disk is considered full when usage threshold is exceeded. Disk returns back to non-full state when usage is below low water mark threshold. This prevents it from going back and forth between these states frequently when concurrent writes and compaction are happening. This also prevent bookie from switching frequently between read-only and read-writes states in the same cases.\n+    default: 0.95\n   - param: diskCheckInterval\n     description: Disk check interval in milliseconds. Interval to check the ledger dirs usage.\n     default: 10000\n@@ -228,8 +362,17 @@ groups:\n   params:\n   - param: zkServers\n     description: |\n-      A list of one of more servers on which zookeeper is running. The server list can be comma separated values, for example `zkServers=zk1:2181,zk2:2181,zk3:2181`.\n+      A list of one of more servers on which Zookeeper is running. The server list can be comma separated values, for example `zkServers=zk1:2181,zk2:2181,zk3:2181`.\n     default: \"localhost:2181\"\n   - param: zkTimeout\n     description: ZooKeeper client session timeout in milliseconds. Bookie server will exit if it received SESSION_EXPIRED because it was partitioned off from ZooKeeper for more than the session timeout  JVM garbage collection, disk I/O will cause SESSION_EXPIRED. Increment this value could help avoiding this issue.\n     default: 10\n+  - param: zkRetryBackoffStartMs\n+    description: The Zookeeper client backoff retry start time in millis.\n+    default: 1000\n+  - param: zkRetryBackoffMaxMs\n+    description: The Zookeeper client backoff retry max time in millis.\n+    default: 10000\n+  - param: zkEnableSecurity\n+    description: Set ACLs on every node written on ZooKeeper, this way only allowed users will be able to read and write BookKeeper metadata stored on ZooKeeper. In order to make ACLs work you need to setup ZooKeeper JAAS authentication all the bookies and Client need to share the same user, and this is usually done using Kerberos authentication. See ZooKeeper documentation\n+    default: 'false'"}]}