{"sha":"12bb13cdb1feca0fa6739f8e6287c326fb5fdb94","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjEyYmIxM2NkYjFmZWNhMGZhNjczOWY4ZTYyODdjMzI2ZmI1ZmRiOTQ=","commit":{"author":{"name":"eolivelli","email":"eolivelli@apache.org","date":"2017-04-11T18:19:22Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-04-11T18:19:22Z"},"message":"BOOKKEEPER-1022: Make BookKeeperAdmin implement AutoCloseable\n\nAuthor: eolivelli <eolivelli@apache.org>\n\nReviewers: Robert (Bobby) Evans <None>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>\n\nCloses #128 from eolivelli/BOOKKEEPER-1022-bkadmin-autocloseable","tree":{"sha":"defd45728ea7206bf4b275c23d70dd62b86d25f9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/defd45728ea7206bf4b275c23d70dd62b86d25f9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94/comments","author":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"0f155f38bb48d23aab4ac8489f7908925b8f0cca","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/0f155f38bb48d23aab4ac8489f7908925b8f0cca","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/0f155f38bb48d23aab4ac8489f7908925b8f0cca"}],"stats":{"total":106,"additions":54,"deletions":52},"files":[{"sha":"e7e9cf49176632aa86b0f3aeaa3eb3b2a7d513ac","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeperAdmin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeperAdmin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeperAdmin.java?ref=12bb13cdb1feca0fa6739f8e6287c326fb5fdb94","patch":"@@ -67,7 +67,7 @@\n /**\n  * Admin client for BookKeeper clusters\n  */\n-public class BookKeeperAdmin {\n+public class BookKeeperAdmin implements AutoCloseable {\n     private final static Logger LOG = LoggerFactory.getLogger(BookKeeperAdmin.class);\n     // ZK client instance\n     private ZooKeeper zk;\n@@ -175,6 +175,7 @@ public BookKeeperAdmin(final BookKeeper bkc) {\n      *             if there is an error shutting down the clients that this\n      *             class uses.\n      */\n+    @Override\n     public void close() throws InterruptedException, BKException {\n         if (ownsBK) {\n             bkc.close();"},{"sha":"d781d5de7c1e31c825ffbe7147676de416ee7c53","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperCloseTest.java","status":"modified","additions":52,"deletions":51,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeperCloseTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/12bb13cdb1feca0fa6739f8e6287c326fb5fdb94/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeperCloseTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/bookkeeper-server%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fbookkeeper%2Fclient%2FBookKeeperCloseTest.java?ref=12bb13cdb1feca0fa6739f8e6287c326fb5fdb94","patch":"@@ -467,60 +467,61 @@ Set<LedgerFragment> getResult(int time, TimeUnit unit) throws Exception {\n     @Test(timeout = 60000)\n     public void testBookKeeperAdmin() throws Exception {\n         BookKeeper bk = new BookKeeper(baseClientConf, zkc);\n-        BookKeeperAdmin bkadmin = new BookKeeperAdmin(bk);\n-\n-        LOG.info(\"Create ledger and add entries to it\");\n-        LedgerHandle lh1 = createLedgerWithEntries(bk, 100);\n-        LedgerHandle lh2 = createLedgerWithEntries(bk, 100);\n-        LedgerHandle lh3 = createLedgerWithEntries(bk, 100);\n-        lh3.close();\n-\n-        BookieSocketAddress bookieToKill = getBookie(0);\n-        killBookie(bookieToKill);\n-        startNewBookie();\n-        BookieSocketAddress newBookie = getBookie(2);\n-\n-        CheckerCb checkercb = new CheckerCb();\n-        LedgerChecker lc = new LedgerChecker(bk);\n-        lc.checkLedger(lh3, checkercb);\n-        assertEquals(\"Should have completed\",\n-                     checkercb.getRc(30, TimeUnit.SECONDS), BKException.Code.OK);\n-        assertEquals(\"Should have a missing fragment\",\n-                     1, checkercb.getResult(30, TimeUnit.SECONDS).size());\n-\n-        // make sure a bookie in each quorum is slow\n-        restartBookieSlow();\n-        restartBookieSlow();\n-\n-        bk.close();\n-\n-        try {\n-            bkadmin.openLedger(lh1.getId());\n-            fail(\"Shouldn't be able to open with a closed client\");\n-        } catch (BKException.BKClientClosedException cce) {\n-            // correct behaviour\n-        }\n+        try (BookKeeperAdmin bkadmin = new BookKeeperAdmin(bk);) {\n+\n+            LOG.info(\"Create ledger and add entries to it\");\n+            LedgerHandle lh1 = createLedgerWithEntries(bk, 100);\n+            LedgerHandle lh2 = createLedgerWithEntries(bk, 100);\n+            LedgerHandle lh3 = createLedgerWithEntries(bk, 100);\n+            lh3.close();\n+\n+            BookieSocketAddress bookieToKill = getBookie(0);\n+            killBookie(bookieToKill);\n+            startNewBookie();\n+            BookieSocketAddress newBookie = getBookie(2);\n+\n+            CheckerCb checkercb = new CheckerCb();\n+            LedgerChecker lc = new LedgerChecker(bk);\n+            lc.checkLedger(lh3, checkercb);\n+            assertEquals(\"Should have completed\",\n+                         checkercb.getRc(30, TimeUnit.SECONDS), BKException.Code.OK);\n+            assertEquals(\"Should have a missing fragment\",\n+                         1, checkercb.getResult(30, TimeUnit.SECONDS).size());\n+\n+            // make sure a bookie in each quorum is slow\n+            restartBookieSlow();\n+            restartBookieSlow();\n+\n+            bk.close();\n+\n+            try {\n+                bkadmin.openLedger(lh1.getId());\n+                fail(\"Shouldn't be able to open with a closed client\");\n+            } catch (BKException.BKClientClosedException cce) {\n+                // correct behaviour\n+            }\n \n-        try {\n-            bkadmin.openLedgerNoRecovery(lh1.getId());\n-            fail(\"Shouldn't be able to open with a closed client\");\n-        } catch (BKException.BKClientClosedException cce) {\n-            // correct behaviour\n-        }\n+            try {\n+                bkadmin.openLedgerNoRecovery(lh1.getId());\n+                fail(\"Shouldn't be able to open with a closed client\");\n+            } catch (BKException.BKClientClosedException cce) {\n+                // correct behaviour\n+            }\n \n-        try {\n-            bkadmin.recoverBookieData(bookieToKill, newBookie);\n-            fail(\"Shouldn't be able to recover with a closed client\");\n-        } catch (BKException.BKClientClosedException cce) {\n-            // correct behaviour\n-        }\n+            try {\n+                bkadmin.recoverBookieData(bookieToKill, newBookie);\n+                fail(\"Shouldn't be able to recover with a closed client\");\n+            } catch (BKException.BKClientClosedException cce) {\n+                // correct behaviour\n+            }\n \n-        try {\n-            bkadmin.replicateLedgerFragment(lh3,\n-                    checkercb.getResult(10, TimeUnit.SECONDS).iterator().next(), newBookie);\n-            fail(\"Shouldn't be able to replicate with a closed client\");\n-        } catch (BKException.BKClientClosedException cce) {\n-            // correct behaviour\n+            try {\n+                bkadmin.replicateLedgerFragment(lh3,\n+                        checkercb.getResult(10, TimeUnit.SECONDS).iterator().next(), newBookie);\n+                fail(\"Shouldn't be able to replicate with a closed client\");\n+            } catch (BKException.BKClientClosedException cce) {\n+                // correct behaviour\n+            }\n         }\n     }\n "}]}