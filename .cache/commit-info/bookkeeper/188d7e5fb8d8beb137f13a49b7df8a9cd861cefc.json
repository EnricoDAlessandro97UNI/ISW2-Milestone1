{"sha":"188d7e5fb8d8beb137f13a49b7df8a9cd861cefc","node_id":"MDY6Q29tbWl0NDc4NTkyNTI2OjE4OGQ3ZTVmYjhkOGJlYjEzN2YxM2E0OWI3ZGY4YTljZDg2MWNlZmM=","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-08-07T18:32:22Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-08-07T18:32:22Z"},"message":"ISSUE #366: [DOCUMENTATION] LedgerHandleAdv\n\nDescriptions of the changes in this PR:\n\n- add documentation about LedgerHandleAdv\n- update overview\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>\n\nThis closes #401 from sijie/issue_366, closes #366","tree":{"sha":"2e426d838154b7a51094524872e2c66e90b8ed5f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/trees/2e426d838154b7a51094524872e2c66e90b8ed5f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/git/commits/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"ae1ba84f0935fdac43e7dd500647a70b2c4ca7f3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/commits/ae1ba84f0935fdac43e7dd500647a70b2c4ca7f3","html_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/commit/ae1ba84f0935fdac43e7dd500647a70b2c4ca7f3"}],"stats":{"total":95,"additions":91,"deletions":4},"files":[{"sha":"0138070579f5875308a03d94c6240dddbc8d8007","filename":"site/_data/sidebar.yaml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc/site%2F_data%2Fsidebar.yaml","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc/site%2F_data%2Fsidebar.yaml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/site%2F_data%2Fsidebar.yaml?ref=188d7e5fb8d8beb137f13a49b7df8a9cd861cefc","patch":"@@ -39,6 +39,8 @@ groups:\n     endpoint: overview\n   - name: Ledger API\n     endpoint: ledger-api\n+  - name: Advanced Ledger API\n+    endpoint: ledger-adv-api\n   - name: DistributedLog\n     endpoint: distributedlog-api\n - name: Development"},{"sha":"f46950dd98428323dfe691135e333a543ffecf80","filename":"site/docs/latest/api/ledger-adv-api.md","status":"added","additions":82,"deletions":0,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc/site%2Fdocs%2Flatest%2Fapi%2Fledger-adv-api.md","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc/site%2Fdocs%2Flatest%2Fapi%2Fledger-adv-api.md","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/site%2Fdocs%2Flatest%2Fapi%2Fledger-adv-api.md?ref=188d7e5fb8d8beb137f13a49b7df8a9cd861cefc","patch":"@@ -0,0 +1,82 @@\n+---\n+title: The Advanced Ledger API\n+---\n+\n+In release `4.5.0`, Apache BookKeeper introduces a few advanced API for advanced usage.\n+This sections covers these advanced APIs.\n+\n+> Before learn the advanced API, please read [Ledger API](../ledger-api) first.\n+\n+## LedgerHandleAdv\n+\n+[`LedgerHandleAdv`](../javadoc/org/apache/bookkeeper/client/LedgerHandleAdv) is an advanced extension of [`LedgerHandle`](../javadoc/org/apache/bookkeeper/client/LedgerHandle).\n+It allows user passing in an `entryId` when adding an entry.\n+\n+### Creating advanced ledgers\n+\n+Here's an exmaple:\n+\n+```java\n+byte[] passwd = \"some-passwd\".getBytes();\n+LedgerHandleAdv handle = bkClient.createLedgerAdv(\n+    3, 3, 2, // replica settings\n+    DigestType.CRC32,\n+    passwd);\n+```\n+\n+You can also create advanced ledgers asynchronously.\n+\n+```java\n+class LedgerCreationCallback implements AsyncCallback.CreateCallback {\n+    public void createComplete(int returnCode, LedgerHandle handle, Object ctx) {\n+        System.out.println(\"Ledger successfully created\");\n+    }\n+}\n+client.asyncCreateLedgerAdv(\n+        3, // ensemble size\n+        3, // write quorum size\n+        2, // ack quorum size\n+        BookKeeper.DigestType.CRC32,\n+        password,\n+        new LedgerCreationCallback(),\n+        \"some context\"\n+);\n+```\n+\n+Besides the APIs above, BookKeeper allows users providing `ledger-id` when creating advanced ledgers.\n+\n+```java\n+long ledgerId = ...; // the ledger id is generated externally.\n+\n+byte[] passwd = \"some-passwd\".getBytes();\n+LedgerHandleAdv handle = bkClient.createLedgerAdv(\n+    ledgerId, // ledger id generated externally\n+    3, 3, 2, // replica settings\n+    DigestType.CRC32,\n+    passwd);\n+```\n+\n+> Please note, it is users' responsibility to provide a unique ledger id when using the API above.\n+> If a ledger already exists when users try to create an advanced ledger with same ledger id,\n+> a [LedgerExistsException](../javadoc/org/apache/bookkeeper/client/BKException.BKLedgerExistException.html) is thrown by the bookkeeper client.\n+\n+### Add Entries\n+\n+The normal [add entries api](ledger-api/#adding-entries-to-ledgers) in advanced ledgers are disabled. Instead, when users want to add entries\n+to advanced ledgers, an entry id is required to pass in along with the entry data when adding an entry.\n+\n+```java\n+long entryId = ...; // entry id generated externally\n+\n+ledger.addEntry(entryId, \"Some entry data\".getBytes());\n+```\n+\n+A few notes when using this API:\n+\n+- The entry id has to be non-negative.\n+- Clients are okay to add entries out of order.\n+- However, the entries are only acknowledged in a monotonic order starting from 0.\n+\n+### Read Entries\n+\n+The read entries api in advanced ledgers remain same as [normal ledgers](../ledger-api/#reading-entries-from-ledgers)."},{"sha":"3eb649273c1a909ec1e40abb3a0380c8d0f0d858","filename":"site/docs/latest/api/overview.md","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/blob/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc/site%2Fdocs%2Flatest%2Fapi%2Foverview.md","raw_url":"https://github.com/EnricoDAlessandro97UNI/bookkeeper/raw/188d7e5fb8d8beb137f13a49b7df8a9cd861cefc/site%2Fdocs%2Flatest%2Fapi%2Foverview.md","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/bookkeeper/contents/site%2Fdocs%2Flatest%2Fapi%2Foverview.md?ref=188d7e5fb8d8beb137f13a49b7df8a9cd861cefc","patch":"@@ -1,14 +1,17 @@\n ---\n-title: The ledger API vs. the DistributedLog API\n+title: BookKeeper API\n ---\n \n-BookKeeper offers two APIs that applications can use to interact with it:\n+BookKeeper offers a few APIs that applications can use to interact with it:\n \n * The [ledger API](../ledger-api) is a lower-level API that enables you to interact with {% pop ledgers %} directly\n+* The [Ledger Advanced API)(../ledger-adv-api) is an advanced extension to [Ledger API](../ledger-api) to provide more flexibilities to applications.\n * The [DistributedLog API](../distributedlog-api) is a higher-level API that provides convenient abstractions.\n \n ## Trade-offs\n \n-The advantage of the ledger API is that it provides direct access to ledgers and thus enables you to use BookKeeper however you'd like. The disadvantage is that it requires you to manage things like leader election on your own.\n+The `Ledger API` provides direct access to ledgers and thus enables you to use BookKeeper however you'd like.\n \n-The advantage of the DistributedLog API is that it's easier to use, with semantics resembling a simple key/value store from the standpoint of applications. The disadvantage is that \n\\ No newline at end of file\n+However, in most of use cases, if you want a `log stream`-like abstraction, it requires you to manage things like tracking list of ledgers,\n+managing rolling ledgers and data retention on your own. In such cases, you are recommended to use [DistributedLog API](../distributedlog-api),\n+with semantics resembling continous log streams from the standpoint of applications."}]}